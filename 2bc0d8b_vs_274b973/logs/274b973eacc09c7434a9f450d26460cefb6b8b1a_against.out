cset: moving following pidspec: 15661
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.727432608 seconds)
loading group "shootout"... done (took 1.024173348 seconds)
loading group "string"... done (took 0.403535949 seconds)
loading group "linalg"... done (took 7.680028777 seconds)
loading group "parallel"... done (took 0.157868115 seconds)
loading group "find"... done (took 1.257205563 seconds)
loading group "tuple"... done (took 1.843442755 seconds)
loading group "union"... done (took 12.460786754 seconds)
loading group "dates"... done (took 1.307346522 seconds)
loading group "micro"... done (took 0.200565998 seconds)
loading group "simd"... done (took 4.328905216 seconds)
loading group "io"... done (took 1.009277801 seconds)
loading group "random"... done (took 8.62048184 seconds)
loading group "problem"... done (took 1.451146443 seconds)
loading group "array"... done (took 19.269599687 seconds)
loading group "misc"... done (took 1.463513587 seconds)
loading group "scalar"... done (took 38.969405045 seconds)
loading group "sort"... done (took 3.067110017 seconds)
loading group "sparse"... done (took 11.582180192 seconds)
loading group "collection"... done (took 16.719205611 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.492903178 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.115841025 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120049485 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.113254421 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192005884 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112713355 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.118043135 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.079794364 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.79070521 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.133027495 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.106772991 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409699961 seconds)
done (took 5.130770781 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161973737 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0870693 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077936187 seconds)
  done (took 1.288242064 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060461891 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12806278 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061831803 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062076342 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062566457 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.061313502 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.061130088 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.061521347 seconds)
  done (took 1.621516712 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067348277 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.062880431 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.061059408 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.062792689 seconds)
  done (took 1.38104804 seconds)
done (took 5.653461893 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229548263 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.094754534 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.277064516 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.431037575 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.585111972 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089628502 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070166393 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.06545884 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.123340181 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318087499 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.096764934 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.171939338 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08393092 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.16567387 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.971246385 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113234442 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080949674 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117172622 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088854408 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127367552 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.368890803 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.072929069 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.068603443 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065825202 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063548832 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.644180091 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659118282 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.123939145 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078795675 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.156897652 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112536117 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.649299878 seconds)
  done (took 10.524097272 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.08716846 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.084698117 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064137495 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.118632452 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.087266409 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.064801808 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069793238 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063591348 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.082987413 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.116747442 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085652896 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.092602358 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061504912 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.063832017 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.069329564 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.190385277 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075163006 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075611957 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.062833795 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075074943 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.100328853 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.072603419 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073096507 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.072772158 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.123533561 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.164183686 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091812384 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093472496 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061011178 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.073502636 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.110136373 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.11988938 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062574941 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.061374882 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117319613 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090741951 seconds)
  done (took 4.351969421 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.928883895 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088520404 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.093345838 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.583737954 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061374645 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.141673351 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.227257328 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068049392 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.290058209 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.140297633 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.132551251 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.139476517 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.110527627 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067545593 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.157332374 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.110078707 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.442136501 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062791946 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.062696596 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.060926429 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063268764 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062665417 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.05913993 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064128132 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.089190168 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.082079459 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.147292788 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.908460165 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.271513805 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062678427 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158074966 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.080559269 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.35963949 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066452272 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077360994 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060395286 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.398155662 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117433681 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061118568 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158674133 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110455065 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.05997356 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.112952818 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073098325 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.064785908 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.064848932 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064144793 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06668326 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073274901 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09957336 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062931044 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060558663 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161038595 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060313669 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061968039 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.062422083 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.059576367 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145086077 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0609817 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.133477515 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060244615 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064583066 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095845089 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063909959 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.08157876 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.089974577 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.325671769 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079048487 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.023239619 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063396808 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.904474229 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.072905953 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.061514487 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065778178 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062319467 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.062950362 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062401878 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067348408 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065389694 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064543425 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103521203 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062059125 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065181872 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06211185 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066914011 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092940469 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06106401 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.46439788 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095325351 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062556342 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.070731906 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10008816 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06229021 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.066282975 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062360325 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06228047 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06172253 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062854124 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064920926 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090675395 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065076074 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108274313 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.129738894 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064632017 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062230378 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.0673123 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064665763 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.059988941 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065017721 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062160175 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064550045 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063922089 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.060620573 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.101644557 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062424368 seconds)
  done (took 20.734729875 seconds)
done (took 37.665940913 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235809221 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077010009 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073737481 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073532395 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073602076 seconds)
  done (took 1.759184204 seconds)
done (took 2.975949099 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.102070861 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059831017 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.093811888 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.092489017 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.059587432 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.059715466 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094765545 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.05986449 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.091902586 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.093855352 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.094816269 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.094295626 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.059608454 seconds)
  done (took 2.279857875 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06570138 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076463773 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077863053 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057649731 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067388479 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076248461 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057621807 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076562328 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08163925 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076875629 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076847825 seconds)
  done (took 2.001733343 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064760505 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076045057 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077922079 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057787594 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068070157 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076630462 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057504014 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076087148 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.078549721 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076962092 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076197086 seconds)
  done (took 1.988470991 seconds)
done (took 7.473864436 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.062131792 seconds)
  done (took 1.249470212 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.48387186 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.088265434 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.063484274 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.080550052 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.179688222 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.086496257 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.190353959 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.066543561 seconds)
  done (took 7.592321477 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.094024371 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063177616 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.064932838 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.064140181 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065030619 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.063169457 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.063192326 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.064764145 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.063286923 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.064545048 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.063372954 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0638221 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.064251456 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.064879981 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.063980686 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.063926435 seconds)
  done (took 2.340057391 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092981678 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091266465 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.067822175 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.068365875 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.066438824 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.066004543 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.067845496 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.067261845 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.065043848 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.066773985 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.067613199 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.066252096 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.066165776 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.057815917 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.067865133 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.068518303 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.064683081 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.067198327 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.068031805 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.069179495 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.067442152 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.058085433 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.066345137 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.067086556 seconds)
  done (took 2.952661787 seconds)
done (took 15.339368367 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168165582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06983184 seconds)
  done (took 1.435331431 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.063607133 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.063994938 seconds)
  done (took 1.339905317 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.068863855 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.056330917 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.074016815 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.065434809 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057118229 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.057104998 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.071728156 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.056898613 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.056913108 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.057286898 seconds)
  done (took 1.832944324 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.058547208 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.064467477 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.062259752 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.063418493 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.06220229 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.057736892 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06020208 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.058366062 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06387059 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.057285116 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06132444 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.075881353 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.060736043 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.077360526 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.060615643 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.060996735 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.062708875 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.060447541 seconds)
  done (took 2.342554752 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057198751 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.057322197 seconds)
  done (took 1.334925486 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.060575557 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058138223 seconds)
    (3/7) benchmarking "month"...
    done (took 0.059760243 seconds)
    (4/7) benchmarking "year"...
    done (took 0.059991165 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.057054158 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057493936 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.057574168 seconds)
  done (took 1.624951815 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388807684 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114781749 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320029437 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.063720451 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.070924916 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.23893234 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059344537 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.063788593 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.063761338 seconds)
  done (took 2.638978915 seconds)
done (took 13.776098355 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075789284 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.167182042 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.0827872 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.393442416 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.086057521 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062218734 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.10850877 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.158820225 seconds)
done (took 2.368008556 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.224407472 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.252412995 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.859905107 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064596831 seconds)
  done (took 3.401286986 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311047399 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.073548618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073398559 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.063166016 seconds)
  done (took 1.751554304 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060991736 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067178109 seconds)
  done (took 1.353691399 seconds)
done (took 7.965267496 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059940008 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059244957 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.059502111 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.05912884 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.059612582 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.059568459 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059181098 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059117046 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089869176 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.058868058 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.059014214 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059186652 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059533185 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059903853 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05921859 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.0596862 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.058952562 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059379798 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059786204 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.059059437 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059096539 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.059606751 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.059817006 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.059700346 seconds)
  done (took 2.709588506 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.073708058 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061077141 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.062035479 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.062348563 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06250812 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.061472646 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.062249571 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061139962 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.062101386 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.060627197 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062603924 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06238937 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.060843352 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.062310064 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060960774 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.062507313 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.062081232 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061191562 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06129788 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.062798133 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.061969258 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060808907 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063835258 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061777474 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.062616698 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062902576 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061131703 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.061431837 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062135678 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.062992105 seconds)
  done (took 3.110021799 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060300638 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055596307 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.056790171 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065438522 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05638377 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.056796177 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.056680175 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.055829095 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.05588825 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.05741886 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.056639846 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.055833117 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.056733189 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.055843632 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056013338 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.056416987 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.060120466 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.073825141 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.055965949 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.055681646 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.059624907 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.055760702 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.055796881 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.055907704 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.056597107 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056765136 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056413387 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.056426754 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.055728368 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.056784589 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.055630582 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.059552643 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.060214222 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.065138532 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.065255706 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.060198203 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.055746777 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060086726 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.056775593 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.055547575 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.055407768 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.055529464 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.055582417 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.055571623 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.064936119 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.055791595 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.057035308 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.056364688 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.055828097 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.055448772 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.055671616 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.057404222 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.060746798 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.057128032 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.055449354 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.056488311 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.055999102 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.056203929 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.055903347 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.055428282 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.055422917 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.05924295 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.057229172 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.056427688 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.073427493 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.05689333 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.064948834 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058322006 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.056426243 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059305411 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.056263915 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.071376207 seconds)
  done (took 5.418629425 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076748889 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080130115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.060993234 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060969269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056305629 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.05594673 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.062979832 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056022064 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06079611 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074424142 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056091146 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.060259912 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060384308 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060155636 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05648357 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.060987356 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.063678539 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.05767189 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.056076591 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.060189466 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056060502 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06311499 seconds)
  done (took 2.612005996 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.130021986 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0614101 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.099331805 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06920586 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063664743 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069287013 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061244274 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061467206 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061556632 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06162701 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06224166 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061527472 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063517434 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06179187 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062261389 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062090216 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061538946 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061737731 seconds)
  done (took 2.484307773 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.071313048 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.061910886 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.080077316 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06156158 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.061217363 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060921796 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064798133 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.064645257 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.060700205 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.061302094 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.065262603 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06111637 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.061012921 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061228811 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060850552 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.061002121 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.060952681 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061000875 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064612627 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064528237 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.064174087 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06505703 seconds)
  done (took 2.645240513 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07166768 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060033986 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074337062 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061671199 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056296828 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056098315 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.060851208 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061171703 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.061016598 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.060176882 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061113954 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056367733 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06146652 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.060354349 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.062144911 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060499238 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.059832309 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.060421536 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060228697 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.055970137 seconds)
  done (took 2.469790695 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080359523 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058524081 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058313577 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076696929 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058298827 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.058312639 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076703586 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.058576568 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.058760392 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078701077 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058818809 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.05833711 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076863633 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077152044 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.058376294 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076144227 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076735038 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076672361 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.058375762 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058285811 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079040799 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.058324022 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076734913 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058817194 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058581864 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.05867831 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058643519 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077057284 seconds)
  done (took 3.113940152 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059344074 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059312746 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.05963263 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059187942 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059399692 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059615593 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.05951001 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.05939594 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059375225 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.059635881 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059133736 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059175576 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059480177 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.059097559 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.059259487 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059062819 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059051506 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.05948035 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059868417 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059476707 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.059646052 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0590991 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.059221823 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060214092 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059254722 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.059204066 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059262402 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.05939819 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059340191 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.059438037 seconds)
  done (took 3.036971796 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.06870268 seconds)
    (2/2) benchmarking "in"...
    done (took 0.066950712 seconds)
  done (took 1.389416285 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058146275 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072513033 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.055694864 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067823562 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.063945523 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059710534 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.064288296 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063941424 seconds)
  done (took 1.755590353 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.062304488 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084293921 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.057857617 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.058262286 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.060777928 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113752981 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.069034697 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.070831952 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070498828 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.05993179 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.058559067 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.069353893 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.057345572 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.069429406 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059325749 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066076033 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06426638 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068939666 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069184834 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.056465739 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068886299 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058177727 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.056214328 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.058052026 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.057726457 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063896099 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.071687777 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068900487 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065217953 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05539784 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074794058 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.056600925 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.057043591 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065296648 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.060356844 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.056611377 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.089996057 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057174589 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.061149848 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.056412237 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067537221 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075606841 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069586106 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.073367484 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.057735748 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.058387969 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056604942 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.05821835 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.059827356 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06526797 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.05636793 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063486481 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057312224 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.057520986 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066139074 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.056403339 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.061425615 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0648979 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068559297 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066243096 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.064676475 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07065243 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064605254 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06398831 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.057503617 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074181455 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.058018894 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068671428 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070022583 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.057852347 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068779718 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056339575 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.055788227 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.055929385 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086836139 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.057765258 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.05729975 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.056676454 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.05625948 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.057537141 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065128037 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061173307 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062938633 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059542258 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070682972 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.064802649 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.056149648 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.062375746 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.07276012 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059241298 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.05626163 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.07139448 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059829875 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.055881341 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072143815 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06492822 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.057457471 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.056906426 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059633902 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069165702 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057381436 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055242147 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064145916 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.057754975 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.058575777 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.060184195 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063433073 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.056091578 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.065347396 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.060325461 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.056579041 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.054396521 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.05979005 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.056297128 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.054496794 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063775634 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055023381 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068409762 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06130833 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068216356 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068917586 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064810631 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069399117 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055323292 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054350523 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.071955865 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.063639154 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.056319277 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071391079 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.054878877 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.064935433 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.189693039 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.058615995 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066848123 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057125548 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059078575 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057542825 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.062670501 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.058287035 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.058712865 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062201075 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064535894 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068505957 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.05806386 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065317601 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.057051899 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07125292 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066195997 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061369069 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060612872 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.057656837 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.067730332 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063075649 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066161329 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.056705238 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.057504853 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.056700972 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066634137 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06586477 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.058170174 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.063435106 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06099864 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.057412967 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.057144766 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.057944352 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.060475333 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060201017 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.057243335 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064489497 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06517049 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072023951 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063472091 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065590116 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.056792183 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.056233193 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.05895507 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.056388338 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.060850974 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065651788 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071426566 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067304074 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075631326 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.056676941 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065537255 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.057926233 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072206815 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068636791 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.057356767 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060970018 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.055613288 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.058057521 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.065385849 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067035229 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.069322759 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070492263 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.060645389 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061077319 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.056223581 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.069824107 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.056972117 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064235659 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.065385708 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.061005685 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.056730248 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.058095611 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065190746 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061158315 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.056862904 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.070914035 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.062094928 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057528401 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069713469 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.056659195 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.066322662 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.056633732 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060560777 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061443853 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.057972007 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065355764 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070677429 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.055644009 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.057163802 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071093442 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.058382732 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058277883 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064095802 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.070680227 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061270193 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064210643 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06670198 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065722399 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0609128 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065636683 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057292876 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.064800188 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.059245649 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.066786576 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.055968403 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072453127 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055015846 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.069556669 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.05643108 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066351479 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.056467938 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06523814 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.05698218 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.071871557 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.057696743 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.056815336 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.066971066 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054642592 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0637189 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.054876247 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060265944 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061214936 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064189445 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.056682133 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.064187667 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.056750583 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.063576064 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.059580197 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.062650728 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.063633866 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.059401066 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.054921194 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.062722837 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065589795 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.201904251 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.059474735 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059200644 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058462964 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066034518 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.059168246 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.058635367 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064623146 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061909514 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.062162131 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058292812 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.058789565 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.058618237 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065497512 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066214194 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073834899 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064978517 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064362353 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066106754 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.056625863 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071275278 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057161837 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064066183 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.055641667 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.062362813 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065248363 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.057419843 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07395763 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058315657 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064206739 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067987725 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064839099 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06065971 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073376759 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.060040954 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.0647579 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064373752 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061607228 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063066224 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.058832067 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064883376 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065574816 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.066553626 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058052349 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064101026 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065391654 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059069257 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.06476185 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.058498913 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064897396 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.058312277 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056077423 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.060981198 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067121046 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.061064385 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.061484817 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.056753308 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.055601587 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.056785116 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.062778743 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.060904754 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064286133 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070347826 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.055404121 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.057803414 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.056229334 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062479792 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073419765 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066016985 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.063948923 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.060952417 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056043708 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.058203316 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.058601189 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.056996495 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.059984957 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056109878 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.05668031 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066742152 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.058140085 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061081639 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.056960136 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.057452868 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065479678 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.060848356 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.056818519 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063026771 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.05643939 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061456041 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.05627831 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.058107142 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060986658 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056304563 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059769455 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066291952 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071216936 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06264762 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064548468 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.05742264 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.063614075 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070847528 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063636515 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058528336 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064934577 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056197292 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073228018 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.064965362 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064616073 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065142647 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.05747875 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071163791 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.060514515 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065334073 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069894194 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057229449 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.061965291 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055600933 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069887405 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060253501 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.055778758 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.063540996 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063637532 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.061512343 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.066347036 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.056356906 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.062441623 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060083642 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.058910601 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.056598906 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.056707889 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.063269169 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.070009176 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.055958526 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.058721993 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.062402092 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063150535 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.203004551 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069402772 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065405646 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058861016 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059325934 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060454999 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.05840344 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068730956 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057473787 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061638682 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.061375485 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.056852262 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063350373 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072598294 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065758968 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065809787 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05695761 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056005573 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.072366654 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060594559 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.059988606 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065070733 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065970287 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068671462 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06566602 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072614548 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.057420751 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.061812769 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0679848 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.057284839 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.056619782 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060370647 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.058528714 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065220922 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066398626 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063904349 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058560914 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063097294 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069124462 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.058023883 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061438804 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.061523267 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058199678 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066622956 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064732566 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065194447 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.058038449 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057068942 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060328696 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064774352 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063509134 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.064990685 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058038877 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.062550551 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.069148744 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063934437 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059733276 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.056458063 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059913171 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065003432 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.060555233 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.056394843 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061395424 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060355335 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063142229 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065250636 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061122358 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.056249232 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072126518 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064511718 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06497345 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.058567434 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.058289392 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057138115 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.056158982 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066816227 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.056162814 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.05809091 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06113669 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.058505776 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.072743827 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.064569778 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071285651 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057632729 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061262687 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.056809334 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065919135 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.060907715 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.056792208 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066295077 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056455682 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071329752 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.067559591 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.064599219 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056114965 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061550712 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06403379 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070030498 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065574581 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06492146 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.059772939 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065868895 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.058259925 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.066798261 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056446346 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055903308 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066707195 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064428958 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.068167603 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.056109258 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.065728315 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.058487727 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064070131 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.063842176 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.058027284 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057907925 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057799403 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064891739 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.060908781 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.065661455 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.060894109 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07181292 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.057500192 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06641847 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065571553 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.065629533 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068342212 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066981385 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.063402652 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.056426363 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062465513 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.063302715 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.056935522 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.060377749 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.058478339 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074642313 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.19717626 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.05977678 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071208846 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.064371846 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059441174 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.063700457 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061409415 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067430209 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058320569 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067562605 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.060818068 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058421437 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061638812 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.061684698 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056204291 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.056660346 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.05705981 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.06637361 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.061617683 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.057705128 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07495733 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.058865518 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065223214 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067446639 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.063549466 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.058948832 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056568968 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.058246654 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069019777 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071497656 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060458817 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065028245 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.05901149 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065894001 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056251814 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06537331 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064488775 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0652208 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.074430575 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057370176 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070735121 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071250844 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061306747 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.065674815 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065087845 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.05838395 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076954853 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064760471 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058440851 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067092644 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058643188 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056512338 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056073989 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.058663866 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.067628867 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.056523159 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.05924795 seconds)
  done (took 39.073563776 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0921989 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.05778757 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.056791067 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057017109 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066986447 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.057634589 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.057051615 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.057705783 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.057700966 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059100756 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.056452784 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057251892 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.066942891 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.068679076 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066307932 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060092514 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.05678704 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.05753842 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057209984 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.057558603 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.065842953 seconds)
  done (took 2.661147613 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.063343194 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07103634 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067064994 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071629996 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064720476 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06038091 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067551652 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060528725 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067646284 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065543182 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.067144197 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060413335 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065557223 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065323009 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065326117 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060574025 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067460254 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064197503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.060459476 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066601937 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060615756 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066812119 seconds)
  done (took 2.779955977 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058177702 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057252924 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064916135 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056332833 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.05605837 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.059728712 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.055846571 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060256074 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060593317 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.060281216 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064587569 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.057031502 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.056078748 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.061606633 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056017543 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.056972124 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.095508805 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.057781383 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.057126637 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.056240459 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.061941153 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064698437 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.056610564 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.056314579 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060591194 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.059645917 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.056088422 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.059234804 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057052412 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060459152 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.05712873 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.056055928 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064579724 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064008012 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06071781 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060447433 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.058343524 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.056976929 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.056255386 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.056338762 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064055539 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.057638257 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.056637369 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.057723504 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064611612 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.056595568 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.056044866 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06468291 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.056305181 seconds)
  done (took 4.281574082 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.066885764 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1049643 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.062361092 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08643011 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.068098161 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.062053314 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.061445972 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086648774 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.057333161 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.058606095 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.069020653 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.069336991 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059651297 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.060325994 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.063104081 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.058937877 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06017421 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058577143 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.061311878 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.058606792 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.061479981 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06284425 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.06827776 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.068597027 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.059772736 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058304233 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.058679621 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.060321141 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.068616167 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.061888625 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.060858235 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061417762 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.068617982 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06351557 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.058634913 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.058700028 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.069516662 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.059754711 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.058957028 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.057725412 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.058895485 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.060310673 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.063163549 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.06968985 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059324799 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.063695321 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.05934035 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.057203584 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.068684576 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.058801375 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.062610808 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.069963099 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060143906 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.059628422 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061052153 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.069043654 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.059685423 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.057966348 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.059392674 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.068273242 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058473809 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.060597025 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.069095155 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.058630285 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.062429555 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.069579703 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.063471423 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.060143136 seconds)
  done (took 5.793586124 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065700916 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089204862 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06736843 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067472822 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066781625 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.066216438 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06600875 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.066035143 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.065985516 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.066946122 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06652696 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102447798 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.063012716 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.070299751 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.065999556 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065923263 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.066186424 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065894663 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066723799 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065960117 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.066491105 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.066774227 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065975744 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.066655502 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.068628683 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06279377 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065883978 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.06625059 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066681237 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.066485308 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.068700292 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.06621266 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.066342252 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067218412 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.068261842 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.065951049 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.057479375 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066115076 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.065945866 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066253043 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062868156 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067330041 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066117761 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.062795449 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066146642 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.065996377 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.066557647 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.068503603 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072573105 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.066451121 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.066890376 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066653 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066003726 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066310156 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.066863723 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.072698892 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066869681 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067044565 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066562951 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067114523 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066973865 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.072932767 seconds)
  done (took 5.574234689 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069673038 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06341584 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074074542 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059112192 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057202113 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065239389 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.056508445 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.05653316 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063142144 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.062829701 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064266144 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065094002 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06701189 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064404876 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065210389 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066960204 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065148443 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065015377 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062989351 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06504193 seconds)
  done (took 2.660387996 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07095687 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074459485 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06218428 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065358009 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.061625242 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06507076 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062550492 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061669898 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0629337 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062142745 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066156394 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068262819 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061801873 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065407984 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06604908 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065052132 seconds)
  done (took 2.410970048 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.062988178 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06316851 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.062944907 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.057817623 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061199824 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.056870115 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.057307095 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.05648263 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.056798129 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.069538811 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.057721832 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068188922 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.057214309 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.056596892 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.057166131 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.062634343 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.056920416 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.058275706 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.057856781 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.061537191 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06344539 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.05800621 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06130893 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.057519847 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.062428353 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06417506 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.058855916 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061197175 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.057334079 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.057549177 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.062514314 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.064130597 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.057395752 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.057749307 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.05639507 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.057311292 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.057382841 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.057541558 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.062339676 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.057404335 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.056092617 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061888838 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.057271129 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.058155135 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.056742219 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.05802343 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.056656127 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.062813887 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.05755011 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06218157 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.057775903 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.059432981 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.057690336 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.064017666 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.059584934 seconds)
  done (took 4.649311483 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072803045 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061116205 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056712562 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056712271 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.061258058 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062023285 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061687769 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.061446665 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062080268 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056569184 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062104855 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.061193812 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061851567 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061210151 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06236642 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061613734 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056043985 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.061324759 seconds)
  done (took 2.48406457 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.066979111 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061576519 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.065817434 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061782034 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.060798233 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060715827 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05669424 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057045206 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056399061 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061015395 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061223224 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.060832574 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056910706 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.060723984 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062207361 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06097939 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.060637997 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05672217 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.060906384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.056580404 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06049066 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0567044 seconds)
  done (took 2.70030112 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.081930972 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078743475 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.118706875 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075358916 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082797953 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067033635 seconds)
  done (took 1.882593992 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086682346 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097258976 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061335936 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.061558087 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069341843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064035273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064118919 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064133205 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069117708 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067668272 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064255503 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069471965 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069564651 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065746274 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069156141 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071517818 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06440788 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064363938 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061110391 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071347925 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064328529 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068832183 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064542419 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0640942 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064052049 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065786625 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071409645 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068550047 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066464235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069136916 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071273886 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064354123 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069187726 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067475283 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061476338 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069566731 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064627806 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071975788 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069444997 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066133218 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061770556 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069929033 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069459843 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065704708 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07174315 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064309074 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065646052 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064117462 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064358189 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07374647 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069506753 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066041077 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069635717 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071821669 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071986642 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073812205 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067754115 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065795195 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069261613 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067716797 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066032544 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069234155 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065713217 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06782852 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071538722 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065680685 seconds)
  done (took 5.874397035 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093013132 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061932853 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065070226 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068135144 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065756034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065323376 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064668733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06492645 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06515379 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062327474 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097119472 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064641386 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06631543 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066382604 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064858811 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065279851 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064924793 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06641982 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062156123 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07342738 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06445892 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066007907 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065746357 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066188313 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067921963 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071869088 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064140341 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064133167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064050672 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064545933 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065741101 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0643162 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06577494 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061620033 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06555572 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064243963 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06417341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065776952 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064075455 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069521441 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065863025 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071649976 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064283158 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064487134 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067927234 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06424561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064944726 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062354698 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064343729 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062126354 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068211813 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068489152 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068106172 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066292944 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064925606 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064399417 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064314935 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064384259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064520106 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07181452 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065747002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064608689 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073955114 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064138653 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064240976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066566704 seconds)
  done (took 5.802953437 seconds)
done (took 120.607393175 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.221193894 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198133178 seconds)
  done (took 1.78933536 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069650357 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091825673 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.070498357 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129922965 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067383221 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101262841 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100496727 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070680524 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06693974 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066825688 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066965562 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069328333 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132074325 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067236749 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066928481 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069103829 seconds)
  done (took 2.697413883 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100352798 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171887142 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10760122 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064980152 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100878532 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071350767 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064873238 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075487513 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068301768 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067333801 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071159185 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069442306 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067256736 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070150406 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068662289 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071094046 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067076786 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07123848 seconds)
  done (took 2.844385604 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.08863583 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081411195 seconds)
  done (took 1.567968515 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.148835381 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100844559 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.137881947 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.307015107 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.124886267 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.121688148 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.123930335 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.119895664 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.105204296 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.117004935 seconds)
  done (took 2.799662989 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099114435 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.167575224 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295180892 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113449215 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071428771 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093317751 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115273992 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07783683 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.074800799 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074275518 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076377977 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.071697538 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094967881 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.070940212 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.070205556 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071746315 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097806808 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069271034 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070465593 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.070829216 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098764754 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065965305 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.070822128 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.069424542 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.072813875 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.072615117 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067463825 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065944083 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07064737 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070120283 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.072841828 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090188124 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072523222 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.092430828 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069591161 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.093865522 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07012242 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069166058 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07042692 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068763455 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.071713677 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.071236029 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074962376 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071792783 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066938966 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069677947 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067518484 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065520996 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07374863 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066359375 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.073207706 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072863501 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.092512208 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066354275 seconds)
  done (took 5.854515783 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101752578 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.09963197 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066134569 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106943887 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09948805 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065465688 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.0978673 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093728368 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101679091 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065784464 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065220037 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065117433 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071791331 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.074749623 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10858297 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101199705 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066911742 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065277819 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100707719 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100345844 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064459792 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094356542 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092827881 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100208438 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064111882 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06518923 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063864912 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064964945 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069153467 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.070171103 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064758828 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071226258 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.076232991 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070332341 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064334179 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063908576 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064055571 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07081148 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071403804 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071340835 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.069953192 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063404289 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063738698 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064569676 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064977651 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063564771 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069578532 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07056081 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.069950138 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063936538 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06475648 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064220865 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06423942 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070676736 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.069661455 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.071335408 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070912482 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063655536 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06411126 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065613502 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072157846 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072139438 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070977474 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064742101 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071680104 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063513494 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072234096 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07569349 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064162642 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064212197 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064568564 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064025223 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064919428 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069699522 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.070077463 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064737389 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063958958 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063954783 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072084166 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.069751843 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064025627 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069262483 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063796887 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064009075 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064980259 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065150001 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.069009472 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.071057297 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064404529 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064274106 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064040536 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063584167 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.062902948 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.06887392 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07018081 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.070210846 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.069749053 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064154385 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.069755651 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069673934 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064284956 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.069550801 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063467832 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063539179 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063379315 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.068302449 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.068142207 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.070523981 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063512838 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063089033 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.068269406 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.070818533 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.062915351 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.067966103 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07025847 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.206858205 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.064900395 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077176225 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065713719 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072941354 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06488341 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072473203 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065163781 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070581157 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0646294 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064174947 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064924579 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.070952974 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065093984 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065002755 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065126214 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06461532 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.070698847 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074295622 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06560512 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070576041 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07104289 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065320111 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.070788602 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065306643 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071741761 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065119703 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064580892 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064163365 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07313725 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064492534 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064690654 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064326407 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072766511 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065030039 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072773096 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070019569 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064574648 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073755113 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073180423 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.070218504 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.072518989 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065018038 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064962916 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064293688 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064585193 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069479928 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071552877 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064772367 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064618645 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.069596336 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07286197 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064218428 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.070103573 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.069918788 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.070046906 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064892962 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064436794 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.073170185 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072533137 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.069998899 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070227478 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07087624 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064243624 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.069559425 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070311713 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064353677 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076402251 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064393065 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074021827 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070464264 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069720047 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071057174 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.071543069 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.072545649 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07248436 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07470694 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063795985 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063843049 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.070380967 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064231326 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064394431 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.070363285 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064549027 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064643527 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075195139 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064409218 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072200412 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063746331 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07127798 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063675736 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064480587 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07487637 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064273589 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064403684 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.06968854 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063815871 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.069805214 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072025354 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.069451245 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06373508 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064323128 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070858379 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070604546 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063367701 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063885008 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064669329 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.068259572 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.067660454 seconds)
  done (took 17.182187685 seconds)
done (took 36.145460798 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.196383183 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153058264 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186425143 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109680404 seconds)
  done (took 2.144029017 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.086953874 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09393094 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.072246002 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061667746 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.076432397 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061097567 seconds)
  done (took 1.897123796 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.250728147 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176797094 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.164460609 seconds)
  done (took 2.025792141 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203463652 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.181960715 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.460765153 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.2800802 seconds)
  done (took 2.659783914 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.121690074 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.073001201 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059027184 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.069230511 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.097796141 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.125221465 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.080442395 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.101659782 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070323271 seconds)
  done (took 2.297202606 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.122818528 seconds)
done (took 12.61253895 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115731356 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.200438995 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086138842 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093269814 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063677988 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.206645711 seconds)
    (7/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.200429416 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071380157 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071861062 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.083715698 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071662646 seconds)
    (12/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075373859 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070071902 seconds)
    (14/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.254186417 seconds)
    (15/309) benchmarking ("sort", Int8, false)...
    done (took 0.162368745 seconds)
    (16/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164327509 seconds)
    (17/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069642651 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.064540001 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071624685 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.292107757 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.06941211 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083698404 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.221384938 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.151197756 seconds)
    (25/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129716951 seconds)
    (26/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.236628421 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.172263075 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118583887 seconds)
    (29/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.137000157 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071910945 seconds)
    (31/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.063567464 seconds)
    (32/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.061628052 seconds)
    (33/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.179033433 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14147769 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.134922428 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.21195678 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.164571031 seconds)
    (38/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.062547902 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069032531 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060414926 seconds)
    (41/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066072433 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126385429 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114658738 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124164975 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062007256 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.07870981 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.1400013 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.169481063 seconds)
    (49/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066045442 seconds)
    (50/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061942257 seconds)
    (51/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074647556 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.223045242 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.106462667 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.062883225 seconds)
    (55/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.081660513 seconds)
    (56/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.133724114 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077454414 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.217220584 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06184953 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071269789 seconds)
    (61/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.139022041 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07110824 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061111235 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069800532 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113049628 seconds)
    (66/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072037806 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059388409 seconds)
    (68/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.068042531 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184602275 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122514216 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223472315 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180610996 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08267878 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068504486 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060311274 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.080326602 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116686819 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.154061524 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071042135 seconds)
    (80/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.151352429 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.068547177 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.059191883 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.152247655 seconds)
    (84/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.062433351 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.080760285 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.279230921 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087474307 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072438283 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061779648 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117884878 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070172176 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065473893 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086703425 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.062380212 seconds)
    (95/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.061861369 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.204027335 seconds)
    (97/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.0610441 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06271218 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069144763 seconds)
    (100/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.106272562 seconds)
    (101/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.210026925 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.073580501 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205373477 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069076694 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.074079502 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.19128099 seconds)
    (107/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.174580262 seconds)
    (108/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.062647758 seconds)
    (109/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.142639997 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.197936736 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088637262 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.061173874 seconds)
    (113/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.13715709 seconds)
    (114/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067807761 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.063241287 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070052803 seconds)
    (117/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071806152 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078374756 seconds)
    (119/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069882614 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.060891581 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.060932275 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07805395 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189206881 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069746705 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.138687411 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.164043782 seconds)
    (127/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.07241034 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.080188476 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.137651479 seconds)
    (130/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.061188773 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068102013 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075660006 seconds)
    (133/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.073075343 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199841552 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071311779 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.080862207 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.137336414 seconds)
    (138/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070538828 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.075231411 seconds)
    (140/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.134147555 seconds)
    (141/309) benchmarking ("sort", BigInt, false)...
    done (took 0.244558594 seconds)
    (142/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.182787835 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077172865 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06880471 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.065589452 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.062642444 seconds)
    (147/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061609561 seconds)
    (148/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.18782332 seconds)
    (149/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.086222228 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070139481 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.085238094 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.062152914 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.06862113 seconds)
    (154/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.060148853 seconds)
    (155/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.154940385 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.060658504 seconds)
    (157/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.138445373 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155073967 seconds)
    (159/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.063974106 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.165424832 seconds)
    (161/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.068617639 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.082853486 seconds)
    (163/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.137646358 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059573615 seconds)
    (165/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172915268 seconds)
    (166/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06042583 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062323996 seconds)
    (168/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.061483077 seconds)
    (169/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07250138 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.072873868 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.061293646 seconds)
    (172/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.060502832 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139547117 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061080087 seconds)
    (175/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.061394537 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068577566 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.061523604 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.158527336 seconds)
    (179/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064638724 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.060612747 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06007565 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.061511127 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.062251671 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.060743415 seconds)
    (185/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.061279978 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149731597 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.157346 seconds)
    (188/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.059743167 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.060851365 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.074481468 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06051498 seconds)
    (192/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.061602297 seconds)
    (193/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.059010108 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.237833326 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119416781 seconds)
    (196/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064168644 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146818807 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085128975 seconds)
    (199/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.07048073 seconds)
    (200/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.064223557 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063149884 seconds)
    (202/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.138000674 seconds)
    (203/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063563682 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06461257 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062765781 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065453678 seconds)
    (207/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.073833984 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064295589 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.060891674 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.063764356 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062841995 seconds)
    (212/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.060533983 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068085104 seconds)
    (214/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071841886 seconds)
    (215/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.062555438 seconds)
    (216/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.064124584 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068381792 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.061681201 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.134145449 seconds)
    (220/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066471943 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.068470214 seconds)
    (222/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.182554009 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073654643 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071502113 seconds)
    (225/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06260522 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137169086 seconds)
    (227/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068380839 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086186764 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.061988411 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064873104 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.062469554 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.061725733 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075245978 seconds)
    (234/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069040495 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.06908299 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.060079164 seconds)
    (237/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062291693 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.061079058 seconds)
    (239/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.06948205 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144843533 seconds)
    (241/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.061989046 seconds)
    (242/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.145030174 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139247666 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062551373 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.060840663 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154550218 seconds)
    (247/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.212411019 seconds)
    (248/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.061754275 seconds)
    (249/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.062216321 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.068435959 seconds)
    (251/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086934943 seconds)
    (252/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.060709907 seconds)
    (253/309) benchmarking ("sort", Float64, false)...
    done (took 0.128399586 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150116566 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.061286456 seconds)
    (256/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06187989 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060215136 seconds)
    (258/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.062094691 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.061087473 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061134822 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068856781 seconds)
    (262/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.061804362 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141786282 seconds)
    (264/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.061234471 seconds)
    (265/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06063863 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.083439289 seconds)
    (267/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069261299 seconds)
    (268/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065497996 seconds)
    (269/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062184674 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.062173388 seconds)
    (271/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070408419 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.061408955 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.06846057 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.085171505 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.080442456 seconds)
    (276/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.068743588 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06399337 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.061694119 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.073222324 seconds)
    (280/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.062028306 seconds)
    (281/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061299142 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141249694 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06098298 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.108839837 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.08839126 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.061107264 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061735278 seconds)
    (288/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061636658 seconds)
    (289/309) benchmarking ("sort", Float32, false)...
    done (took 0.129101259 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072405366 seconds)
    (291/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.06890385 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.085055522 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.060704958 seconds)
    (294/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.060930337 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.085896391 seconds)
    (296/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062443166 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.061086411 seconds)
    (298/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.061670361 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068433407 seconds)
    (300/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.060575592 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.061182551 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.060279938 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.082269899 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061956279 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060862183 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061040442 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141452096 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.061732435 seconds)
    (309/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06233634 seconds)
  done (took 31.422624249 seconds)
done (took 32.882789395 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081729401 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08503603 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.068928473 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.079518331 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076430781 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094612446 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069459841 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.072969707 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075750093 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.074726105 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.073791885 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068142045 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07080544 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070868576 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.068538632 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083046998 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076518337 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069755274 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069680766 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060837779 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07040353 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061802772 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06035273 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068264426 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.073344846 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.067874143 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070329384 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070121371 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061627883 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062114677 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066458915 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070044488 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065007809 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.072219895 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.069630012 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.06959315 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071292203 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.073933201 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061638428 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061919316 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07185879 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061545131 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069081764 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.067367247 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066310761 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068295903 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069767143 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.072701531 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082397493 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066043413 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071837276 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.071916771 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07216118 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.066878687 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066728185 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069590918 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.06749685 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.082565027 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070245687 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065619997 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071275799 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070305998 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.06870088 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069551575 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069596015 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072432438 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.071935777 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.06853919 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072095086 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068747215 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061158912 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069644465 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065772665 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061350382 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072732246 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074543214 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06009086 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.065492231 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069280338 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.06930041 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061057503 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065820866 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060411575 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066693972 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065434622 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067815353 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066609735 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068396049 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060696459 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069468641 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068384057 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069423777 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060770268 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073009878 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.060797034 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068110958 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061912174 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061660136 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060169606 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066655574 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061408573 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065515192 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069448547 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060277667 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066064687 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074071592 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061283312 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068619219 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060500626 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060429011 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.071342327 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071550699 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061625618 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065682747 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060781849 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066563342 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06083036 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06112921 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061450044 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061598424 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06559351 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061606486 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06592947 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066775193 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.072807719 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.060833841 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066188887 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065093347 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061474612 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067694145 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062192552 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061197465 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060273501 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074087925 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065179992 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061286172 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.066232329 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065172203 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.068544199 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.059527847 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.068661542 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066055989 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.064483471 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.066494437 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.059195088 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.071753866 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06472988 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064367031 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.204305667 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062722304 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061562173 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062240351 seconds)
done (took 12.017465411 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063060855 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.098959558 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.068994784 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.0769838 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.072840026 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062568365 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065074242 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.07693303 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064913282 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.07964629 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085006568 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081559105 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.087392346 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060311911 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062008681 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062990408 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06124365 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069294866 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.075579733 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.083542598 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.088633626 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061680138 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070137227 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.077094956 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072133456 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.077518856 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063270921 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063177047 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064922864 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.077883408 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085514303 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061973836 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063444552 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.074499759 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075380529 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.068425429 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062448548 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.065544492 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062794341 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062081696 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063688494 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.075176868 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.065619484 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.06879189 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063022071 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062809893 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062497339 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065170047 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074814688 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.064980968 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.068753356 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.072943971 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063582154 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061841951 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060439404 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065360084 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061736188 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06263637 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062760625 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062087991 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062475251 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064542172 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063269081 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062445008 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065359512 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064340574 seconds)
  done (took 6.070085331 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079488228 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088635027 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078100177 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078344485 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061823572 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062721098 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062539241 seconds)
  done (took 2.072396523 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063254372 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073650603 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077068488 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077100126 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.069633968 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079183178 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062785255 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091560434 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.061287567 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073461159 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.104454919 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.077633892 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065192025 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073698487 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063919068 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.06916063 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06238695 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070727722 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069913352 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077249321 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066072778 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089557679 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075829096 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063412634 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.081395408 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.066108378 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061774733 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062745509 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063573101 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063131741 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063662801 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.099412519 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.065702066 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073638959 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063114526 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06254672 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067960881 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065121577 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.064365544 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070694293 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.066500517 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063117993 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06087523 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06360337 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064421606 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06570566 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.061444536 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063368512 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062877547 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072972921 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.061442027 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.06576517 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065334754 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066633408 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068042679 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066499011 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07054683 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063738903 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072948317 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069057179 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063274464 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.069985404 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.069853648 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.066764464 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103918598 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.066622093 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.065341664 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.066589813 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062532912 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064282436 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063959855 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.069177507 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.06153297 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064636986 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065406641 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064091631 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.066053941 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.077569066 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078175393 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074574752 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064110888 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06309119 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066007396 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.07781724 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066520232 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063253445 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065163662 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061634739 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067174963 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063486423 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068831799 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063427504 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.069829157 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064842861 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065938562 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070068369 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062202659 seconds)
  done (took 8.223418787 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065945626 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063951235 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064596346 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063570511 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.062980768 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.063498696 seconds)
  done (took 1.979199525 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.083436637 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062516317 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076971588 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063143265 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.0964367 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.06865179 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.069121715 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069984156 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075330338 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074593116 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.068568637 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.071614481 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.06991886 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064576943 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.068923646 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.063802714 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.068476416 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065279136 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074252325 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064506458 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.074861026 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064089583 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064403087 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.072858579 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.064797578 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063498982 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063442156 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.074377717 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076200182 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.069959539 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.063907628 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065182805 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.06992157 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.069546274 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.068769603 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070130071 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063048238 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.067931923 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064670621 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065100346 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.070887895 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064234227 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.064676251 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.06758342 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.069391038 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070064293 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.067788178 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066094177 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.068622136 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.067470306 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.067431796 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.062802439 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065038802 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.067670634 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069943269 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069645466 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.067564261 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.068078077 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064373715 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070193159 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062958483 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065062478 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070206722 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.06497353 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.067278149 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.067474105 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07016007 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.063974068 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064113574 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06239402 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.067784931 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06290523 seconds)
  done (took 6.475211008 seconds)
done (took 26.373033375 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.51085134 seconds)
  done (took 2.051885998 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.551176162 seconds)
  done (took 2.129090433 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.28492192 seconds)
  done (took 8.862299816 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.283512048 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.297141578 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.695591231 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.124718944 seconds)
  done (took 2.988895191 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.724368777 seconds)
  done (took 2.31086065 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.225890531 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.217053205 seconds)
  done (took 2.043969219 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.335541737 seconds)
  done (took 1.917749544 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.084709621 seconds)
  done (took 2.664133 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.214511035 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.152456094 seconds)
  done (took 1.955613763 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.463584108 seconds)
  done (took 2.044985516 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.120784273 seconds)
  done (took 5.706649495 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226120726 seconds)
  done (took 1.850485547 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.227179134 seconds)
  done (took 1.815648845 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.769569 seconds)
  done (took 3.351790542 seconds)
done (took 43.282604156 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078484555 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081219122 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08128021 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076358642 seconds)
  done (took 1.87890421 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069068686 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065679356 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.068736051 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.0686504 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067324551 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.068119888 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.067792169 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065242805 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.066720504 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065458287 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.063718962 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065921556 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.067768013 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.064913372 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.067539289 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069027878 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.064867259 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065084117 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.067906608 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065052635 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.067833107 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.065422749 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.063922281 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.065112366 seconds)
  done (took 3.180172585 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074159355 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.067914671 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071042341 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.066844002 seconds)
  done (took 1.874829063 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071088519 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.079029985 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.080258161 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.085288616 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072255514 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.071896135 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.07707124 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.078858 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061604411 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.080589128 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.063758317 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062531719 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062847102 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.080247599 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.077552925 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.058276158 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060444667 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.071497044 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.070794082 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.072954299 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064004012 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06145266 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071717518 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.070717634 seconds)
  done (took 3.302482222 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07407569 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061950513 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.073609057 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085527543 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087716763 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061373574 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073881506 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087641008 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.115984181 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061433906 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06777496 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061782059 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098114995 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061570627 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075427222 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.099865806 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.102572676 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065518177 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09192575 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061749816 seconds)
  done (took 3.174474486 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071877351 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065654575 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066324085 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061732956 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.072597793 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.06871077 seconds)
  done (took 2.012653463 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064097817 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063735938 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063354372 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063167715 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067512267 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063521952 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062002802 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063882409 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.063772843 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06307595 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063014553 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062177461 seconds)
  done (took 2.362267244 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157571968 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06528564 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066566269 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064762559 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.066760364 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063646022 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076011225 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.063947771 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079340685 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062318045 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062597736 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064634933 seconds)
  done (took 2.493674578 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093034074 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094286586 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137224878 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110349813 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087876232 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.088203583 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.149405567 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.127919059 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109593327 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.064818505 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080865414 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094016767 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093529735 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125791997 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105744923 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.067829665 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.105121246 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07579294 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107981585 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115201696 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108395313 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114866978 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087036978 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092467219 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100201972 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110305184 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.066962119 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066184759 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140211661 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094776742 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086495989 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092566635 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104842339 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.065130897 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081254351 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.099685245 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078107281 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108951165 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.087583432 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092760784 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075659607 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.123123621 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099662989 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097616142 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124295076 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087001489 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103646386 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099342768 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077228555 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111486244 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092224196 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085025313 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074644171 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.149670917 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083522962 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103674795 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104749684 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.07668786 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.081877387 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093959744 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.120192255 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.098533529 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105454507 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.254613639 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086090848 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086027431 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.12500532 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080956131 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095041675 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123101138 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.086828247 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.071144423 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.09042879 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.064983729 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.092086219 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102995938 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089219029 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106058651 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072518375 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120109316 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102175405 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068982487 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.110267153 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09260111 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147322391 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090080064 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095124401 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086122376 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.139967322 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079818353 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075616001 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092019583 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121536205 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088327461 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089604834 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120576078 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090544474 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081561005 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070743611 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083605086 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095338357 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101158722 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095305203 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083797685 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081351286 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090490944 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.070705856 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075749812 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.095014882 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082608246 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117349408 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102839282 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116509754 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074485021 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099077094 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090758527 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12185641 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.110495471 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.07871931 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10252457 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132452069 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10710634 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079500003 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094870412 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104139625 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100379747 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089909361 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128132232 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109424269 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082963533 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08668347 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.244361202 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.105985864 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146523865 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086078356 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.099168405 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13146372 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.107750312 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087724067 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078866128 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089348105 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099863756 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133482681 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090428589 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066319597 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087309626 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123897192 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071866097 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09352048 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087194973 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.078577217 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076503985 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064550344 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098256629 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130196781 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107716684 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093026491 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.098058664 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065556466 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094696456 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098402192 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133967266 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109646482 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092297554 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092525857 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097772921 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074360978 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.125330086 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.125403278 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086205132 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085119078 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11646324 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.089796415 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.098513193 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107529546 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097686988 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.095896871 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.13389704 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113782075 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.116679695 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098613306 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116968217 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076983928 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1092691 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.06986764 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097724034 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.071954135 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099294006 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.073988665 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.104370127 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073879836 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09344171 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.064251452 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.068403253 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.102522097 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.242443118 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081852112 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.12814555 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.123915423 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076567323 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095517432 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094638841 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095699989 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102898531 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.08432246 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086193811 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073706055 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.075464693 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092379721 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088781433 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103224996 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073685906 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07092319 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131200753 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098133055 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085756196 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089187327 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.112737987 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083984515 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082323646 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097521632 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131098407 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.111217184 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07524716 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.085713331 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.065177895 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.079324021 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.070879288 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102752194 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070793761 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105746447 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064170672 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.121591699 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081656208 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.095670776 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091566328 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12124261 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085148117 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121137282 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081670414 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101866621 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088034559 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089551157 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102794454 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090040352 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099359267 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104229929 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087335628 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084418709 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113200784 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09924964 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11039487 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100510909 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.128216495 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105413631 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07047804 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097564736 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093551649 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144771095 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093127239 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083843665 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08950647 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096406702 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075498713 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.29209795 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082338191 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081805742 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107784314 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.085170157 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091188481 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072011082 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.094855382 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089148364 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10746361 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.093141601 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.08828461 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103290028 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104438116 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081345503 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081803029 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117320572 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.122231122 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.09690111 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088519508 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083309846 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094269084 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088830926 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.102707795 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075395358 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071031446 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.064277986 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068044138 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.111107262 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101944608 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092585367 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092650373 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096267018 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06727197 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081864762 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084894432 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078218385 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084426779 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.108653236 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097130468 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.121456563 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.096031126 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08697036 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133964448 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122379386 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084878097 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086274566 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095080708 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072588561 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139815392 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111922421 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.072745414 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07821162 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.07272079 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080298712 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067389004 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097579986 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097722074 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071491669 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096767568 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091696659 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116440088 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090940321 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071696158 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.074984016 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.069783796 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070963175 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.0964423 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.073145943 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072018498 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120530317 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096030998 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100099282 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077596514 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.228560393 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125407641 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065847135 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126057248 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078076817 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10447608 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.075909782 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075118786 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084383931 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100249183 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099895352 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107169093 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066604819 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097098328 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145702907 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07169778 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071173347 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070605052 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105105731 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082193219 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134785481 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08431375 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087789041 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072934031 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121298243 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097907069 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077954572 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121021445 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074716044 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067261013 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081013419 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105063539 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068435066 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070379881 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1074121 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.625713057 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085529403 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.071165514 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083639985 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121381107 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078725762 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102445725 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.111103081 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10059317 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.175564954 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069723452 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08568765 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.098106996 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09254775 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086434572 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074678893 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083720551 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082760671 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079376625 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100558423 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.076229557 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.086065241 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.074917465 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.097386529 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.121861569 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081314277 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.096655629 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082305587 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085426753 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092627616 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104679858 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.098941992 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.082021805 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082161984 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101484135 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077871372 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.233649713 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09566212 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073596876 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074287371 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111482992 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.079544479 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.08866853 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097881199 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.084578797 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107280886 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111110493 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105701831 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.091910002 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074368523 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081176707 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.082847944 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.06988135 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074074213 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07062772 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066818321 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101888414 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080489198 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077061229 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.094600279 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103470795 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094268142 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100228081 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085325125 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091817204 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.0948588 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.119547478 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146642796 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094765408 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.115611289 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124782074 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.072009436 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.071170724 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.075669366 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124664497 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.076010215 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087515531 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.227022276 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073544325 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076835932 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086198585 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101462797 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07864488 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075760619 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093292289 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104859566 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079899734 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076255185 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088144841 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.100708691 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.122020666 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083982395 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.071034407 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103500996 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096569052 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116595946 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.06978737 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076122663 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121793171 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082601098 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098418227 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074901413 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118304701 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124232637 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069083985 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083622765 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065941378 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081433251 seconds)
  done (took 48.506704496 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.143140854 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.13733232 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.079410441 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.093766891 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.183293268 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.191368888 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.113916262 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090724485 seconds)
  done (took 2.797286979 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064305195 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.078003853 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.094760347 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078992231 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062665585 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063695829 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.190003199 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.076413858 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.062247117 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10072204 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.070672899 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.064484971 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.339938122 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062186152 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063078248 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070235285 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062926517 seconds)
  done (took 3.315444638 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.35066205 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601655068 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.311636911 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070895657 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.713980547 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085006966 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.116338716 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132141041 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077284529 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.513417967 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369157436 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124058755 seconds)
  done (took 18.186271508 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071590579 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070479292 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.073418716 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.073173662 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069859541 seconds)
  done (took 2.074909878 seconds)
done (took 96.769875435 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077773617 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.161215402 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063823877 seconds)
  done (took 1.975238279 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.077973881 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.07628192 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.07620415 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.073971205 seconds)
  done (took 2.02681485 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070425882 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072196749 seconds)
  done (took 1.859815079 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223292537 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157220186 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085683682 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.077750339 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075558809 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075737795 seconds)
  done (took 1.954600931 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067086792 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.06787017 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067301033 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.067336952 seconds)
  done (took 1.984328555 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064512883 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062317155 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065015392 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067283637 seconds)
  done (took 1.976313722 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078598303 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079728287 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073951413 seconds)
  done (took 1.947939657 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103629042 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092058296 seconds)
  done (took 1.911154882 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075859716 seconds)
  done (took 1.798579184 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084916932 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.090395311 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134482935 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.101247783 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134602323 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119212556 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.072240195 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.073003445 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069146633 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.067607193 seconds)
  done (took 2.665555627 seconds)
done (took 22.363215331 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074286069 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36235641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355203571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081990831 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666186454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352131376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001608108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085637229 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.093161069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064096595 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083100424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645061707 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.995206699 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326639357 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981340065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326809051 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648331516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064923384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063395264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064101767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.989472468 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064263419 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064043065 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064385869 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645230887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367917679 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064792761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326330346 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063588182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066348785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351799311 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064934065 seconds)
  done (took 16.167433147 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.065933802 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114961059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068667645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.078939833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066025036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06680773 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067207251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064862482 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103685677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064889877 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080038557 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064011594 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068019816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065584841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083680091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065025189 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066223325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065487168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067639434 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0655469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08274256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064300769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065846755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065606239 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065166122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076813908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065963675 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064863914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064886598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067897879 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068758039 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066423327 seconds)
  done (took 4.010065264 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115000116 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119945119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069533923 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102914098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111850975 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066006567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142964619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085588247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107003208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064964664 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081145134 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064697659 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098892853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066297172 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084139031 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065410698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066420602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065324009 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06482981 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065911031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082849758 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065067286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065637198 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06547752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065935776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078969943 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065745809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064892299 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065201909 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067133463 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069023482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066297775 seconds)
  done (took 4.268411943 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066168536 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.067727388 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.074913091 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076105133 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.062718952 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064866149 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066082004 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.062469917 seconds)
  done (took 2.279585859 seconds)
done (took 28.465245871 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074233541 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064357981 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067263636 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082368953 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070068792 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066867681 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06120136 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.069809244 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067061741 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067580102 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.068792176 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063111011 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066018797 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061010871 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.06830219 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063208195 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068775322 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066648976 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067308639 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068578989 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06482519 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.067971019 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070526096 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067116249 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067980395 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067481596 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071192096 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.067995959 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063487701 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065825443 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064507111 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076089404 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068744575 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.068781122 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063100068 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062959907 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066651708 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065310971 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.06865767 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071511047 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065400675 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071418124 seconds)
  done (took 4.545363044 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083918713 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089610593 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081398932 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077605742 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099125641 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078522793 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085375587 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07522233 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073401919 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084256561 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069700193 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074492887 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075264862 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068283439 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074309929 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070662723 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075424699 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069709982 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074680075 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074827159 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085925165 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067988885 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074649335 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075600991 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07066481 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075692935 seconds)
  done (took 3.75453901 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068782555 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083402936 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086969386 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134189553 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103195919 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07773454 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077965406 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096557714 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095123881 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064275635 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068009233 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.089750912 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090402343 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070877134 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.101373334 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081159196 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.074990502 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065678987 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070444224 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096618257 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086098071 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082145001 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095160648 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08281958 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063761221 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072759447 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07057654 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078071284 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07064306 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075333331 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.067793553 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067428899 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.064783841 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075000947 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067483579 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.061602324 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08439305 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07546517 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077187578 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10303986 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072961411 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066099981 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092119285 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124923622 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063678782 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.065729621 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067385506 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075426365 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065073729 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091627698 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080822397 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063553568 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.081359506 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.064762546 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065566202 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078685363 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065067857 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06561954 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074979354 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069290459 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083169917 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068105453 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082330689 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063814797 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073855596 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064900763 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065178037 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062503453 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096908228 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070075358 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111962195 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064727016 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061316935 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075159747 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074094554 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069993555 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063288503 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080980975 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074496939 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067225691 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074674777 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066332939 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066803602 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097534099 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062778074 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061586235 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06216425 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065655653 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067096817 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064397313 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076118034 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062943303 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066614154 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.077756341 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063444242 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064467012 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.06563076 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064703087 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063086196 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073760348 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067288347 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065088284 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075088008 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064702397 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067235255 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077129765 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072282691 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063276753 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064896897 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065719402 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065500763 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067878334 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067041602 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065772379 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069402283 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070121264 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069009651 seconds)
  done (took 10.465018595 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.153649837 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.143856803 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065183378 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.139244598 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072232568 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.067974053 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.139811218 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082810507 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06482005 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065782723 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063875061 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.090390239 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.086167113 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.096927404 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068575262 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06489498 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088303009 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095040006 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.141589194 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.137726875 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086384757 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071501228 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066226289 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065413548 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065591778 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072969136 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.080227917 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071896032 seconds)
  done (took 4.297561398 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.071220848 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104153664 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067988896 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.086990376 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.081975544 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064645288 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066210335 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065724274 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080649491 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.071039555 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064278747 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.068835321 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.06730943 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066417055 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065228659 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070225976 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.070671241 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06315099 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068024365 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068353671 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074230477 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088202685 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068647469 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064122711 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.066403169 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063772393 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070366001 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.073441034 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064021624 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.092678703 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061380431 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068524052 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077453126 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064829213 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.063974909 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065120628 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064430973 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064773803 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06461469 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062328637 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062220455 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068866322 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062699691 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07005756 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077746892 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07140438 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065216297 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066635204 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066588663 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061444433 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066926012 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067115141 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.066916552 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072213868 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.06747239 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066265328 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067519011 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091625819 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069554392 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063921974 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063124936 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063226025 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065626054 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.071720473 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079746359 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065469579 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062594409 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063879597 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068656846 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077708558 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063579112 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068520186 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061217046 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.063932734 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066385623 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066618627 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065550005 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062802616 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063519704 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063989244 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064333167 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063887418 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.063523697 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066891838 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06179772 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062415573 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064600206 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.064975096 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.070083863 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062927763 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066092934 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065203955 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062761869 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066473939 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068960546 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.06656608 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082388717 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.072626479 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064531848 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06199571 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077376612 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066190588 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063313177 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069711364 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.06826396 seconds)
  done (took 8.970096352 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085540671 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066178131 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08287081 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.08905276 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074016885 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069732805 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077066772 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065296525 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.07994241 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063919412 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073035327 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063474257 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075652794 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.071939363 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06595739 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.074161495 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066852389 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083718375 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078163537 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062872016 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072222053 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075643372 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076155579 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080754252 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080360963 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081013523 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075875278 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067001016 seconds)
  done (took 3.874810296 seconds)
done (took 37.640531526 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.81366801 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.984682998 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.811321541 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.002641385 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.988522466 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.929364298 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.929800386 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.80597352 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.889295518 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.833994432 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.078717281 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.224289874 seconds)
done (took 67.099478683 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.837382954 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.958407122 seconds)
    (2/2) benchmarking "String"...
    done (took 2.02688509 seconds)
  done (took 5.72950735 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.933495016 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.447658076 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.066160508 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.807667622 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.813212132 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.235722374 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.586231315 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.247852858 seconds)
  done (took 30.950673063 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.960153101 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.031414671 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.494901436 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.527994288 seconds)
  done (took 15.804637329 seconds)
done (took 64.095976925 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.853162844 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.808725104 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.854057672 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.841848503 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.813688673 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.811425696 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.811597559 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.812306929 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.815795759 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.861162141 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.810520734 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.813793136 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.809777445 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.817060435 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.512850623 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.871746789 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.826158533 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.819023237 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.814623256 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.851440942 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.815667355 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.812998437 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.301996025 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.997548062 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.426687192 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.102455919 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.313327306 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.224835655 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.822827191 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.811510127 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.896622397 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.097828692 seconds)
  done (took 205.601439383 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.813027571 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.854492964 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.913704134 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.85867756 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.248682599 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.99209684 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.910839553 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.33147544 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.816901822 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.838705021 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.012327437 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.813537449 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.035593855 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.756526141 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.855869209 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.862652109 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.931529342 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.067599707 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.857897267 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.962375236 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.82803319 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.962707297 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.920722354 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.023731512 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.819235231 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.869859183 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.840887328 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.830085571 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.000520356 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.918274156 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.829131071 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.834170211 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.964910545 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.682713361 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.818018736 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.82939769 seconds)
  done (took 171.458093334 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.001812047 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.82191186 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.811834234 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.867624662 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.934396797 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.813941889 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.458437847 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.822263739 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.18826415 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.814458594 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.812290801 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.811982056 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.813638926 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.82508942 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.895254567 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.814262888 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.829360678 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.813892087 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.838702443 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.813232209 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.813263376 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.812435299 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.815519295 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.812207702 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.813438376 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.81372899 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.402738008 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.058767234 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.815767331 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.81493119 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.718589243 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.826930658 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.983736581 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.816898137 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.905452157 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.814788681 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.870687407 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.927919244 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.815897385 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.032850124 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.89436528 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.814226264 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.814513776 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.878201997 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.826979343 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.816252378 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.81704192 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.820729597 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.87979279 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.065545179 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.815230535 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.937391531 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.298916328 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.81748982 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.81486109 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.814169196 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.814651715 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.402363612 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.816793397 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.815916619 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.821741657 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.822194434 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.815151521 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.815622954 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.201787731 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.887801828 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.945689463 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.817393826 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.121795902 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.819518234 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.606459433 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.898560593 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.81610402 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.816843278 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.815649564 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.818503517 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.816644896 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.819095433 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.938708099 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.825015938 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.932678983 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.897051151 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.938476127 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.818967688 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.826583706 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.646978099 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.888117485 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.853887802 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.649842616 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.817049832 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.191684321 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.587257571 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.817767728 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.817423229 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.829660848 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.819639537 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.817788936 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.821680318 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.897708199 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.818543366 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.940209407 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.550713098 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.124783927 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.821301943 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.818187448 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.826318811 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.9003353 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.819139273 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.941272823 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.82062183 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.883611763 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.825497369 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.820755715 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.89965676 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.821308088 seconds)
  done (took 405.977439467 seconds)
done (took 786.848393482 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.41134396 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.379606753 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.476528385 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.395470899 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.370946473 seconds)
  done (took 13.789306691 seconds)
done (took 15.547648875 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.832575073 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.826290017 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.877357706 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.903924701 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.837451495 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.838131491 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.901557514 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.841057617 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.869617333 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.875480825 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.904185837 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.903764675 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.844914684 seconds)
  done (took 26.012520502 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.829233141 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.963944227 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.044255711 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.860229374 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.829671985 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.042887172 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.883530084 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.954771742 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.968833126 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.052650431 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.046409135 seconds)
  done (took 23.235970512 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.828799851 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.978034857 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.043424706 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.864501009 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.829875994 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.040037096 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.891218222 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.955665492 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.96360647 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.067966425 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.046230303 seconds)
  done (took 23.275972141 seconds)
done (took 74.284469892 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.830470741 seconds)
  done (took 3.58848777 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.841133876 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.96833089 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.824138128 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.825507299 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.831132507 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.82626078 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.826024765 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.824312567 seconds)
  done (took 16.524276872 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.824499694 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.824282459 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.823940012 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.825090882 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.823684753 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.824537839 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.824989749 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.825412583 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.824341612 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.825075277 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.823764282 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.824505507 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.825343897 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.826110045 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.824275536 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.824701708 seconds)
  done (took 30.954407575 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.827556539 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.825592664 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.824166217 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.824637672 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.825358861 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.825614166 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.826179068 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.825902337 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.825080883 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.825278291 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.825391397 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.825248577 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.826069112 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.82457785 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.826032084 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.82628925 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.825417358 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.82572345 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.831321444 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.825323603 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.826733521 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.826052847 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.825885079 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.826681901 seconds)
  done (took 45.583749769 seconds)
done (took 98.420614733 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.529984409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.868158589 seconds)
  done (took 10.15763912 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.826367928 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.827915691 seconds)
  done (took 5.419018527 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.827432929 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.827424631 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.827555426 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.827899694 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.826779935 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.828853035 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.826584547 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.827998878 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.829021303 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.827832359 seconds)
  done (took 20.039061361 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.828434978 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.827498124 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.82773463 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.828329246 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.82787847 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.828532844 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.827910921 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.827082855 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.828216688 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.827949848 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.827053908 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.828775615 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.826638749 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.828312271 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.829314436 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.827500393 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.828650012 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.827073264 seconds)
  done (took 34.666015714 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.826729746 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.826608545 seconds)
  done (took 5.413867758 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.827194589 seconds)
    (2/7) benchmarking "second"...
    done (took 1.828426748 seconds)
    (3/7) benchmarking "month"...
    done (took 1.827503133 seconds)
    (4/7) benchmarking "year"...
    done (took 1.826840284 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.826367531 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.826931219 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.827474616 seconds)
  done (took 14.551039057 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.827514739 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.972837207 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.027158354 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.415244385 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.827961312 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.829917938 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.69910605 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.830666719 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.83087805 seconds)
  done (took 20.022478708 seconds)
done (took 112.033518156 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.661261714 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.827673732 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.120915282 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.978459197 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.844479274 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.115936245 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.85499827 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.461517334 seconds)
done (took 42.630232006 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.892717602 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.81630675 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.860782884 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.864365583 seconds)
  done (took 22.293570422 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.814890473 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.119118394 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.839454649 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.667797527 seconds)
  done (took 22.208466731 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.193007047 seconds)
    (2/2) benchmarking "read"...
    done (took 2.166067828 seconds)
  done (took 6.113562168 seconds)
done (took 59.265676714 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.816069259 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.81117042 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.808249529 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.809019324 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.808153097 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.807672057 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.809971072 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.809039973 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.809792874 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.809732419 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.809080857 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811370136 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809785345 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809109528 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807358663 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.809892071 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.809779635 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811623923 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809962219 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.811277492 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809079896 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.808973924 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.808353997 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.810334998 seconds)
  done (took 45.185891238 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.806247408 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.809518594 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.807855307 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.812107351 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.807936655 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.806162908 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.807032679 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.807686714 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.808696363 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.808648564 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805934939 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.806998712 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.806756511 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.806960197 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807488673 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.80509141 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.804802791 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806015955 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806225052 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.805545772 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.807847937 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807132385 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.805696394 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806081398 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.805609508 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.80590184 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.807252748 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.807077535 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806271776 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.806797436 seconds)
  done (took 55.951956332 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.808976122 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.808469866 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.806979372 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.806998688 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.806209855 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.806013334 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.808062711 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.807627233 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.808583577 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.806986119 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.807424599 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.807987348 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.807803564 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.807133643 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.80780322 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.80850616 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.807182922 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.808775432 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.810693605 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.808334682 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.806152443 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.809502898 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.811186066 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.809469245 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.808089577 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.808820785 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.807928097 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.808271137 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.811333215 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.808379218 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.806955623 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.809810552 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.809665304 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.809926932 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.808298193 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.808814246 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.810026336 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.807441446 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.810289106 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.809803767 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.809196337 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.809164087 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.8096554 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.809378347 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.809603778 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.80874238 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.808924267 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.808847954 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.807754864 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.809333041 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.809469105 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.809516251 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.809653998 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.810906343 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.811697031 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.811389078 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.808811063 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.807782351 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.809381796 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.809580141 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.809724 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.809884134 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.809360795 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.809768299 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.81002967 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.80962376 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.810435866 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.807836118 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.806324496 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.80704851 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.806677724 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.805295867 seconds)
  done (took 131.968974798 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.80575483 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.806804778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.806628052 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.805604078 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.809220255 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.804393643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.806900817 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805920542 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80526986 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.805190862 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809494518 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.803813434 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804147415 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.80374206 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805735491 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.80431231 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.802299487 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804346661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.803652726 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805722971 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.803711047 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.805066224 seconds)
  done (took 41.457050025 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802349566 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.803205119 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.802852384 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801547499 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.802764268 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.800734767 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.799967345 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.802884758 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801566172 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801699023 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801845157 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798486612 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.799832999 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799444146 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802145592 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.800591 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800713731 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799765041 seconds)
  done (took 34.15666894 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.802779925 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.802156033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.801885323 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.800935917 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.800552102 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.800785532 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803847966 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.804622367 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.802119033 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.80302131 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.803483815 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802386124 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.805820345 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803606558 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801976946 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.802207929 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.801642779 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802175232 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80489271 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801950029 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.800938247 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.803034269 seconds)
  done (took 41.389740574 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803687726 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.801955624 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.802129623 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.800857488 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.801992107 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.80325746 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.800565535 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.799516924 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.799422644 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.799476088 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799281355 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.799525116 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.799996056 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.799974885 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.800855742 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800337313 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.802036258 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.805677122 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799404491 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.800112079 seconds)
  done (took 37.75575536 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.805229658 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802009924 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801431235 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803407905 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802990324 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.802533762 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804366063 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.805451056 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803681452 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.803913651 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.803815258 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.803288649 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805732269 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.80520171 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.803342813 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802216827 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802879059 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803886424 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.803324766 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801065491 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.801275015 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800999536 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803564607 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.804757229 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807422797 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.804360032 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803318893 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.803910016 seconds)
  done (took 52.231568469 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799915215 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799861308 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.798371519 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.799817535 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.801384734 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.799070912 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.799493738 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.800396679 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.79863633 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.798944383 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.797067143 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.800644293 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.79986671 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.797940801 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.799694791 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.800487429 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800125025 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.801838933 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799203341 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799527922 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.799516478 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798992216 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.800102657 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.79924569 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799105289 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.799303694 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79881487 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.802671233 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800248167 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.800357488 seconds)
  done (took 55.724632497 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.824663178 seconds)
    (2/2) benchmarking "in"...
    done (took 1.820805832 seconds)
  done (took 5.375271716 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.80223348 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799118822 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.801701539 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.798349685 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.802260993 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.801215189 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.801957427 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800946608 seconds)
  done (took 16.137649357 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.799475665 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.801515272 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.800857921 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.801567631 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.804188831 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80747936 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.799332186 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.801696147 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.803124953 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.802122831 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.806913317 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.804869818 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.80950147 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.807991347 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.800387733 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.801549556 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802288382 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803398953 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.802625032 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.801368853 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802729306 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804543584 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.801483044 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.806404101 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.802178885 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.802397848 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.812666065 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.80118513 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.800818898 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.800123562 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.810273251 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.80154592 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.804492696 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803575298 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.803440836 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.800800785 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.80843564 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.80542043 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.805096626 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.801399319 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.804240553 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.807202097 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.805421593 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.812559496 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.805678967 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.803912263 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.80289452 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.804056166 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.801511308 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.80355689 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.809666874 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804620447 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.805101601 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.801713058 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.80749742 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.80709689 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.805894771 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.803325546 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810049467 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.811612732 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.806814078 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.820683382 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.810822132 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.807155713 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.805691588 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812914163 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.82526744 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.805898005 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.807068499 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.805926613 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813094353 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.804238521 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.802590029 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.804436936 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817703926 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.814401756 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.807322699 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.804764708 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.803740583 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.805885521 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.806208983 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.807964801 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804679787 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.808234964 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812685154 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.82449801 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.807676396 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.805606304 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.806055599 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.806168419 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.811091808 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.809336093 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.80304993 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.805199617 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.805905795 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.806924179 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.809081548 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.808145779 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.805130502 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.815297895 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.806377048 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.804198204 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809823053 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.81352525 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.805109746 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.807553618 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805886595 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.809419518 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.813809962 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.808805506 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.808275291 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.804111457 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.806211412 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.812699165 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.805414943 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810747067 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.815292493 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.815872513 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.805865514 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.8109887 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.811546957 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.809441863 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815900599 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.828372902 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.808383916 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.810570407 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.81231456 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.820411744 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.81130919 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.807719016 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.810160611 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.806776779 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.806136159 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.809140378 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.80703603 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.811276906 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.807042048 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.809136099 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.80734342 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.809857983 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.810400888 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.808332481 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.810475273 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.807656115 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.811358913 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.809833269 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.811520683 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.814529677 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.808067071 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.810705214 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.804646879 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.811444241 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.80874851 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.808900294 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.808261409 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.807195576 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.811729311 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.809756126 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.811309245 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.811289307 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.807742405 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.806865041 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.811371076 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.810791141 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.8133794 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.810616899 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812999885 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.810913154 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810625269 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.810531733 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.811079415 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813027615 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.812919156 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.80866598 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.808719829 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.811563097 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.810092945 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.809819269 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.812831772 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.820251418 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.812643552 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.81685103 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.809433831 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.817943577 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.810806354 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.81179361 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.811597963 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.812238594 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.812166511 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.809254112 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.811141501 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.812831042 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830737532 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.819647784 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.812596513 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.809986474 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.815447208 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.81148971 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.815872054 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.808168115 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809705976 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.813109563 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.813720425 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.813378649 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.810781302 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.812916232 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.811090592 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.811620469 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.815821545 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.813612561 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.811594063 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.811492497 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.812738626 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.813232058 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.809831602 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.80962885 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.811388427 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.808838492 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.82024615 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813949129 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.811201728 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.813668861 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.813803103 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.81464238 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.812293033 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.812813494 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.814534886 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.809403586 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.813462634 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820121393 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.813115181 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.811883551 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.81159323 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.812237193 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.815548409 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.811316609 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.814362216 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.815772229 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.81463647 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.810968571 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.818607993 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.809819302 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.814457397 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.814384463 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.814268485 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.816312703 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.813616439 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.814473612 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.809427593 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.819888826 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.811352233 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.814391537 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.811848323 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.814751061 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.814458316 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.815424509 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.815967357 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815199207 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.822078929 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.819855142 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.812489208 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.817712984 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.81692661 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.812415556 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.816040587 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.816097491 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827105744 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.821644606 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.812609322 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.813896359 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.818135563 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.817257189 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.815080873 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.81867419 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821355333 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.815629141 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.81442711 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.819270441 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.81946558 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.817197657 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823333609 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816866243 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.818784268 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815586847 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.816539287 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.816900368 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.813676369 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817200766 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.817100248 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.816608337 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.817332395 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.815377013 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.815037277 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.815052369 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.823869287 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.81617042 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.815509074 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824427892 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.818106409 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.814931423 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.818072206 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.81483812 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.816665089 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.816651752 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.81647098 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.816470829 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.819621838 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.817547699 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.824166229 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.819240908 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.827159707 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.819089863 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825660547 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.816298265 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.815413217 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.819802389 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.81923236 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.824849527 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.816306387 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.815012523 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.825053949 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.817165294 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.817390504 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.824194827 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.814480272 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.819089738 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.816686205 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.815842369 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.821388973 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.820432087 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.816891274 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.818849524 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.816912818 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.815691377 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.819791488 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.818270886 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.817727301 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.817690165 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.814538448 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.821195944 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.821134086 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.818954078 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.821336384 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.815320982 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.817723449 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825909526 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.820732907 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.815063954 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823585138 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.815850013 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.82897049 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.820804025 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.821674684 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.817804449 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.818100812 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.820215685 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.818318366 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.822274015 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.818059592 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.816700404 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.820168319 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.830837471 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.826263563 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.820485397 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.820132279 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.821970638 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.822119208 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.827039471 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.836911865 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821384965 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.820075007 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.822143326 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.826318462 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.820801149 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824684235 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819548332 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.827599642 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.822734204 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.818288693 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.820328841 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.830778746 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82280933 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.819215738 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.819787406 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.823925895 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.82053872 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.818601431 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.821399325 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.823476112 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.819779005 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.829338946 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.81888623 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.820968122 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821583338 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.820493735 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.821903729 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.819165497 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.822353007 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.822468441 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.824436491 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.822761426 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.822991993 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.824050688 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.819749687 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823009541 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.828702114 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823518782 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.822846417 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.821639708 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.822799882 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.823136412 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823363026 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.819861547 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.822194199 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.820413744 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.821439535 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823957414 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.827222856 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.823651382 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.820625703 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.820741171 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.825235883 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.821183885 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.823894096 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.82293026 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.830161188 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823515222 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.831275352 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.827842492 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.824342138 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.822042393 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.827207729 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.830880289 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.824678001 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.821751285 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.823519534 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.823395882 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.8236424 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.82434189 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825385142 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.822582885 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.82556825 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.821761024 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.823280346 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.825490173 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.823562292 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.824514648 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.824142203 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.826071694 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.826270402 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.823248629 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.82248257 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.824814199 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.823965895 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.827678804 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.826234468 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.82287683 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.826270493 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.823974523 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.826925042 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.823252581 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.822646946 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.824592476 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.823111928 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.824288599 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.823409785 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.823603806 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.823506925 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.825983125 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.829174686 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.824718701 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.825084814 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.824227263 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.828975241 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.82727435 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.826019064 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82720074 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.822345581 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.832402114 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.823768131 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.826234046 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.82428627 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.823208598 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.829866589 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.824405757 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.828331508 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826888358 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.825511234 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.822846337 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.826698965 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.830131545 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.830444681 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.828084307 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.829301135 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.829802272 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.827129058 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.82440171 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.823922824 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.825890078 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.825445614 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.828659317 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826774607 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.828510702 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.829929426 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.827392046 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.82843999 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.828000029 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.824918995 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.824877726 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.82859257 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.833969461 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.835239175 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.825259091 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.827132351 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.828996244 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.828424627 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.834123809 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.828674331 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.828134695 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.828810587 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.827577057 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.825971974 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.831674524 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.832520825 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.829826269 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.828789351 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.829286527 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.840833182 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.828145674 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835299716 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853562178 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.829536658 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.830376183 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826750581 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.82806031 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.829449141 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.831200773 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.829962232 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.833628148 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.830872946 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.825923472 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.835155246 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.827843347 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.826033816 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.829033934 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.827826589 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.831532607 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.832553625 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.835341992 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.831184448 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.826528517 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.828550557 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.832225755 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.827986615 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.828872651 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.827290448 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.829780092 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.828245337 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.832106702 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.838468639 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.831586625 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.82991759 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842147463 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.839375644 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.832299586 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.828147304 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.831456683 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.833594116 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.830712621 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.828813431 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.830815688 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.834364395 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.831320077 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.835395672 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.832140393 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.830683043 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.830283357 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.829517996 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832088162 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.841039704 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.838450586 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.830061598 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.829602138 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.835241899 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.828727285 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.838045204 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.836567098 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.831981261 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.832009863 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832593449 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.829104315 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.83103857 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.831043554 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.832822699 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.83457487 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.833350937 seconds)
  done (took 1085.320604103 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.829840555 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830074318 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83005861 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.829144244 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829541128 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830390264 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831115629 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.829944564 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.830915601 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.830231191 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.832296997 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831903354 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.830900806 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.830837534 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829688861 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.830167534 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831857163 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.830228726 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.83098613 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830181254 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.830183734 seconds)
  done (took 40.204800344 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.829900788 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.831323187 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.830660144 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.830161063 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831082057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.831020662 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.830259001 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830839262 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830652116 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831030524 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.831140812 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831112038 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.832395754 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.831685423 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831168828 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83213561 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.830409653 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832119075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.831376374 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831967037 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831952933 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.831532758 seconds)
  done (took 42.051509505 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.835275542 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.835745979 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.831938194 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.833185288 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.831370913 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.836331524 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.834004864 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.83479265 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.831722833 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.833845914 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.839402962 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.83823388 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.831461979 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.836244366 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.832121714 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.835174271 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.982356195 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.836552645 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.836982411 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.833223866 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.835997502 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.840450084 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.832693282 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.83442433 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.832393992 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.837215242 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.833801227 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.833977805 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.834177407 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.834700878 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.84050278 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.834844383 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.834638471 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.837614829 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.833898129 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.835527283 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.841156856 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.83621719 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.837140426 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.834792337 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.842620315 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.854575479 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.834450858 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.837432722 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.842160812 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.833903682 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.834232617 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.838584536 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.840748005 seconds)
  done (took 91.882696469 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.834841419 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.833537203 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.83342977 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.835543151 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.832269836 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.833836147 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.832994971 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.834346242 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.834329215 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.833772823 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.833136627 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.83325797 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.833578245 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.834951149 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.834050403 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.834186516 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.833563474 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.833144744 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.834883967 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.834640237 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.83377003 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.836934582 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.833930301 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.834561177 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.833717561 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.834248544 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.833696927 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.835158312 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.835112964 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.834555466 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.834951025 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.83490256 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.835133981 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.83528411 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.835759636 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.836853148 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.835707467 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.835808847 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.836306587 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.836031263 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.835646091 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.836259423 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.835802741 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.835940901 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.835705497 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.836355751 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.836463699 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.835010519 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.835048955 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.836111512 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.836413901 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.836632845 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.836423747 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.835630263 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.835778663 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.837125859 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.835873772 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.837300772 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.836740608 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.836770107 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.836389633 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836992312 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.837018077 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.836278719 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.836263042 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.836520504 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.836597919 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.83671131 seconds)
  done (took 126.567171909 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.841951869 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.841861275 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842839078 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84245515 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842833718 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.841738185 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.84074153 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.840112318 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840242086 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.840772303 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.841312128 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.836488282 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.840895982 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.837483496 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.842407532 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842020544 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.841657971 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842876443 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.841231317 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841824127 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.842777091 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.842566284 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.842727494 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842360435 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.843205393 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.842273224 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.841492965 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.842275504 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84277669 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842759427 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.842950667 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.841854533 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.842314449 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.842839148 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.844208053 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.842566975 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.843195971 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84344804 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.84308441 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.843028375 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.842173508 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842057031 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.842746919 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.842527715 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842368664 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.84248688 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.843415568 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.842654584 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.839618148 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.843506109 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.843507129 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843213939 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843729872 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.843264908 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.843351572 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.839733979 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843727031 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.843389033 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843526129 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.844212721 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845366908 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.839030598 seconds)
  done (took 115.992215477 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839849664 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.841460202 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.839270749 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.839581032 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.839347959 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.840015119 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.840308369 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.839579851 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.840681564 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.840794629 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841430343 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840828583 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843699693 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83987623 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.841095823 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841431878 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841307381 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.841366127 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841297178 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.842149836 seconds)
  done (took 38.588954354 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.841438863 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.840050233 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.841974471 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841183164 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.841128171 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.841014589 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.840204106 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84201215 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84115159 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840018081 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.841989035 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.840866332 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840725722 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.842945169 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.841603002 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.842690919 seconds)
  done (took 31.236502777 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.842341783 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.842408407 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.84661792 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.846128466 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.842474295 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.841896069 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.842717649 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.840789426 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.84287389 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.842059127 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.841733994 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.842474089 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.843241514 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.846184272 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.842380812 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.843013592 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.843054175 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.843920932 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.841423624 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.847471536 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.842655993 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.842503562 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.842923641 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.844693951 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.844534877 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.843154078 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.842865645 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.843163809 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.843969172 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.84323343 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.843645767 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.844611724 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.843894748 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.844420859 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.84925281 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.844660106 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.843933132 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.844353601 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.843273094 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.845725719 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.844014224 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.844703465 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.844550902 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.843784028 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.843903925 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.843817389 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.844311457 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.843771213 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.843629751 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.844514021 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.846108216 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.84841016 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.845295778 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.844197313 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.844186364 seconds)
  done (took 103.19254264 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843924902 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.844508996 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.844580053 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.844697862 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.844224972 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.84522914 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.844891395 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.845070076 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.8448971 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.84460944 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.846364886 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.8460864 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844843936 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.845393561 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.845385066 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844852739 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.849501034 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.845876768 seconds)
  done (took 34.994650297 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.845772801 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.846436658 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.847662086 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.846048729 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.845979203 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.84743156 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845141159 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.84816466 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846757023 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.846675879 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846458409 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.8458089 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846537751 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.84741313 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846306301 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846505483 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.846345878 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845613278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.847453336 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847143179 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.846186788 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846653908 seconds)
  done (took 42.40405237 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.846154793 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.846669222 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.860188225 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.863426492 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.864111091 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.874679971 seconds)
  done (took 12.934529825 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846126378 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846402706 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.851391202 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85024165 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851119181 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852854695 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851790858 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851999904 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851720208 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852411653 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85174728 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849629014 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854409456 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849992144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850004307 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851360907 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849828336 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84993773 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850839452 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850558711 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851247227 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850655903 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851415728 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85152597 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852015683 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85205214 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851696895 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852542656 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852265121 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851652586 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852075008 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852132425 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854386719 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852798832 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852941224 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853011823 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852238814 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852792072 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851528045 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852661864 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.853491068 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852529078 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853364806 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852507127 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853165307 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852815879 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853578834 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854828341 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85463972 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854085908 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852306959 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853809218 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851313565 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853293955 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852923888 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852089965 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854042216 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853014528 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852780011 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853275819 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852812989 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853007321 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852862373 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853895016 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85477516 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854308654 seconds)
  done (took 124.028343995 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854887131 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.854190088 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854713003 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853868068 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854484094 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854181347 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854980016 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854536923 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854923055 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854525003 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854433387 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855187303 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854323444 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855317736 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854883162 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855112013 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854650595 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856374149 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855072605 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857599095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855889046 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85524964 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85498269 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856048791 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856663698 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855451839 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855033476 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855421764 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854951347 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856334179 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856134468 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855199131 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854846499 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855199072 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855765201 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855130495 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854409642 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855887666 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856920321 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855614763 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856639848 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85703332 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856624509 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85724879 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856183381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857549585 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856465595 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856268372 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856446531 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857643056 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858508942 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857443475 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85755476 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856339144 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855910414 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857435258 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856755968 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856166439 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85749976 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855764523 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856563089 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857259098 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859240977 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856968832 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857272717 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857863267 seconds)
  done (took 124.283307049 seconds)
done (took 2532.777455887 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.878260231 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.901612983 seconds)
  done (took 15.571366074 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.022966318 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.974094343 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.859839027 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.91714261 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.86199966 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.886665243 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.872718299 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.861451089 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.859182896 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.86096331 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.858570075 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.044781544 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.865562941 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.860609567 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.8603618 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.952758399 seconds)
  done (took 52.213698199 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.866913674 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.864062017 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.876949255 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.866998872 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.866753336 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.878172235 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.893760168 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.87008087 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.901081794 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.877040043 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.934331826 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.875595023 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.86591162 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.91626703 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.878650474 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.879503466 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.959809661 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.939885371 seconds)
  done (took 35.804215076 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.943111759 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.870756689 seconds)
  done (took 10.611382834 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.886849622 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.87171213 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.880875798 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.859590897 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.874623655 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.883459306 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.879593882 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.877026539 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.892796807 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.887145489 seconds)
  done (took 70.588787493 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.867287191 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.864878453 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.866267184 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.862082298 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.859889384 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.864726165 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.861542143 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.861221525 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.541318731 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.900576451 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.87300144 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.872193088 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.863118419 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.864709737 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.861499015 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.888632266 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.975138247 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.859676781 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.859447572 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.867829427 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.86153462 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.912869589 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.874450475 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.863562662 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.894102032 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.536438965 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.873087754 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.867127792 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.979334968 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.860937613 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.862865595 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.073712408 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.869356887 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.328983914 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.151408178 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.866782343 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.874283832 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.869625276 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.860440892 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.974295929 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.864275028 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.870451775 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.820822452 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.127184324 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.960726128 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.906895331 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.212343983 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.867523142 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.86624621 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.897428702 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.867587202 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.865302832 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.881256215 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.380642166 seconds)
  done (took 132.574522812 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.861563875 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.21597463 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.029375433 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.861708561 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.146140556 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06773051 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.863282267 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907262366 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.864275745 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.091069616 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.112860183 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963790972 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.863724077 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.86325649 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.864597492 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.860440111 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003026249 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.929451063 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862114047 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.861010274 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88955155 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099491734 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.981817729 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.86498112 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.888053677 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066264888 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.983269383 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.96191558 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.630030267 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.862802277 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.92350713 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.864678754 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.865349505 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.862580754 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.015018363 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.955861445 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943104793 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.865394626 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862954943 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.863272499 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.519784632 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061216856 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.955868043 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.985956728 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.113266176 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067079863 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.640365203 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.863412066 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.593725574 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024270478 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.088913525 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.093339372 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.979809327 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.865651768 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.395490388 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.863775586 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.86398177 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.108757097 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081256744 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.95929901 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865942934 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.863573832 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.865274511 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.099657142 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.866993412 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.957441647 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.867299941 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.868871647 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.960730047 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.960342919 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.095114364 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075562776 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.894121062 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.19218871 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.365266795 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109302947 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.928967309 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113626203 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.868574609 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.866034607 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944050731 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.70658198 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.117042742 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.105358543 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.110195208 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898200278 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.584618064 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.866368186 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.090441778 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.083551761 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.11633449 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.110031294 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.098862982 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.184897332 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.867088646 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.866897758 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.103708928 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985283321 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.870144126 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.208240769 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097298557 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.409196689 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.892897054 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.171382651 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994232387 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.871098277 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.494510362 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.870134963 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.089206476 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.906345718 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.871588161 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868992445 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.086637717 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.840892812 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868424215 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.525772684 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.928563608 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.871672502 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.1007573 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870843209 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131107645 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871392714 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095815847 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.312772256 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.897942441 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.096977476 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.114295667 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.872712483 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11093223 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.104714315 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.982082334 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.08707661 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.578887502 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.870909844 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154229296 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.870866241 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.870068275 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.03728183 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.871808882 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.011715145 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.872528011 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149535465 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888438605 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099114887 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872866087 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.123821731 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.90133069 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917888512 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.871471693 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997075892 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873901742 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.695640586 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025627094 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872033468 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.872670137 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.668986252 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.871134311 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019588394 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.0935556 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890756023 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.940730577 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.536432133 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.872114013 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955366016 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891415553 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.25533007 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.871915153 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.119165084 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.874411866 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.872124873 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.871505098 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.102812151 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.052539074 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.875231795 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.871594688 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.768827827 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.873134795 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870982763 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.053063595 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.222444937 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.873023988 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072966407 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873536535 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998315314 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.875738922 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.948592312 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.210799449 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.871372171 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.872736771 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.872493594 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.872565857 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.871742479 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.133181342 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.894435377 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.387607643 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.008973715 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.138021169 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.181436974 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.110902774 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.914272952 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.87693507 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.124670353 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.875090584 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.936809913 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.876803944 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892886708 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100700759 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.879045284 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.078521906 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.140393623 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.888926171 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.918078253 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.875908497 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874572777 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.874169915 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.012737779 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955927978 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.875798031 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.873360933 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.985971075 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.992689931 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.083291767 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.875853952 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.975585913 seconds)
  done (took 902.614531572 seconds)
done (took 1221.770390309 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.874652317 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.876578787 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.874671326 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.875312087 seconds)
  done (took 29.30939029 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.876733218 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.875993565 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.880671814 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.875434466 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.877332066 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.875378411 seconds)
  done (took 13.070239169 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.028602597 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.875280668 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.875956196 seconds)
  done (took 21.588304557 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.953050821 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.274215601 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.01512995 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.29984106 seconds)
  done (took 10.352520022 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.880356069 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.880152048 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.879842431 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.878344016 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.875472324 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.878171637 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.878894881 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.879305592 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.877875491 seconds)
  done (took 18.717960771 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.957104681 seconds)
done (took 98.804727911 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.905397854 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.876138396 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.889546739 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.940741572 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.008860089 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.012201551 seconds)
    (7/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.074931701 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.16859723 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.175354794 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.888619023 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.892952128 seconds)
    (12/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.881301439 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.901120314 seconds)
    (14/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.881330678 seconds)
    (15/309) benchmarking ("sort", Int8, false)...
    done (took 4.919960837 seconds)
    (16/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.967595191 seconds)
    (17/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.975726694 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.875790583 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 9.196232012 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.128105624 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.900734159 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.877243013 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 9.437399192 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.062563092 seconds)
    (25/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.879223818 seconds)
    (26/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.640917336 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.880231782 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.880924369 seconds)
    (29/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.959057838 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.888142376 seconds)
    (31/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.617080062 seconds)
    (32/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.462262698 seconds)
    (33/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.965048353 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.880739363 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.006682944 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.169858777 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.387179679 seconds)
    (38/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.188354118 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.041744082 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.972670664 seconds)
    (41/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.013787894 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.979240001 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.007936918 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.011060443 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.862598051 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.380916792 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.095436471 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.87956704 seconds)
    (49/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.978610618 seconds)
    (50/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.088578529 seconds)
    (51/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.882660178 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.17479295 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.002802546 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.524382653 seconds)
    (55/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.574960129 seconds)
    (56/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.285247168 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.130163399 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.093496372 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.1831667 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.02417201 seconds)
    (61/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.982380628 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.88345973 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.10956487 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.899278393 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.00694301 seconds)
    (66/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.885671889 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.968197144 seconds)
    (68/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.269167912 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.184092561 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.017588221 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.877794807 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.255947054 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.807649628 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.969920711 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.055458072 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.919350634 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.789591094 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.091124764 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.899952324 seconds)
    (80/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.352909394 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.892722076 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.030727703 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.978655313 seconds)
    (84/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.962658463 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.197728621 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.008205429 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.043440701 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.666593556 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.281349555 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.498867672 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.015656414 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.941213792 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.880897873 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.41601339 seconds)
    (95/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.991955679 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.23997563 seconds)
    (97/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.236682811 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.954235368 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.968013483 seconds)
    (100/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.74177504 seconds)
    (101/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.272537681 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.882893496 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.976824725 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.984460954 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.41949623 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.20012533 seconds)
    (107/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.156236626 seconds)
    (108/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.35933997 seconds)
    (109/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.127279735 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.882892834 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.810327351 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.170824808 seconds)
    (113/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.064153943 seconds)
    (114/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.967901758 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.882435006 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.418692625 seconds)
    (117/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.247745235 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.764267617 seconds)
    (119/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.915640522 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.130866579 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.127229781 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.190795264 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.117180637 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.908601145 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.301007083 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.883279372 seconds)
    (127/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.019556976 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.716451616 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.888752469 seconds)
    (130/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.170708637 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.036736972 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.227133805 seconds)
    (133/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.3615408 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.887611656 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.720816742 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.747049507 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.028198176 seconds)
    (138/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.902599884 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.140035921 seconds)
    (140/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.053681437 seconds)
    (141/309) benchmarking ("sort", BigInt, false)...
    done (took 6.88848756 seconds)
    (142/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.25561332 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.136732356 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.963238587 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.899023253 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.885588603 seconds)
    (147/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.657893008 seconds)
    (148/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.208716961 seconds)
    (149/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.933354677 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.181242674 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.657887211 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.124635289 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.911959937 seconds)
    (154/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.998029982 seconds)
    (155/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.348454559 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.275370715 seconds)
    (157/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.128319337 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.960193787 seconds)
    (159/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.957369119 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.087503504 seconds)
    (161/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.978462753 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.753323616 seconds)
    (163/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.177868318 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.905172463 seconds)
    (165/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.885897605 seconds)
    (166/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.965714146 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.976482663 seconds)
    (168/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.514731632 seconds)
    (169/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.541951694 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.528564984 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.984112697 seconds)
    (172/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.339789148 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.887853885 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.150294102 seconds)
    (175/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.288547401 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.454187946 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.994442851 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.967052566 seconds)
    (179/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.278908377 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.069792572 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.05711213 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.16176182 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.888443064 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.927876373 seconds)
    (185/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.720442037 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.069156249 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.238793828 seconds)
    (188/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.152169166 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.282992504 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.269629778 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.218401444 seconds)
    (192/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.095952147 seconds)
    (193/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.128366226 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.909976413 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.889071925 seconds)
    (196/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.028560534 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.888668315 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.270050269 seconds)
    (199/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.020873379 seconds)
    (200/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.985929428 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.190460995 seconds)
    (202/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.967381229 seconds)
    (203/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.994130104 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.008950231 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.180439283 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.583737642 seconds)
    (207/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.183995624 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.889289708 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.669665092 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.88879356 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.209051622 seconds)
    (212/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.894023692 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.951193338 seconds)
    (214/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.885611931 seconds)
    (215/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.261999476 seconds)
    (216/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.970811056 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.112456059 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.22302302 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.044450677 seconds)
    (220/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.975101357 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.896467909 seconds)
    (222/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.278754765 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.626368134 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.193240793 seconds)
    (225/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.18942903 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.88988655 seconds)
    (227/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.904802565 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.533383288 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.89331017 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.951521758 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.767073345 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.299753384 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.664722261 seconds)
    (234/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.91913561 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.909145227 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.996628869 seconds)
    (237/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.584615286 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.272566936 seconds)
    (239/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.891389477 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.887239135 seconds)
    (241/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.281481361 seconds)
    (242/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.088451108 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.921802246 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.096435856 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.073361437 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.1571822 seconds)
    (247/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.202696062 seconds)
    (248/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.025422157 seconds)
    (249/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.336148514 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.906851509 seconds)
    (251/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.887984141 seconds)
    (252/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.096237556 seconds)
    (253/309) benchmarking ("sort", Float64, false)...
    done (took 5.598912148 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.027481417 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.16184615 seconds)
    (256/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.888681281 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.993488124 seconds)
    (258/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.996466263 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.079199124 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.182808182 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.101039649 seconds)
    (262/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.201722916 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.892348818 seconds)
    (264/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.002175911 seconds)
    (265/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.990525654 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.228068644 seconds)
    (267/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.911737462 seconds)
    (268/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.042561635 seconds)
    (269/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.545981177 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.343734644 seconds)
    (271/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.8980717 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.225084303 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.908341332 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.481944064 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.804162575 seconds)
    (276/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.902713972 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.948016673 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.889858614 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.421684233 seconds)
    (280/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.142713628 seconds)
    (281/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.632319703 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.889147886 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.001291635 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.017876166 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.844129127 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.891329984 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.293555956 seconds)
    (288/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.026789951 seconds)
    (289/309) benchmarking ("sort", Float32, false)...
    done (took 5.547647989 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.751646406 seconds)
    (291/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.912933534 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.476935176 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.275569695 seconds)
    (294/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.630822979 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.627855393 seconds)
    (296/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.97595525 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.209256633 seconds)
    (298/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.01929376 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.922674692 seconds)
    (300/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.985170531 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.134312411 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.156644319 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.758663017 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.053477615 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.107112306 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.283435044 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.918672664 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.164561361 seconds)
    (309/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.109204874 seconds)
  done (took 1015.469937758 seconds)
done (took 1017.358565634 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.920116864 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.913190666 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.895802087 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.916283908 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.008669111 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.939447987 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.908657845 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.899584985 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.945216934 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.945557338 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.894482763 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.934795719 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.897365559 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.897425888 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.89611693 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911983043 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.196241496 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.920701226 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.914755692 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.908173356 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.91444484 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.894764624 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.94678537 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.936446258 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.900336567 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.900906945 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.899746386 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.917316581 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.009947176 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.901381709 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.901695521 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.909964176 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.196921988 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.917969049 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.896111036 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.91731504 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.911558056 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.910183202 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.901940975 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.930974408 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.331023761 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.901930675 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.899574258 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.89803943 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.897858809 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.904237203 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.900019075 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.907068495 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.915593271 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.916372728 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.326931984 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.91921806 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.902388504 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.900051863 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.912033685 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.899067814 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.903710135 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916269455 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.920094498 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915675987 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.186142241 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.927714367 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.902296273 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.919173916 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.908267994 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.360696527 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.902665767 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.905726812 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.331531207 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.91100507 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.361322491 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.913657631 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.901664967 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.915441028 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.93250526 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.199231431 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.920214636 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.89883805 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.910737845 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.89861585 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.911954173 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914700603 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.905282573 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.903238236 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91612371 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.94314503 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.911515455 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.901681401 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.913257999 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.920184744 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.909571237 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.91289028 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.904366234 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.899087246 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.913253684 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.905439881 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.904421945 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.905201215 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.905424608 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.915602257 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.329741017 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.92253102 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.898284045 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.899030078 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.90185653 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.915743531 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.32959866 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.907139515 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.924759571 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.953332051 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.902525337 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.188132524 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.927881815 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.918676957 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.914393555 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.904355348 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.899975354 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.189251391 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.354877608 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.921104963 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.902049722 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.900228798 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919340491 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.903365928 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.900648406 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.202074813 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.92735891 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.918743763 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.025954324 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.917798921 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.935807967 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.901300517 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.906643359 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.947462769 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919690304 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.93584661 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.906298927 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919970775 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.921216868 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.899195018 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.915661644 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.916236129 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.903197041 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.911361109 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.900195418 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.948611789 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91805252 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918707734 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.925973076 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.026947108 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.901922425 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.190232219 seconds)
done (took 298.619854966 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.981692151 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.898420343 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.990231029 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.901181874 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.990669509 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.972665125 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.901839388 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.901425158 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.900391581 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.392155126 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.901716812 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.906445105 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.900667849 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.901579534 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.97219761 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.901054161 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.902265326 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.182082687 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.906302051 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.978828991 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.899780873 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.901534619 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.901449295 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.399647823 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.899986362 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.901432987 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.981467466 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.901349673 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.187746846 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.901820467 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.901379471 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.187712162 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.981348248 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.914707987 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.909777695 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.910722679 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.989511913 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.909740808 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.970368216 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.972129453 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.996850083 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.939144358 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.901008665 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.901584197 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.904483861 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.907442516 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.901946984 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.934835631 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.902229952 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.909761521 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.183369494 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.90812446 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.909545519 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.903140996 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.902740758 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.920745555 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.903134525 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.907936235 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.982438502 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.908223183 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.973000538 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.400691346 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.40560566 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.903242839 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.902544711 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.903568493 seconds)
  done (took 186.758808837 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.966965475 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.976634809 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.969065546 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.908772157 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.952474319 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.970078704 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.90909256 seconds)
  done (took 15.488372754 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.912583388 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.904596935 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.95687949 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.958233497 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.908762474 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.084554604 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.917332411 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.910728308 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.932937748 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.906330547 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.570020407 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.957301475 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.911309619 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.907105461 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.919597523 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.964409543 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.909137764 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.910440155 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.016336318 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.055517565 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.909974629 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.912450872 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.93347755 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.918987477 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.905231433 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.906617244 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.910103244 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.913314219 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.906261942 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.904644662 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.90553402 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.959238495 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.906398406 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.906157797 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.906495206 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.90759881 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.910855209 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.907422113 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.905718605 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.907258113 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.905870934 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.906927575 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.90614342 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.907166632 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.906061269 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.931158262 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.906161526 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.906626985 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.905516097 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.907775696 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.934080082 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.907222946 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.906779994 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.911216233 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.953030247 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914888782 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.911197135 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.90680353 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.906902735 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.906138218 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.907122768 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.056437258 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.960708678 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.906085442 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.960068962 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.060325687 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.907419815 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.906984582 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.907175784 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.002426073 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.906358316 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.960241409 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.907687969 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.025194689 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.906729958 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.088993534 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.931860093 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.912984739 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.912497043 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.90741008 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.917173352 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.906750864 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.912076959 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.916560213 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.912832261 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.90760861 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.908805007 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.911608934 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.91736315 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.909578712 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.958856084 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.908820091 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.913799408 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.051405273 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.909740177 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.020559052 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.938871937 seconds)
  done (took 209.704569451 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.91626516 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.917553944 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.910725109 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.923872197 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.909578774 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.910063584 seconds)
  done (took 13.327056822 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.912985515 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.912285073 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.908850212 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.90936937 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.912233595 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.912630842 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.909697323 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912122425 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.915917059 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.909116648 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.912971051 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.911072632 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.914371587 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.913644854 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.909593215 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.909219505 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.908506042 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.910230564 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.909411862 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.91430507 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.045079896 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.914071763 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.91419323 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.912799436 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.916988818 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.909893147 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.922627913 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.910498548 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.909701463 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.916960131 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.917475707 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.915003233 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.913778178 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.91635718 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.913218101 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.914768708 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.912567895 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.912663543 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.91160984 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.915115292 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.911406634 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.914890612 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.910095635 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.912065886 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.913467129 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.916600669 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.914647567 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.923716921 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.911478818 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.913044693 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.911529179 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.911461913 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.915420598 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.911831084 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.915703827 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917475654 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.914878473 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.911318502 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.915816839 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.914548491 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.914593651 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.915805441 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.913603772 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.914672115 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.918235645 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.912653597 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.916042892 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.918854151 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.916198944 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.911670741 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.912632263 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.91128183 seconds)
  done (took 140.744529899 seconds)
done (took 567.867215205 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.192187515 seconds)
  done (took 9.034286744 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.020974453 seconds)
  done (took 8.869236944 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.471411357 seconds)
  done (took 10.318165338 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.923795236 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.914042264 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.917979389 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.913095169 seconds)
  done (took 29.519863853 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.252148689 seconds)
  done (took 9.095292997 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.921853902 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.92519392 seconds)
  done (took 15.766093453 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.062252067 seconds)
  done (took 8.904806181 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.291389399 seconds)
  done (took 9.145691671 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.935268893 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.938495848 seconds)
  done (took 15.739417204 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.91537508 seconds)
  done (took 8.759397379 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.683657669 seconds)
  done (took 9.627570607 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.922945346 seconds)
  done (took 8.787280252 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.994853735 seconds)
  done (took 8.840680528 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.150566301 seconds)
  done (took 9.995805737 seconds)
done (took 164.247423741 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.91942915 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.914512598 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.915160423 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.915305094 seconds)
  done (took 29.509192148 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.950145723 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.950548708 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.959188664 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.949481329 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.939855164 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.939526486 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.949988261 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.950315049 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.940484256 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.946917343 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.950605636 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.946384325 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.949489607 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.959417246 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.958656196 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.948118102 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.949838253 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.949505545 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.940412275 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.959099872 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.946806042 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.951095252 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.915677781 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.915302188 seconds)
  done (took 48.562368479 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.107943081 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.981556679 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.069166122 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.960684531 seconds)
  done (took 9.964214322 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.913897134 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.978371645 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.966689525 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.959360096 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.000258796 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.016695788 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.967539593 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.12517574 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.028381629 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.040919657 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.920808124 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.934570415 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.936805591 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.959770748 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.016980839 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.913443521 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.913776968 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.028318091 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.974197318 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.122700305 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.912379523 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.967818149 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.994740378 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.962860506 seconds)
  done (took 49.402620612 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.910511151 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.919189702 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.913669119 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.906669616 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.907081456 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.906982201 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.915061228 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.904725216 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.925613679 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.904582343 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.901734422 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.903664194 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.909906263 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.902042257 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.901622571 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.915130337 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.915627773 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.900949368 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.902425678 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.906442512 seconds)
  done (took 40.014906544 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.895994649 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.741967747 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.24009195 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.143464345 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.891307266 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.893035889 seconds)
  done (took 31.635392146 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.902836828 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.895056389 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.890775904 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.945553585 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.024687248 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.895746059 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.890581823 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.899622067 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.932448258 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.953892745 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.907016873 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.915396182 seconds)
  done (took 24.875172573 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.889494983 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.891715042 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.889581992 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.901863585 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.901004156 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.896364743 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.897405192 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.889273202 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.902003729 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.90694504 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.898119015 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.901794652 seconds)
  done (took 44.590559305 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.104230524 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.115937429 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.11308041 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.241414149 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.878326236 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.790325339 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.582476282 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.667680386 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.217223814 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.901232437 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.886008215 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.800714378 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.160558162 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.921836229 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.177644368 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.849593163 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.920338073 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190836433 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.921881611 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.926826931 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.207349919 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.975108469 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.133054243 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.967084532 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.132590557 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.179852898 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.158186479 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.18310101 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.262616912 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.98424121 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.965801769 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.959010117 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.928312225 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.931634616 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.921178638 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.931535618 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191955367 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.92225091 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.920204991 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.013722048 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.847338261 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.291247941 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.042355015 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.334003841 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.052459411 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.162424184 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.926112847 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.848269144 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.972766711 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.234549332 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.033561268 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.133792317 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.84750714 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.4064652 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.05364536 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.923448951 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.926708834 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.622716417 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.161771486 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.002376482 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.302214068 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.04284108 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.924379513 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.011046783 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.921970146 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.036331322 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.11307536 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.926003786 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.922536173 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.927557993 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.019316601 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.13770474 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.924532315 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924044381 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.939592227 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.924505384 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.272450637 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.23205896 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.902700635 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.479085636 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.175939647 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.882133486 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.179371779 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.958967276 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.206151741 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.141393887 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.004202462 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.163800863 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.783043854 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.926231001 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.727903339 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.999648903 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.982467141 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.919129141 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.843902014 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.266020307 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.046754051 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.922449655 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.847819166 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.934535311 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.126609395 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.231433997 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.970125709 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.924257055 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.923326837 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.926392556 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.924534238 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.939300929 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.936347891 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.84177546 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.209258637 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.03372254 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.182788025 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.921514377 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.605485482 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.196493874 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.054296703 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.536746574 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.060840802 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.755865087 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059193635 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.928759198 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.928153366 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.115456729 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.333253095 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.859859967 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.158673307 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.031910143 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.953942855 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.92853894 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.005620926 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.148671911 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.928402668 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.173446566 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.169009194 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.560720323 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.024525855 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.001630137 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.932918385 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.139833815 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.005438412 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.450987491 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.150769463 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.264037588 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.896587348 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.421032334 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.246974615 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31647988 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.940766762 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.862549748 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.948615838 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.625616121 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.84675382 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.925423193 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.260400447 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.96495674 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.000842909 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.916476022 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.915349552 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.92462592 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.996384784 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.994853642 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.987103576 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.840084812 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.915541655 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914658238 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.911740853 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.447052047 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.689719952 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.219415768 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.926795499 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.001732952 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.929731301 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.515042169 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.932713058 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.0485275 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.935969534 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.842665293 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.958840327 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.245888351 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.335896554 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.049257244 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.928228672 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.930959431 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.629271837 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.937381091 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.629411157 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.213754237 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.933001975 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.383785566 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.999427189 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.009649858 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.9421598 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.930018863 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.931452552 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.931142594 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.130347181 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.435689491 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.323076302 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.288021342 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.013605554 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.20169614 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.121760504 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.187746594 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.617986438 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.45824122 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.156355786 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.932559386 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93240068 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.57764003 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93877012 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.147437052 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.132664696 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.208008308 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.233490846 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.354719222 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.935176273 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.945651109 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.171976473 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.929685238 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.361529841 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.036291661 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.341324387 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.751111294 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.202236126 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.999906577 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.944428318 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.592971464 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074654446 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.887402814 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.060768279 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.860490779 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.656885872 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230139403 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.211594482 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.919504425 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.275361312 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.232683396 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.253651229 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.57119403 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.778814197 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.982388778 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.0164163 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.941697432 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.233739808 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.968683141 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.984936062 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.939785182 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.935940234 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.93916916 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.610995418 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.012374081 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.066463719 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.71898234 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.232222498 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.837831078 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.209374575 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.996170642 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.388306949 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.984561422 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.148974532 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.940871905 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.264345111 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.977208343 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.210472255 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.896707311 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.148995184 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.142274667 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.957146478 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.940868717 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.86231377 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.802599823 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.93815194 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.878141536 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.810757352 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.938356263 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.22984914 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.308177247 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.963772348 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.937724651 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.319626001 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.41251037 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.125669485 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.943265335 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.150452267 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.057639682 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.85623291 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.413993704 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.519575552 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.638315453 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.948255399 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.140264841 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.326944503 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.991851579 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.968042744 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.009049226 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.21068755 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.919897897 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.937685706 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.458684359 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.03614493 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.178642261 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.262217767 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.229826733 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.458863275 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.187159891 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.95225386 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.160367352 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.312760358 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.189032412 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.946088306 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.029605499 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.152923974 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.223915813 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.815336583 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.649416935 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.180090389 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.943441775 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.865877082 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.147665715 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.437248649 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.294497179 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.468536915 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.882907476 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.96156691 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.415326428 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.953868423 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.875859875 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.939261752 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.890888537 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.154727091 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.887623342 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.970853647 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.496886092 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.267620788 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.348418616 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.946099937 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.971456788 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.866390514 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.677851793 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.891244725 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.05262443 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.980607874 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.012365965 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.942672892 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.144097658 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.378957293 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.989803056 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.470432028 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.148213811 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24384692 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.212562597 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.250271691 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.904383824 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213962927 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.890584548 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.365570749 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.021263237 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.038402249 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.941409265 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.944451127 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211534913 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.329436567 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.32382968 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.970406228 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.329359193 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.048551496 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.943059336 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.946939906 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.220145283 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.170659733 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.157410128 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.020114636 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.140088544 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.014703953 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.456929799 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.94698423 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.945399124 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.079171653 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.787020034 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.705107175 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.244060005 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.689185488 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.14562878 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.464559189 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.830409115 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.895871165 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.981559399 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.94344761 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.949355052 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.058103891 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.18327637 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.214112078 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.709306033 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.948410251 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.943113333 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.820009251 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.652437187 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.18251657 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.953776887 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.991527033 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.946763886 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.062489418 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.945291648 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.208118625 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.99844883 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.942573376 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.948098734 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.151902696 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.452897869 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.954249817 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.638023987 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.13959382 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.945779403 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.415132265 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.391034077 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.952277931 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.974150004 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.878334189 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.181432589 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.462053115 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.882643798 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.930113351 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.164590001 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.941319627 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209200163 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214177512 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.94079071 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.155042701 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.209959189 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219537876 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.944911213 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.789040344 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.943844623 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.200924774 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.990306471 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.930918517 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.938314098 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.468365124 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.647665194 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.42042246 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.097828557 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.301110299 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.766235137 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.700550479 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.946251247 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.94754507 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.71009737 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.666811396 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.158269106 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.232527708 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.895534487 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.146991994 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.649346425 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.802923136 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.209865198 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.872935305 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.947453234 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.373288026 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.211872906 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.882219816 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.950648395 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.504323521 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.947508429 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.030026492 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.947262486 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.073769218 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.214096561 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.359212253 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.065184077 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.585342009 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.675394186 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.887700665 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.991296429 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.754642642 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.512014921 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.667217055 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96967322 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.962313733 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.872082692 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.948932843 seconds)
  done (took 1662.898993154 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.977235127 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.021896079 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.018453801 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.072371062 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.001693644 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.03376011 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.068082531 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.964235195 seconds)
  done (took 58.032926634 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.948457382 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.961316406 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.950552425 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.94735602 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.96890393 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.947464529 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.100543481 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.965166223 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.993601074 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.952083843 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.94868158 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.971769156 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.213941114 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.961860584 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.947590735 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.946178678 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.950043979 seconds)
  done (took 75.589932313 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.951352365 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.075476318 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.001313555 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.949987465 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.425078559 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.948536604 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.824809871 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.004070777 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.960794364 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.173468736 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.247589964 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.996793249 seconds)
  done (took 90.436382766 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.953352053 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.948351126 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.949077766 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.948291906 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.948034993 seconds)
  done (took 11.627288779 seconds)
done (took 2179.016896468 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.190677112 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.004270953 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.043738104 seconds)
  done (took 5.92605403 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.095811487 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.14158053 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.254668178 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.015064517 seconds)
  done (took 10.388090556 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.228667633 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.313919664 seconds)
  done (took 6.420709629 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.296631877 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.957972596 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.311877404 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.951040746 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.949816095 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.953894295 seconds)
  done (took 22.736915526 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.949815259 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.950439981 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.950244424 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.949393388 seconds)
  done (took 9.675682328 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.947125806 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.652968164 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.946602376 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.959773532 seconds)
  done (took 21.38431683 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.101380048 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.061039899 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.088193732 seconds)
  done (took 8.129404245 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.098515389 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.155817764 seconds)
  done (took 7.131916692 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.091675391 seconds)
  done (took 3.970140926 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.977813323 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.219452412 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.417832226 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.963380127 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.590216606 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.034023823 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.331437472 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.213293751 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.393429487 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.42287288 seconds)
  done (took 26.443442797 seconds)
done (took 137.843393986 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.49799197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.997126638 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.169047114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.371756913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.198776938 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.169248627 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.173643551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.36818443 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.039839479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.997231213 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.331281009 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.186592569 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.119258279 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.979457802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.123222106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.977043413 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.18201794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.331255774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.993851453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.212333184 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.172247666 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.958124571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.177377776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.973107091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.175049451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.09731258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.499736858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.968215626 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.136297127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.512062277 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.09197308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.355635165 seconds)
  done (took 171.429485969 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.93482922 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.936683167 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.936743079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.935874845 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.202751162 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.934738634 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.936847523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.934796883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.14970749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.133619099 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.935791011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.193211489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.938176676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.936553223 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.938297573 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.937158857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.311333846 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.937499238 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.935999158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.935718097 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.938215261 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.031852767 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.936906769 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.046520749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.278135551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.938224348 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.937287077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.935899195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.937963574 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.937623702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.93933832 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.937841588 seconds)
  done (took 209.6982529 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.937367089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.938651759 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.936115787 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.938392911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.938086732 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.938916965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.939720497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.93710791 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.632078244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.616303496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.936558564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.937734337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.94192381 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.937939697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.944367274 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.937733385 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.94427213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.945596048 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.939122232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.945646336 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.939132059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.556650509 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.951230394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.563910803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.936982923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.940587388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.938745551 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939902023 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.945444419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.944451568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.939827671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.939312484 seconds)
  done (took 222.568340266 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.177121429 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.938281047 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.939704584 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.964220616 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.939820558 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.939025064 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.94240685 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.189645704 seconds)
  done (took 19.898674016 seconds)
done (took 625.502289728 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.337525104 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.696301524 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.083062653 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.963679949 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.213014446 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.007133653 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.958094479 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.02327033 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.797235485 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.033191656 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.358944357 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.967029887 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.718000465 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.989526848 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.087313151 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.017824488 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.311911661 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.633708346 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.106230923 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.630567263 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.125682676 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.91822486 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.039326064 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.831382016 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.374267955 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.957190328 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.994174083 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.320318764 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.963908556 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.130028756 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.599967333 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.240910674 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.978314912 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.961335668 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.01034293 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.991080237 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.178238214 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.974439149 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.081783604 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.70672542 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.629477786 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.678455718 seconds)
  done (took 103.488800395 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.950618647 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.947377557 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.946772239 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.946121872 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.955570005 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.946234109 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.946565191 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.946533305 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.947273771 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.947266932 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.945817429 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.956612513 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.947237737 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.954676244 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.947476877 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.946141256 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.946874203 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.956782558 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.946597458 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.947439609 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.947442308 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.947641055 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.948365318 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.947489873 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.947603823 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.948536079 seconds)
  done (took 52.549467887 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.944434959 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.110443547 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.190428233 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.964839797 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.944114859 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.947766382 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.972791694 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.951597844 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.947119946 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.946355876 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.046062525 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.949960027 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.958103588 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.187910326 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.961766619 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.944270962 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.945025962 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.945991909 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.11959654 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.963466365 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.976253816 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.953467626 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.975474006 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.960365653 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.945432126 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944927912 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.946913677 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.353690148 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.956530106 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.048453857 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.020649047 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.978758533 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.290927597 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.200186614 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.000753565 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.950393036 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.944927891 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.052965313 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.951755098 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.946427867 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.974385659 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.954742295 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.191767754 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.471813164 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.961080093 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.945782973 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.354275884 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.065669685 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.98968441 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.9581799 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.196800611 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.965042439 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.94627525 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.948314675 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.983704127 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.960222576 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.946706024 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.205765433 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.964000607 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.976167146 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.954076031 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.946806067 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.126890994 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.957111453 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.115061239 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.956289564 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.953544512 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.948637241 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.192494772 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.965393392 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.483484653 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.961259701 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.946170252 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.051704787 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.117522867 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.37805391 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.96132941 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.128191235 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.309882399 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.985238312 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.959492757 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.339803297 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.990227048 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.957708453 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.947799615 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.947288071 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.947470242 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.994893539 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.974819323 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.402591594 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.4854039 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.222517077 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.989033062 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.96174258 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.94958677 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.205884388 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.961402841 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.948685729 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.186045068 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.497089809 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.964431003 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.955693823 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.463756615 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.96714102 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.979088598 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.960967847 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.203529657 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.96652855 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.997750146 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.948442109 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.954944869 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.951590662 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.978506226 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.959475632 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.948622688 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.45912693 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.071110113 seconds)
  done (took 241.219497864 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.949830717 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.947652723 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.948946522 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.948538949 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.948112771 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.949937901 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.948271662 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.949056184 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.950401604 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.948469208 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.948741909 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.951036557 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.950766575 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.954926609 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.990860702 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.951132411 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.43942288 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.950919047 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.949464201 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.950897905 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.512593228 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.956200853 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.949173616 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.952463061 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.949084754 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.952641862 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.953766905 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.986828203 seconds)
  done (took 169.622360075 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.951428229 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.006398603 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.969315063 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.999359481 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.96513071 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.952380563 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.046547145 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.970515684 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.957239699 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.951371361 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.951856731 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.984079482 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.960269484 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.047433589 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.985113986 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.057431995 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.055150838 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.961202449 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.952885536 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.952052386 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.999399346 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.965170909 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.982787926 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.014474821 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.966231149 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.007778568 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.966214258 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.953798744 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.952334687 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.063826052 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.970548367 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.984288773 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.98892821 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.973855406 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.071137969 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.068054736 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.055368697 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.056836027 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.961043819 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.953119752 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.954543714 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.953297589 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.010132783 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.968440119 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.956060539 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.06863294 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.97182183 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.954695005 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.954875995 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.954681655 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.968006969 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.971514182 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.989840178 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.079425765 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.000683987 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.980470228 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.0499992 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.075533186 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.959983076 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.049131029 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.961101258 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067195287 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.974405686 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.953814899 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.956755855 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.958923135 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.002905447 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.063348833 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.058941132 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.963449096 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.050417159 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.010760638 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.968465131 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.956054072 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.956497627 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.01104129 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.063437815 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.010182536 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.016601874 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.992478427 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.965062907 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.956243136 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.956601832 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.983451013 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.963144777 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.068861596 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.067516589 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.96444812 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.956623319 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.957026772 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.95765993 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.982559217 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.020340353 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.997890847 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.061071564 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.995733975 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.995657668 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.965633058 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.970544719 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.961782031 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.990732888 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.964437041 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.968960446 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.235739503 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.989119884 seconds)
  done (took 211.28476166 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.334643115 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.001653473 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.02950636 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.2183021 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.33612462 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.843750075 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.996023058 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.009271082 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.015796383 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.133874357 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.065950293 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.047487789 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.995643819 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.97943421 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.000447983 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.017715175 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.030455864 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.301994142 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.1945956 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.511671426 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.995119167 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.268393307 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.336546192 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.361584569 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.052093536 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.384374756 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.60818986 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.100621028 seconds)
  done (took 65.061450602 seconds)
done (took 845.09550303 seconds)
SAVING RESULT...
DONE!
