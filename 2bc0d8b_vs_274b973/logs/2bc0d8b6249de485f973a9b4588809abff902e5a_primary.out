cset: moving following pidspec: 23135
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.835122713 seconds)
loading group "shootout"... done (took 1.059761517 seconds)
loading group "string"... done (took 0.422579115 seconds)
loading group "linalg"... done (took 8.096854642 seconds)
loading group "parallel"... done (took 0.170385807 seconds)
loading group "find"... done (took 1.347488701 seconds)
loading group "tuple"... done (took 2.068451378 seconds)
loading group "union"... done (took 13.118265639 seconds)
loading group "dates"... done (took 1.411750173 seconds)
loading group "micro"... done (took 0.212907161 seconds)
loading group "simd"... done (took 4.601153034 seconds)
loading group "io"... done (took 1.025203233 seconds)
loading group "random"... done (took 9.182576137 seconds)
loading group "problem"... done (took 1.483463552 seconds)
loading group "array"... done (took 20.383610717 seconds)
loading group "misc"... done (took 1.539293745 seconds)
loading group "scalar"... done (took 41.33932661 seconds)
loading group "sort"... done (took 3.247706553 seconds)
loading group "sparse"... done (took 12.211690724 seconds)
loading group "collection"... done (took 17.568365072 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.516163859 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121108529 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126923589 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118665509 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200131844 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118002342 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126551719 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083937232 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.816765322 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138725081 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113791648 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.426911412 seconds)
done (took 5.247835424 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.163317628 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091338122 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081564133 seconds)
  done (took 1.273197064 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064139159 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.134462857 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065495951 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066237594 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067397579 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066047563 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066024953 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066252492 seconds)
  done (took 1.6345247 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070466243 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066806739 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065262748 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067371222 seconds)
  done (took 1.37363997 seconds)
done (took 5.630019699 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.239040872 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099391095 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.286032181 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.441387583 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.602769058 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.094578602 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073300053 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068802204 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126262831 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313514861 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101214008 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.178574176 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088631861 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.173615867 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.992636981 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119256399 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084848538 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121927959 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093071274 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130913785 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.389947815 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076303743 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.072241799 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069056624 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066655389 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.639772794 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664142553 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129994894 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082359679 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160321205 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.11485715 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.651209402 seconds)
  done (took 10.68385236 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091443664 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088337919 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067212487 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122358643 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091531183 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068265613 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074030125 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066344799 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086407761 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121548282 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089621185 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095989111 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067069583 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068784911 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073777998 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196421444 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078832464 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079238206 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066357799 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079002553 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104142941 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076593303 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076618805 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076324106 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127187909 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168243646 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095605646 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100565953 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064412542 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077522146 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113484009 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123048271 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066201528 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064426867 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.118065625 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094176276 seconds)
  done (took 4.468648076 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.959512242 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093540118 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098420139 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.111444985 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.62564858 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064755117 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.147681081 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237428118 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071831835 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.423409249 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.111741934 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.146384375 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.145523584 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117804681 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068369135 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.239692211 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115319399 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.517103647 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066810379 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065864043 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064254256 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066703805 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066151391 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06240842 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067359932 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093634619 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086093027 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.155655033 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.040070601 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.069003034 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.287629697 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064764922 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083125142 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.352491402 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068326824 seconds)
    (35/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065996816 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080960252 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.444589633 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122513006 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06429945 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166224997 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.115844291 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063794771 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118663487 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076953229 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067511348 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067929568 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067772623 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072000826 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.081495302 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064550202 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.10095416 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067010499 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064261124 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168021748 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063463611 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065205917 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065750411 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149542245 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065552654 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.142395344 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064203579 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069098088 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.103024988 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06783509 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085071298 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.093267922 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.334958682 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.062188766 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067039041 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.238534067 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076003621 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064715236 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070440462 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066938623 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068220789 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067583124 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.072805347 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070643615 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067966855 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107888007 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065558279 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068836902 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065788344 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071193888 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096141407 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064545997 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.495933974 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098464212 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065437422 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074060763 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103936437 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065907814 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069982076 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066284139 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06611454 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06724283 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067986969 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06958828 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.096395357 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069935583 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111897698 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.16615067 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068716947 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066132039 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.07245777 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06931199 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064534595 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069761318 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067684191 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069772285 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068759231 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06528364 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108386878 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067344827 seconds)
  done (took 22.047791435 seconds)
done (took 39.264302887 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246856373 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077850966 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076346285 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07687177 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077117346 seconds)
  done (took 1.757278414 seconds)
done (took 2.950467308 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107390686 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062581616 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098537036 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097818191 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063611469 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063954532 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.099182207 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063991009 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.097470959 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.098038906 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.099899491 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099003018 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062760708 seconds)
  done (took 2.314736026 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069138856 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080521672 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081941324 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06102153 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070663032 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080660382 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060735843 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07998301 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085640464 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08040801 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080506245 seconds)
  done (took 2.018011474 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069006564 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.08055007 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081824249 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060853537 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071828741 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080756241 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06054448 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080341319 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082704042 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080653486 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080791773 seconds)
  done (took 2.006947597 seconds)
done (took 7.524004711 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064252505 seconds)
  done (took 1.227642711 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.506393227 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.139904916 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.06621212 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083935339 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188647279 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.090055854 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.193487809 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.0687752 seconds)
  done (took 7.671028722 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100925949 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066891539 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066228869 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066829128 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06606953 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06641743 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066469795 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067339847 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067221651 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068142579 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067608049 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067939711 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066715793 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.06721337 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066709939 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066903409 seconds)
  done (took 2.369498803 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097765114 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096442185 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071016582 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070888536 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069578895 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068727711 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071350659 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071019792 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068176646 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069657155 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071149775 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069849146 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069150485 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06094725 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070531284 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071961264 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067736343 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071634442 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071710209 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072578085 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071203066 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060636628 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.06964292 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070444523 seconds)
  done (took 3.013416615 seconds)
done (took 15.463897003 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.176574952 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07287143 seconds)
  done (took 1.4226413 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066816967 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067459497 seconds)
  done (took 1.323205228 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071617644 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059334091 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.076385214 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068797389 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060284388 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059880419 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.074921499 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059902642 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060023139 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060111205 seconds)
  done (took 1.841025433 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062128419 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067598223 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065583135 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066728194 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065237571 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060834574 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063011606 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061379589 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.067417262 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060007337 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064116086 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079953486 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063195759 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081075651 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063024708 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06384849 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065953812 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063305177 seconds)
  done (took 2.375216065 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060075551 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060326824 seconds)
  done (took 1.319997428 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064352193 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060629343 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062849047 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063045813 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060470675 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059870942 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06057959 seconds)
  done (took 1.624012872 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404630172 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119145782 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331318729 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067191802 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075030595 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248306831 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062142632 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066828005 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067460006 seconds)
  done (took 2.676512611 seconds)
done (took 13.784801459 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080866084 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.175560097 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087270014 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.406272468 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089616228 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065675156 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111403599 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.163062849 seconds)
done (took 2.396555027 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.24188854 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.307152241 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.884072895 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.067885108 seconds)
  done (took 3.461106329 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327280978 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.077592218 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076709261 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066415876 seconds)
  done (took 1.760331 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064184757 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070550933 seconds)
  done (took 1.335686688 seconds)
done (took 8.014537779 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06311566 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091415358 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063043664 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062761524 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062980442 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06307075 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063122064 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062772676 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062341868 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062263532 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062443827 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0621765 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.061891337 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.062211991 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062284837 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062585886 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063722742 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062198941 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062785444 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062744744 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062813954 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062706919 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062463621 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063266644 seconds)
  done (took 2.764906207 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077665979 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064556009 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065476091 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065286038 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066174184 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065210101 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065378356 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064601897 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065347995 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064508998 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066336233 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065955234 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063829784 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065886056 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06412965 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065712887 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06591909 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064869759 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063973027 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065882357 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.065075448 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064317412 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065741073 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065139358 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065632584 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065807135 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064183763 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064569576 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065438469 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066345493 seconds)
  done (took 3.185348602 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063333379 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058757312 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059539534 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068945327 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058893681 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059422901 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.05991904 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058571038 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058821311 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060055266 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059596962 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058791714 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059556946 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058562223 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058631021 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059422158 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063464328 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076908097 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059132296 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059222663 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06310421 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058806099 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058959074 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059973947 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.061047084 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060552365 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059611795 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060226373 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059736065 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060505105 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059947802 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06470791 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064831455 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.068119209 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068531102 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064329845 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059619222 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06307859 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060250389 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058883273 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059156241 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058884523 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058781449 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059103188 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068920745 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.05939352 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059855477 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059506474 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058969358 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058581989 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058814749 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060724451 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064396086 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060752929 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058889383 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059951945 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058581683 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059516459 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058713164 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058468415 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058293314 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062236882 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060872242 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059784317 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077679501 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059863337 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068567861 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060630413 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059521178 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062559793 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.05926345 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076057526 seconds)
  done (took 5.635230908 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079463051 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084174134 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063776061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06379348 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059726505 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059434744 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066407265 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059283426 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063783965 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078833736 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059645865 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063827068 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063718221 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063444772 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059344137 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064162016 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066683627 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059198263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059408077 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063503906 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059889227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067215848 seconds)
  done (took 2.660231022 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137326139 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0649036 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102875204 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07314072 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06704224 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072708368 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064394047 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064603117 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064582705 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065187147 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065359645 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064908711 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066942219 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064929752 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065286706 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065351151 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064611091 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064957312 seconds)
  done (took 2.521714699 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074697504 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065001188 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085763131 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064719719 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06457685 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064187436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067772329 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068198003 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064137883 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064495556 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068574988 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064223314 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063920417 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064751148 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064260176 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064546464 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064032217 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064457914 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068054498 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067618458 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067297531 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068204888 seconds)
  done (took 2.696073027 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074775953 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063839441 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079110297 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064728127 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059507036 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059528947 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064447085 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064067408 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064159018 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063473731 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064318417 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05961032 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064958513 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0642083 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065319195 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064112414 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063336546 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064026965 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063559912 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059511515 seconds)
  done (took 2.513447846 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085458993 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062474931 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061338725 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080666824 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062266448 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062246475 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08171175 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061174004 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0621651 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082624549 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061690244 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061261267 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080881538 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081191699 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06202217 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080776968 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080830583 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080860191 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06251822 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062905624 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084777164 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063329925 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082463543 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063451428 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063621854 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063342444 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063315794 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082771898 seconds)
  done (took 3.209632753 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062832594 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063024877 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062679491 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062768385 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062736804 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06287498 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06297828 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063395907 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0620666 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063090166 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062125224 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062614338 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063265191 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062229151 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062682229 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062411908 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062079361 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062623009 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063347786 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063379299 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063111728 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062928892 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062206525 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062620006 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063876625 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063707845 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064220995 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063952779 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063291418 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063686012 seconds)
  done (took 3.118397489 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072414844 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070723965 seconds)
  done (took 1.373482548 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061066293 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076217096 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058886005 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071239734 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0676854 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062547808 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067776561 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067475094 seconds)
  done (took 1.758113919 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.065353537 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087956929 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060882292 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062005874 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064214533 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119584877 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073687678 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.074754307 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073975762 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063613943 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.06077583 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072452353 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.060350297 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073732047 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061972293 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069826934 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068042563 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072839352 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073163288 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.05880201 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072578227 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061741155 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.05931382 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061419182 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06060189 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067857563 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075856497 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072528103 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068923561 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058396097 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079288146 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059345064 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060434746 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068754652 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06344667 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059864089 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09575135 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059996042 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065819468 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060345939 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072674936 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081849889 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075363535 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078892362 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062759115 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062664912 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060794428 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061905444 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06355386 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068673899 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059721967 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066969935 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058875816 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060739405 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069608321 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059806527 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064182734 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068578073 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073219868 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069818422 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068184204 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074665816 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068125062 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06672159 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060457837 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078510367 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061120929 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073780779 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075516543 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061589559 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073922112 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06047507 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059753013 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060028503 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093931761 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06249688 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061890672 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060950864 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060810021 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061926851 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070346403 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066566497 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068324794 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064456778 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076279207 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06905052 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.05950423 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06519679 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076408151 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062928807 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059241327 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075538582 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06288472 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059435673 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076029711 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069190839 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060691379 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059674236 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062837004 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072390161 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059910635 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058381873 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067451878 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060663389 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061560703 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062994919 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067162514 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059053995 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06861486 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063284873 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059819905 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057236653 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06330405 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.05905132 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057114904 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067363999 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058189165 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071514971 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065175817 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.071882033 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072676918 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068663918 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073793294 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058270551 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057724656 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075097814 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067273281 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059063458 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074991002 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057706023 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068266222 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.187411284 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.06207404 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070537427 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060208071 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062468076 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060908592 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065185272 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061641137 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061639811 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064727911 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068962435 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072517662 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061197535 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068531615 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060352895 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07520674 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070194687 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064808145 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063026771 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060673657 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071202243 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066133471 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069396171 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059257337 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060209138 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059845775 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070888527 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070471119 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063309369 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068425633 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066139042 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061592039 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06121429 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061472217 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063574967 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064250493 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061519345 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068718201 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070016759 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.07766291 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068164709 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070047609 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060337763 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060687339 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.062815237 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060864426 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065613029 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070352107 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076011133 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072511496 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081823476 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.061135342 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07071777 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060948732 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075986239 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072872444 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060467767 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064013401 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058942897 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060822561 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068776736 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071523787 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073015081 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074508489 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064770392 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064474353 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059505728 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074350438 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.0601451 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06805948 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068990051 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063644614 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059470029 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061025869 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068622991 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06400951 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059723853 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074492312 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065183315 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059352063 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073762694 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059617187 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070462803 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059601913 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063361762 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065222011 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061234938 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069448105 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07445177 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058480058 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060518034 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074995282 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061727231 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061085872 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067317343 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074179612 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064689762 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067346398 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069874842 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068888176 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063855504 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068669075 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060016387 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.06824538 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061754934 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070772447 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059414149 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076145264 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058125293 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073402617 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059235812 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070176286 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059609409 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068202349 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059942046 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.07537752 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061014182 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059648073 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069610172 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057654882 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068107062 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058661429 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063847172 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064785209 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067570501 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060076163 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067409357 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059888559 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066880831 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06293376 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065892323 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067239614 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063063047 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057754945 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066835208 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069185796 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.200535824 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.063402886 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062492636 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061881804 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070244549 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063314828 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063464383 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06962462 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066276601 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067452732 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06236255 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061976691 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061622557 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068285599 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069166434 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077556536 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069049376 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067596211 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069084646 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059302901 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075332934 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060212028 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067802156 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058853146 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065838513 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070201688 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060136147 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078243368 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061338128 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068124866 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071820266 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068788044 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063819477 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076931014 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063102203 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068370641 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068273271 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064434269 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066464572 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061529912 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068615111 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069597301 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071065117 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062262419 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068303064 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069849971 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062609425 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069003013 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062766405 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070047141 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062506313 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060055269 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065340676 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071445152 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064749024 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064787786 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059568883 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058302524 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060138779 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066322883 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064187241 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067719478 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074830213 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058490538 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060566455 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059106715 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065535718 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077251299 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069450799 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067815378 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064239762 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.058871419 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061408923 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061596333 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.06024821 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062828213 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058925696 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0594204 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069996542 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061144052 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064187893 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060176312 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060590239 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069190237 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064599973 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060216707 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065911377 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059480497 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064834864 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058784013 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061295658 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064504689 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059079625 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063926386 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070088037 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075487959 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066292909 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06865587 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060768663 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067395304 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074826068 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066244618 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060703257 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06839743 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058686905 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077389563 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068591618 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06825339 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069193101 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060769373 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075478039 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064186805 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069377234 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074351215 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060173355 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066116438 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059077895 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074141507 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063919702 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05878698 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066791676 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066366852 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064670478 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070361459 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.0591112 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066698192 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0629226 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062609493 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060245527 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059989227 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067322239 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073847495 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059674216 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.062427397 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066107159 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06690882 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.20147947 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073536893 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069859796 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062629695 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062564872 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064801373 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062522018 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073207065 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062090065 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0653478 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065861257 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061475714 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.0680209 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077780779 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071135495 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071336145 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061575529 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060505145 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078838353 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065088234 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064933806 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069082988 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069670608 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072454924 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068872891 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076468988 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061431603 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066293516 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072401012 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060833249 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059952447 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064598205 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063516673 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070588663 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071058069 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069176043 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06330824 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068063839 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07777454 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062582987 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065889452 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.066151382 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061982986 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071759764 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069769108 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069920646 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062259776 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061087083 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064691683 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07001547 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068910389 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070197655 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06190952 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067214188 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074497815 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068733777 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064240161 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06056396 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064226037 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070180439 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065577668 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060670752 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066132758 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065237351 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067367752 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070145803 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065560164 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059946326 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076193329 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067809025 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069120589 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061604025 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.06153338 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060133879 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059877281 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070605895 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059657639 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061486538 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064868672 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061375655 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076719749 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068156862 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075646343 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060837329 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064376041 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059533909 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069338957 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064625172 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059997407 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070441105 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059369167 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074507957 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070797148 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.06745121 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.05954693 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065108133 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06806215 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074351668 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068996189 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068348645 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063287041 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06904302 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.06166951 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070579053 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059367871 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059102539 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069694761 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068760647 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072202093 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059577926 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069474936 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060890063 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067360605 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067425897 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061083304 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06083226 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060897869 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068305605 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063788277 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068204499 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063885729 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075049309 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059871629 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069545706 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067437576 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069023173 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071889294 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070335556 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066335421 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058801773 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065800801 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066619887 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059792421 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064013286 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.061552598 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079146389 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.196945308 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062285317 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075205716 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066698584 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061781868 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067123262 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064756786 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.07007789 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061403304 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070619295 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064062282 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061075032 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065089277 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064884211 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059535965 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059315761 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.05995291 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069800892 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.0644511 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060110535 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078961236 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061275473 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068143882 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070915155 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066933461 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062025935 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059103091 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060858692 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073683674 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076799634 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064761944 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070456835 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063107966 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07141465 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060009902 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.0703421 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069029834 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069348048 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077871138 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06194438 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07676242 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075045635 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064822064 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069486233 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069184401 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061351274 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080986754 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068546514 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060817709 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070711338 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061861066 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060159753 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.05892423 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061472712 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071181441 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060627734 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063661689 seconds)
  done (took 41.228134459 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097144502 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060667251 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059738955 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059915004 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070772697 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060174977 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059925499 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060509462 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060817055 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061628417 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059756671 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.05981099 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069864921 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072741206 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069813171 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063287907 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059540448 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060224364 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05960227 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060406349 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068952622 seconds)
  done (took 2.697207743 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065578961 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074593647 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070329392 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075992829 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067487555 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063574106 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070077715 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063140809 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070892075 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068463676 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070755925 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063719961 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06897429 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068500982 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068915698 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063618261 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07026451 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067132131 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063918879 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069877701 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063822572 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069813608 seconds)
  done (took 2.820980189 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061534365 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060429511 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068372702 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059148095 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059590747 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062619562 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059156887 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064142296 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063758539 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063670651 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06790996 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060187446 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058882453 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064989857 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059130289 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060133908 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.100150599 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060054096 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060150085 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059552848 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064233142 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068534649 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.05921243 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.05966043 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064005318 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062214194 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059161388 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061462636 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060327791 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064122919 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06061476 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058826123 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068081891 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068263531 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064534059 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063818222 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061432253 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061452063 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059338353 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059209976 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067806217 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060667431 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059846465 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060562676 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070092418 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059209435 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058814812 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068588974 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059241926 seconds)
  done (took 4.413285174 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069738657 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109984581 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065141526 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091432836 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071307562 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065029307 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065039769 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092438252 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060836764 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061215838 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072482278 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.072736994 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062387828 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063424145 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066243444 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061726108 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062351314 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061391613 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.064338456 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062229135 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.064423194 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065809238 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071454278 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071681017 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062712135 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061757024 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061595771 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063234311 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071550372 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065028414 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063616463 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063814208 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071766623 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065292856 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061310635 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061473733 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072451585 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062425937 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061902641 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060365683 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061653451 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063239091 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066271547 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072343602 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062413784 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066949957 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06243531 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060532714 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072322417 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062222992 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.06583488 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073237039 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062838272 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062370431 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063423335 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072149322 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062769186 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061238967 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062578531 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071898952 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060325255 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063156858 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072862309 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061508291 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064814041 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072637393 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.0672949 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06295277 seconds)
  done (took 5.979776506 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068481999 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094175437 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070464178 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070302969 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0697602 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069414755 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069466637 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069622607 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069510588 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070294235 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069813065 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107427818 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065939068 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073087371 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069510353 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069647672 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069416163 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069712608 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06992548 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069705619 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070116798 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069765794 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069908746 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070440328 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07175782 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066014935 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069297553 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069504558 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070026037 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069550943 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.071853372 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069883224 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069443665 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072915326 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071667909 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.06929672 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060064984 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06932857 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069613027 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069632269 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066230525 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070201831 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06931609 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06573858 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069865339 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069614784 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070224072 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.071740598 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076127479 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070759741 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07015731 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06996549 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069675608 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069834465 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070080767 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076182493 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070287562 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070192145 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070046631 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0699538 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070233658 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.075724488 seconds)
  done (took 5.757348065 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072481597 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066746458 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078491711 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062433688 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059341108 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068600284 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059904004 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059300107 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066161582 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065701996 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067429383 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068533502 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07027716 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067133457 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068690304 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070013758 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068433564 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068379199 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065989559 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068702707 seconds)
  done (took 2.695083111 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074301117 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078185451 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06533981 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068838621 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065158389 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068113565 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064155829 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065475089 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065377529 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065007342 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069908457 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06927538 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065073468 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068772503 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069362193 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067980542 seconds)
  done (took 2.431245783 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066044354 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066239178 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066526803 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060671405 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064335286 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060187792 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060238642 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.05923832 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059476124 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073300052 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060198651 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072138619 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060372893 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060212185 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060623656 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065978394 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059830495 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060481282 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060554234 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065035031 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066838967 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061225581 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064415565 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060446556 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068208113 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06698908 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061736126 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064362165 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060700003 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06068316 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066121509 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066586897 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060520783 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060529538 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059550054 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060145184 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059969295 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060978 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066021329 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060756548 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059105389 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065173465 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060140781 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060877468 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059924719 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060315238 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061101884 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065886091 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061037436 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.0655436 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060262828 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06257724 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060630541 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066864443 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062630702 seconds)
  done (took 4.791486915 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075727841 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064796559 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059629232 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05931758 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064591867 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064977115 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064871613 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064682851 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064871742 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059126396 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065457431 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063894296 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064960406 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06456192 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06479146 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064901144 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058955808 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06456002 seconds)
  done (took 2.508353445 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07045436 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064599159 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068918507 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064593053 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064142927 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06396708 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059356053 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059351691 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059466375 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063888391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064775249 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063874685 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059889296 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063403006 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064582546 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064340626 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063415354 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059494214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063971044 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059790033 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0635263 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059907776 seconds)
  done (took 2.736664547 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.085901642 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082381882 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.124376752 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07824753 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086769413 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070592537 seconds)
  done (took 1.875618826 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091340471 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101292083 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064764275 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06433199 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072429633 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067214217 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067108932 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06759709 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072808129 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070976569 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067703478 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072180334 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072372863 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068798158 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072562469 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074677385 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067220291 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067563967 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064072363 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074477719 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067089369 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072280636 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06766632 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067144092 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067550935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068824848 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074931922 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071243362 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069329062 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072358646 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074606161 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067073074 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07254235 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071370096 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064215352 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072564553 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067473588 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075115683 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072931487 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069057443 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064584657 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072690418 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072708649 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069048859 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074705449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067810196 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069488099 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067446237 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068026751 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077117878 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072597545 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069053498 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072574275 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075037439 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074933093 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076850009 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071007602 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069161102 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072739436 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071386282 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069455373 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072442596 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069336956 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071460137 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075269168 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068877697 seconds)
  done (took 6.058839238 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098982047 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065311359 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067760696 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071709686 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069286126 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068080052 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067681685 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067260193 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067320247 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064908249 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10121824 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067809558 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06892621 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069330778 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06746075 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067418035 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067921282 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069482433 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065192407 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076762842 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067589242 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068899158 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069259024 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068788589 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071194249 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074747254 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067335286 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066940816 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067560137 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06711222 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069043946 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067886926 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06866014 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06461879 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068886341 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067503342 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067185327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068804554 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067486616 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07237042 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069134879 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075005811 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067350501 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067219408 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070732772 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067458927 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06720997 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065348579 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067086606 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065227203 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074497776 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070656627 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071324845 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068753723 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067651164 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068272702 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067311556 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067774039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067647853 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074481104 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068837302 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06770727 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076898239 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067441115 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067610721 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069162174 seconds)
  done (took 5.973664125 seconds)
done (took 124.613111232 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209477097 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181727468 seconds)
  done (took 1.72901815 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073342683 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095614843 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074033998 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132349158 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070597605 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104687565 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102995782 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074572523 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070817517 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070601386 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070084317 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072659019 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135849628 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070436376 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070214881 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072790973 seconds)
  done (took 2.718574145 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105083944 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.17987064 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111296059 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068086348 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104704516 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074984468 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068378521 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078478978 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071780031 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070118529 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074792302 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073280724 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070423626 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073256583 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071429033 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074961371 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070476585 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074498476 seconds)
  done (took 2.87792578 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095309422 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084266959 seconds)
  done (took 1.544616922 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152934006 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103179004 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141938972 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.319223114 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127317285 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.124262399 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126521983 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.122972089 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108581963 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.11929315 seconds)
  done (took 2.802777753 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104173501 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173006358 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307987362 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118881365 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074466817 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095798027 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120174296 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080374744 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078305064 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078032378 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079601803 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074884067 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099023478 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074342381 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073148702 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074932269 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102517867 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072484215 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07383983 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074261919 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103694037 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068957996 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074479888 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073059522 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076329291 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076303506 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07073613 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068963882 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074076937 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073587277 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075679765 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092760452 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07592877 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.096043053 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072961664 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.09719861 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072875878 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072143048 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074133598 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072358358 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075163459 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074778501 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078112513 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075095294 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070271798 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072895429 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070194643 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069142649 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076467087 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069795648 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076475008 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075244157 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.097025671 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06917585 seconds)
  done (took 6.016974861 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105048872 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103646367 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068846925 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111014984 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103729802 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069128822 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102493259 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098931266 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105935459 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06847097 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067532496 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067811679 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074063164 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.077299044 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113243305 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105400194 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069712447 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068360182 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105383563 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105066537 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067397464 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099791931 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098225235 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104150808 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066514096 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068600781 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067096381 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067203519 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072260893 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073575706 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067401156 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074313703 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.07922268 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073571732 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066527432 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067237668 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067339411 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073389252 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074272302 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074426847 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072579692 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066673842 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066714762 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067772984 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067912687 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066539912 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072681854 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.073724053 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.072983429 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0669729 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067717108 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066845693 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067144487 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073260119 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072867736 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07443143 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073854516 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066738616 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066876667 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06840702 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075077177 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075070606 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073958993 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068042092 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07502421 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067159768 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075564039 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078212021 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067119389 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067365698 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067228479 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067171466 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067612729 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072774817 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072948157 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067646378 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067074371 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067333495 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075199753 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073126481 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067229232 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072161925 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066427818 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067268275 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067138329 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067537425 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072154866 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074077397 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067519878 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066948632 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066951254 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066855457 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06601908 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072173721 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073123478 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073591146 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.072817389 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067393508 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.072731357 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072460445 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067122651 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.071948946 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066323802 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066635519 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066613096 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071611711 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.070953407 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0737089 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066629704 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065833455 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071394033 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073725033 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065815939 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071711448 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074159773 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.205713079 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068294395 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079673029 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068140568 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076258983 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068366719 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076680072 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068108972 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074037382 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068413169 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066840902 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067396066 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073992298 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068222629 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067954042 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068463603 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067543853 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073542388 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077100532 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068715935 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074389588 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073618625 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068895168 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073671996 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068254823 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074163069 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06761065 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067763526 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067384841 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076068225 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06742382 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067393924 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067333737 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075789768 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067261797 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076431883 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072401366 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066861504 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0769141 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075309854 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072968333 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076112047 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068086423 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067726425 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066970497 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067717371 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072419162 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073312597 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068162514 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067612245 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072891586 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075130758 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066829788 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073300055 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073134427 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072750843 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067910323 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067483837 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075935481 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075258849 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073145416 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07312415 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073684547 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06696645 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072841312 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073052868 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067111204 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07825611 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067364853 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.076928741 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073181039 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072372124 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073689279 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074834244 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075527438 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075518317 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077437585 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067412348 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067116766 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073298969 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067421697 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06728923 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073015315 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067742933 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067737263 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.077935783 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06761986 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075996732 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067344282 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073718035 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067088768 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067974588 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077835471 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067450347 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067650752 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073345957 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06724526 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073051266 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075696089 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07291952 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066760102 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067691917 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073687328 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073588524 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066634782 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066317122 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066759655 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071324703 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.070996309 seconds)
  done (took 17.83270853 seconds)
done (took 36.900963253 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20335677 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160264742 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.192799119 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113027235 seconds)
  done (took 2.135329409 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.089125814 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097360083 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.073777042 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063966184 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078945151 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064142548 seconds)
  done (took 1.874013723 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256441681 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.181877238 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167966352 seconds)
  done (took 2.006819979 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212549821 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189309313 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.486660525 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.30010096 seconds)
  done (took 2.690782919 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.125956199 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.075546977 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061569851 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071793254 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.101739168 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.129117763 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.083025812 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104173432 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073170837 seconds)
  done (took 2.288812869 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.126868335 seconds)
done (took 12.553683477 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.227385737 seconds)
    (2/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.222067475 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.103066538 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075138937 seconds)
    (5/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.140005061 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071420369 seconds)
    (7/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.181768708 seconds)
    (8/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075342058 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074450954 seconds)
    (10/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.17492151 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.152009341 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10486962 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118923335 seconds)
    (14/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.170241447 seconds)
    (15/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.187597386 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074831102 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073512849 seconds)
    (18/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.327893723 seconds)
    (19/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07903489 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072230562 seconds)
    (21/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073880614 seconds)
    (22/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.219712745 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14350146 seconds)
    (24/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.196320185 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090127374 seconds)
    (26/309) benchmarking ("sort", Int8, false)...
    done (took 0.168862929 seconds)
    (27/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.169238109 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075086698 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071776932 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090393793 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132952802 seconds)
    (32/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.181730853 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118872601 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072450546 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.207570875 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063712192 seconds)
    (37/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.092289372 seconds)
    (38/309) benchmarking ("sort", BigInt, false)...
    done (took 0.253947984 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071894513 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171546291 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146892592 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062781037 seconds)
    (43/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.195148733 seconds)
    (44/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094181839 seconds)
    (45/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.06494973 seconds)
    (46/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.186498372 seconds)
    (47/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.147081766 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.075724961 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.145796444 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.195272893 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.162854608 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.188775584 seconds)
    (53/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.18557566 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180701635 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085991145 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.065923173 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071723412 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066151272 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.080797919 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 0.134323581 seconds)
    (61/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072229409 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063598267 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073170807 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085953728 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071983847 seconds)
    (66/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074604919 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062511426 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07544094 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.192830873 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.22317671 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.183778138 seconds)
    (72/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.192445047 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074434535 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088999675 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088592009 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18689285 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063111476 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074600741 seconds)
    (79/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137783544 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062642669 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148589317 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.315291833 seconds)
    (83/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066954504 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.233887312 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087448232 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.221214348 seconds)
    (87/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.072366724 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065463318 seconds)
    (89/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072817996 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.157428737 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064568 seconds)
    (92/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.199475502 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07248521 seconds)
    (94/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075077023 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.222658974 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071673377 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.063825718 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076980745 seconds)
    (99/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.172046678 seconds)
    (100/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.063647242 seconds)
    (101/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.145968686 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064102159 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088494764 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.148596843 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065026021 seconds)
    (106/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071419789 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085758988 seconds)
    (108/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067650937 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.081148244 seconds)
    (110/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072978673 seconds)
    (111/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064650644 seconds)
    (112/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.135801612 seconds)
    (113/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069554745 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174907213 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.221526596 seconds)
    (116/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074894047 seconds)
    (117/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074151408 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091546034 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074639384 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063989392 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.090219549 seconds)
    (122/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071308505 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071540676 seconds)
    (124/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067038062 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079382004 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129776694 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073920891 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073408093 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064133055 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071957646 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064398894 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064947478 seconds)
    (133/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065043396 seconds)
    (134/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.147684889 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064336103 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064562465 seconds)
    (137/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078521296 seconds)
    (138/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.083340716 seconds)
    (139/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063248284 seconds)
    (140/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064713543 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170387422 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146788247 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156799985 seconds)
    (144/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06444601 seconds)
    (145/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073775196 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070945744 seconds)
    (147/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073413792 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063379737 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086951757 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169276667 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148739642 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109692426 seconds)
    (153/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.062913657 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06291792 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078596563 seconds)
    (156/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06568063 seconds)
    (157/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.072222919 seconds)
    (158/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.213890301 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065157612 seconds)
    (160/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066315997 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.13823025 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09000396 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075316047 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.062551987 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064052043 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075652787 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089411519 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14869822 seconds)
    (169/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090065421 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120962557 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064794045 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064057307 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08540312 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066643932 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087412317 seconds)
    (176/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064237858 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064257846 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.0632594 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065364021 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129221088 seconds)
    (181/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.063731519 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.139755244 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154787404 seconds)
    (184/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063127044 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.062623796 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.154066744 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06403366 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070705325 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06350481 seconds)
    (190/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.189702935 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064176951 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175066128 seconds)
    (193/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06411222 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11160292 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.332101136 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09106881 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077469012 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065056265 seconds)
    (199/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070446721 seconds)
    (200/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.06471583 seconds)
    (201/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072743049 seconds)
    (202/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066938716 seconds)
    (203/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063784456 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191464819 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064124845 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071733389 seconds)
    (207/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.07756296 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071878841 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074884296 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065637042 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065413507 seconds)
    (212/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.064423197 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.064817067 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076805166 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063671463 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075289929 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066215397 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122613687 seconds)
    (219/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065264061 seconds)
    (220/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.063714044 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145946765 seconds)
    (222/309) benchmarking ("sort", Float32, false)...
    done (took 0.137636743 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065558502 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064872572 seconds)
    (225/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.068849685 seconds)
    (226/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.16303262 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07274558 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128936967 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071850042 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074412973 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073209548 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063693675 seconds)
    (233/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157743953 seconds)
    (234/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086890447 seconds)
    (235/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.080270783 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065570712 seconds)
    (237/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065042682 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065006081 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.06480223 seconds)
    (240/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070867613 seconds)
    (241/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072976365 seconds)
    (242/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06654201 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065189911 seconds)
    (244/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.064685544 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.09363273 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144533187 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067220751 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064048357 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.212793382 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075808186 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064760246 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065366932 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065014722 seconds)
    (254/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068805266 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.07899934 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063094759 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063571637 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07169682 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065371276 seconds)
    (260/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.064557187 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063393723 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065128269 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121222399 seconds)
    (264/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.065155869 seconds)
    (265/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064714203 seconds)
    (266/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067106676 seconds)
    (267/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064778778 seconds)
    (268/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064891617 seconds)
    (269/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.064486467 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062670416 seconds)
    (271/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065150357 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.147661243 seconds)
    (273/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063707022 seconds)
    (274/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075850663 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071383793 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063636639 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063848941 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064296374 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.064715654 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064344831 seconds)
    (281/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.064595993 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119277172 seconds)
    (283/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.063151756 seconds)
    (284/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.062922451 seconds)
    (285/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067023155 seconds)
    (286/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091565192 seconds)
    (287/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127488467 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088932952 seconds)
    (289/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071458944 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.141863236 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079842499 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063975003 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075430157 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.063525711 seconds)
    (295/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064460824 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065716059 seconds)
    (297/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063314003 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063790144 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071405021 seconds)
    (300/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070908169 seconds)
    (301/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064870996 seconds)
    (302/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.07187084 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08949984 seconds)
    (304/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064918098 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064267837 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064141022 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150708875 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182140571 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064069213 seconds)
  done (took 32.697314965 seconds)
done (took 34.124063859 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08600804 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088642948 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07208251 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083261779 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079417864 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097899838 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072513722 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076383002 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079342689 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077734031 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077411598 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071535178 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073426338 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073511988 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071405798 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086121237 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080063219 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07289639 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072897501 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063810629 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072851331 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064757529 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063662176 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071042442 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076241633 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071425076 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073466905 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073362455 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064900217 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06464165 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069372923 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073449509 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067012354 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075411514 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072667366 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072524319 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073976715 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077069415 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064086163 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064809899 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075355713 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064619063 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072602734 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070786957 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069565834 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072138238 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073431142 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076230527 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085896632 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068976351 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076549279 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075402495 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075007979 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070187499 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070088713 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072712168 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071299494 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086636693 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073706848 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069067582 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074869297 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074226048 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071398711 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072778864 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072240668 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076377 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076150246 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071808086 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075129131 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07215534 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064386702 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073071101 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069193934 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064360653 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075643268 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078120082 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063038283 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068690343 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072529282 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072574853 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063982745 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068524443 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063364987 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.06982607 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068850363 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070877214 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069911372 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071730493 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063467514 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072998494 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072450759 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072685516 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063417475 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075727965 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063653751 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070887671 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064563359 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064662581 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063376543 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069722942 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063839032 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068597065 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072480716 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06287527 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069021081 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077170842 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064004198 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072234751 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06322325 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063991693 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074309106 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075218862 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064372887 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068636604 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063445294 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070034164 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063646212 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063957578 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064330242 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06492268 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068813212 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064846945 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068545825 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070175543 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076287727 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064002375 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069457397 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068738137 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064599449 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071379982 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064491035 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064234093 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063087241 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07746211 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067786413 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064225805 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069945709 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067916986 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071396808 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062500775 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0721728 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069713589 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067851998 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07006673 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062457717 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074979862 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067797117 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067583105 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.202873936 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065337184 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064052467 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065038462 seconds)
done (took 12.468056737 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06608499 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.103401985 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072434708 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080613299 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076522286 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065950138 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068098751 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.08108577 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068138302 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083598514 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089331381 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085244059 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.0901809 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063728965 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064767996 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065865431 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063567877 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072214004 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078828762 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087237469 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093165283 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064582514 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073687466 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080560018 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074985813 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080344585 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06637364 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065731975 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067663592 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081156132 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089680391 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065429811 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06624519 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077480222 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078505696 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07145464 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065684371 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068628049 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065872284 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065087344 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066696358 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078777872 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068949671 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.070996486 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06632641 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066390916 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065138832 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067415036 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077657215 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.06770261 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072164147 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076118184 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066296937 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064927034 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063410312 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.06819382 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065148882 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065843216 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065242659 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064610098 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065429739 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067428823 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065854917 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065725941 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068586701 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066880032 seconds)
  done (took 6.242048783 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083122522 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093348368 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081843771 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082122121 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064819908 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065902565 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065614623 seconds)
  done (took 2.061893716 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065697821 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077178488 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080019289 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080212122 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.072958287 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082385245 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06559147 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09589777 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064313782 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076974653 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109297349 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081446476 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068572927 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07702229 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065737603 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072129015 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065485439 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073589126 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072513734 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082017936 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068880959 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093766188 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079307604 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065694973 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084915388 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069488904 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064688165 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065685872 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06601744 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066565132 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065871083 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103378127 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068400729 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076861013 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066238634 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064864242 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070875318 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068809495 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067413232 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073905994 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069941566 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066153838 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064016894 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066406982 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067784476 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06938042 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064766571 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066351696 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06614243 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076306544 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064868799 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068655443 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06837673 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070435167 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071803362 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069356941 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074127412 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066873312 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076042146 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072692394 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066448939 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073063133 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07248745 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070280487 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.104706819 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069610425 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068706776 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069794238 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066076246 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067288337 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066810354 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072442825 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064774155 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06760764 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068574565 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066876285 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068875698 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08188344 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081510485 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07824659 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067403767 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066343898 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06866628 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.081295444 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06979412 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066278272 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069187165 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064725954 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069833478 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06707244 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07157961 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066498159 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073651142 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.06785377 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069754619 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073027119 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065225008 seconds)
  done (took 8.49906516 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067606168 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066694022 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067328533 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0661437 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066287658 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066429299 seconds)
  done (took 1.955076551 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087242198 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065658959 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08052903 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065756532 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101124936 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.071660055 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071984909 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072512484 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078405697 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077826611 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071733439 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074654422 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072155089 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068074826 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071082664 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066213315 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071742589 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068851232 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077560631 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067254676 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078143603 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.06693727 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066913928 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.0765679 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067891872 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066435189 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066246884 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077883668 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079096372 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073366141 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066842325 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068059463 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073181203 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.072997193 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071421732 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073361866 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065431493 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070640883 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06773917 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068132404 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073497893 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066912981 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067768609 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071013239 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072336684 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07343003 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070674821 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069525155 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071613617 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070541226 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070515436 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066199991 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068093423 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070931993 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073709898 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072911955 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070445732 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071424694 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067101038 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073750927 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066001397 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068716356 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072565136 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067756144 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069585195 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071152248 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07367094 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067133887 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067316638 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065354934 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070851163 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065593508 seconds)
  done (took 6.66396501 seconds)
done (took 26.938429016 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.519043973 seconds)
  done (took 2.025585427 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.565976093 seconds)
  done (took 2.11028866 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.686206995 seconds)
  done (took 8.227594461 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.292061019 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.308953831 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.728367831 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129454757 seconds)
  done (took 3.029694209 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.746502914 seconds)
  done (took 2.298385977 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232054576 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223137215 seconds)
  done (took 2.020379409 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.339495442 seconds)
  done (took 1.884045135 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.112194538 seconds)
  done (took 2.652821674 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.220574007 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157302957 seconds)
  done (took 1.93122466 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.486559592 seconds)
  done (took 2.034680577 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.119619408 seconds)
  done (took 5.668684481 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228451232 seconds)
  done (took 1.818124925 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232043418 seconds)
  done (took 1.785227025 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.765583381 seconds)
  done (took 3.313004442 seconds)
done (took 42.353458348 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081735212 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084492218 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084503166 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080084622 seconds)
  done (took 1.858026664 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071964239 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068044541 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071875549 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072010983 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070457896 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071128272 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071368393 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068951415 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069671162 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068377585 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067055247 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068583486 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07072428 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068398288 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070656253 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071554879 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068263984 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068019446 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070950669 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.0681539 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070608327 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067989616 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066750337 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069001668 seconds)
  done (took 3.221210692 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076946776 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071207839 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074183245 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070602482 seconds)
  done (took 1.84759869 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074556378 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083121911 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083946348 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088724852 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075380281 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074702368 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080655502 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082127991 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064785421 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.083752561 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066626279 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065190106 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065712739 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083675676 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080821345 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06147378 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062683077 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074732409 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074091891 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076976665 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067714237 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064267965 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075544531 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074214517 seconds)
  done (took 3.34256367 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077441914 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065066643 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078217947 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089501955 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090995266 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064443321 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077001351 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091682959 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121635462 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064146085 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070873707 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064558863 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102136353 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064291478 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.0784795 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104881857 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106981826 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068096276 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096222676 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064445393 seconds)
  done (took 3.204835443 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075109549 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068386263 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069609105 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064792714 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075864104 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072010979 seconds)
  done (took 1.991980719 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067300683 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067191124 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066857046 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06551687 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071181642 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066649949 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065294609 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066935951 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066685811 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065825301 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065521873 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065024074 seconds)
  done (took 2.358737767 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.163854627 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06746851 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069539576 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067117603 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070014046 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065339086 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.0794389 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06709853 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082477848 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06543568 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065936032 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067571804 seconds)
  done (took 2.492380268 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097411221 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099143306 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142260416 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113869535 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091620904 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.092428491 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.154992692 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.13283838 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113942661 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068164716 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084851675 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098094564 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096850979 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12998732 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109648687 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071378275 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.110020234 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078522435 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111338837 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119502613 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112099138 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119353927 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090443889 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095751351 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103834585 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114950756 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.06992116 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069044765 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1465866 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.098294904 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.090496952 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097151925 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106252347 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.067723548 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084828845 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.103829637 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081092849 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113384838 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.087614214 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096607611 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07893261 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128163276 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10309731 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101134624 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129305356 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090916134 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108327753 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104053082 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080364672 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.116580135 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096724894 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088818595 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078367271 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.15590199 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08739837 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.108259939 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108989975 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080202996 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085353323 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098719982 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.12607568 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.103416835 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111039694 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.25408857 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.090360852 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090284254 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.128927462 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083457043 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098203247 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128261583 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090606173 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074244596 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.094044055 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068352461 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095046754 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104386086 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089697011 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109822791 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075418303 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125767563 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106320568 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071382387 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.11509211 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096576848 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153355734 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092761963 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098274999 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089925207 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.148362567 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082768414 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078916058 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0961277 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1264312 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092003194 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093619891 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125948531 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09472252 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085817272 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074011346 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.087203091 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099387557 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105246331 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099802016 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087396676 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085456292 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094089118 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073187261 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078872088 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.09892067 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083443784 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.122150191 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107023168 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121201865 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077790213 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102989398 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.094445645 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126783233 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115487037 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082176563 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106062032 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138680421 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.111940938 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083599787 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098133033 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10837919 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104632373 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09431695 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133499908 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113500731 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086503981 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090359783 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.242618996 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.111191356 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153524274 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088370245 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103177254 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.137090394 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.111654267 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089298837 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082883826 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093475488 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104148579 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.138839468 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.094849679 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070004946 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090273025 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128395771 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075258244 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097381841 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.091527091 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081737317 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079441751 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067583257 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101979522 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132952814 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111692638 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096840693 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.101439795 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068272083 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096996343 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102772354 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140390403 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115369236 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097063254 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.096743828 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102845549 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078378757 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.130668241 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.129999752 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089797726 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089112037 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120937094 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.093956827 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102176365 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111917549 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102002412 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.098826118 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139036168 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119114858 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.121929691 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103572138 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122876489 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08047911 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113990013 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072894313 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101424237 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075444958 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103904761 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077108921 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108203724 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077685876 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09647172 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.06754728 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07272661 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.262644704 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088279828 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084755126 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.132862648 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.12828252 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080783696 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100059595 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098261414 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099713358 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.107000155 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.088785678 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089607683 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077464799 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079019916 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097218885 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091620071 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105296494 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077207448 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073905679 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136729586 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102742096 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088926202 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092613444 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.118342096 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087528213 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085797544 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102139634 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.135762665 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115374576 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078654989 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089685777 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.067972028 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.083217859 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074370528 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10689054 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073316751 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109283957 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067637664 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.126980234 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085387701 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099214035 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095037129 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126759525 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088605558 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126285394 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085020938 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105300695 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092152955 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093373481 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.107310617 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.094260931 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103749972 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109264149 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091720724 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087876929 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119167807 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103684557 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115688739 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104313023 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133385225 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110024366 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073952166 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102041695 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097827869 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143355615 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097796554 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088526277 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093514518 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100492986 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078799962 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.292854602 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085968572 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.08597848 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110907569 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.087602598 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095681584 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075201111 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.099479772 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092807964 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111227948 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.096992385 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.091470663 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107426238 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108212105 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084832899 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085514337 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121546193 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.126020523 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099933242 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092493499 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087326768 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096340041 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092728723 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.106719876 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078546785 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07484904 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.067708744 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.071262004 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.115663328 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10588048 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097339492 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096665065 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100750477 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070731826 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086251705 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088218711 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081933011 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088060087 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.11302742 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101450036 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126503532 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.099037523 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084811546 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.140256601 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12570701 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083473305 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090244812 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09887038 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075477478 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144961409 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118178625 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076353305 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081675641 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075918817 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082940376 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070351235 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101743533 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101982967 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074701334 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.1009586 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095927817 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.121843353 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094802775 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074740549 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.07804255 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073696789 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074775162 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100383537 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076341376 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075058343 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12603616 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099877711 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103863684 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080860473 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.226833211 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130196173 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.06914632 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130889292 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08155834 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109358979 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079686755 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078471479 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087874497 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104077816 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104242834 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110163386 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069512858 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101147028 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15318198 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07432837 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07452784 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073758461 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108857126 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085237406 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140940122 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088067357 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090369985 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07554914 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125522259 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101124242 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081826402 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125887468 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078457661 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.069841129 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084622974 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.109391145 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071407449 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073796522 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112644825 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.508042721 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089317352 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074433247 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087605743 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125587022 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081672386 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106082664 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.116081088 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104790074 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.183592419 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072912248 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089030609 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.101705626 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095915315 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089938443 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07837509 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086712619 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085627435 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.083600428 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104546273 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078816407 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089891879 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078605598 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.101680961 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.127365589 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084912515 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.09960857 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085843871 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088821851 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09661845 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109111822 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103644638 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.085156623 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08556818 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10584632 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081114525 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.231251855 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098876052 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076689573 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077262165 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115353783 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.082265469 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092998573 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102452013 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.088334422 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112110834 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115115657 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109970909 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09605417 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078070934 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084485657 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.08609877 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072770807 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077189041 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073675532 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.070136602 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105422654 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084069389 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080095862 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.098135412 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.108299424 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098443062 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104182424 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088384405 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096502135 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09871099 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.123963318 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14332162 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096515332 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121178198 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129457359 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075591214 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074597462 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.079616714 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129225795 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.080565385 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090737717 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.237230677 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076975059 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080054296 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089780229 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105280258 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082204222 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078544481 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097334465 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108670027 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083012081 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079789654 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091676953 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106241186 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.126235275 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087811505 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073972524 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107525175 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100867538 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121278234 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.071550179 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079526284 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.126636674 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086116409 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103508197 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078472483 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124529511 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129296199 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072727152 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086957768 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069239737 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085229213 seconds)
  done (took 50.186204224 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.147135687 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.140324476 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081824305 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.096862286 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.185780094 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.195369037 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.117470897 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093832652 seconds)
  done (took 2.77940291 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066750246 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.08150037 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099506061 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082353417 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065656976 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067259227 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.197309863 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079965704 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065403428 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104598708 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073879341 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067718831 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.355942721 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065324186 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066083001 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073553462 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066407472 seconds)
  done (took 3.350657079 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367020087 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619824226 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.31812387 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073846679 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.924692402 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088180704 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.191776271 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137613102 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080990236 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538707162 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369389312 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131060943 seconds)
  done (took 18.523492023 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074922724 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073768688 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.0771726 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07671329 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073297365 seconds)
  done (took 2.053573268 seconds)
done (took 98.786914791 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.0819665 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.168696028 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066675429 seconds)
  done (took 1.946770138 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081652546 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079778707 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079386025 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077461508 seconds)
  done (took 2.000443483 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073991051 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075214332 seconds)
  done (took 1.824625905 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229917184 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.162367196 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088466512 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080991823 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079134841 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079252971 seconds)
  done (took 1.924519921 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07075355 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070320902 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070651528 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071275525 seconds)
  done (took 1.957849128 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066907985 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065283058 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067682075 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069774047 seconds)
  done (took 1.944492641 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082222479 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077588911 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077504693 seconds)
  done (took 1.917057831 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107294918 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094904245 seconds)
  done (took 1.880301013 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078828649 seconds)
  done (took 1.761565361 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088392664 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09490172 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138004687 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.104831429 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137716742 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.122900788 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075346135 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075889651 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072133958 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070931029 seconds)
  done (took 2.661016119 seconds)
done (took 22.059159782 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077853894 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363315639 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358502678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085394234 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669924656 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355308097 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96928221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089014948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097106419 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066800079 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083150932 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648243948 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960178205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322991735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943984078 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320818467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649204917 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067547329 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066432934 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067159706 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952723507 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066572515 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066592844 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067450955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649086085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371679445 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067577913 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319297168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066330566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068810165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354036207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067676823 seconds)
  done (took 16.041507359 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068849939 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120368778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071812948 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08258237 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069205093 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068452843 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070328336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067648603 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108397191 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067206682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083887567 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066722903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070679709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069228287 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08725045 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067895765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069133362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068949928 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0704711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068951632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085639125 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067667205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068477724 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068595549 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068374199 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080580665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069041957 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067920909 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068352002 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070379781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071331329 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068973632 seconds)
  done (took 4.071939193 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120830819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124276379 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072155398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107594159 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115881405 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068825423 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148307116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089001568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1117277 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067201235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084659751 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067705994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103191567 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069137005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088051036 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068119129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069435082 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068798331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068210059 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068422371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086341242 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067198243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06867654 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068362038 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068666785 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082279483 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068845773 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068393666 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068239991 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070029555 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072305176 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069146399 seconds)
  done (took 4.341398514 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069118249 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070480709 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078320291 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079490949 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066165811 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068496708 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069262827 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065937467 seconds)
  done (took 2.269935116 seconds)
done (took 28.42967612 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078530768 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067141908 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070347021 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086731676 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072808966 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069608521 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063952867 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073543766 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070602051 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073954449 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07187057 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066217085 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070215411 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.0639298 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070741657 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065324611 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071555288 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06958949 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070030406 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.071251063 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067989805 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071501563 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074651497 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07011378 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070744397 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070471414 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07481177 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071537086 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066214952 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068828136 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067553548 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07918192 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07223058 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072050918 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065858539 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065544179 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069417495 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068049776 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071764287 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074240974 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067837155 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074383894 seconds)
  done (took 4.632704781 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086633897 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092671746 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08437713 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08164852 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.103544712 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081399077 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089507092 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078036162 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076507305 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087390078 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072387069 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077501338 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077942343 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07178584 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077859599 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07326594 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07835644 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072605266 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077999289 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077917795 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089161311 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071667037 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078368205 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078732273 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073888606 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.07889529 seconds)
  done (took 3.800721178 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07125548 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086623075 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090768474 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138440666 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10814745 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081441702 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08112987 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101361942 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099865947 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06758298 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071094673 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092717659 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095335321 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073675404 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105267686 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084438367 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078237874 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068994521 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073542851 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101810953 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090149102 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086585226 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100611913 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086955762 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066992316 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07649859 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073975875 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081853344 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075417357 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079349746 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070918603 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070679913 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067710538 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078646969 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070360026 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064758082 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088962812 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079126893 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080656217 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106602253 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076297238 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067929282 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095990109 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130181363 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066396319 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069492972 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070280944 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078618526 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06798599 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096194103 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084116528 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066350168 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085468523 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068197589 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067508465 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08165938 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067990236 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068790896 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078321855 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072691971 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08688087 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071822123 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085792215 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066848803 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077570887 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067779781 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06823911 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065498121 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101722487 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074080512 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1170037 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067365421 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06501868 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078204257 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077477835 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072980757 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066345477 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084585196 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078325308 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070077468 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078092596 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069129626 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069680757 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102149239 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065611729 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064487578 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064590154 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068877359 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069732833 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067741657 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079826412 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066496646 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069954532 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080431506 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066532646 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06760601 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068698993 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067884499 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066432823 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076701209 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070573404 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068214252 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079066383 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067858163 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.06973371 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08130196 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075523987 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06627748 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067311707 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068790083 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068623996 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070872476 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070353987 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06860174 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073461533 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074107588 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072099799 seconds)
  done (took 10.830265274 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160666146 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15144106 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068652986 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145856702 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075023651 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070874309 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145970617 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085672271 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067334517 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068715428 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066629207 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094525868 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089747994 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.100997881 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071641934 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068054003 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093923213 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098913326 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148512051 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144161906 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090362223 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075150157 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069638451 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06837395 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068595438 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076294889 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083361936 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07521603 seconds)
  done (took 4.374351954 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074640567 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109782286 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07089359 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091206629 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086114586 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.0675148 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069429258 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06859495 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084661989 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07397386 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066958595 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071503886 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071120611 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069533061 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068124572 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073763452 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073751132 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066176903 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070996848 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07187483 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077802608 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092021308 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071086905 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067032432 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069205866 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067184401 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073789053 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.07663874 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06648979 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096617016 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064495514 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071794554 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081234857 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068614251 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066623759 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067729494 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067855603 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06804054 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068001718 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065373625 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065110357 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072094318 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066140094 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073275966 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08108654 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074385215 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068571226 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069682958 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069757278 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064232147 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069977925 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070660574 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069772718 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075173714 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071040809 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069486387 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070682723 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095419801 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073349621 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066573713 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066458188 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065734469 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068825608 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074910149 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083434065 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068928079 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065652055 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067228753 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072678486 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081044835 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066671573 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072135139 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065116505 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067647359 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069315422 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069890575 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06830903 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066182281 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066884187 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067593676 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067014126 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066825667 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066999569 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069554351 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064822804 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065718095 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067775331 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068161906 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073182843 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066023572 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.0700256 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068641354 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06617561 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069943105 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072293635 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069842021 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086010465 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075627224 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067740609 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065210236 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081917331 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068903197 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06614589 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072879689 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071454864 seconds)
  done (took 9.269754201 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089594566 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06904863 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086890092 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093445376 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077604853 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072546604 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080837525 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068045156 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083355727 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06685996 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076626967 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065678958 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079703299 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075696748 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069140567 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077283446 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069714641 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086764524 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082245711 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065839959 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075585133 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079035582 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079662728 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084105807 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084215469 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08492461 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078821762 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069635569 seconds)
  done (took 3.925972959 seconds)
done (took 38.526672438 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.791498807 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.956354303 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.781072794 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.984921381 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.851323879 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.888981643 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.92625606 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.779001069 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.844780098 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.805718904 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.015639664 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.180993589 seconds)
done (took 66.57734379 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.793999791 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.936888479 seconds)
    (2/2) benchmarking "String"...
    done (took 1.989173971 seconds)
  done (took 5.640838738 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.913645141 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.427018162 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.045265647 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.779181956 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.784966998 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.208249193 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.544157456 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.220959326 seconds)
  done (took 30.72496689 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.830484235 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.005150904 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.426349193 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.457994999 seconds)
  done (took 15.471002836 seconds)
done (took 63.345980348 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.784478948 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.778289215 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.793619478 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.817951303 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.79588456 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.781725893 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.781216723 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.782106029 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.825943766 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.896677233 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.783384027 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.784780527 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.779309588 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.815449867 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.447335604 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.839093977 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.801256914 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.795214532 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.802892792 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.795245734 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.783472754 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.783507999 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.241271338 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.959858946 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.387240585 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.997986598 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.305886386 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.177596385 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.781962175 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.795215588 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.864611716 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.032282585 seconds)
  done (took 204.509825448 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.779828598 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.603836397 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.68653179 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.789929677 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.106334894 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.957258296 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.880533983 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.190605755 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.782753342 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.791901097 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.940573371 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.783519837 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.978685694 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.797902876 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.821420858 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.868522203 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.934065095 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.983500678 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.825109866 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.931590455 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.785009848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.776960948 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.742012601 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.916199272 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.800345999 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.833098139 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.796561918 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.796831856 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.970784338 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.914064888 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.782740475 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.804500235 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.942461143 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.651087895 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.784052798 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.793327974 seconds)
  done (took 169.241583392 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.972820432 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.790134023 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.78376758 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.782276084 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.832783603 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.904746952 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.783743556 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.43498768 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.788131594 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.578546742 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.786822747 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.780392312 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.782294496 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.781666824 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.794768399 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.863489094 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.782509925 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.798501865 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.785466554 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.808726408 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.785038162 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.783195428 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.785975783 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.786298273 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.783503888 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.781713867 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.783683543 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.28075667 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.928099587 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.024006248 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.785354072 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.783888977 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.796258594 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.878716426 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.784090649 seconds)
    (35/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.784392503 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.877856486 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.835079194 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.89360776 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.788298964 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.001767353 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.8587778 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.784438378 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.784192048 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.847945026 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.796475376 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.785153137 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.782589973 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.789841278 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.849435946 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.784530038 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.024818103 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.785191996 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.906064498 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.265280907 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.7844307 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.786185914 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.784302039 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.391441684 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.78875079 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.78474169 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.790323419 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.790699389 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785476781 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.783007894 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.16990418 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.856261773 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.916508539 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.257328407 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.786216309 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.018597574 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.982779053 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.788178481 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.786409779 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.785885128 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.788993059 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.786968025 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.7874644 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.909994025 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.79684434 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.910048715 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.867023802 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.908677395 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.790181028 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.792725494 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.619886587 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.859744353 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.820128549 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.617448128 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.787121201 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.161455832 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.56039754 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.791105264 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.790243691 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.800946533 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.788895451 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.788268397 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.791122 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.868739536 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.788039322 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.909065555 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.514698156 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.407524728 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.788450115 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.787145107 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.792479004 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.869291716 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.790942138 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.911936949 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.792587945 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.854337867 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.795935369 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.791403379 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.889584366 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.790717886 seconds)
  done (took 403.03442607 seconds)
done (took 780.529051935 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.383655643 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.35168812 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.439614999 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.36997916 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.341698526 seconds)
  done (took 13.608502541 seconds)
done (took 15.329429837 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.803788589 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.796445543 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.845906547 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.873422972 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.804864281 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.805406197 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.869685854 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.808483812 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.838493899 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.843170842 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.872704768 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.874436785 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.811376703 seconds)
  done (took 25.572348949 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.795381466 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.92858913 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.01308361 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.827849045 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.796901677 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.007948052 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.853064111 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.926322882 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.928327517 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.015043557 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.015438443 seconds)
  done (took 22.832648406 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.796566084 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.936734085 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.007241687 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.833538293 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.798198711 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.008065983 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.860535941 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.926902607 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.937688567 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.011628235 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.024781173 seconds)
  done (took 22.873583259 seconds)
done (took 73.000822452 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.795431275 seconds)
  done (took 3.518013746 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.80919423 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.988803828 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.792426019 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.789626257 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.795648866 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.791347756 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.791595137 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.793717409 seconds)
  done (took 16.27862814 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.792526571 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.793071654 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.793383472 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.792286255 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.79244816 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.79285597 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.791267601 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.793188889 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.794829598 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.791286595 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.793938672 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.794437578 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.793866398 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.792858566 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.794354895 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.795259076 seconds)
  done (took 30.420159859 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.795186158 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.794471461 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.795675545 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.793338902 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.794526557 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.794901721 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.795849303 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.794306973 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.79602542 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.795756258 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.796778366 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.793637746 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.793935133 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.79630952 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.793904871 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.795353778 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.796907706 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.795008908 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.799888355 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.795018515 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.795148853 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.793873932 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.79550292 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.794934906 seconds)
  done (took 44.815751042 seconds)
done (took 96.761917106 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.442976965 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.830152353 seconds)
  done (took 10.001655077 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.797032442 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.796806799 seconds)
  done (took 5.327131456 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.795275862 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.792893725 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.794696899 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.795218439 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.796031113 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.797081542 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.796018418 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.797554218 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.794966051 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.797129363 seconds)
  done (took 19.685302147 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.796379267 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.7968783 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.796692367 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.797883756 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.796660598 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.797969456 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.797709656 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.796968335 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.796489537 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.79701591 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.798587744 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.796815828 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.798917256 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.797748781 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.796215878 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.799464547 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.796307268 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.796181904 seconds)
  done (took 34.080403361 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.797457128 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.797729899 seconds)
  done (took 5.323596041 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.798084488 seconds)
    (2/7) benchmarking "second"...
    done (took 1.798276694 seconds)
    (3/7) benchmarking "month"...
    done (took 1.79422442 seconds)
    (4/7) benchmarking "year"...
    done (took 1.796477701 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.797631687 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.798950526 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.797914827 seconds)
  done (took 14.312507305 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.799464346 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.953209267 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.005206905 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.402362702 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.798589518 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.801986825 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.64184346 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.800577135 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.802480756 seconds)
  done (took 19.73703058 seconds)
done (took 110.194119228 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.597294453 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.799073105 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.044337609 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.911114164 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.820224724 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.094060198 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.806021142 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.412627445 seconds)
done (took 42.214656704 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.828383972 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.797270956 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.836826658 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.837291681 seconds)
  done (took 22.202793765 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.804901992 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.106099302 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.820123245 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.71001755 seconds)
  done (took 22.187194776 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.176376703 seconds)
    (2/2) benchmarking "read"...
    done (took 2.138324159 seconds)
  done (took 6.051837318 seconds)
done (took 59.003527808 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800126 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.798629251 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.797103216 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.79870349 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.799986742 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.798638323 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.79828338 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.799876704 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.799426755 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.799079812 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.799235952 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.798248686 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.799264121 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.799093702 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797886929 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798262407 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797581312 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797744039 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.800117598 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798878688 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800115662 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79974619 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.800138013 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.799375754 seconds)
  done (took 44.909182106 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.799451162 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.800442653 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.800682476 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.800958689 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.799485912 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.799094689 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.799034808 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.801711239 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.799193717 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.799596059 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799628986 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.800132558 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.800822905 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.80113645 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799678261 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.799971191 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.80177438 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800604147 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800047896 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.800198772 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.800446154 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802707495 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.802115872 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802718763 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.801375919 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803617044 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.800453079 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.803196332 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801410706 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.801858381 seconds)
  done (took 55.757365145 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.80182252 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.802936059 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.803609241 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.800968596 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.802584177 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.803728684 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.800840085 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.800716555 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.802828332 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.800449744 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.803022876 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.801020151 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.802296852 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.803018192 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.803786879 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.801998654 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.803302527 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.803583249 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.802766691 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.803815653 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.80171959 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.801666869 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.804043177 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.80460928 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.804147986 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.804168837 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.80410474 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.803927496 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.804477039 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.805073814 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.803982955 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.804810626 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.804338192 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.806822263 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.802986582 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.804749425 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.805188411 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.803747621 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.805008731 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.803886172 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.805036708 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.805223388 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.805190142 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.803280917 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.804482734 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.804808074 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.805057335 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.806226681 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.804577492 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.805667777 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.805331884 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.802620836 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.806449076 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.806938595 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.806282033 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.805390523 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.805962855 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.803392911 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.805120007 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.806962853 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.804738407 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.805958181 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.806169455 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.805969833 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.806290186 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.807294613 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.805338959 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.805640663 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.807048581 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.805662803 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.807743927 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.805691563 seconds)
  done (took 131.649028123 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.806693084 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807250417 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.806737882 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.805706623 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808478278 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.807265952 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.806356235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806546555 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805918063 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.806307487 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806274248 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808877518 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805256532 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.808492219 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807732578 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.804880884 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.80829066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806996351 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.809498731 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.80924357 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808159211 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.808387138 seconds)
  done (took 41.497773803 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809081402 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.808130199 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.809523004 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.808715205 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.8062741 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.808043426 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.806685071 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.806784665 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807626222 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808289605 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808081659 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807016504 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.806956154 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806773137 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806928239 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.807437049 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807785296 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.806998019 seconds)
  done (took 34.27965072 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.80663997 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.807149507 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.809258652 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.807409656 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.80617316 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.809475868 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808426595 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.80911689 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.809367006 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.808893978 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.808148518 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809698847 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.807125628 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809527833 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80927353 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.810749881 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.808932263 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809876878 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808840099 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.810407692 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.809706678 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.81056953 seconds)
  done (took 41.537413606 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809807041 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.810853431 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.809895582 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.808828399 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.811699523 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.811066379 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.809536322 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.810070851 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.810249129 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.808798641 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81087356 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.811593042 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.811096726 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.809296555 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.80862912 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809734244 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.809506504 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.81369555 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810959704 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.808589858 seconds)
  done (took 37.949383746 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81384958 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813425678 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812901568 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815145379 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813753632 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.815648828 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81545869 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.815399826 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813807697 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814022571 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813762648 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.815745465 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81478988 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.814333696 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814845172 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81423223 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814462182 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816818785 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813974492 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814969468 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813228291 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815803524 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815609901 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815477534 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.81481669 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815261785 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817117059 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816048394 seconds)
  done (took 52.560967913 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811448721 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.814481765 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.811939889 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.813421289 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.813015548 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.811795137 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.811617254 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.812274055 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.813396518 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.812212957 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.814291553 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.813995747 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.812369223 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.813392691 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.813220165 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.814278136 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811703087 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.812577197 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813690209 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813476305 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.812940183 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811406852 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.814375725 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.811854202 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81350804 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.813352186 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.814061402 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.81302282 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81457239 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.813072024 seconds)
  done (took 56.138254418 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.833630968 seconds)
    (2/2) benchmarking "in"...
    done (took 1.835670066 seconds)
  done (took 5.41578496 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.815917231 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81356712 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.813817186 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.814304744 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.81544225 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.815194802 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.813876716 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813331388 seconds)
  done (took 16.262490195 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.814221252 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.818073452 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.815296128 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.815762992 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.817774801 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823275971 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.818067484 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.816470487 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.817506926 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.820205736 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.821930615 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.818682689 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.826535683 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.821630822 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.815841279 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.818574702 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815700207 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817407756 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.817454835 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.81717478 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818462144 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.820342773 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.816253796 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.819898152 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.815706881 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.818921334 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.82649896 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.818843054 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.819662247 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.816870794 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.825755913 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.816565395 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.818585584 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.820302545 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.818596109 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.816840606 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.823477139 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.820322794 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.818404026 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.815397847 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.819952521 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.819055568 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.821662966 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.824308192 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.819023478 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.816389465 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.815468507 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.820002373 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.818602902 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.820575747 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.82466052 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818422573 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.817560296 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.816925532 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.820065232 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.819667914 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.820765117 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.820809323 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822972584 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.825047966 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.821721502 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.837679647 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.828373312 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.820971458 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.820628173 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8273288 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.844696287 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.818759825 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.821065484 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.817967638 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.82676398 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.818436111 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.818043514 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.817514145 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.833022385 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.828811735 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.820075292 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.817573663 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.818294391 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.821251991 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.820084392 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.822078179 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.819419939 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.822189246 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827640003 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.840847909 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.821809113 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.820863593 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.821721513 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.821361855 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.826556503 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.823034406 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.821092287 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.819229852 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.821376905 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.824455576 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.821704301 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.822369592 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.821776146 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.830897963 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.819176327 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.820173298 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824796459 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.831494629 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.819689282 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.823833927 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.82215952 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.823506225 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.827953412 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.823806985 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.823101407 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.821422909 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.821893612 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.826811492 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.821131652 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823794995 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.83119583 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.828049161 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.824869012 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.826184785 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.825276828 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.824326829 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.832201602 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.846994546 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.818455067 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.825854308 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.827860011 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.835397664 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.826090604 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.823194363 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.824866337 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.821020826 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.819874679 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.823580515 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.819615449 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.824347903 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.822682987 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.825806894 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.821774669 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.824626279 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.827542777 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.824480547 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.825417586 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.824796517 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.828193442 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.826002389 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.825264742 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.830649797 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.823985367 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.826399505 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.823627685 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.824933424 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.826475964 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.824126262 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.821903198 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.821884628 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.826607911 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.825543529 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.825600761 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.826104532 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.823380144 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.826349161 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.82746885 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.826598839 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.827554587 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.825763929 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826647935 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.828175635 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825908491 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.8252636 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.827655163 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827787499 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.830304852 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.826021857 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.825969954 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.826992498 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.825507668 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.826178551 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.829997052 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.837544695 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.830856631 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.832739697 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.825525516 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.833742608 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.825937058 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.82638876 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.826286527 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.828090085 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.827973042 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.826077554 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.826354277 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.830472146 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.848151825 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.834724165 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.827828682 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.829428388 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.832893649 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.829879939 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.833147082 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.824383245 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.827156439 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.829622971 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.828520044 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.830021357 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.824991381 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.829528222 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.82615197 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.827403297 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.831864782 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.828934792 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.824978537 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.829326449 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.826503698 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.829510164 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.828178362 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.827452175 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.828516033 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.827049553 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.834589658 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82972436 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.825152371 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.829825099 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.829291191 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.829474859 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.826908358 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.829298536 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.83185896 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.828097116 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.830880014 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835336694 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.830171469 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.830199507 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.830141281 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.826917749 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.82937917 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.828889423 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.831084979 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.83435133 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.829797949 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.828696731 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.833272105 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.828651699 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.832159094 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.830159643 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830303975 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.831671048 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.829320581 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.832840739 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.827098616 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.83664423 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.827856667 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.829513186 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.828512372 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.833205997 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.831785941 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.832213441 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.833051099 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.832472474 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.838983437 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.835511585 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.831244737 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.833621121 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.832390462 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.834556223 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.833117829 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.829154931 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.84329013 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.839448438 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.828078503 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.82858786 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.830872918 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.832523577 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.829380289 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.832324878 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.837045722 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.833376994 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.831990777 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.833453844 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.83183834 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.831945871 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.838713042 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.831426899 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.833557863 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831473593 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.832597859 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.831661613 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.82862829 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832943982 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.832616873 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.83224908 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.832985828 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.830444456 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.8337201 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.830779955 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.842418165 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.832194851 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.833287414 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840961409 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834857824 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.833630226 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.831856971 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.83059859 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.833500112 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.830940618 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.831776855 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.833195838 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.834079191 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.8353548 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.84173737 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.834041361 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.842469798 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.834388753 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.84249963 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.834932986 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.831382448 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.836441294 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.834221633 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.840557188 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.830797827 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.834606566 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.841116675 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.834789718 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.835601339 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.838771394 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.831233334 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.834072264 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.835825023 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.835366571 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.837460238 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.8362759 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.833025976 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.835936798 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.832518182 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.834819895 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.836969501 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.836041034 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.835631224 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.835175148 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.832735562 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.836655064 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.83603709 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.836685564 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.836304831 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.832691041 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.833622236 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841400591 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.836595515 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.836024501 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839567916 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.834137343 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.842899456 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.837197157 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.837720881 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.837423917 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.832830428 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.838594381 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.834550233 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.836488293 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.836452778 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.834314752 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.839323762 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.846409957 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.842760787 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.839095398 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.83788948 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.837648265 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.835984694 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.844205905 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.855144722 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.837191071 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.835790601 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.838992454 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.841753448 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.836916927 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.84161472 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.839222719 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.84598629 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.83641938 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.837188876 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.84004767 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.847112377 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837791082 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.835550585 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.835524427 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.84084173 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.840425466 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.834391925 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.83868199 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.840448944 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.837874759 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.846267262 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.835329215 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.839377855 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.838128326 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.836983983 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.83925359 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.836785648 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.838267844 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.838872822 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.841247357 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.838437764 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.83909452 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.843323615 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.837820912 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.839498343 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.847024029 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842261101 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.839587872 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.840840106 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.840882946 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.840054402 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840000459 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.840145525 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.841468063 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.83639509 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.840436221 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841006291 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.846183878 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840560295 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.837477368 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.837610677 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.843084861 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.83985989 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.841755693 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.839107177 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.847953842 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.841424556 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.84822367 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.847732412 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.841247429 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.841874141 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846522073 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.849256609 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.841462798 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.840412737 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.84115289 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.842276956 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.842125716 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.841929633 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.842931815 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.841895924 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.84699555 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.838040981 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.84154669 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.840513209 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.83688958 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.840198593 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.840480565 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.84511849 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.838955678 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.838138884 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.839652869 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.839583595 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.841053745 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.842717069 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841430367 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.83990541 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.842582359 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.842433294 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.844110362 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.840058297 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.838960683 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.841929117 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.840048013 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.840257812 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.842887596 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.842217709 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.839454667 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.843364087 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.849230099 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.84074723 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.841708088 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.843095441 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.845536518 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.842806148 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.843273245 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844032899 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.840451601 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.849919073 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.8407615 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.843285826 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.842555697 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.840718533 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.84657282 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.841856458 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.847700624 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.84251814 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.843730022 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.840839145 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.84411918 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.851795607 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.848607438 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.846737877 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.848208663 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.848514039 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.842756235 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.841198211 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.842284401 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.842389027 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.84339419 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.846036386 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842906575 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.846071728 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.846134909 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.846578518 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.84644633 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.846750948 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.842525551 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.84338514 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.845940277 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.851673135 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.854364088 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.843577663 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.845740028 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.84586632 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.847082226 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.856173586 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.846183937 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.846876752 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.845623909 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845246966 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.847510551 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.851199787 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.854473215 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.848244575 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.846883255 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.850230682 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.859804232 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.846724313 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.85304886 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.875642013 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.846400357 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.846090282 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845952645 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.846940253 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.849366399 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.850583562 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.8459796 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.852461861 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.84661247 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.843351212 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.854634936 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.845896969 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.843527003 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.84827433 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.848214022 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.850071239 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.847013375 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.852519156 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.849592553 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.844948488 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.847401445 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.850084819 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.845185174 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.846011291 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.845071609 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.847939108 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.845646445 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.848341446 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.854265502 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.84906792 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.848285142 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.860103727 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.858547196 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.848979778 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.845092194 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.84803768 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.851546848 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.85135449 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.847122135 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850506531 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.853562357 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.849287984 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.853950219 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.849821765 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.848371035 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.848267803 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.845352864 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849463782 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.860551601 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.85658397 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.848929651 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.85040357 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.853164521 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.847514171 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.85484609 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.854073369 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.850128463 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.849795907 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.848759482 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.847364355 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.847570906 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.846898403 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.851542265 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.855229602 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.850321614 seconds)
  done (took 1095.171887292 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.84635661 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845793851 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847337399 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.847322497 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847284159 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847420282 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847880538 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.847644042 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.846835535 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.847817595 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846892348 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847146076 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.84669324 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.84829707 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847803638 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.848963418 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848735227 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.848430207 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.847830039 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851071793 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.847983453 seconds)
  done (took 40.581049655 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.848548746 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.849122086 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.848015102 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.8475552 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848192597 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.84828627 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.848678223 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848753743 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848924881 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849223536 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.848056189 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84938202 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.84835907 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.848554269 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848446071 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848410813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.849071517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849320436 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.848358241 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.849729451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849419931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.851570231 seconds)
  done (took 42.456499714 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.852503452 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.853305691 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.851754774 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.850267966 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.850533538 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.854198096 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.851110622 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.855811447 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.853838351 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.853993231 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.859253613 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.857680427 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.851141638 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.856953294 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.851099251 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.852378145 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.995540547 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.854480301 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.855950234 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.851841067 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.854915432 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.859212162 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.852273663 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.851540873 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.852995325 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.855027062 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.853266568 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.851786778 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.852569817 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.855755556 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.859711064 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.851672411 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.854589627 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.857055888 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.854753573 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.856818136 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.859251727 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.855613131 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.852855206 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.853714953 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.863533565 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.875814276 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.853460842 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.855733998 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.861429005 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.853042799 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.852676678 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.857608555 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.859634258 seconds)
  done (took 92.82627269 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.852598852 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.853137806 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.852691131 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.855683399 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.852811353 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.854344928 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.853382716 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.852999138 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.852326375 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.851939767 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.852579419 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.852552744 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.85353663 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.853802576 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.85472491 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.854684499 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.854152084 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852277752 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.852027088 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.852357285 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.85375551 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.85179338 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.854509556 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.852709473 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852483367 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.853527586 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.854051759 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.853666348 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.852291224 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.853484012 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.853935189 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.854509389 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.854980374 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.857371414 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.85710869 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.855520597 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.855110275 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.8562396 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.855722106 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.857353771 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.855805087 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.854655717 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.855747463 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.856760335 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.854783906 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.857374939 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.856372117 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.856496036 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.857049174 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.858930609 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.855786465 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.856410179 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.857400329 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.857409943 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.857861289 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.857128373 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.857997928 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.858839107 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.857101086 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.856120315 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.855696123 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.857456897 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.856431641 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.855731708 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.856522268 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.857263448 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.857836017 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.857130169 seconds)
  done (took 127.935139961 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.862834623 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.859015709 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859250762 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.859734863 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.858068527 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.858399061 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.860214785 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.86040427 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.860164728 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.860879131 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.860782735 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.857795034 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.861113831 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.856577311 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.860920224 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.861555395 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.861594293 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.861103264 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.860540885 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.862120516 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.860725528 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.860943992 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.8604102 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.862876287 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.862822036 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.862139785 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.862635677 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.863057086 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.861952181 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.862733724 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.861094416 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.861276279 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.861499067 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.861025463 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.860659964 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.863010879 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.861583275 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.86239953 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.862147296 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.861613745 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.861976737 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.861540285 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.863605957 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.861462493 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.860853543 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.863094703 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.863327178 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.862949859 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.857891656 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.862219436 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.864197886 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.862608035 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863030499 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.863391679 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.86220028 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.860799863 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.861934616 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.863775128 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863375891 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.862658727 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.86438359 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.860736634 seconds)
  done (took 117.205965052 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860333375 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.860481374 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.861671464 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.860594147 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.860468459 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.860058869 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.861634062 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.860446961 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.862241553 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.862431415 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860680774 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.861112309 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863446806 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862164836 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.862761575 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861070122 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.862338528 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.861403551 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862095228 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.862333533 seconds)
  done (took 39.021077916 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.860627371 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.861703712 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.861041459 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.862115553 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.862266704 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.863073113 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.861234819 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861156028 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861787761 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.861805857 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.860985903 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863202864 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86111126 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.862990728 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.863199102 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.861324062 seconds)
  done (took 31.583150537 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.861805104 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.863905093 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.866034281 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.866347841 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.861464066 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.861507331 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.862065522 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.863242079 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.863155029 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.863684944 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.86192234 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.86281241 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.862136409 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.866043334 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.862410935 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.862429801 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.863848981 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.864662136 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.8638411 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.866743545 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.869757795 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.863341108 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.863713704 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.86481632 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.86369072 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.862506225 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.863425612 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.865593679 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.86452891 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.863672822 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.863952949 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.865298169 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.865458277 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.864441491 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.867035833 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.862806786 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.864958646 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.865616318 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.864216464 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.865333675 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.865257862 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.864785562 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.865371294 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.864647106 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.864443121 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.865183395 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.866145589 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.866959919 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.864852004 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.865623825 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.86588778 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.869684179 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.867509993 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.866106974 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.865109623 seconds)
  done (took 104.347856256 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.865941643 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.865260206 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.864208782 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.864991225 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.865808649 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.867389238 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.865690202 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.865783484 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.866475339 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.865411097 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865994162 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.866796069 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867391816 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.866209296 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.866252554 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.867111805 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.867828331 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.866845158 seconds)
  done (took 35.388523698 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.867144333 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.866227866 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.869980887 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.869862478 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.868026421 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.870214503 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.868921593 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.868400721 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869545763 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.869350899 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868498867 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.868968119 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868263602 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.869027823 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.8708839 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868566328 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.870164777 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86951775 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.869856277 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.868093875 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.869078401 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.869149517 seconds)
  done (took 42.915907431 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.871832795 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.87107792 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.886512734 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.890814622 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.890612343 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.903779426 seconds)
  done (took 13.114730519 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868781318 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869112332 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868743706 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869087778 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869060896 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869441354 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870852494 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870251954 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868779627 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869662852 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871533327 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86968304 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874113271 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871347026 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87091135 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869130433 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86984872 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87101205 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87030691 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870527526 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870502644 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870939403 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869728891 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871236804 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87017071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870996386 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870701469 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871190097 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869933789 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870579039 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871673567 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869875823 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871857502 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873505916 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870122414 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870991898 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871825625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87145621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871562058 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871872517 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.871673734 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871108326 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870944284 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871504913 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871994071 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872214649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87210512 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873267529 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872389746 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87309366 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870279986 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872123661 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870707861 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871774603 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87281203 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871212354 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872396031 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870727966 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873137438 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872958798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871981235 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870459876 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872589564 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873153368 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871902602 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872940912 seconds)
  done (took 125.298582165 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871949831 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.871816127 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871958095 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872420101 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872380051 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872192356 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872188879 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871559919 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872424312 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871074423 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874033801 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872045537 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872406248 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872933915 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873596793 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872342744 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87179539 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872934577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872039382 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872198108 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871954998 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872154417 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874320258 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87138904 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871630948 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872373694 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873338151 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873103763 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873503152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87384805 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873113591 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873472406 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873072374 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.872928826 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874684739 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873800722 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875368182 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875032835 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872638046 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873898033 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873962545 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869405966 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873021415 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874273817 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875616354 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874591592 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874207704 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873706516 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874098538 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874280252 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879144768 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874736591 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873836895 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876633635 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876363476 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875840735 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875257263 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874767102 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875258859 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873637382 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875814448 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875647178 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874058412 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875521882 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87625324 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87610085 seconds)
  done (took 125.464917663 seconds)
done (took 2553.007438578 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.936651003 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.007423092 seconds)
  done (took 15.749766081 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.038110759 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.990377571 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.876364593 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.901148742 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.876242005 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.902564242 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.889024129 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.87499897 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.875141076 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.877398586 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.876596496 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.06168284 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.891359924 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.877470647 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.878164546 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.970563431 seconds)
  done (took 52.481434615 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.881714302 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.881591365 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.889267262 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.881286274 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.880086769 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.892815192 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.910288754 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.885133342 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.91623725 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.89628509 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.950379585 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.893648609 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.880275158 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.932319891 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.894094272 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.896107058 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.973660877 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.960349814 seconds)
  done (took 36.102770823 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.961767703 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.888249016 seconds)
  done (took 10.664618788 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.896477909 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.898207727 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.90694601 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.887358406 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.898544545 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.884593396 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.909149143 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.916091925 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.883641123 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.917355057 seconds)
  done (took 70.831723291 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.886288187 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.882114227 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.882281576 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.878366688 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.87777721 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.88158419 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.881548357 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.879787144 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.579072558 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.918730136 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.889406971 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.889551049 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.88090666 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.883475007 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.879898219 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.906253166 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.128585574 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.879650706 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.877763079 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.885300993 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.880782436 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.949189177 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.894503023 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.882914475 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.91202931 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.572153216 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.892399181 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.885077256 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.054167185 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.880341906 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.880199146 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.090926212 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.883951327 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.318571576 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.158458737 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.886803578 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.891484203 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.887579361 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.880455099 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.059519577 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.881399393 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.886880673 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.751720531 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.135850856 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.984283707 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.925589094 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.234841839 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.886883348 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.88493475 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.914740046 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.886053638 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.883180052 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.90053216 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.393353058 seconds)
  done (took 133.753680759 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.883736684 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.130750917 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.034539189 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.88492773 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139095762 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098721765 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.885641598 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928321605 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.884646786 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.081229327 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.144137921 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.988866188 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.886484141 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.881463377 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.884863222 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.883854242 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.03128721 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.955193706 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.886791952 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.883846527 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908360554 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086239295 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.008479568 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.892539019 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.910209707 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.094497492 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.005575365 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.989305911 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.659592306 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.883149346 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946141771 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.88618702 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.886015687 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.882895157 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.038952491 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.981873894 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966098408 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.887261772 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.884233054 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.886793404 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.64930662 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092068554 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.981117593 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.005493943 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.140042272 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.107985022 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.496294502 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.88393424 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.531476406 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.055390794 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.089882765 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.087756441 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.006957183 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.89066246 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.427063213 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.884492729 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.885150556 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.109144649 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106402285 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.987418694 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.889094756 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.888730292 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.885206769 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.175280166 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.888015291 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.975556353 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887957305 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.887111236 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.977944906 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.988386391 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.117877806 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.114078681 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.919500437 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.213344777 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.386057808 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.090587524 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.953476911 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111158181 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.891113394 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.885776646 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962912449 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.729544885 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.138871786 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.168025 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.085464316 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915822841 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.510204305 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.886137115 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.073471473 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.073003884 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.126328421 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.132704282 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.126010224 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.204609703 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.886974793 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.886583479 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.189839662 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.000286588 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.831030999 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.226811678 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1207866 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.372493992 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.912147754 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.17293454 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017671045 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.89098928 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.537801829 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.886643247 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.098913155 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.924409496 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.890312935 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.885975321 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.076400997 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.790798621 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.886837119 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.580698212 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.94956436 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.889682084 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089293152 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.893766814 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137757034 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.890823536 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.123700617 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.053654644 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.91927565 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.115226661 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.139243112 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.517461056 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13291555 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.133159863 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.006119114 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11795061 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.595944965 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.891863523 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154618798 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.891207013 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.888251411 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.058461447 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.890831042 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.033596966 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.893579858 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.162621721 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911467494 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.123146506 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.896250415 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.123378345 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.921566248 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93883759 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.893593653 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.015008071 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.894407382 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.709166445 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.056540681 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.892270342 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.892328909 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.658335464 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.892510053 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.043247417 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.118226075 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912391333 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.959921095 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.432163558 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87276403 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972700977 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.914845628 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.176308621 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.890611014 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.146918936 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.879353853 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.357409408 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.890830983 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.177897829 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.080033247 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.89449667 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.890874107 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.730018891 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.87508802 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.891442392 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.046307335 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.19757926 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.661597409 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093661562 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.894931944 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01920682 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.894675964 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.969924658 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.227765374 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.891447795 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.893123637 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.893534616 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.891895394 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.892299335 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.156996814 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.919537045 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.324655533 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.0274808 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.153880665 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.196255031 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.091226641 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.934575285 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.897920909 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.173342842 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.89694757 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.956731153 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.89528026 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.914117291 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12360894 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.8978872 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.101464169 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.130650017 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.773322577 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.941597093 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.895892447 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.892977323 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.820922178 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.038160853 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.985210188 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.895791596 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.89340975 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.009354623 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.017591073 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.0775626 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.581420646 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.074572757 seconds)
  done (took 905.291892874 seconds)
done (took 1226.681053196 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.894597535 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.896687359 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.907457704 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.900245148 seconds)
  done (took 29.421912959 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.893131914 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.897421393 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.895800502 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.897065339 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.896295521 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.897734555 seconds)
  done (took 13.199566258 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.969703578 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.896861047 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.89928941 seconds)
  done (took 21.589878405 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.968173222 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.31220064 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.032911238 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.326742106 seconds)
  done (took 10.464328372 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.899542254 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.898936283 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.90073885 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.896276117 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.893552938 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.894017081 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.897947277 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.89811843 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.894505254 seconds)
  done (took 18.89936982 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.886782837 seconds)
done (took 99.281746083 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.98660308 seconds)
    (2/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.11075886 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.911052216 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.193518022 seconds)
    (5/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.059262058 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.917299224 seconds)
    (7/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.004418797 seconds)
    (8/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.984299723 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.914927354 seconds)
    (10/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.165565808 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.02956759 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.540578453 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.298431264 seconds)
    (14/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.004331577 seconds)
    (15/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.030197499 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.051579938 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.587849097 seconds)
    (18/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.007380345 seconds)
    (19/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.897479723 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.924029279 seconds)
    (21/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.479850997 seconds)
    (22/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.989612738 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.702204482 seconds)
    (24/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.254134425 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.223615513 seconds)
    (26/309) benchmarking ("sort", Int8, false)...
    done (took 4.870950387 seconds)
    (27/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.149048282 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.206044637 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.987626077 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.238238023 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.029201446 seconds)
    (32/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.086829865 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.553009488 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.991039102 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.900449946 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.164518444 seconds)
    (37/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.993200546 seconds)
    (38/309) benchmarking ("sort", BigInt, false)...
    done (took 6.898701752 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.063251114 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.897682316 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.903051632 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.996354083 seconds)
    (43/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.286439669 seconds)
    (44/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.903843106 seconds)
    (45/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.669524569 seconds)
    (46/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.010340086 seconds)
    (47/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.014722559 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.315796658 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.11342055 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.124018914 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.166017382 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.076146925 seconds)
    (53/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.779008211 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.960466646 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.829629821 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.567266127 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.980103201 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.906978149 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 3.831685374 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 5.614791443 seconds)
    (61/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.913223794 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.009702726 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.919108697 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.001533172 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.979451961 seconds)
    (66/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.031090775 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.985827205 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.90027554 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.294881636 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.779983376 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.00052499 seconds)
    (72/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.200030563 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.917746625 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.904928039 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.907202373 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.299997032 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.298372029 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.5438929 seconds)
    (79/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.19828532 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.33000665 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.908333542 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.035318476 seconds)
    (83/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.325902027 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.910934654 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.825026859 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.218983724 seconds)
    (87/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.3003211 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.584415758 seconds)
    (89/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.021403944 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.090098182 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.245216486 seconds)
    (92/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.219586046 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.921031694 seconds)
    (94/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.003888077 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.298074407 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.917476675 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.15688648 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.978821271 seconds)
    (99/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.111149849 seconds)
    (100/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.427061238 seconds)
    (101/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.16675763 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.20617055 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.782900346 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.911415404 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.126425512 seconds)
    (106/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.036543959 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.792669091 seconds)
    (108/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.974821226 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.206769315 seconds)
    (110/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.910017076 seconds)
    (111/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.901989371 seconds)
    (112/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.475970352 seconds)
    (113/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.003433646 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.057278666 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.277329241 seconds)
    (116/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.906272908 seconds)
    (117/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.916400584 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.776690483 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.166124788 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.215977059 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.263144461 seconds)
    (122/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.906127719 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.113222439 seconds)
    (124/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.966342166 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.256157567 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.039946448 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.193165248 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.904587449 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.162642478 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.918296521 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.904793327 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.284677611 seconds)
    (133/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.914926603 seconds)
    (134/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.085225182 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.310229354 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.913311128 seconds)
    (137/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.387304212 seconds)
    (138/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.802581198 seconds)
    (139/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.927255126 seconds)
    (140/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.095316662 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.911931633 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.929076698 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.175994932 seconds)
    (144/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.993151694 seconds)
    (145/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.62205086 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.009173024 seconds)
    (147/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.920650848 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.310830053 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.061164451 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.870958548 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.908983699 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.032955382 seconds)
    (153/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.191688918 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.014962331 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.225742917 seconds)
    (156/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.9169688 seconds)
    (157/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 4.040814783 seconds)
    (158/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.689981808 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.135595855 seconds)
    (160/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.916049963 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.035815531 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.499979219 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.385758966 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.051021693 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.223920579 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.910639734 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.654272294 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.913915425 seconds)
    (169/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.922949333 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.74325106 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.293633766 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.168497332 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.842270744 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.980421211 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.907620789 seconds)
    (176/309) benchmarking ("map", identity, BigInt, true)...
    done (took 4.035844092 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.344938428 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.092749328 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.993825396 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.037715501 seconds)
    (181/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.304756182 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.993149884 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.062676599 seconds)
    (184/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.025809174 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.021539514 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.057219162 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.689904938 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.028323797 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.252909339 seconds)
    (190/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.291198357 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.916965333 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.401744983 seconds)
    (193/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.343696073 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.034803834 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.119483547 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.678633904 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.934196093 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.099438514 seconds)
    (199/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.991254532 seconds)
    (200/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.671024769 seconds)
    (201/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.924567928 seconds)
    (202/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.947108125 seconds)
    (203/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.203715427 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.116648513 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.070816656 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.05331135 seconds)
    (207/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.07796799 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.144001867 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.602412786 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.361366756 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.92066781 seconds)
    (212/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.068698815 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.02281707 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.593386226 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.910210728 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.207310588 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.910051376 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 8.486784896 seconds)
    (219/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.294337159 seconds)
    (220/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.670417848 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.909748763 seconds)
    (222/309) benchmarking ("sort", Float32, false)...
    done (took 5.586866776 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.239881403 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.233020747 seconds)
    (225/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.064168466 seconds)
    (226/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.378233693 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.918961098 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.030186979 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.917096178 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.916975212 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.988437144 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.032609557 seconds)
    (233/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.183681563 seconds)
    (234/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.92000908 seconds)
    (235/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.395181918 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.344010356 seconds)
    (237/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.276534238 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.32201821 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.124633171 seconds)
    (240/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.986974719 seconds)
    (241/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.917257609 seconds)
    (242/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.003834851 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.907909044 seconds)
    (244/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.617998051 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.90136753 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.940770074 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.969195458 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.236394664 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.926844455 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.015606757 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.092566164 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.004684202 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.818472458 seconds)
    (254/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.019942575 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.705623727 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.937670499 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.314893005 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.922533995 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.90991578 seconds)
    (260/309) benchmarking ("map", identity, Float32, false)...
    done (took 3.680784621 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.017174084 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.909213837 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.898007152 seconds)
    (264/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.823908811 seconds)
    (265/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.122985668 seconds)
    (266/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.995296085 seconds)
    (267/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.18426304 seconds)
    (268/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.912042319 seconds)
    (269/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.127924946 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.020415047 seconds)
    (271/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.125886697 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.945104314 seconds)
    (273/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.240688705 seconds)
    (274/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.466228149 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.948369647 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.324427635 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.164685169 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.295227149 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.457836942 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.095047725 seconds)
    (281/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.3990258 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.914277108 seconds)
    (283/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.44605932 seconds)
    (284/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.10057557 seconds)
    (285/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.610007358 seconds)
    (286/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.091868943 seconds)
    (287/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.913104769 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.506331846 seconds)
    (289/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.933352792 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.041951932 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.733668522 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.926568351 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.80808096 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.022615255 seconds)
    (295/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.085011115 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.92744728 seconds)
    (297/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.049092764 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.156322601 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.931670492 seconds)
    (300/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.914002999 seconds)
    (301/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.089785238 seconds)
    (302/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.931206794 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.831782811 seconds)
    (304/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.290246299 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.129133111 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.034057325 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.91764804 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.916891488 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.224141375 seconds)
  done (took 1024.358423161 seconds)
done (took 1026.245587848 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.941204252 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.933439434 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.915400375 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.937273269 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.028793491 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.95947912 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.929903779 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.919559131 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.966795468 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.965715941 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.915769553 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.956969759 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.918389995 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.916904784 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.915838486 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.932604045 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.226946512 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.948317187 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.934355508 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.929080253 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.934881318 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.916104336 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.965328859 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.956766453 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.919608249 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.921356169 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.920388264 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.936677975 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.030590253 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.921253998 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.92241702 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.929424974 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.225980732 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.947180346 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.915791657 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.938756858 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.929748486 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.930061549 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.922009664 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.951337865 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.373191772 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.925606098 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.919704134 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.917696663 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.918117334 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.924603023 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.919895669 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.929111459 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.936526285 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.935544589 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.371230949 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.940438025 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.923216899 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.917655616 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.930909948 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.920467414 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.922222145 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.93462305 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.939425126 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.936022402 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.215821241 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.95811333 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.921102794 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.936345238 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.928910571 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.407461457 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.923940041 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.925450226 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.375827248 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.933838709 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.406980212 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.936188694 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.919803848 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.935050788 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.953367915 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.226292742 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.949381588 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.918036256 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.930369193 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.918733292 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.931785343 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.935271742 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.92339393 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.922869695 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.9373748 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.963265856 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.934333831 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.921471338 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.931876242 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.940909192 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.930247786 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.934762655 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.924169482 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.920064816 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.932401108 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.92449989 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.926812544 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.924357091 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.925322495 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.933812157 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.375067989 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.945490479 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.917608417 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.917754317 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.920839541 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.935716397 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.374236971 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.928476821 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.943738368 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.971156227 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.922952668 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.217673757 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.955379001 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.939511577 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.934011058 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.923275632 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.918820877 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.218377288 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.403414483 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.943686799 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.922264527 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.920772395 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940331816 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.924070589 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.91969648 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.229634137 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.955167539 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.938713141 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.047317753 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.934756459 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.956179213 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.919586385 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.926120097 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.967854613 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.939765095 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.956983255 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.925672024 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.940751169 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.941891741 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.919362119 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.936150133 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.936002099 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.923427034 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.931049121 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.920469394 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.968886947 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.938784342 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.938102865 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.945307864 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.046079999 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.920737797 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.21853473 seconds)
done (took 302.015569767 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.001509715 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.921986189 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.01400487 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.921037173 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.010705583 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.995127706 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.920125163 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.922669728 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.921249942 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.418696214 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.921210197 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.926653728 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.920715525 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.920472327 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.992387093 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.921567618 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.92187466 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.20510858 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.926007402 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.003644557 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.922587032 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.921397336 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.922675676 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.426364032 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.924573227 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.923926511 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.004179595 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.921965097 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.213136663 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.924155959 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.923408243 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.239477419 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.004065009 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.935225642 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.93092429 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.930965598 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.013942345 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.932051898 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.991084814 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.990592457 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.012394049 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.957526651 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.922950611 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.925133069 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.9265173 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.926529169 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.924010123 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.955266761 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.925014573 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.928240206 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.205782784 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.931089555 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.928781486 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.923559943 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.923628976 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.942207851 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.924640562 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.927826135 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.004010992 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.926373363 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.992671784 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.427450697 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.423692967 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.923957385 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.926114521 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.925919455 seconds)
  done (took 188.216865894 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.993326419 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.998682363 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.994869488 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.930375109 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.974946644 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.994648411 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.931203158 seconds)
  done (took 15.670724977 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.934501018 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.924652079 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.978404747 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.978412632 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.928499507 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.106680031 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.938493879 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.930974322 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.95529404 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.926434745 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.563611596 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.978340562 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.932343023 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.925392939 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.939729671 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.984513926 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.930176262 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.929582512 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.036982319 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.076238083 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.931313898 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.932393069 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.954043608 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.940800632 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.92668973 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.927331276 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.928858277 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.935102167 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.926504804 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.925387177 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.925116332 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.993059782 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.926949576 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.929630856 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.926291717 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.927859086 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.930493508 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.92759433 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.926859364 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.928556032 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.926292702 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.926129754 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.926231186 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.926796012 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.927095986 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.952328342 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.926048755 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.926711228 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.926069133 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.926461519 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.956009836 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.92821957 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.927669773 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.931746018 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.971953705 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.932266643 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.931878915 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.927294824 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.928186116 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.927085716 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.928471113 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.079576558 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.981176033 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.927526941 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.98171804 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.08288466 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.926934294 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.927844678 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.928019533 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.024433793 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.92757056 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.981435594 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.927786007 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.045852831 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.928887468 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.110408028 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.955480247 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.935119057 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.934576714 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.929983961 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.938614864 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.92917351 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.933801895 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.938435843 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.934576981 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.928631056 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.930324208 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.933191272 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.938829643 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.929222768 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.980965412 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.928401653 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.932845744 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.072305224 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.929916676 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.041351059 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.958942789 seconds)
  done (took 211.726594255 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.938567552 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.937948245 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.934491977 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.94659193 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.9326803 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.932506319 seconds)
  done (took 13.480429572 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.936820331 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.934095293 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.929030363 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.929167478 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.933533996 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.93207433 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.929325752 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.934529677 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.938035929 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.929832239 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.933850582 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.928167511 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.934800352 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.933530298 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.930971195 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.930877551 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.930963456 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.931144798 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.93024637 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.934261056 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.069648372 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.934119913 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.93465543 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.932964361 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.939472203 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.931671169 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.945680477 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.93210083 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.930929007 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.943130504 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.939375516 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.935583636 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.933074941 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.942980282 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.935933336 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.932422689 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.934908463 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.929050086 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.931079349 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.935852545 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.929315088 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.935759284 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.931943083 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.929937955 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.936899829 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.939264646 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.934367762 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.94729541 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.932087186 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.931857526 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.93052783 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.931667881 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.936818709 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.93237131 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.934917088 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.942647484 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.935135939 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.934220658 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.936539694 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.934708947 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.937346298 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.937610637 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.942052499 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.937367255 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.941076421 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.932231826 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.93635139 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.942240079 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.935814953 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.93237984 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.930908954 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.933842144 seconds)
  done (took 142.288694735 seconds)
done (took 573.248161794 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.143335927 seconds)
  done (took 9.004923826 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.936078206 seconds)
  done (took 8.801658769 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.806270593 seconds)
  done (took 10.669395947 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.944267711 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.972501938 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.973367264 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.939399289 seconds)
  done (took 29.701616888 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.18204442 seconds)
  done (took 9.044184833 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.947338405 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.93209609 seconds)
  done (took 15.815160552 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.066135823 seconds)
  done (took 8.929849473 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.054251107 seconds)
  done (took 8.938390637 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.937944517 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.963751517 seconds)
  done (took 15.785594556 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.93730754 seconds)
  done (took 8.800781536 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.703387919 seconds)
  done (took 9.650411241 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.938472494 seconds)
  done (took 8.82317697 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.990766513 seconds)
  done (took 8.854526497 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.036001258 seconds)
  done (took 8.897961936 seconds)
done (took 163.576475573 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.943810763 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.93910867 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.936154769 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.936665919 seconds)
  done (took 29.618344772 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.970087823 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.970408394 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.97876924 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.970090109 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.961897856 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.96158728 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.97178205 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.971344143 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.961137816 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.967423382 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.97107438 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.971054631 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.970612915 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.979244028 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.979361984 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.969165168 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.970402621 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.971210053 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.960845486 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.979075799 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.968670298 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.969992436 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.936624938 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.935388864 seconds)
  done (took 49.081461714 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.12480404 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.00560965 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.094603306 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.985195589 seconds)
  done (took 10.073631797 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.936343883 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.000355701 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.988662389 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.981974662 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.021646274 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.039174633 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.989244588 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.165043802 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.051928873 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.063758453 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.945314002 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.959452597 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.962792906 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.985001498 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.038262387 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.937016312 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.936743255 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.053172734 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.998288443 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.146734406 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.937602693 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.991646996 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.024258863 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.990964487 seconds)
  done (took 50.010675537 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.938309735 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.94699056 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.944778146 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.939481929 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.938644742 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.9394186 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.944744514 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.941938857 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.961503604 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.941316431 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.9392195 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.940535511 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.945857237 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.938358481 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.939916862 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.952773639 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.9532719 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.939043659 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.942512112 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.945462505 seconds)
  done (took 40.740223393 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.938709443 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.787088631 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.286040443 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.192704074 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.940229968 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.940563623 seconds)
  done (took 31.951923116 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.953915665 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.947884644 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.941139392 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.000215733 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.080922189 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.949276257 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.942680652 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.952596125 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.989297286 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.01099931 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.964085851 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.972269776 seconds)
  done (took 25.572925831 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.943411437 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.94414494 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.943486858 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.955104766 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.95286092 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.951022211 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.950418449 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.940394213 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.95553584 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.961287587 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.950325255 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.953814878 seconds)
  done (took 45.273880778 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.153317046 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.164953883 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.170525598 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.496706443 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.935110999 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.840391921 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.589248987 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.617034531 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.234433347 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.920938564 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.90577936 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.822230186 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.180485424 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.944098524 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.216338533 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.869726597 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.941303029 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211083374 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.942512246 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.944604333 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.232359242 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.996909677 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.154899126 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989211294 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.155800078 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.364712785 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.190333485 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.198393987 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.302536367 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.040542246 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.079639004 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.991901903 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.950563982 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.951618999 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.943965138 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.952462725 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21188536 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.942056275 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.98239718 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.934972367 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.868018087 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.222638813 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.058951177 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.356019349 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.06131917 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.182054297 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.947180246 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.078621767 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.003697043 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.155976096 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.048258616 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.155838205 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.867730065 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.271686766 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.067211052 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.943054143 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.946401867 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.642780991 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.180582071 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.023182982 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.217874588 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.055955528 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.944180671 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.031033782 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.941535148 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.05617726 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.335194993 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.948929945 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.943847245 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.951078869 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.041029481 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.155897652 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.943319138 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945118182 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.961192519 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.946927129 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.295183794 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.463405043 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.936363962 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.507400016 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.38737744 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.916438409 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.375437013 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.992261004 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.228206926 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.165073292 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.130261119 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.189057112 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.830221434 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.948043226 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.75089657 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.025834571 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.024100511 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.943991165 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.083903347 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.202413094 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.061964765 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.943736949 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.870699478 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.956686514 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.147378182 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.370993946 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.004079784 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.944875526 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.945413224 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.948261885 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.946844477 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.961667208 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.95777004 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.467191311 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.233674923 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.051467429 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.202183141 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.940469895 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.682117894 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.231177216 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.073952754 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.519954837 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.078687737 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.942092376 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096266511 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.956610666 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.948355165 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.319203768 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.358519226 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.093345797 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.190141642 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.001360736 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.975389735 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.951227005 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.028912546 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.172664827 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.950773643 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.215929477 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.194975777 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.606722592 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.005925098 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.022160542 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.955237205 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.161227881 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.028819702 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.477549546 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.186094855 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.475094842 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.937577551 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.448578053 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.160544921 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.332126679 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.962878104 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.092669066 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.983617585 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.651578631 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.874970737 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.954569118 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.291430007 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.992906225 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.048727617 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.949456841 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.951258301 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.95866132 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.03079491 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.020218088 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.023792125 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.876657143 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.951397751 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.952322493 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.950769012 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.493167344 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.615170109 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.244208509 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.951239616 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.010616952 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.951749965 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.5552874 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.952997784 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.070470491 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.955711628 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.721947938 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.983446137 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.16065321 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.353794894 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.071312423 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.951092886 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.950419269 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.651248729 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.958831077 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.652605636 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.247093767 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.954521977 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.413632435 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.016812373 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.139381103 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.966896788 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.951315167 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.952986979 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.952508631 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.154375892 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.459003742 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.234491009 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.30013795 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.0357357 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.233700236 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.143529593 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.382698459 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.63691287 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.463168569 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.176358001 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.952333376 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.953778583 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.598660595 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.958164135 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.167986431 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.155103618 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.242628274 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.252316023 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.367993055 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.95743764 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.979195968 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.19268387 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.952568288 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.40426538 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.985609493 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.272033746 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.765876932 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.220769203 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.01972827 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.964857467 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.599565578 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079896141 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.910046958 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.07045931 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.880753449 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.62314165 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249624553 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.243724355 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.937541136 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.292061922 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.251596693 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.171771819 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.584403284 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.95438559 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.008565205 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.035011087 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.962133232 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.448743876 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.000606236 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.001971724 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.96018282 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.955050244 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.95978086 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.687425718 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.033781706 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.07435801 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.688419052 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.436474129 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.870075551 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.244859984 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.014684731 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.409948785 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.003282847 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.170752092 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.961401176 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.484508947 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.007516581 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.230684685 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.915255646 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.170318093 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.170492779 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.986715095 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.963280202 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.883158835 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.833387375 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.961212185 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.095702935 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.841557428 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.959828828 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.270089242 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.535888576 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.997152901 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.958372747 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.2384283 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.322814307 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.241785277 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.967769051 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.171729306 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.082283297 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.876250636 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.438035434 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.540643037 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.65924023 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.968916836 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.160361487 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.237161069 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.205278401 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.999261112 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.028113395 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.244373424 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.940671711 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.960116738 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.478304412 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.055814365 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.199124334 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.272750932 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.441966836 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.34622444 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.363572719 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.018867697 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.183613153 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.332356031 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.205751918 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.962798561 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.051140983 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.175579366 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.260739231 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.856250861 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.671389867 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.2009899 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.965441921 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.908488395 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.168437774 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.480125699 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.31838335 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.492213303 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.106770191 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.990618447 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.441019524 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.976017537 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.8945179 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.959469816 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.907093432 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.175377303 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.111111136 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.002513165 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.517260325 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.175857839 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.373371189 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.165775447 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.002910519 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.888618157 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.625093245 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.908989335 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.996460945 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.001375253 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.032662222 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.965838978 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.165298009 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.39971515 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.00464704 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.494246153 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.165555984 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262497864 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.242952927 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.280343525 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.921276852 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235317398 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.912113726 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.557791778 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.053233776 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.052874532 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.960574648 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.965401406 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234667583 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.271000407 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.513728365 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.001260498 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.241608034 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.061691723 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.96648413 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.968578216 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.415714077 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.20181907 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.176000932 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.03948404 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.090541133 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.035616558 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.476359262 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.967465549 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.967578239 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.099541498 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.963120304 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.651013396 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.281923982 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.703451026 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.166337332 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.486254452 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.835007367 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.107717561 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.012943034 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.962906283 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.980358105 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.967097729 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.210822994 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.238298266 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.734250939 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.971658879 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.968277645 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.839904083 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.610832622 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.203350528 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.978379343 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.025486773 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.97020315 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.085870882 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.967099671 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.232916491 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.022052903 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.966560293 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.973848152 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.179144278 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.481455272 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.98315605 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.668202054 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.172782387 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.974570318 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.447208257 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.432638316 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.189274674 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.012624228 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.121429337 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.222291229 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.555276769 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.127849043 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.973717625 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.193502632 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.968959046 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237333566 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240397467 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.969095137 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.184948727 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.415626942 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261024215 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.977658136 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.846482179 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.974144747 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.246807668 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.028455062 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.968757755 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.977575823 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.510448853 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.622739798 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.443764432 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.124465829 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.254256135 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.720656505 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.726580573 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.972386892 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.973133956 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.620132586 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.694090849 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.181631175 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.25469346 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.918221049 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.170926264 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.672314171 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.968802153 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.2398128 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.897373908 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.973498379 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.562946716 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.243733952 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.907611951 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.975563757 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.531816358 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.972554101 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.054232356 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.969607057 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.084714303 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.237468812 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.306724989 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.084778134 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.610078512 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.646693492 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.913857967 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.014757693 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.778238727 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.540232849 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.65041224 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993984801 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.987189841 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.896964514 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.973880947 seconds)
  done (took 1687.541400517 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.979111497 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.0510069 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.03782781 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.078034617 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.026528211 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.0520268 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.081296254 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.982197415 seconds)
  done (took 58.185448449 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.972733087 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.988457845 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.976607549 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.973906045 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.997588742 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.973482798 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.134630537 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.985633987 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.977804456 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.979067686 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.973487883 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.974470772 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.739004541 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.999351906 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.97580059 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.985890418 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.979820629 seconds)
  done (took 76.528766322 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.978407712 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.46840126 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.030393996 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.976040802 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.997350166 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.980574089 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.234709771 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.98880162 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.982459982 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.125689873 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.273192545 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.988967095 seconds)
  done (took 91.926835032 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.982200723 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.977986779 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.979101375 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.979198562 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.978902309 seconds)
  done (took 11.802506126 seconds)
done (took 2210.234953642 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.358349585 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.045230651 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.086563471 seconds)
  done (took 6.032796348 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.125363027 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.170032738 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.283369011 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.043192119 seconds)
  done (took 10.529661762 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.225831356 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.356145485 seconds)
  done (took 6.482471246 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.367438342 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.984958963 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.364380799 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.979430392 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.98010874 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.980699948 seconds)
  done (took 22.846226576 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.979146205 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.978500052 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.978239332 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.978420482 seconds)
  done (took 9.817409015 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.986595414 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.706017396 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.987259564 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.996912088 seconds)
  done (took 21.579191886 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.125618223 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.988267088 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.117135033 seconds)
  done (took 8.134057573 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.127791559 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.816150553 seconds)
  done (took 6.846568358 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.120367519 seconds)
  done (took 4.023271681 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.005879756 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.252096723 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.448374964 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.502015092 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.564921706 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.752895943 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.311137722 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.253042628 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.381100878 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.423593129 seconds)
  done (took 25.797928329 seconds)
done (took 138.063689549 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.349119957 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.003769887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.181400691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.349714665 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.219593442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.181329306 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.201273939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.335246373 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.028077636 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.034996263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.36754825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.214214508 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.144504592 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.002899225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.152460112 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.005840722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.21794636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.381158004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.02900735 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.276395119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.210095135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.995664622 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.191500457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.010595364 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.220131176 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.13337026 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.539061012 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.003063282 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.170203951 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.554478858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.137149521 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.418055927 seconds)
  done (took 172.164303493 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.981619379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.981429351 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.984673246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.980667175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.286248468 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.984508833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.983598498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.98235831 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.318887256 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.30346289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.983599089 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.280884985 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.98353202 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.982989185 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.986060472 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.982656471 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.463874596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.982156008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.982887214 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.982956171 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.986006623 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.130619893 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.983555731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.134443282 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.455125451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.984172232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.983988888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.983928539 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.984656088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.983485739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.984026959 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.984378049 seconds)
  done (took 211.884084175 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.983552786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.985316942 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.986434372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.985788028 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.985833444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.986031914 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.984186668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.984198402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.634124853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.635090147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.985178044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.983975146 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.985688746 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.985107384 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.987356803 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.984136047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.984089494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.984707713 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.986506441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.986464485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.985280758 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.73203594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.991467593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.736763806 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.983975455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.986692928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.985864376 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.984706628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.985759304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.984601168 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.985701782 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.986987324 seconds)
  done (took 224.241834252 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.223012157 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.983871523 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.984407028 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.993000355 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.984669791 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.984976877 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.989649131 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.232197665 seconds)
  done (took 20.287562095 seconds)
done (took 630.49354907 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.312132347 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.703329335 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.123604109 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.009548777 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.230025536 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.05320485 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.002976891 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.065672355 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.840428439 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.079301789 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.392881024 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.015807714 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.755014587 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.032737824 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.12325477 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.06310419 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.349799458 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.663257249 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.146520387 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.673825761 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.16080239 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.963513984 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.084178424 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.881711435 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.413346001 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.998052934 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.023553284 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.352512051 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.008274077 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.16184219 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.62522325 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.28471433 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.024760303 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.00932442 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.058810294 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.036699731 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.219345671 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.020946976 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.12871508 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.755987785 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.652127204 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.723662807 seconds)
  done (took 105.135493368 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.995734935 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.991724805 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.991208214 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.992392855 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.000413384 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.991441504 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.990897237 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.991236985 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.99194068 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.991884358 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.990563316 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.001680599 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.991151692 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.001580037 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.991570209 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.991537563 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.992554343 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.002710387 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.992379663 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.991556273 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.992184416 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.992251584 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.992387292 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.992043142 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.991601551 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.992184362 seconds)
  done (took 53.753049966 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.987085611 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.181273068 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.229221495 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.012522837 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.992731186 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.993389754 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.020685711 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.995638243 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.993327809 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.993944588 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.105750964 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.992994939 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.00414231 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.229429686 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.010451349 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.987535086 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.988679517 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.993105271 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.188637744 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.009434188 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.02317482 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.99601878 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.022818241 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.007941482 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.995519573 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.994684715 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.996652069 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.432340813 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.005102316 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.107743584 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.047584098 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.027385541 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.349905523 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.241198395 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.048249627 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.996476061 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.989441811 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.11281338 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.997957588 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.993536176 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.020299066 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.000592755 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.23253798 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.508651922 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.007406291 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.989973995 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.429924841 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.125701059 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.035541857 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.004760616 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.239548482 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.010655477 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.98924892 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.99349258 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.029865752 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.00733089 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.995301469 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.257430237 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.010631988 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.022321599 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.998316903 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.994897154 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.197851215 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.003669855 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.185885982 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.004033352 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.001350253 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.996739417 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.234031741 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.012613147 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.527014821 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.009642679 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.992663107 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.111163671 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.191228002 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.455464946 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.008665609 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.200258083 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.371324224 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.033601009 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.006543208 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.41576627 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.035582099 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.005773126 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.991290732 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.990719409 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.991293035 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.03908975 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.022008437 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.446096684 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.523121572 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.279645149 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.036913741 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.009177097 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.996756316 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.259247261 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.00372615 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.99283276 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.225011287 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.534771163 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.010599267 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.002206146 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.50137113 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.012535833 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.025166113 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.006975273 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.24376933 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.013651981 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.040138721 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.993309364 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.002709588 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.998778819 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.026577866 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.006465349 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.992747623 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.494967995 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.132893706 seconds)
  done (took 246.968076976 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.997632468 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.994556255 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.995903564 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.994235294 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.995222391 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.996788079 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.995924184 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.995338334 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.996889492 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.996676124 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.995123064 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.997148709 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.998174771 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.99881262 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.03440504 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.997870385 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.486505694 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.995215566 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.9946012 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.997461968 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.558574798 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.003017847 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.996742348 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.999540675 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.996985987 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.995783276 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.999535134 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.030097849 seconds)
  done (took 170.957235215 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.995794782 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.05235523 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.012790583 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.045635876 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.007949941 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.996026296 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.095860149 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.015919222 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.003602257 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.995905779 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.997380298 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.03110117 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.004161339 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.092129134 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.029642566 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.100659829 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.100836817 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.003831518 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.996434593 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.996563707 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.046466216 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.020449474 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.029485316 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.061225932 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.008077781 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.054739967 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.021360709 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.997310444 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.00032849 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.11203558 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.014432895 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.028820369 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.033851764 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.020159184 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.118735611 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.113409265 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.099838123 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.099803738 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.004583673 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.997476682 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.996410305 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.010513725 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.055945041 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.010798874 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.001735064 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.124911993 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.015579714 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.998968456 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.997656109 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.998419028 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.014334291 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.019011138 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.038527462 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.125596397 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.04330929 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.025267843 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.098575579 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.115525549 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.002788329 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.096726341 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.015843309 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.1125044 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.018578978 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.011514299 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.00113753 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.003618599 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.04736998 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.109296602 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.105065941 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.009777438 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.096782168 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.054067125 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.012320654 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.000127213 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.999967348 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.057418634 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.11132965 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.053399299 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.064444941 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.036597711 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.021868358 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.000895351 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.011608425 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.030268234 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.008066237 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.113397406 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.114818852 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.006191661 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.999687675 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.001141422 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.000883249 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.026875469 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.066073243 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.042263722 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.117753774 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.039017205 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.042213474 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.007531553 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.01462273 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.006102724 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.03629404 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.008551429 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.013509834 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.273272917 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.036199753 seconds)
  done (took 216.13732294 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.355011719 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.046861857 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.078264944 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.274716455 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.385344929 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.949718725 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.042386971 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.052156201 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.060183548 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.181624161 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.113408585 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.096399839 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.042582839 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.025748569 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.046148575 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.064194368 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.078602259 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.346293581 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.253165014 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.576761161 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.041052575 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.313494786 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.368832784 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.412640116 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.097604581 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.427113971 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.665599599 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.143870764 seconds)
  done (took 66.472651838 seconds)
done (took 861.331274896 seconds)
SAVING RESULT...
DONE!
