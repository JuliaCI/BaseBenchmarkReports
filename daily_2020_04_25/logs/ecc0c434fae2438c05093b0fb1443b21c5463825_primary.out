cset: moving following pidspec: 8872
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.356587638 seconds)
loading group "string"... done (took 0.573548594 seconds)
loading group "linalg"... done (took 7.522272941 seconds)
loading group "parallel"... done (took 0.155871559 seconds)
loading group "find"... done (took 1.223646227 seconds)
loading group "tuple"... done (took 1.891099264 seconds)
loading group "dates"... done (took 1.244406104 seconds)
loading group "micro"... done (took 0.217906819 seconds)
loading group "io"... done (took 0.910583556 seconds)
loading group "scalar"... done (took 37.062881671 seconds)
loading group "sparse"... done (took 11.582765537 seconds)
loading group "broadcast"... done (took 0.930986712 seconds)
loading group "union"... done (took 12.433669184 seconds)
loading group "simd"... done (took 4.346530599 seconds)
loading group "random"... done (took 8.780895278 seconds)
loading group "problem"... done (took 1.787974052 seconds)
loading group "array"... done (took 19.881134717 seconds)
loading group "misc"... done (took 1.640178426 seconds)
loading group "sort"... done (took 3.115315963 seconds)
loading group "collection"... done (took 17.174052298 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536162212 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129455339 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138799094 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12722355 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152973343 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122532531 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13092699 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090443595 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.859924459 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157321034 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119662877 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416777018 seconds)
done (took 5.390327992 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176617553 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087109884 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09172907 seconds)
  done (took 1.261929792 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071296861 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132449755 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072301869 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072683038 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073300054 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072667065 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072766319 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072554419 seconds)
  done (took 1.653096092 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078894028 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074870768 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071150089 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073685845 seconds)
  done (took 1.381449135 seconds)
done (took 5.638933093 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.775024584 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211758474 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189637083 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398838902 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132957983 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179343563 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.650586686 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322118122 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19536382 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08073758 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112038025 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.349890699 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125733466 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645484145 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082257104 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.0951502 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142417559 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450870712 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073060012 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087543939 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094017828 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.135422114 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092340409 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078764747 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152806286 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072905589 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139322569 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085824959 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071152685 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218284505 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178531469 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664480999 seconds)
  done (took 10.399679226 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104032653 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103199878 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074085495 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.131322277 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105981007 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075794397 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080711264 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073066066 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09740219 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134492598 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.098284846 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110399966 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071641619 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074285824 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088913813 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214408377 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086922287 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086469568 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075635906 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084542489 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112479717 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084593498 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084768769 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08468225 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134108936 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188771498 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105124359 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.106027209 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073992029 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087178665 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120062608 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134286165 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073910056 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073139839 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130291629 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102526271 seconds)
  done (took 4.790710816 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.988331382 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145190972 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094133643 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136825389 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070923588 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112131769 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073694595 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085256321 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211174766 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.386969866 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.593921739 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.134909288 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114828604 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107868053 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072986311 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073726368 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072291734 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.478974806 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104049431 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111514387 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085391669 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075231783 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073506516 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070570919 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07192533 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.070281353 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073211203 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117230232 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079098072 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.306251111 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123955367 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073354061 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.942354635 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170918979 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07186219 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.244626808 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.173129227 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099439823 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145677047 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074115899 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072509165 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163756384 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071807859 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.071375517 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07697646 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072221405 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08934788 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070398441 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109822879 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128790705 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071435777 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071493057 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172792055 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072971381 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084199045 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.175826942 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160859511 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073433718 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293759388 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095684068 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07517806 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071109006 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.201120968 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123545149 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074195838 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072495658 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073369382 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074000907 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382573438 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071530073 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.181210033 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073264069 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081722756 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074838732 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074437027 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078199636 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078302879 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093773387 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071487435 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081008231 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071489637 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.072005435 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071933069 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095840087 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087811445 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.488251636 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071829866 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073642698 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070788533 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095418677 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100543098 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072840488 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071143628 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104508997 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073769518 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072038083 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069781805 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071174837 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087610484 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075946455 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118203598 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073634875 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.116167423 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100957907 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074369801 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103593426 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083453669 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07381872 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.440903514 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071102136 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073355257 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070791452 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073739708 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071639395 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.086482224 seconds)
  done (took 22.502295051 seconds)
done (took 39.763998919 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245241699 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074050031 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075355431 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074856907 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074923687 seconds)
  done (took 1.709441271 seconds)
done (took 2.86375468 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124828539 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103396133 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07060176 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101912463 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072522817 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104793086 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10405503 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081678093 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10338693 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070314553 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100846036 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070200705 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069597186 seconds)
  done (took 2.344286234 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089105075 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089184279 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075615307 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088302924 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069059038 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087295869 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087018007 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093934572 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086808629 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078433202 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069161735 seconds)
  done (took 2.058868039 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087303833 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088600264 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075786282 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088032301 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071869207 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087800143 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086975755 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090874658 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086699511 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079033269 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069086571 seconds)
  done (took 2.056361968 seconds)
done (took 7.602513025 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081256637 seconds)
  done (took 1.215405354 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.52949177 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.629681951 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08427455 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109759376 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191984023 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.114970039 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.247612261 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088661553 seconds)
  done (took 8.287003695 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095254498 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074148344 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074601983 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086774098 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075537957 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07519836 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075403732 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077382482 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077656483 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073950466 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076129416 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076639594 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077654913 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074219959 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076257928 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07403745 seconds)
  done (took 2.449631514 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097506672 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095546042 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.079620273 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080284721 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077427683 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077311617 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078826164 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078098713 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075451286 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076987553 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080295991 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078018105 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076494266 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068496339 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079015078 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080985157 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075678359 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.079089206 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079428042 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080409589 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079974638 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068586371 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076394038 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079186022 seconds)
  done (took 3.130235858 seconds)
done (took 16.226991031 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110740004 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072794739 seconds)
  done (took 1.325040433 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084387684 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08596019 seconds)
  done (took 1.319704145 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084711843 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069807618 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092057949 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.08109684 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070588805 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069762459 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089540777 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070781552 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070548973 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070827766 seconds)
  done (took 1.919674819 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072323739 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079657634 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074608998 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08440929 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076928325 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068338469 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075702337 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071833043 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079934396 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067651117 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075663703 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087658553 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07555553 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089000592 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075348078 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072576404 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074548923 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071522536 seconds)
  done (took 2.522013569 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06976159 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071297772 seconds)
  done (took 1.295554532 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071550692 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067977127 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070443572 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070512813 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067754996 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067392092 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068613016 seconds)
  done (took 1.63563366 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389290561 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121148712 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305585882 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077216616 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086225203 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257832651 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.072185356 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076512152 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076516001 seconds)
  done (took 2.651185689 seconds)
done (took 13.826843282 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085688892 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092308216 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100109942 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382875139 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097841747 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072609416 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118634104 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186914752 seconds)
done (took 2.300958295 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216835062 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.767897573 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.483616285 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208231939 seconds)
  done (took 2.619290362 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342120759 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.206601563 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065805133 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073293308 seconds)
  done (took 1.855438455 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072028454 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074849759 seconds)
  done (took 1.311407932 seconds)
done (took 7.166452643 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072496036 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089199826 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069826916 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071523086 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.069121914 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07180552 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.069426453 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069185901 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071683769 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07207681 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071805183 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.071743862 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.072095109 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.072125807 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071582227 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069337859 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069084341 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071248575 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068952252 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069037186 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069174339 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071598011 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069179826 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069247195 seconds)
  done (took 2.90467142 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087548567 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071402712 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075619277 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074621919 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073971968 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075365802 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075350213 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071490356 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075585659 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073768337 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073080989 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073247256 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073294484 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073256588 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073531874 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073340678 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0754951 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071895891 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073305243 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073598023 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075302237 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071190569 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073605398 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075008286 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073357042 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073074218 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073345098 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071227628 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075916483 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073324266 seconds)
  done (took 3.395536199 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074676669 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068075219 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068863006 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076022203 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068413249 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068723484 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067601318 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068207921 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069322064 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068345497 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069274315 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068127015 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067990621 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069053786 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068743382 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072666092 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084819173 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068298054 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068176356 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068466234 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075025865 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068215569 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068208603 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068049255 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068063058 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068482151 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068547396 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068730111 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069013406 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068152347 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071997776 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072245495 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068681528 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076283255 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07309751 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068601712 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073114313 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068140765 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068814823 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067867926 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068042556 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068268192 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067864996 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076534733 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068198514 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0693405 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068317422 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069691755 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06857033 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070501176 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068324154 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067945093 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07019573 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069850071 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072783745 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068368487 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069021742 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068099514 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068726741 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068488357 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0677078 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068517699 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.072020487 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068959648 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085245241 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076016875 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068227014 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06962747 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068860937 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072098 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069990495 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083651225 seconds)
  done (took 6.235420682 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091820436 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092282552 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071954396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071115796 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066388662 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068910952 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074412864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06852979 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070933556 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087837106 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068954007 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070740185 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071023365 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073221303 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069571102 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070846094 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077684974 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066583934 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069051774 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07284255 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069025313 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074332695 seconds)
  done (took 2.80543028 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152960576 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075200511 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109986136 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080141462 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074745366 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07959036 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075139073 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074547094 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075003985 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072750114 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072956426 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074897589 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074776934 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072575394 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072886783 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072840525 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075536558 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072874419 seconds)
  done (took 2.636581765 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082625447 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071311255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093007164 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071147 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071209235 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074049412 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075546654 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078489487 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073483383 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071272546 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078636496 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073542727 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073680928 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071441896 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073884329 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071330709 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073628696 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071353802 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078664884 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07547835 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07545469 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078979896 seconds)
  done (took 2.835680256 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084895558 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073613817 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086050368 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072775903 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0670318 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069123641 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074881103 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070867654 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075016633 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073258116 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071165837 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069027756 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073268765 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070906872 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073601472 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070912237 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073250722 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071087132 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073226434 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066366732 seconds)
  done (took 2.640671379 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088798845 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071967155 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072155554 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07880483 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072613028 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071837835 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078596444 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072377943 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072379091 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092977928 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072063211 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072824724 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078395767 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078740105 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0723763 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078559014 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07841237 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078721755 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072730407 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072084301 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092987369 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072413466 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078466815 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072152058 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072352366 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072529656 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073068628 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076243826 seconds)
  done (took 3.319563665 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072821155 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071268551 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069813422 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069536142 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069542717 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069150462 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06955992 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069244891 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071405239 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069242578 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071639414 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071225121 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071777679 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07112066 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071437161 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071373659 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071324441 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069365261 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069145561 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070460586 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071696478 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071071775 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071344415 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069012285 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069317604 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071586813 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068972176 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069463843 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071209329 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069204079 seconds)
  done (took 3.298712448 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080140697 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077042841 seconds)
  done (took 1.342800417 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06764798 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085380965 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068076972 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076956222 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074950987 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072179874 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077775649 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07425601 seconds)
  done (took 1.779050523 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086577072 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080756381 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071316425 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080760818 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079845973 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087399387 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127527275 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07081117 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078118387 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070136129 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083878476 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070535777 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078100228 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071863939 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077614569 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078845611 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068996735 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075200865 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072102883 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06925544 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071736059 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079784927 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074535073 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066668526 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073234225 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093946639 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082077937 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070554478 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074263085 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079324849 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077753414 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065845859 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070583347 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070774487 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069045021 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079705142 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085240595 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074374049 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07975803 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071049657 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078709563 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066286821 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076178804 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078367204 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082503357 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070594118 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071121722 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066286685 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069863183 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074160879 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066318788 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071677735 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065755699 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078453964 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075324724 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081792156 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070037176 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073116772 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074338567 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074110978 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078134528 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073307675 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074638559 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070073361 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081858907 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076607636 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079158057 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066094238 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065744157 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06893207 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080667541 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094889572 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077128554 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070897683 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071360847 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068729239 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075158209 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071506408 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077126631 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078472564 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070335075 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075244635 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078725542 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071943691 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073855352 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077245848 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069002473 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072989262 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069724198 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086414327 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071576468 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069323213 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069449857 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081275268 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074803439 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069434653 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069313118 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07857726 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064503798 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069855111 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070227518 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071627576 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078749791 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073217866 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073489095 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078544251 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076383897 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071141201 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072574411 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066688922 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.196520094 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072628719 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080336005 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066257681 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075764493 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073994471 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071827147 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079729866 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069682201 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.0707625 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079943221 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077996403 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069197066 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068145804 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075219157 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070270851 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073180203 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079805456 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069376748 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066842648 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066221092 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075713837 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070432062 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076106518 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075126958 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075255318 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066853069 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068738272 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074343029 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079424935 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071509877 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072518559 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076840257 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072632417 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070271025 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078716099 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073786079 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07103796 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077242738 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07337157 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066210659 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073178866 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074179462 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069485639 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075971765 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073211755 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073771572 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070970135 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06936693 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077014143 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071380109 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071800098 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07169537 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.0697431 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081927977 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073634248 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066227537 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068288817 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077452853 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069946727 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06997869 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071409412 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073267891 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070835475 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069405518 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070037932 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073749019 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078863522 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073660934 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071531005 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076553228 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083983506 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070042898 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07379558 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070433677 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071548044 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070753692 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080754687 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077986773 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074190924 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074109966 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068196326 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076499241 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079703624 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071484095 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068733941 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071298822 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074201643 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077537435 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074439854 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071217614 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069464824 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072612188 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072894264 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073716357 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069568692 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070787078 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07493266 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069135457 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075263616 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070232397 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080606323 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07420451 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065208276 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071636151 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067823052 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077031335 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065006986 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06849757 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070552583 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070330501 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068916482 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072383624 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064097701 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.208050489 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081501307 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073373825 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072199539 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071223339 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079945227 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0735007 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074920098 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07660299 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077657227 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082487644 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071367929 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078028993 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082533784 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071236048 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065362605 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077524455 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069735293 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070571342 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.07059562 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068891789 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075237738 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078967017 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078333656 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065402901 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074411873 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.070212731 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071220213 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066496898 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075784547 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074922295 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07300842 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079382542 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071228793 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.07116185 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075447992 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070643146 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070962624 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070964191 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074411139 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071106784 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072944366 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07168585 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07399636 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07107411 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068798949 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073386257 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.071170935 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072330411 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076060295 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070170414 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072494082 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073953948 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070961722 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072343394 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071962294 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071258919 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074538244 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072947786 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072496033 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074120972 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066323193 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079419742 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070654883 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079684652 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072749666 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068432958 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076640197 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074387282 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075274061 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071230937 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071282048 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072971178 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070630583 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074142032 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078726336 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070155761 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082710406 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078469445 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073235269 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074238752 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072566415 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073133732 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070934764 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073156246 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071333329 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072524078 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070492929 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076166295 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073885674 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072519441 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073455395 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071618241 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.073033948 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072202927 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066122174 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070817361 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071019978 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070310403 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079284389 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070856159 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07111956 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069861974 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070725358 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069167627 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067520442 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075774761 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076345865 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069895905 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076209406 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069714028 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071848501 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080235365 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064320807 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068263221 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.200193987 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071126665 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079933044 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072281838 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081941932 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07288047 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071630108 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068658643 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071732569 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.0699225 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065825686 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.070253112 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075609096 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071573045 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070157661 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071172577 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074183761 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071531995 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080588417 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070333575 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072669383 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070627852 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068246141 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071985399 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070981613 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075534074 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071258685 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069837174 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069065208 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070206235 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073697798 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.074047198 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071028922 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.074092944 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078707763 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070599325 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074705791 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073473365 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066895087 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074246477 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071229285 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070609842 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071092403 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07806629 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074574951 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071290831 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080180834 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070182976 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072687139 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07126777 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068939202 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070339232 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070384105 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.071337059 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071183479 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071738199 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079315105 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069300134 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074973127 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07236914 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072592755 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077525405 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.07156903 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074547778 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075790474 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072348804 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073340805 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079844387 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074056001 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075484096 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071658123 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073250136 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077125276 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071082573 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078473794 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072539108 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071285916 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073687375 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070100126 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070587778 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070822039 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069930806 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077232467 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071362594 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071049781 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071284596 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068816592 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072945577 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07319624 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0797057 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074056756 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075011758 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066519706 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068578605 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071719723 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070046664 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073304011 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074312553 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077506379 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073183082 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071958643 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069524305 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080163056 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076771887 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074610126 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069716829 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074249695 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070159167 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073164817 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072060684 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071243121 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070580256 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073912954 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071930952 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069869081 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075978586 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073740541 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.202167708 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075153055 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074110231 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072913235 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06789242 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072189602 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074568295 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076609374 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074342443 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071506912 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082133355 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06950734 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.073051907 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073329345 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07018471 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076184369 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066843392 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.074030456 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071300265 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071601545 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.067090991 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071629307 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070865066 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07473785 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071198948 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.067037692 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082220967 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.082699527 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074994365 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070101399 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069581262 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066993189 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066639401 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071696965 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071580603 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073966666 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081850044 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070911196 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071157207 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066256659 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070729392 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07468553 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074958372 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06897172 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066313079 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071548171 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.075011361 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07737012 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069518327 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070330084 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07475156 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074024906 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068915623 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073018497 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067958156 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074948656 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083671543 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070916196 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072878443 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077009663 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079493037 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070970338 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066774881 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071377843 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074509809 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072863783 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071315499 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071751207 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085554968 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075094565 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071479406 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069988308 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.077060645 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071601713 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079614056 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07163564 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071115549 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07728293 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074465687 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078294063 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075769755 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078569694 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074934375 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074984742 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070734059 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072472225 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069238687 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071625084 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071928371 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07130783 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075251372 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077520659 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071332252 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082470663 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080671633 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07369215 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068311848 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070894522 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070944135 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065720174 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07096023 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068933565 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068675567 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069030994 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06949435 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072561968 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075638352 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072122678 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070075521 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069833105 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064750751 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073677046 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072981476 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071891782 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067460938 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069493733 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.202222701 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.078349654 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075041846 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071110221 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074326495 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074565334 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073636408 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067058609 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079473368 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07057963 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073890007 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071246212 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071326565 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071568417 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075467863 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07491032 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073278955 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074599787 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076052972 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072892305 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069410703 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068882402 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077791492 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069833246 seconds)
  done (took 45.501318698 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104580517 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067949409 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066670483 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067462885 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076903334 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067434518 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066500357 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067590392 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067998193 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069689634 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066560577 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066617233 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074203185 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081337063 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076704805 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071063185 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066946801 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067653796 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066828432 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067703262 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074203928 seconds)
  done (took 2.771590075 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077112326 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082409493 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078811882 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087107711 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07533433 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074097679 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079583746 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074271328 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081946924 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076870033 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082033072 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074258882 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076530058 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077211635 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076922023 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074736979 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082738579 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075936971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074280889 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079319469 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074559849 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078953081 seconds)
  done (took 2.975251783 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071980692 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.071058807 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073457701 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06568858 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.07090589 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065412278 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072658506 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.069161657 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.081109674 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070839174 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070118358 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070174603 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073132626 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065968634 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071277012 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068375889 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110980199 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073568153 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070004425 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071053808 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066215648 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073086084 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066229119 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066516644 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070356941 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073284801 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070972721 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069314233 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070362467 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.07043531 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070797167 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069025601 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07287952 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072423873 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071020475 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.071029943 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.073736246 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071194241 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066080485 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068854841 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07139695 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066371018 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071019472 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07274079 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069243377 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06864458 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073407464 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069998436 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066102801 seconds)
  done (took 4.752371372 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080979163 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112823893 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072691732 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092925214 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08300947 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076354333 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07504252 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093250153 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06806744 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068931738 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084737686 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082294606 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069998383 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074281927 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076612764 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06990353 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070748117 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068871119 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07344217 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069793682 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073434585 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076869201 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083573594 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081592274 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073625265 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068839998 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069404984 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073954961 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080970795 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074022277 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074513931 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075326599 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083730742 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074440375 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069238006 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072462286 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085465045 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070215405 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072073146 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067915057 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072224275 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073977745 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076954908 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084837836 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069729539 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074684149 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069769529 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067458534 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081560679 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072145716 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076950354 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082406435 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073358739 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070036162 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074044143 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083880737 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069871684 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068404496 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072823491 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080719777 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067756295 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073476934 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082125278 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071636918 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076374964 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081925454 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074993145 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073534625 seconds)
  done (took 6.546647177 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079553591 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101018837 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086336063 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087151974 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080351978 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080168798 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080205038 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08028371 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088584281 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083763943 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080236069 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119179681 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.076099311 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082523697 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080082436 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080583465 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080572724 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080480387 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080832157 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080599829 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080787567 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102415373 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079823241 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086668849 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083098897 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075772494 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079737877 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079655678 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086106367 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079913238 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083130795 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079824257 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079776612 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086158151 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082882408 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079927506 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070253076 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080002463 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079784161 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079675428 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075823468 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085970509 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079877733 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075753649 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079971608 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079657697 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08588222 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083191705 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082102464 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083571244 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080181737 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086071488 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079527288 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080314806 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086659411 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08898464 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086437633 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086123573 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079830655 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086303561 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086291947 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089340929 seconds)
  done (took 6.441214013 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085538824 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076942956 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08812709 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066168663 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068780314 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076351701 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06862968 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069452836 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076959007 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077446141 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079192522 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076314269 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078638734 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07926441 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076442111 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079265079 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076504655 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076332768 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077220873 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076440915 seconds)
  done (took 2.837483317 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080143384 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088338321 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071777928 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076592747 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074390866 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075885607 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.07324511 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074095729 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071967633 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073931369 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079606609 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079928687 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071781731 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075686246 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079502106 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076203778 seconds)
  done (took 2.515427754 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087491522 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076363554 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082844028 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070318234 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071842782 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067612343 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070913461 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066114527 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066820855 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082932073 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070788396 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081318754 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069997028 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069252003 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067051118 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075929379 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06681694 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067680111 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070301724 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081568728 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073979138 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068626344 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074259243 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070169676 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072898992 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074686773 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069679059 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071290276 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067992211 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070686876 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07355054 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074030669 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067491568 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068439588 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06927459 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06729981 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070702863 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070824535 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076054063 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070328693 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068876254 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072634826 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070433773 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071203979 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066961476 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.07076211 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067151288 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073218579 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068109399 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073333292 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.071157449 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072869265 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070943707 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077609771 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072836669 seconds)
  done (took 5.245548232 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084695934 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074749615 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06583363 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06827613 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073511326 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072110589 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074798132 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07201953 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072362406 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068439266 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072237231 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073900547 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072530199 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074395728 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072295127 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074169822 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066232302 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071999887 seconds)
  done (took 2.610476555 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077137835 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071524055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078226377 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07213233 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071571489 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072645908 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066690991 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069295715 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06953295 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071469681 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071117282 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073793638 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069150263 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073427652 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071187143 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07167061 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073544617 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069371672 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07148933 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066568551 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073595324 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069836046 seconds)
  done (took 2.871792801 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098508052 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088369344 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142965116 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084014988 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091516604 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076669618 seconds)
  done (took 1.883187629 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097811023 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104889511 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071168343 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073872382 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080339659 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074489888 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075256638 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074955829 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081897643 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079847192 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077839863 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082302122 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082079563 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081389927 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080288036 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080291269 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074973746 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075509383 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071874676 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08691205 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075315466 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082304286 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075610677 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075408744 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075140108 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081586796 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082218376 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080075952 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074877372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083072323 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08024309 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075022083 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08260326 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079945427 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074454554 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082029105 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075224128 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086617962 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079839913 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081517686 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074330404 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080039948 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082245119 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078723051 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082398899 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075064368 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078886632 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075280301 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075027966 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088162135 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079854351 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081154588 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079647775 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082331947 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081951988 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088091303 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079676241 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080867993 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079446369 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0797237 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081503557 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079959082 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08125577 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079810739 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080132931 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081328011 seconds)
  done (took 6.577877721 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109018772 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071852611 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075788893 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080361489 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081351554 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075102051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07509044 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075234506 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075011861 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072213631 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112255795 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075672369 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081829412 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081707726 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075598768 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075503959 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075371849 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081654962 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072466474 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08929874 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075355782 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081198521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081419801 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081291317 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080350577 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079940488 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075166047 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0753295 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075326291 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0752114 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079077314 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07552871 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081602665 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0721637 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08150177 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075765457 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075206418 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079205665 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075654443 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080071069 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081615171 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087018497 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075362252 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075073083 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079755587 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07513732 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074843188 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07233249 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075415925 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072063995 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079603978 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079710554 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080254193 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081462795 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075107109 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074692365 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075264391 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075133572 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075031499 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079818827 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081227432 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07519277 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088221319 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074866697 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074925643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081750605 seconds)
  done (took 6.509337752 seconds)
done (took 134.399682941 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198330476 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175014535 seconds)
  done (took 1.660573543 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073322172 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100822909 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081094147 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133316773 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071884637 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105150818 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104005805 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082028639 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07164675 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071805835 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071295995 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073440988 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136811675 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071713015 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071720709 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073663117 seconds)
  done (took 2.699731274 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102699327 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.160428784 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105424953 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070511783 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102292971 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076378114 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073636304 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079615455 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075658039 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070743036 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076458536 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074692621 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070352935 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075443475 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075610349 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076358166 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071054741 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076749817 seconds)
  done (took 2.822055953 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101907968 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094703971 seconds)
  done (took 1.506307963 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161642006 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138223616 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206156374 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341866667 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157903754 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146248554 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146467336 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146750622 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117030799 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141120256 seconds)
  done (took 3.008147432 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104120746 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15234286 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275044591 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12070499 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078356806 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095225153 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123437921 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.085158497 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085057187 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083917335 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083917182 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080930872 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104048473 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078094572 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.080372516 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080377912 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107257153 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078942364 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079983353 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079952776 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105447937 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071941669 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078597831 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079188348 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080775087 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080948333 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071908542 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071521083 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08039477 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080010504 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080806629 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093574277 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080924017 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105660976 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076261066 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107310353 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081080096 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077689663 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080357659 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077996462 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08205058 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082131351 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078737816 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080755167 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071954584 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081229445 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071752827 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071831397 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082056003 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072410662 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08170886 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080729436 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105752607 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072248148 seconds)
  done (took 6.167430892 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111864098 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110834912 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075170336 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117345014 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108378051 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074680697 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109964144 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1029269 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111281425 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075525298 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073914031 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075578494 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083048639 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085002732 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119209531 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111007491 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077063968 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074733327 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112098664 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111215506 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073837446 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105550226 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102068927 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110834027 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072671123 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075734552 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073669234 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074902301 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079739142 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081399484 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073840977 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08307817 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087451198 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080852971 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072907585 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07287752 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073337606 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082148375 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082847744 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082464764 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080392097 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072595417 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07364845 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074552452 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07417094 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072856657 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081579849 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08245523 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08146994 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073598143 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07489803 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0736135 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074270432 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08263855 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080433248 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083149884 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083109848 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073543148 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073556953 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075797154 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08332021 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083155311 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082149472 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076649614 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08307837 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073514485 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083678975 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087593527 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073835069 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074807413 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073682216 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073859404 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074177488 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080540079 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081163938 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074692414 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073399269 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073607762 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083180344 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081055386 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073242759 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080658653 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072296143 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07279161 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074393773 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074148 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079693664 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081268624 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07425966 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073542998 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072823787 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072117815 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071514056 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079059138 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080051095 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.08076335 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079865131 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072961189 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079887225 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079386105 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.207985401 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082651617 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074503548 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076014034 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075746511 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082381164 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081224311 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082559308 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074157865 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074171711 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08226386 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083396385 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074324012 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081543193 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083848793 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08117236 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072513811 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084246276 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074620988 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083494462 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073306617 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083226982 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073929791 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08269188 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074606354 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072736456 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073467681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081674667 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075352659 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073339514 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074826485 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074061226 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080981184 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084530852 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074896578 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080794319 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.08083352 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075450662 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081286256 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073080444 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081700054 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073349689 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074571858 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072638774 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083946732 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073980879 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07381688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073278858 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082974372 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073357224 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082538638 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080693543 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072959296 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084843307 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082889914 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080534864 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083069444 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074976697 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073342989 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073386872 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073832209 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080920761 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081928557 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074868971 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073106233 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080426071 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082577091 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072401441 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081272089 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080875451 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080886106 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073487229 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073324692 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083958424 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083286729 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080794114 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081581898 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081584069 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074082955 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081022862 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081319991 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073884096 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08644925 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073818008 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085474839 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081806791 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080184299 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081354559 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082253934 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081833654 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082280503 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084676883 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072107437 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072161557 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080376623 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071599848 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07168487 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078699195 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073241708 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073548418 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083979827 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072684173 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.217555289 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073488425 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082765959 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07353312 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076051156 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086634018 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074159757 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077821403 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081698618 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073679066 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080800598 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084252292 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081329012 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074423715 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074651175 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082867399 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08244416 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07415736 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073227035 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074693315 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082076595 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08092972 seconds)
  done (took 19.513828704 seconds)
done (took 38.701501824 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.197554574 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150543914 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.16233732 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116632135 seconds)
  done (took 2.023726944 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.114569728 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102097111 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093235829 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069842967 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.0996176 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070602018 seconds)
  done (took 1.895300805 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277929581 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19416568 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17798642 seconds)
  done (took 1.991611154 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200988948 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186738167 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.433901661 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265500402 seconds)
  done (took 2.526634549 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142101709 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088999255 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071847346 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087860926 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.129384904 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.156939666 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099827574 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124629911 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083524249 seconds)
  done (took 2.374804378 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147360414 seconds)
done (took 12.306559755 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.15194493 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19835899 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09691896 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.183339358 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073296918 seconds)
    (6/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093924227 seconds)
    (7/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.236744519 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127046928 seconds)
    (9/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.205143316 seconds)
    (10/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.188884363 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.128478817 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080493125 seconds)
    (13/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.204803895 seconds)
    (14/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075536768 seconds)
    (15/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057582872 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.176405084 seconds)
    (17/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082271592 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103047264 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.379400694 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082684839 seconds)
    (21/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.169912399 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080043725 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.204726531 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079043578 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.123617034 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087644104 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.227775584 seconds)
    (28/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.080142914 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170142778 seconds)
    (30/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.164554774 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081017731 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07920424 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.185776832 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094986729 seconds)
    (35/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197109659 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.078603979 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079556099 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133347254 seconds)
    (39/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104457129 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069482878 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.155168814 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143747186 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143300021 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104975021 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116295817 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.218122622 seconds)
    (47/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.084088033 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.150689889 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093832445 seconds)
    (50/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085991921 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.241518937 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.072459378 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092444888 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087868801 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.206885774 seconds)
    (56/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097926132 seconds)
    (57/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07928501 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070506262 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079365949 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078352976 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070324499 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092479526 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091118181 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175424383 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081214342 seconds)
    (66/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.13280541 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079568737 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156541659 seconds)
    (69/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183119911 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080557776 seconds)
    (71/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085302186 seconds)
    (72/309) benchmarking ("sort", Float64, false)...
    done (took 0.134850764 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.192855135 seconds)
    (74/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081347734 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163782308 seconds)
    (76/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076627936 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078092063 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076413771 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.318182987 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.110753765 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086915814 seconds)
    (82/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.184927934 seconds)
    (83/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.069046583 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137001118 seconds)
    (85/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094157973 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095279815 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075417901 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.214088045 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097397559 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.057956592 seconds)
    (91/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.083454994 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121869256 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057388996 seconds)
    (94/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073667182 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082549077 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079165202 seconds)
    (97/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077263588 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.183196875 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079526822 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.077674922 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161190544 seconds)
    (102/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068611591 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.079037113 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083117086 seconds)
    (105/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07573343 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.207304419 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.207875534 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.170158936 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.058006422 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083521095 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078692909 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079898474 seconds)
    (113/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.108032731 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06975033 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118930758 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.105277181 seconds)
    (117/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083515025 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152780722 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.078712929 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073787439 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.077893477 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.071128727 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160220399 seconds)
    (124/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.058784627 seconds)
    (125/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080422893 seconds)
    (126/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181107502 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073594561 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079403908 seconds)
    (129/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.057061262 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059934046 seconds)
    (131/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.056985627 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079475525 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.057004049 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078312813 seconds)
    (135/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.056873902 seconds)
    (136/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154000799 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056863852 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 0.136986204 seconds)
    (139/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.073455166 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057706237 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.079681719 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078850558 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077158591 seconds)
    (144/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095372904 seconds)
    (145/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082831801 seconds)
    (146/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.117616419 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07818373 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096538809 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173383592 seconds)
    (150/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.120091029 seconds)
    (151/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124244675 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076143787 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181666919 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.17157243 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06890312 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.123516554 seconds)
    (157/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081617399 seconds)
    (158/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.074761522 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069557512 seconds)
    (160/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.107789148 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070785668 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072064601 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.068292955 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070259189 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.182635205 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080710812 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.153706955 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101124809 seconds)
    (169/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.119192954 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115776112 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071864498 seconds)
    (172/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.111571572 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069518136 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069832522 seconds)
    (175/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071483923 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149659647 seconds)
    (177/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078451908 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077516488 seconds)
    (179/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.057499874 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070269101 seconds)
    (181/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057475229 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070189767 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05813343 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.057777349 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090239498 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.231304763 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.082532506 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.060543952 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077235682 seconds)
    (190/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05745014 seconds)
    (191/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.057328295 seconds)
    (192/309) benchmarking ("sort", Int8, false)...
    done (took 0.151117512 seconds)
    (193/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057620702 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085146947 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075722079 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09274547 seconds)
    (197/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.058304537 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070884468 seconds)
    (199/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.109912951 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.057418152 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071163733 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091483705 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071573971 seconds)
    (204/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.072323572 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.182842408 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05793007 seconds)
    (207/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05796439 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078620603 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.061973641 seconds)
    (210/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057407574 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098338962 seconds)
    (212/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084832549 seconds)
    (213/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058956297 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070932382 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078368661 seconds)
    (216/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082942689 seconds)
    (217/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.076513832 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100956827 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095273115 seconds)
    (220/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068916772 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080323847 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078805252 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058468244 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145532037 seconds)
    (225/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.107041772 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077780019 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.070736476 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.079413783 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143559202 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0720669 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173602091 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078505509 seconds)
    (233/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.069096944 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.058483262 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07256768 seconds)
    (236/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079302368 seconds)
    (237/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089311708 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130913183 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134105103 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120476265 seconds)
    (241/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073352507 seconds)
    (242/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.069767702 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122230558 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05765409 seconds)
    (245/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.160911007 seconds)
    (246/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.057080901 seconds)
    (247/309) benchmarking ("sort", BigInt, false)...
    done (took 0.19541961 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092420954 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07135214 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070712142 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057276333 seconds)
    (252/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080751854 seconds)
    (253/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069512265 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070894634 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057192881 seconds)
    (256/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.057609662 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069376846 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070848917 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071287281 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073634265 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072670147 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058411849 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070637411 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.056975714 seconds)
    (265/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058248728 seconds)
    (266/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.116672326 seconds)
    (267/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058496642 seconds)
    (268/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.057950117 seconds)
    (269/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082782658 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059589975 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09134276 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078225633 seconds)
    (273/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.069271243 seconds)
    (274/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076652872 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078797195 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181878422 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094155026 seconds)
    (278/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097745913 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076797985 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.058481684 seconds)
    (281/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072523193 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090275862 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070846386 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058560036 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144962546 seconds)
    (286/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078087013 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072463411 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124120316 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071433371 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.058041426 seconds)
    (291/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058220353 seconds)
    (292/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070996839 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069872275 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094131239 seconds)
    (295/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.056878905 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097935596 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095235346 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071922896 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076681943 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.056476807 seconds)
    (301/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077860908 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069657747 seconds)
    (303/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.056623333 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076258062 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056034322 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069429269 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.223462643 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073868412 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073040105 seconds)
  done (took 32.654511524 seconds)
done (took 34.009591596 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089026036 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098222066 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081536904 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097773828 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086844957 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.084276153 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078944087 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083960986 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086461038 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088297359 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084670951 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061811552 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080406024 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080805376 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080848756 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095932694 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084540708 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079191185 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078928915 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070270716 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079309191 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071178351 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072721692 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061345719 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084129018 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077794804 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080489583 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080031137 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071302219 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070979674 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075218631 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079528388 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071009217 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085036156 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079455415 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079028005 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080933216 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.0829014 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072692253 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071093791 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080744078 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071141021 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078577694 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079512849 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078305943 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076860682 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07883186 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082545113 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09537967 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073059748 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080647512 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081580189 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082539123 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07837944 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075302284 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079505126 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07677541 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095856376 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079502442 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073365401 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080226363 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079887784 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076817011 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079165731 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078754327 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08174917 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082418394 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076792903 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080913944 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077205139 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071077325 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.0788251 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07475121 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073797148 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081712054 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083423342 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069873778 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077260266 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078970697 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079477016 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070744886 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072873129 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072566639 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077836902 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072794514 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060607928 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075503286 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078489023 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070221836 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079490459 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077963118 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078257492 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072584142 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083142283 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.07082748 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076480314 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071193687 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071377663 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073224213 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075974321 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070821723 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07341491 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082129213 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072053905 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077453195 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083053675 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070462841 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077664919 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06934459 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06988152 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083988536 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.08041078 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070557242 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072925174 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069253547 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077542051 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069021105 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069789134 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069599722 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.07015861 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076360567 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069802966 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072377546 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077080012 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.225154991 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072110482 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07657936 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073935084 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071922134 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078225356 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071275892 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071159967 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073208652 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068410184 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073859541 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071200525 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078532584 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07291972 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079056456 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072862838 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080180888 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077133752 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077454681 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077307235 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.0704554 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.065795285 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073094136 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07403904 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072650087 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071430143 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072071048 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071437124 seconds)
done (took 13.262178984 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071709967 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.136406323 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097384998 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09838735 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089534951 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07223888 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079609168 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098859943 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073082358 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10191544 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092306094 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090241895 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113605172 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06985875 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071229835 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075517313 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072583305 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08468418 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100030078 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091733112 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115594176 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070620124 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094937754 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091885851 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090044834 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105683507 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072286007 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07548933 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075545297 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094593913 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095103697 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075613687 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072370011 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099544414 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095549078 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086329552 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07233519 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086428363 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071955682 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071491432 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.072881915 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099797878 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083894765 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084182467 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.076435155 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.08211265 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072867141 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086436486 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092317762 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08275614 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08913004 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102463925 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074506575 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08788366 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069972232 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089009084 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08097442 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074535449 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071796926 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07912549 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071683636 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075146202 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083767074 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083481948 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075266198 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087491458 seconds)
  done (took 7.027493696 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089566574 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101190379 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087821191 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088810585 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071129847 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071529074 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072049379 seconds)
  done (took 2.027814328 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07193712 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091834068 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092996483 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092560264 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085293347 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095260245 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081340723 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072295373 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096760527 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070954292 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091763931 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101888829 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074755251 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.083237578 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094033218 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072272938 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094980606 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07178773 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07520144 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094202513 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075994345 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09835806 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.083091896 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072454948 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084925238 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071884219 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115687391 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.081619459 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072569008 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075041836 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07287421 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110584585 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08456853 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084011689 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072778555 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084799881 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085763171 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074170413 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083017837 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081181148 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084751419 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.074913966 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07334294 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072691521 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07621773 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081856266 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072982032 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075989554 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074909613 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091089277 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070936303 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084728499 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074860401 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077490242 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076809338 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076343337 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082188493 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073153442 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091148433 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072457814 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086903054 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086552944 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084980844 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086710229 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074231166 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084410796 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085322475 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075081498 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074137998 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075842957 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086201746 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.074145782 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073678985 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081574925 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074126504 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093754453 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093155961 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073740692 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085055323 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072618145 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072414207 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072194383 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094042329 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076859594 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072702801 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076356416 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074118722 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073979521 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071126413 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07628516 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.073000178 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.077311096 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075477818 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0753369 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074794361 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087068654 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071551869 seconds)
  done (took 9.279446961 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074698879 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072870197 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074504843 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072741533 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072392965 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072895021 seconds)
  done (took 1.912937189 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093188339 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072980844 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084531047 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077114324 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107703341 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.089713221 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090723932 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08130351 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087821873 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083616582 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090134653 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091841915 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094709231 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077043957 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090782228 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076356944 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091167145 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079138094 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083336008 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077569024 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089916479 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076949606 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077455955 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085435079 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080588849 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077352265 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083292981 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083549737 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082651495 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082029488 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077095159 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080535568 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075737529 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081251984 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091064427 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075187566 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078869576 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.08166285 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076669265 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080663352 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091600825 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07743799 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078297787 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081838386 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081402029 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075313752 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081512101 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083562491 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.09063082 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081635095 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081660368 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076217488 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080475217 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081473888 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075867096 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081612174 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081576985 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091148807 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076803137 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075126386 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073687199 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080727973 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081067878 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080411413 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081485805 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081393837 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075173027 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077412414 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077232134 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076324629 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.082179758 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073618407 seconds)
  done (took 7.34843759 seconds)
done (took 29.028781834 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.555301003 seconds)
  done (took 1.98052021 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.601232458 seconds)
  done (took 2.056188659 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.53551213 seconds)
  done (took 7.98958799 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.385630218 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.490705013 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719225026 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139778909 seconds)
  done (took 3.232487228 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.728037142 seconds)
  done (took 2.190340004 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240263688 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230184993 seconds)
  done (took 1.942787435 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.355601911 seconds)
  done (took 1.809386355 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.130684174 seconds)
  done (took 2.583346704 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236396732 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.171982023 seconds)
  done (took 1.866057813 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.444545411 seconds)
  done (took 1.90206192 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.871017242 seconds)
  done (took 6.332121532 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223760308 seconds)
  done (took 1.722221975 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243221213 seconds)
  done (took 1.703733156 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.751489404 seconds)
  done (took 3.207816767 seconds)
done (took 41.984278543 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089225345 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090083836 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.091090681 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086368432 seconds)
  done (took 1.79522553 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.0815293 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078364411 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081580989 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078384597 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.082344723 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078100337 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079750197 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080582824 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078016551 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078394487 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077975429 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077984033 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08000773 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079344115 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076817619 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080239864 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081323376 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078404291 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080483715 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077845322 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075979138 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079957725 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080094515 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077386561 seconds)
  done (took 3.359867886 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083261659 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07788565 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080350404 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077693231 seconds)
  done (took 1.784080778 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083327173 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094921887 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092984018 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083618367 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095947018 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091025842 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074254425 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074098963 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075938683 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083298861 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07336817 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099532935 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.0927484 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083526601 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085857561 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070697253 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072920769 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091713688 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084348883 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084507247 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075890279 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084396503 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073666531 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093726951 seconds)
  done (took 3.478438283 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086216076 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10580268 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085189424 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095809991 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096929905 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070660033 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084602292 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097482863 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131313129 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071291291 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076899242 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07157326 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079701878 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.074169372 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086436357 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112858111 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11655278 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074435649 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102750889 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071305809 seconds)
  done (took 3.261659276 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077279683 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075233236 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075873476 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071476983 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083545472 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078039041 seconds)
  done (took 1.937027009 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073669526 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072661949 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072467534 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072657878 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076958494 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072878283 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071060882 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072708714 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073395001 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072468116 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071983425 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071210236 seconds)
  done (took 2.34506424 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.186581622 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073948033 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073914803 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07235566 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0757738 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072177969 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086348118 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073124312 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096634006 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071726469 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072043689 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074265488 seconds)
  done (took 2.501619883 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198964465 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080436233 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227451166 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152195077 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110502926 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114639104 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11442726 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113679387 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138510124 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101636962 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161809885 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163246954 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108727658 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138144119 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093764908 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10620494 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152204352 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164707112 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108588921 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163408921 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143659022 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128756058 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146215355 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104467922 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107396946 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119891618 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076375603 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083365059 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165348238 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131763179 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14598669 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11281651 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094393574 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172994977 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16622056 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137656982 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147865391 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087181336 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106299234 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131778082 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197590761 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091596892 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301847732 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115430819 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085231921 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133371729 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119592456 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122985217 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107608273 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093786999 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144064573 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178905387 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134501986 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089851911 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125858464 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113522919 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113998934 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114635196 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17240159 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156764912 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128563198 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076269224 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110222043 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14918333 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134749178 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108723096 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124250083 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094526686 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131813607 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152300804 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123231342 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139983051 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116358055 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092263767 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121881494 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137458024 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127481127 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158882304 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125882921 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077527347 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122628506 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102226332 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084532725 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147606225 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079943813 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171439394 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102517563 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108839395 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124469569 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109428705 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109868067 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15136274 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28577188 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108726244 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.072747188 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108604281 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121533516 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144653439 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091652597 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1103146 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117542034 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082481219 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135193589 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080438323 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124073262 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082305317 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124600163 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131230232 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08236242 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124268924 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106265372 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10525578 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130597796 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156840178 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091451737 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08484638 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162536715 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122765107 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10462554 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141615269 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154224018 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105236825 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101365385 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14449029 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166019994 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093092655 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159835872 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10675395 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087652344 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092412809 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124334541 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112471265 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124745902 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085710287 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119093375 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162719819 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079004197 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098707667 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134442482 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083223459 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084261242 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106653423 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105772337 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099469367 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101146888 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10362797 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133895156 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276062165 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109345445 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126164096 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100915062 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164792329 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091119341 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106090476 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107031198 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075034134 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131448309 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152417098 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083490892 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157058586 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122680288 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118011365 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121260589 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088051125 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135547276 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082656107 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075547149 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139760912 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113597881 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111745616 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147167909 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117316769 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124132683 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119525467 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13066114 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129653713 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12966886 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109246397 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092492313 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115044387 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127717408 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078097022 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093494735 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084387768 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107552762 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098297021 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087246151 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139892152 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123219197 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110219834 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114726686 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100249099 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144846476 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080418672 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125697673 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120913639 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098106598 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148686539 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148285435 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131614385 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100994494 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283883591 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076468447 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079543683 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09178658 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12327435 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087660207 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088188526 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115168266 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144572979 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129249994 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135075483 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124961471 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121162681 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152692827 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07524349 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122038472 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142837557 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122060694 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107468434 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094744007 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102202998 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14039931 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107154922 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172063672 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115465657 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125933148 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155513008 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105710171 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083606314 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105395657 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131592045 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104915034 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142508316 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101408345 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091377941 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109991409 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08033793 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100503579 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126681942 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118582023 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137064059 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115571848 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1334113 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081984231 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114564465 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122459122 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120724246 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069710716 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118525519 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161825682 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097851853 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117462831 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299123771 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083133089 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139463695 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169407643 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145052453 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089100292 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108638121 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122442163 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12653646 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120881599 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136481986 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107311047 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13714714 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112686658 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089762645 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091023759 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098627718 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106580388 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097414869 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104683549 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115757934 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099480901 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131289728 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10595189 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112488748 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118989575 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103610424 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096526104 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099865522 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170986407 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11978997 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165346882 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103527201 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14007976 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157531343 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080026034 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083543016 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082752323 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13629064 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089004112 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130610574 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112780421 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11786355 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124445908 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138610069 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098553635 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073594218 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110428342 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131727618 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123847351 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100229192 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103700502 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157748286 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101150955 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081741474 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261431223 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118662548 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106588797 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165718367 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068440856 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109095942 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082217871 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084558563 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127340545 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148680105 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08553496 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103042294 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121699781 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11342747 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126543418 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100997235 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10983054 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124739319 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143965732 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127725788 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093564492 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11203171 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129844494 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151989433 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104670899 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101284871 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166893529 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148778997 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155048244 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089232518 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11591725 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115710165 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11119357 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13643642 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087667841 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157514449 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086035165 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134860282 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104304957 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09176001 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12841039 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113007861 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092243181 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143453371 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117658871 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086730547 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081733588 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116194811 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119246923 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105698861 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079814051 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286313269 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079678057 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134037545 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158836569 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085949929 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108000394 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098639408 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085259853 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10683263 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106245433 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090949424 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10418686 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16674012 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090154843 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144530836 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133358205 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112764891 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134070599 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105236539 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643213917 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082035448 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148299325 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115937917 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1667629 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103204726 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11911493 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111590767 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12115355 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141100294 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104339921 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181980277 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130706206 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117611845 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083019355 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104476816 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106283021 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090553184 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109497841 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115357851 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117167075 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096110692 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117377091 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123818126 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086488519 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099362739 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152614523 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115490072 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141457003 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13512935 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088102444 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118197735 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134789595 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233466021 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120355325 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147695989 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10864293 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101888205 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084805258 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101803781 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157176549 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078283795 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156761176 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124449396 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128490153 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115114204 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110227685 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130825937 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10591253 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122702959 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094726854 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109097633 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115315827 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085246005 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081096803 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107175095 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111675483 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102078917 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099256084 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10339374 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149296572 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077367783 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101183578 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117409329 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141018833 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166544399 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092166142 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086993141 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120937353 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117305195 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113798763 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122305654 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08343684 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085463844 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083732381 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086626261 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109667743 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115091027 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115836866 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111969031 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15771906 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087559843 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227900858 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097314245 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106115941 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074975086 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081361341 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098922257 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097916495 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255677295 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111206257 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157673113 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099668436 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094570804 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09499884 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080528343 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087346596 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127229751 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112610464 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119435586 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103684848 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068300739 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10812825 seconds)
  done (took 59.437854899 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107420415 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087558497 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101623764 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146667453 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127134633 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203394623 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155897167 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192978128 seconds)
  done (took 2.695822727 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074673306 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098771483 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107839214 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087739564 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072012037 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073101596 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227264517 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086063697 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071480983 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097263896 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081932236 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073971421 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.409806516 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071437582 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072233794 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067034735 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072733789 seconds)
  done (took 3.407306151 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.397551812 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.617805303 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345398347 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082389255 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.953740414 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095340923 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.300968992 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139055654 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083936484 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53338996 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.415192432 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136749152 seconds)
  done (took 18.670812804 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086759916 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079974326 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093709702 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092648651 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.08267365 seconds)
  done (took 2.004070559 seconds)
done (took 108.165347094 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088114072 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.42863231 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059420679 seconds)
  done (took 2.082747999 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090956522 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089639573 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.09009272 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.0872931 seconds)
  done (took 1.936135885 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079152409 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081660435 seconds)
  done (took 1.729240872 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229349588 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171709834 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100150385 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087309049 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084583889 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084622997 seconds)
  done (took 1.834134935 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077214583 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079536007 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077310773 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080555252 seconds)
  done (took 1.884395226 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080180179 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057793736 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0595989 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062551253 seconds)
  done (took 1.831824825 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090845344 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088372093 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083792878 seconds)
  done (took 1.835494874 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103987916 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092467227 seconds)
  done (took 1.768663069 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085545035 seconds)
  done (took 1.658120952 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092797371 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103542922 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135254837 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.1170061 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140990214 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117582866 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089629793 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089938608 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084098136 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091119134 seconds)
  done (took 2.632699544 seconds)
done (took 21.3500175 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083617538 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376937586 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364052979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094066534 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674109864 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361270051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987706834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096992887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144534444 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07313064 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08950264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654338818 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980716364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330155992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965454477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331781414 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654432568 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074159518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073458271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073590106 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976291886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073876957 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073557401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07454258 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655351146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378610944 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074161724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.351425692 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073895709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076001682 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.36110627 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074535786 seconds)
  done (took 16.27962373 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07516845 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123148266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077284146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089308766 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075345237 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075039385 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077033673 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075335886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125451118 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073807279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090466476 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073716206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077144194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074128997 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093074891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076616114 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075059194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074781038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074112384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07435805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092396208 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07425117 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073969281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074594799 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073755601 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085845729 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074306638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07445246 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074718645 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076147702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077228932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074499453 seconds)
  done (took 4.161860386 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121446068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128101673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079495286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109115656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116809525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076089301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148613636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098347881 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132421376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073765398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090752228 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074480047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106692045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074805452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093613927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074222575 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075123379 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07449843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07443488 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074300899 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092661739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074180433 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074230522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075163831 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0742037 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087740919 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074681377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074408843 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07433882 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075900523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077753896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074680276 seconds)
  done (took 4.412247432 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077924502 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080964595 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087529064 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088577849 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074757894 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077085146 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078651636 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074834839 seconds)
  done (took 2.227515654 seconds)
done (took 28.660667861 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083836915 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074675273 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078165606 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.093698144 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079478851 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083455598 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072135101 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081379066 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07868566 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079238224 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080383248 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072868348 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077025009 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072306416 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079473123 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073417339 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083899369 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077556932 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083723218 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084036154 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076289296 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078809546 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081097271 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083444179 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083418187 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083633561 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082401411 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078546447 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073801432 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076266682 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081441456 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088346956 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073262195 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083032708 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072835959 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073311798 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076902103 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072922924 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083253149 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081557813 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074988567 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082076015 seconds)
  done (took 4.890593165 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092700745 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097214841 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089376063 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067694206 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073097699 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070977532 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094112319 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065790043 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066200735 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093362448 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062832117 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065432055 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.068933266 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060578701 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066407147 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063606798 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067416871 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.06133816 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.065957441 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065454853 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094284319 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060316435 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082452432 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068908871 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062552256 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.067647885 seconds)
  done (took 3.49273613 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080053136 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087831479 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095728284 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147406556 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115506678 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083395907 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083981136 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097302635 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098560193 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072494791 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076495877 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098394069 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093023887 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079381384 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072751386 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08976647 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090674843 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074658944 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078239116 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099676877 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091203496 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090795769 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096706389 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087176683 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072182956 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075037108 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076344202 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085635375 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075548246 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08161385 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075433356 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075724191 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074742645 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083945098 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075236041 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074718977 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098732084 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083405799 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084255685 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073324177 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080959192 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07398401 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096556236 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128960821 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072420562 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078548054 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076319638 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083110943 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072384528 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099433903 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08388016 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072895649 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076162694 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071993302 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072627223 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075700797 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074540998 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07504737 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081613412 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078083869 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097018865 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077571957 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088678101 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072175217 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080981184 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072478121 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073855837 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072225543 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097319095 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074690244 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112767175 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074832093 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074085441 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082368438 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080745444 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079027488 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072464449 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088993928 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082894045 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076442499 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081610152 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077038442 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075648048 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.1021845 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075793542 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075474883 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074386132 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078071336 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075781687 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074144003 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085620748 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072930121 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075788488 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089468471 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072668768 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07443729 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078423951 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077355784 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073077337 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083892051 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07694765 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074233373 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082747919 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073119137 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07514105 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084444424 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079602663 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072017793 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076387975 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077712085 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073351571 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073893098 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074655832 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07381512 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081542525 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078994057 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076144997 seconds)
  done (took 11.17683176 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165796105 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156989245 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075773484 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149519248 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081903314 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083857272 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15022398 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097393965 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072968955 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074131336 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073357458 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112052208 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107536481 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118302013 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083151878 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073276747 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095398469 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116783134 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151937498 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148079444 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095873341 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080940743 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075478694 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07461131 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075074372 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083052686 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089911087 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081821086 seconds)
  done (took 4.477564756 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084282284 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107822544 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080027524 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095521291 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094500248 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073710224 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075129924 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075454793 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090111654 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082894201 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07309504 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077797322 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079658654 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076230482 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073879835 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080125439 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079367051 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074606998 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077026021 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.08045119 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083266912 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096821852 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076081774 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072238299 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078016399 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07220073 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068266433 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088100788 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073789819 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097339057 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070787477 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077860285 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087149289 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074264946 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073087563 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073089311 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073208587 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073329905 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075202497 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071197476 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071372337 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063391698 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.07285374 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083102355 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085985132 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062185043 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077593485 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078227918 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07840057 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070654815 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075933787 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076163513 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075669122 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080639531 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077583536 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078521181 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07423389 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081280996 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081442789 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073166933 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070028901 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071791479 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078113976 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070002607 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088217283 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077816734 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071859866 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073458423 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074753489 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08599851 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073050233 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078194396 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071052533 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075481855 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078057664 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074998211 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074591141 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071641546 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073110001 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073664614 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06123998 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073248313 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059219863 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075726913 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071489827 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071992885 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073136964 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07793911 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08365839 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074663048 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07866334 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074228678 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0727464 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075557486 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06546076 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075362668 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083547525 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087008544 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073398174 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071322489 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085723011 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078228388 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072185902 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063004218 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077252625 seconds)
  done (took 9.684359208 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095901916 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074803647 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086869922 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095213729 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090987583 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080005061 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082971039 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075060858 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089506726 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079582694 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082295855 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07345457 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08377949 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083192035 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07512301 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083685918 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077155078 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088274691 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087757013 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073446951 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082042871 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085500278 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094189986 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085978081 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084565846 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086578877 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094275958 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083102535 seconds)
  done (took 3.993868155 seconds)
done (took 39.298866534 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.685242569 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.941354374 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.671311537 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.992340603 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.75143893 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.873086316 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.77667096 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.665504289 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.870800323 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.70186883 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.989058655 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.733294539 seconds)
done (took 64.381322552 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.714230082 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.808334274 seconds)
    (2/2) benchmarking "String"...
    done (took 1.90437652 seconds)
  done (took 5.306702487 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.93462816 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.342470507 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.908699413 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.666440893 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.673542911 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.94098335 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.47098785 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.208430722 seconds)
  done (took 29.808223846 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.83673473 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.897126789 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.377754026 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.396613764 seconds)
  done (took 15.154892996 seconds)
done (took 61.606529152 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.674101514 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.671488796 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.672426076 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.652402972 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.728840937 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.678917639 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.02883853 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.715165254 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.669965491 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.654397141 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.669704737 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.104388658 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.680546399 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.842654025 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.671199595 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.679253302 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.692164881 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.110984853 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.826273435 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.68206712 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.691093746 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.703875243 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.670878974 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.674444597 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.684018087 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.669837931 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.063742592 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.67476993 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.502929083 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.674837076 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.717112932 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.07096262 seconds)
  done (took 200.502577427 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.668615071 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.719255217 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.78468405 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.674269614 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.10330463 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.851013005 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.776389821 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.136184194 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.674328725 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.684424565 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.942153224 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.670117303 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.968703264 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.614970389 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.717779227 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.67484352 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.914761484 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.961518367 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.723829141 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.838548416 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.680781672 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.7739707 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.735680634 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.915996044 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.669122059 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.695048755 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.678332712 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.695620316 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.863819716 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.891846212 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.71186513 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.690515185 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.877317087 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.542845294 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.690331215 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.701576551 seconds)
  done (took 166.51328728 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.855513495 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.671751837 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.670252462 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.670682149 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.67551423 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.67117691 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.794034982 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797467057 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.316480472 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.161778599 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.725477052 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.670268417 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.489453496 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.670356707 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.738429295 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.683475875 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.671388013 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.685867584 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.699171169 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.67201735 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.670897651 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79728471 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.683837813 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.670958976 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.678067388 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.672110672 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.677040731 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.042026368 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.670593711 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.884324156 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.672989604 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.67692179 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.912851635 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.672642538 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.671753005 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.529703267 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.478042126 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763666718 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.673465601 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.677145902 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.671947147 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.890313714 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.670925367 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.672157504 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.67247519 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.672111542 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.673878718 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.671393134 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.824454637 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.675158098 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.799078848 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.671783772 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.166807019 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.672731264 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.672574091 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.599936746 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.270337119 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.674491008 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.675893318 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.67364653 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.672747508 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.679798297 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.481817487 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.745002396 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.674358419 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.676182413 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.678468601 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.672722209 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.91319051 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.673838442 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.032716403 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.733924431 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.801136306 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797094233 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.675460362 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.740971926 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.767512352 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.673968406 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.674003059 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.67320035 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.673776642 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.755480437 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.675878026 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.672850417 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.801937036 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.682439163 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.674494171 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.726004557 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.742932971 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.674298031 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.521709837 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.676170619 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.672864685 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970777786 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.743946239 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.674196398 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.67387284 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.674304342 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.800511519 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79922311 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.390358307 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.676139399 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.572473722 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.81251427 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.675668725 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.830564622 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.67775324 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756494603 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.679829612 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.676712864 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.710169116 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.675918947 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.733982607 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.675550994 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.047504864 seconds)
  done (took 391.218720698 seconds)
done (took 761.747123237 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.285746272 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.254968448 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.352757381 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.264695733 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.250131396 seconds)
  done (took 13.011899731 seconds)
done (took 14.615948651 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.761344627 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.768538261 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.700665366 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.765656984 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.697093473 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.763163434 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.746298846 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.700593235 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.732241364 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.701923855 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.733689798 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.700520066 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.6876393 seconds)
  done (took 24.063299954 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.907267437 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.089496273 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.748695289 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.911109541 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.723658166 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.912828165 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.839850623 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.826058965 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.827619967 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.693255351 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.689318129 seconds)
  done (took 21.773708783 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.911385787 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.915786055 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.754154259 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.9087654 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.726792187 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.911195961 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.841961802 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.830025528 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.829489117 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.695622462 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.690313255 seconds)
  done (took 21.620087597 seconds)
done (took 69.060464244 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.684268409 seconds)
  done (took 3.288819262 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.714433202 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.897406724 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.692775198 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.696616174 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.687573598 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.687486736 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.696853886 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.685896726 seconds)
  done (took 15.365370672 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.682247183 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.682588218 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.683711595 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.686624821 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.685801867 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.682734748 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.682202237 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.685378128 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.686645576 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.682792033 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.68536923 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.68482249 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.685473884 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.682508994 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.684849066 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.682257507 seconds)
  done (took 28.552580252 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.684654683 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.683094218 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.682594571 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.683594044 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.683718444 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.682528875 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.683775419 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.683042026 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.681974126 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.682922759 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.684415663 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.683028059 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.682675628 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.684047547 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.683769001 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.6841824 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.68370823 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.683475645 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.688370934 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.683546346 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.683646671 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.684958144 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.686156835 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.684054346 seconds)
  done (took 42.020755009 seconds)
done (took 90.833165726 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.475825664 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.448024338 seconds)
  done (took 9.531034468 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.686147455 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.687348105 seconds)
  done (took 4.98539698 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.686989614 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.687211583 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.688623199 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.688815032 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.686849485 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.688023573 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.686489346 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.686991203 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.687099328 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.686385385 seconds)
  done (took 18.481173802 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.687407882 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.686593475 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.684105618 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.687188531 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.687148396 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.687123834 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.690218921 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.688858253 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.688784707 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.685220327 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.689382694 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.686719235 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.692677284 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.686415237 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.689260032 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.687280051 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.686865438 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.686226432 seconds)
  done (took 31.985885904 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.689049835 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.689402175 seconds)
  done (took 4.988816067 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.686841853 seconds)
    (2/7) benchmarking "second"...
    done (took 1.687872631 seconds)
    (3/7) benchmarking "month"...
    done (took 1.686948792 seconds)
    (4/7) benchmarking "year"...
    done (took 1.686567393 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.687516103 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.688201939 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.687276403 seconds)
  done (took 13.421937394 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.692706763 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.830655896 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.891139014 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.324821321 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.690946299 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.693734276 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.603579746 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.692943646 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.694710077 seconds)
  done (took 18.726037478 seconds)
done (took 103.728571126 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.54987148 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.685496243 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.942923807 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.791350388 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.705539667 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.026786703 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.706579928 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.976764811 seconds)
done (took 41.998180324 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.692325317 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.389926886 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.427639193 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.715233867 seconds)
  done (took 15.144733977 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.670749395 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.975949323 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.691254117 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.535124847 seconds)
  done (took 21.489357365 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.058487825 seconds)
    (2/2) benchmarking "read"...
    done (took 2.03565184 seconds)
  done (took 5.71092629 seconds)
done (took 50.651607097 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69174508 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.689450218 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.688812695 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.69174037 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.689402131 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.691308819 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.689069244 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.689137587 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.691613203 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.692088627 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.692539178 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.691150236 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.691925505 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.6920576 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692434456 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.690010154 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690373808 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692518241 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.689674225 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690170704 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.689651735 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.693195537 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.691788656 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.690836432 seconds)
  done (took 42.196569645 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.692685905 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.689868512 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.691478709 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.692347631 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.690367056 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.692962788 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.69359636 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.691103559 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.693515606 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.693439129 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690409333 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.690398723 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.692992421 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.690961061 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693463381 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.693865692 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.693120486 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692205872 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.694737347 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.690981025 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.694317486 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691572998 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.690459299 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.693215601 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.69158403 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.690449952 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.696924479 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.691418715 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693897208 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.690902677 seconds)
  done (took 52.382861428 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.698812506 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.702152144 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.696667514 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.693724366 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.695270687 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.693805155 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.693430879 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.694328103 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.694448784 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.694490676 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.693960166 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.695539704 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.694519425 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.694341229 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.694304119 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.693969762 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.694267725 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.694888653 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.694755907 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.695288201 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.694148744 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.694606291 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.695904453 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.693806771 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.695448734 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.695280682 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.69593458 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.69583625 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.695500287 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.695322808 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.695124845 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.695096494 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.696427193 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.695146 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.69645088 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.695755368 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.698762504 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.705579234 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.696561403 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.69485347 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.694518743 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.695475493 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.695816711 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.695170719 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.695730524 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.696264299 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.696058053 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.695620651 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.69612207 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.69625682 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.6966354 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.695532843 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.696042226 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.695748644 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.696793049 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.699485069 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.696481772 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.69631513 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.696470424 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.696397017 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.695885082 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.695987279 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.696986001 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.697106078 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.697517725 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.695728695 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.696967005 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.696821086 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.697196717 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.696787273 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.695951217 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.697160287 seconds)
  done (took 123.724331769 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.70019246 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.693724743 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.695356572 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.695310549 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.695378306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.69758703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.694403049 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698308753 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69625008 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.698170791 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697861922 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.695633891 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695245612 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.698340941 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697267851 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.696161381 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.698384449 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.697387404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.6994244 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.697866181 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.698719453 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.695507599 seconds)
  done (took 38.951571743 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.698152589 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.698482166 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.695256096 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.698142283 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.695231747 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.698543108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.699526718 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.698854216 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699212285 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.696326354 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696081575 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.698464815 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.698467856 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695921058 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695780156 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.695573918 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.699505586 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.696883853 seconds)
  done (took 32.173581351 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.697044379 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.697168379 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.699472693 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.696027696 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.697315442 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.699543095 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.696781728 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.699515883 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.700007301 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.696456446 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.700018703 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701083117 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.700150812 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.697355489 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700060767 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.697820276 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.70106606 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.697680043 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.700452276 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.697386241 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.699200495 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.69961042 seconds)
  done (took 38.991975857 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699624624 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.699933246 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.697650573 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.696618007 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.697331507 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.700090297 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.703667307 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.698573783 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.701487109 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.700412754 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.698969064 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.700574724 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.698802842 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.698493935 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.697803329 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.697689592 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.701092038 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.699004244 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.700244089 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.697857866 seconds)
  done (took 35.608108956 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.70203144 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.701488652 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.703589523 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.704253902 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.702262819 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.702486662 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.70149432 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.702895156 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.703463256 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.70244619 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.701164906 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.701967208 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.70241434 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.702739283 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.703650226 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.702943396 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.702692552 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.702944337 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.702938628 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.703141357 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.705515595 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.703055492 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.702465754 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.703066281 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.70320081 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.703817051 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.704104686 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.703777902 seconds)
  done (took 49.303808652 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.702669049 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.702227194 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.699331567 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.700443218 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.699229097 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.699104599 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.700419065 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.699844174 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.703503323 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.703060399 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.703819769 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.704486908 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.704019072 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.703315968 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.703567292 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.703554148 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70350218 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.702119089 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.700868764 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69918396 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.70429175 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.704210428 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.703580082 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.700632731 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700904981 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.703037564 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.702581341 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.703041287 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.704569705 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.70150177 seconds)
  done (took 52.690418157 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.722953075 seconds)
    (2/2) benchmarking "in"...
    done (took 1.722988063 seconds)
  done (took 5.06930645 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.701605458 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.703361641 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.703580151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.701168613 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.7018467 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.704335203 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.704178874 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.701831781 seconds)
  done (took 15.246161585 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.703615566 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.706222111 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.704932672 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.703936568 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.705916188 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.704682128 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.710804718 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.705551208 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.706195621 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.705863981 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.710821236 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.713100322 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.706800319 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.705083599 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.704724471 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.705797876 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.704162125 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.705389711 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.70484735 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.707744509 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.707400371 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.706988727 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.707888633 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.703518646 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.707141241 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.716606858 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.709136396 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.705442138 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.705806693 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.709590837 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.706584192 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.703176696 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.706419009 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.705499431 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.705053642 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.708068072 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.714060486 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.709298982 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.712237386 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.706683668 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.706945387 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.703849401 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.706717988 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.707265064 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.707980862 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.707426144 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.706645333 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.703606533 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.706696416 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.708951221 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.711961226 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.705682436 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.703899913 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.710033918 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.709412031 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.713527564 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.707850155 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.709892897 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.716669914 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.717435802 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.71952312 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.714509919 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.709283096 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.707864239 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.716828315 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.73081256 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.714566823 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.704277377 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.704718834 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.707699234 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.714305898 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.720332821 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.716233707 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.707956546 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.708393724 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.708386962 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.70788545 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.708632454 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.714805521 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.709632828 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.707703732 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.707763678 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.71870589 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.731117229 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.708609978 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.708907141 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.70955878 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.710119498 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.71080768 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.722824299 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.709366961 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.708973504 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.709257421 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.708833464 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.709478599 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.709603722 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.707808447 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.710203035 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.70514768 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.70883636 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.709707102 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.712123678 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.717705682 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.710076533 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.710020515 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.715305885 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.70831259 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.71000642 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.715537214 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.70906364 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.709178765 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.710218887 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.716448138 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.707102948 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712588074 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.71770021 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.709905982 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.71114208 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.710423517 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.709618679 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.71958088 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.736275871 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.710279977 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.710796761 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.715251825 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.726402639 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.711142857 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.712151689 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.710329678 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.707194955 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.707178739 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.710390818 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.710342844 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.711308618 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.711973478 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.711718896 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.708011691 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.710464796 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.711272492 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.712071687 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.71256342 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.712139018 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.715101832 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.713201135 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.712309528 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.713143485 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.717433996 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.710862807 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.713317421 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.713047563 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.709800141 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.711291979 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.712930037 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.713279951 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.712269493 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.712542875 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.711310026 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.711687477 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.712088267 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.712653579 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.711099304 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.712561609 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.715937655 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.713156394 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.715692717 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.71147773 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.708267755 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.71179362 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.712124143 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.712055348 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.712872407 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.710742298 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.715207435 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.720848361 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.71242381 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.712321705 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.714787557 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.715131286 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.713125607 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.713419005 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.716113616 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.721058329 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.713639103 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.718827157 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.713105193 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.71358685 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.712637838 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.713206518 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.713097441 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.71325376 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.716781184 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.721592112 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725855569 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.722866481 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.714989564 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.717951392 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.71564139 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.716836159 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.71762622 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.714801838 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.713057003 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.714538067 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.713518169 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.714867892 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.714282497 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.714156835 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.713682858 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.715382622 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.71382931 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.714970651 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714628548 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.715259324 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.715958931 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.71250715 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.715147036 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.714093279 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.714089232 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.711884708 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.713823782 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.714006613 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.71432962 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.71600805 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.721884959 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.712472094 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.715288677 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.716237968 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.716186828 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.713680604 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.716575163 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.717576721 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.715861352 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.721491654 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.715454934 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.715221753 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.721798071 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.71502117 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.713753015 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.717759499 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.715373683 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.712547421 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.718299183 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.72376304 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.71559178 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.715637919 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.716333566 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.715785863 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.716119036 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.723337704 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.712835927 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.71578055 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.716016761 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.717087591 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.712773899 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.71699792 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.716181281 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.717136547 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.718770718 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.716323571 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.71631826 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.717343101 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.717273439 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.717025275 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.716990146 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.720353529 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.725175438 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.724736967 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.717626714 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.717680113 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.717987696 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.720851908 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.718137124 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.717250028 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.716729527 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.729322402 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.726135295 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.724561491 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.719104599 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.718455049 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.72340004 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.718006398 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.722435014 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.71778039 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71863951 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.717625881 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.717008736 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.714560866 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.71828029 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.717555266 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.719491414 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.719095809 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.721297158 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.717609946 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.717002568 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.7187821 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.718385121 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.718173404 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.718476462 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.718780284 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.721942037 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.719156297 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.719168038 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.719906107 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.725275055 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.719264111 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.720184201 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.718723569 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.719007652 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.717714355 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.719568975 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.718592416 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.722286122 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.727590636 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.721879836 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.728569311 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.720714474 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.729828212 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.720620186 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.725553835 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.728315677 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.717279276 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.717981074 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.720145301 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.720912211 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.726597401 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.719711224 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.720107023 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.724611287 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.720076975 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.720294204 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.719069445 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.720885 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.719886583 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.720616834 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.727801093 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.722700906 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.725449287 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.721860345 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.718281453 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.722431647 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.720123857 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.719541054 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.72367202 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.7208019 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.720567912 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.719864842 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.720431358 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.721331284 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.721380457 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.720868745 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.717943394 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.720563705 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.727904608 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.724842232 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.726306636 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.72168999 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.728371203 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.721380604 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.728045913 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.722470701 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.721790912 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.722957245 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.720593874 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.724614074 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.721301455 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.722942964 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.721498961 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.721926159 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.725475472 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.722622957 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.724956065 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.723112148 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.723395549 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.721538381 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.731786854 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.747544949 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.723231422 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.72618265 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.720283348 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.723075608 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.728099562 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.723545492 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.722932979 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.726523572 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.733497476 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.731099476 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.723915337 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.722896339 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.727063582 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724429801 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.722414621 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.722673412 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.723581853 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.723601598 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.722953969 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.723523277 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.72599288 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.723244017 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.724467499 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724355038 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.724929904 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.733664659 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.724843461 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.72473694 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724133013 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.72554444 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.723415193 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.722954643 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.72447618 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.724078554 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.723235605 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.725670052 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.730613454 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.730654769 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.725709877 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.723049666 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.724214591 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.724436323 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.72504488 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.725191807 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.724674381 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.725556144 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.725641324 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.725583119 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.725642099 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.723762968 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.725256801 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.724991339 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.724543165 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.728370572 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.731680432 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.725366097 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.722728038 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.725360018 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72551556 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.724774542 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.724511573 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.732513915 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.728437637 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.736738729 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.737494166 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.728896965 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.725979382 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.727789017 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.734354304 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.723624288 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.725615655 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.72608784 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.726792299 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.726942343 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.729063321 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.726364884 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.732757202 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.725805006 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.724822199 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.734192827 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.728002514 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72749251 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.728873384 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.730327122 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.725173746 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.722403171 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.726919461 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.725571214 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.733209762 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.728182095 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.72656379 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.727591572 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.724856758 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.72733863 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.731172959 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726727216 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.727211248 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.723994445 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.727667461 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.730390884 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730193591 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.724426877 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.726290923 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.726419031 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.730813345 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.735468028 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.724255214 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.728177181 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.72842384 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.728619136 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.727223668 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.727096638 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.724504242 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.72528645 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.727952515 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.728417568 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.727439127 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.730076515 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.726655641 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.729451406 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.729654749 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.728459558 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.731519644 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.739112263 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.735932099 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.725586066 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.728221009 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.728750676 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.730062114 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.729136206 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.729027127 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.72922281 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.730007245 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.728621009 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.730808232 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.728039548 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.731844393 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74359092 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.729607823 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.729583851 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.729319995 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.731630659 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.728962474 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.725609811 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.729005654 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.730968419 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.731927278 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.737796957 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.729390621 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.735110269 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.728854276 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.73226335 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.734124836 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.731398556 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.73797887 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.733746332 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.728778224 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.731035122 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.734083723 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.746826526 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.729678092 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.740172137 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.759291972 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.730419504 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.730945886 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.731175728 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.729525792 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.730921251 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.732642502 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.731750043 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.730252487 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.72951591 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.731072582 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.731197253 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.73753819 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.732692329 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.730023198 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.731467732 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.732405131 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.731674692 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.72759382 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.731760325 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.73291035 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.73036515 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.729977661 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.731616351 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.732655154 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.744318965 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.741401063 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.731839543 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.732381837 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.72813721 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.735133237 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.735252902 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.742559301 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.73991587 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.73263094 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.730648492 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.733508539 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.732067937 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.728247616 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.732249222 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.730853821 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.733778318 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.730235387 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.745220991 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.740367713 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.737107585 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.732183944 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.73290592 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.732920136 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.732926675 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.73183094 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.733045188 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.733246383 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.732662769 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.737358003 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.732267305 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.732721024 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.736181665 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.740757453 seconds)
  done (took 1027.064870281 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.730498352 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730742848 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.729802233 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.72907812 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72965095 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.73019865 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72906545 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.730841264 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.72947248 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.730391777 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.729947583 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730003073 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.730081493 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.731452499 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731114546 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.729732228 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731310619 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.732265716 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.729994272 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.730688691 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.73066776 seconds)
  done (took 37.990374209 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.732975588 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.730465916 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.731174256 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.732617589 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.730216981 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.734402501 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.732002949 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733756013 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.733717551 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731414427 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.734192215 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733441311 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.732703196 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.731023342 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731274089 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.734116992 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.734307048 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731250017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.73452452 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.731942008 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.734361343 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.732734985 seconds)
  done (took 39.772737804 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.734443538 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.735262407 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.733536842 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.731561542 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.734832395 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.732106158 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.737585299 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.734872445 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.735318081 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.736029108 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.734461371 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.735756546 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.742857258 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.739996737 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.738101343 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.7356675 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.878496569 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.7363798 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.736336574 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.735396802 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.732271766 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.741139231 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.732947385 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.735546222 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.735299499 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.736260734 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.735563103 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.736572413 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.736686136 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.737075658 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.741632041 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.73694638 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.735270875 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.737819248 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.734951114 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.737819485 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.740540237 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.739383144 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.734770588 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.737086125 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.747472493 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.757784385 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.737992841 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.743144051 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.737121869 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.736070272 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.740332854 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.745441442 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.734067701 seconds)
  done (took 86.92851395 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.737056288 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.737177313 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.734557004 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.736734983 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.73708691 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.737804851 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.737232286 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.737645418 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.734881941 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.734934758 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.738641247 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.736315018 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.73490832 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.737772976 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.738879317 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.733469676 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.733350275 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.733513993 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.733396231 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.735036322 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.732175668 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.736370348 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.737022588 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.732708648 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.736553315 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.734723263 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.73325511 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.737450731 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.732859796 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.732417745 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.73547619 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.734842826 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.734714871 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.732192319 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.733613892 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.735596947 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.735906906 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.733144854 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.735479369 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.733161273 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.737407049 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.734987194 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.73702813 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.735053206 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.732522828 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.732787325 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.733345281 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.733331688 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.732656827 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.728071218 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.728167986 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.7255719 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.72680158 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.72573528 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.728139929 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.727255243 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.726434667 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.725478333 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.727106453 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.725483226 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.725240278 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.723415342 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.720461448 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.722708603 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.721791594 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.720918011 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.721669222 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.721894151 seconds)
  done (took 119.449564888 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.72561895 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.723073183 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723329673 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.72369035 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.723471872 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.723262317 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.724170199 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.723995835 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.726666438 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.722872057 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.723469466 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.723021868 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.723253342 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.723864317 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.724104456 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.723030622 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.723107005 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.723713452 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.723619444 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.724374687 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.724072313 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.723921645 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.723643667 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.725550307 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.723961741 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.724213625 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725288572 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.724864918 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725570216 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.724601888 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725917243 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.726800159 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.724116694 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.725737199 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.723814488 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.725219447 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.723985995 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726103508 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.724633543 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.72547212 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.724881227 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.724402461 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.724804482 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.726313997 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.725567238 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.723971426 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.725072273 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.724581236 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.724707263 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.726726913 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.723942096 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.72407665 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724684794 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.725604214 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.725611059 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.725682411 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724867092 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.724657934 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725280286 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.725835811 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.727632316 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.724461295 seconds)
  done (took 108.571680477 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72523661 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.723846626 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.722663991 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.72261155 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.724563971 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.721587006 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.725132404 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.723053031 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.726308293 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.725284346 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723121873 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721791946 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.722500903 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723984493 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.721596119 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725193863 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.722876217 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.722587336 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724537781 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.722490197 seconds)
  done (took 36.115259678 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.722869017 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.725533018 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.721930839 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.722819623 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.724929823 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.722834842 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.725639414 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724530347 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721416173 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725182826 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.723292057 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.728518243 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72183719 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.720830143 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.722634053 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.720941677 seconds)
  done (took 29.221146039 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.720190701 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.722814727 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.723101335 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.724171264 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.720842421 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.720980376 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.724119374 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.720524721 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.719743076 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.725037005 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.723079506 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.723784779 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.724855405 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.722693306 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.719619314 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.72356611 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.720086736 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.721633681 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.725636893 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.723664485 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.7211739 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.721415375 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.722811631 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.723935139 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.721112665 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.721783993 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.721335234 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.720808257 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.720572932 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.725363486 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.720960273 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.720809051 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.720745403 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.722755644 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.72441723 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.722284487 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.725069009 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.724006059 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.724299596 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.724421603 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.722849791 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.722171934 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.72500806 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.723627658 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.721610441 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.723989582 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.721378246 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.723054481 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.721299622 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.721510286 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.724677151 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.726067232 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.725410841 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.725356649 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.723941223 seconds)
  done (took 96.396511583 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725625222 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.725308475 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.722237208 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.725300538 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.723501505 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.721815771 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.724150277 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.721839861 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.723360642 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.722681465 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.722271705 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.723331216 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.720839174 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.72264751 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.722117625 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722957581 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.719439033 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.721305131 seconds)
  done (took 32.655588419 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.720172856 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.721003174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.722552422 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.719154188 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.718933336 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.722902107 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.719671018 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.721522478 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719531131 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.716623842 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71584322 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.720143864 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721934255 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.719231895 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.716224694 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717856369 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.720361524 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719138116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.717811052 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715962856 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.717981005 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.718327669 seconds)
  done (took 39.467799793 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.719525676 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.719427481 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.733465068 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.739187391 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.740875935 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.753369162 seconds)
  done (took 12.044158235 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716317891 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715192946 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.713388694 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717896811 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716018412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714616133 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71552215 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714138848 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716077481 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713381282 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715107034 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716278987 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71673835 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713789047 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716117084 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717151897 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71401242 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714611126 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713942151 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715402966 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71431553 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716636575 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713738676 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715171624 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713077661 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713897179 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71606641 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713626258 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714847978 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718961628 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717053693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712022739 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71623004 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713710438 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715325442 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715999674 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714022551 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716324672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715931484 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714311167 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.716661776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717262602 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716163738 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71344412 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717340797 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713848263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712827036 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717200549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71445846 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717290632 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716500445 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713624926 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716698859 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717195522 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71523839 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717262258 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715361137 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714315533 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716919332 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714051382 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714210676 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717086819 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713881747 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71351677 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717637986 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713091218 seconds)
  done (took 114.850799975 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711548175 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.713324529 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713264488 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713940618 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713134608 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713102907 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712989678 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712826632 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713818466 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712406887 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715192381 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713159481 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713165871 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712831837 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712554543 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716168317 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712496828 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712266642 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711285766 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71623681 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713174397 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712377041 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711920347 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712926358 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713543207 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714070087 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713765527 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712744836 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713158136 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712619031 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713401663 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711745607 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715820543 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.713245955 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711587492 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712242766 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713822173 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71438322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713430714 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714230073 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711928247 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714493026 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713016909 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712203277 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713000788 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712817835 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712788127 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71155848 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712250908 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713764282 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716208468 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711808401 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712893542 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712999637 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711512542 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713640054 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712562428 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712927419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711645591 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716119282 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712269512 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713671547 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714934934 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711529086 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712123595 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712871565 seconds)
  done (took 114.705615458 seconds)
done (took 2383.19150032 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.749973449 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.705757338 seconds)
  done (took 15.090462749 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.876680718 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.825967462 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.71413809 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.732627747 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.712796686 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.734505659 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.723867767 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.712959329 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.713615822 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.711987484 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.712313495 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.899351356 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.713288135 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.713915817 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.713684997 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.804784554 seconds)
  done (took 49.653988763 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.715292468 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.716913737 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.727559381 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.717920445 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.715035406 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.728610239 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.748631234 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.719281656 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.751717283 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.729945609 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.784318326 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.727289378 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.715219262 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.764065551 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.731154071 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.729990488 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.804519726 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.790505522 seconds)
  done (took 32.951250824 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.793700606 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.717771908 seconds)
  done (took 10.152432403 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.72958063 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.708414828 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.764782351 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.731823695 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.712167382 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.727175939 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.737034373 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.738926135 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.72052409 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.728898602 seconds)
  done (took 68.936684044 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.719898138 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.716859911 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.716958552 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.714810194 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.709092068 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.712667783 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.714082416 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.709683805 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.379814313 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.752441921 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.723352561 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.720089575 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.71395212 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.716529752 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.713198025 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.739211206 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.830721201 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.711590896 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.712456015 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.721457546 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.714411943 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.770058739 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.728600344 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.71507716 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.744265092 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.379048257 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.723324242 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.723900045 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.813022954 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.71292851 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.714256375 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.715352969 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.718268372 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.119868831 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.981422807 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.715082514 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.729674133 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.723771603 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.712304973 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.831164817 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.717952451 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.72440984 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.411330605 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.962309644 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.817323117 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.756973881 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.038948144 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.734201545 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.719244866 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.746636271 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.717008372 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.716963792 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.730106358 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.195112592 seconds)
  done (took 123.76409998 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.710263962 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.063336352 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.880965964 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.713670118 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999653396 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921696696 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.712553271 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.762065513 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.715215029 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.947726978 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967665751 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.819051438 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.714879448 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.714190195 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.71280554 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.711284052 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.869547599 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.785734105 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.713437737 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.71018216 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.742569772 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.956732917 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.836434222 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.716890155 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.743076397 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.926847383 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.83565527 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.818619766 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.498539541 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.711068032 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.779171678 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.714967256 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.713930238 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.710496571 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.871548802 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.810137576 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797282557 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.714597908 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.710679778 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.713444742 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.373401087 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916526063 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.810774649 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.845224962 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.966826866 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.92006364 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.49763044 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.713663158 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.451148072 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.880937808 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.942713907 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.948114071 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.836551185 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.71417353 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.062471786 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.711155538 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.711879995 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.966070667 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.935753245 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.813120027 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.714121051 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.71207427 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.712975693 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.957083839 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.717375244 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.812722401 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.716665925 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.715087588 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.811566901 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814527601 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.94714758 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.931596161 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.747060243 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.056631745 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.227346158 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963874311 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.780944905 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.965901254 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.716488959 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.712454406 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.794027749 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.563025771 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.97004182 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.960589222 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.963554656 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.750338783 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.436637524 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.71386528 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.944052129 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.938130772 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.976198229 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.960958346 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.955553511 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.051643816 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.713994468 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.713467673 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.96859112 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.841749372 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.716393603 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.060928139 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946629144 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.244266665 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.743717843 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019868129 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.850904308 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.718227826 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.347156875 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.714583555 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.945486579 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.755739452 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.716140134 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.716742116 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.937365287 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.706537069 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.715436466 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.372617719 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.779416089 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.719830078 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950078987 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.720456393 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986025792 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.717014067 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950411188 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.154600619 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.750106581 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.892623202 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.964723717 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.717859172 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.960357893 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.961955349 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.832408838 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.939044412 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.431643904 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.714873612 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002354094 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.717671083 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.714762013 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.887879057 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.716591724 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.860648307 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.720593521 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.010536508 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741400641 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959206031 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.718269349 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.977718082 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.752487178 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.769601081 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.719253772 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.850879305 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.719007816 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.970911407 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.877313776 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.721967682 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.718363813 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.271844469 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.718443771 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.870936935 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.945018734 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740170172 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791481451 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.390548816 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.714983952 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799657135 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.744077992 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.118851927 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.717288249 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.972260003 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.71922378 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.716711743 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.717960377 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.955078919 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.902423316 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.720831898 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.718957115 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.630348762 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.717825766 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.717264489 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.901067111 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.074501767 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.718142879 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921944277 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.720075808 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.846265125 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.722925569 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.80563514 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.057560794 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.718307166 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.719105322 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.717241848 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.718161643 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.720041866 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.928740091 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.746557747 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.216298175 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.858489844 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991779068 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.031343864 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.962616367 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.76352256 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.722299154 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.977255814 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.72043739 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.784679679 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.722376904 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.743555604 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946096138 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.722093145 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.931756189 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.994274897 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.563922254 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.772885602 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.721351114 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.720313635 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.719096394 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.864691445 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805431185 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.723702453 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.718863631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.836487759 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.841321366 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.932176135 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.720824873 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.784026489 seconds)
  done (took 868.746968348 seconds)
done (took 1170.932643928 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.72083789 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.722773714 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.71085082 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.727917682 seconds)
  done (took 28.528918008 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.733976244 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.72759173 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.734023122 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.728295138 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.729591933 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.731886351 seconds)
  done (took 12.033987661 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.791589575 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.726408182 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.729232896 seconds)
  done (took 20.895503186 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.797508212 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.110878106 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.831922798 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.153668939 seconds)
  done (took 9.542386615 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.730468384 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.729222472 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.729915486 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.731160686 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.735550081 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.734018321 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.731235256 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.730907315 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.735336617 seconds)
  done (took 17.237914005 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.728319476 seconds)
done (took 93.613802441 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.878100411 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.964958019 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.80722047 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.028400232 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.837286123 seconds)
    (6/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.744532522 seconds)
    (7/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.218769307 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.865772966 seconds)
    (9/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.226663808 seconds)
    (10/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.020128721 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.741581869 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.074505268 seconds)
    (13/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.094661139 seconds)
    (14/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.804865062 seconds)
    (15/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.912486986 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.739607123 seconds)
    (17/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.896822839 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.09369131 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.761857869 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.90110633 seconds)
    (21/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.97250541 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.905822107 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.89943638 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.766421081 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.659758483 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.84246257 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.032936048 seconds)
    (28/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.742899491 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.570827198 seconds)
    (30/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.809734937 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.743640627 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.518077761 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.746861097 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.753137111 seconds)
    (35/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.728209897 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.048936044 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.914284682 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.841141937 seconds)
    (39/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.29736143 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.86194773 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.025079026 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.745175176 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.87963489 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.42927902 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.023844203 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.286980501 seconds)
    (47/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.75070238 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 1.956904134 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.760154662 seconds)
    (50/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.87359225 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.60835142 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.467724543 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.082129042 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.995681452 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.217849796 seconds)
    (56/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.769920047 seconds)
    (57/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.822145883 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.894751682 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.760784923 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.753444105 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.829384424 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.124720586 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.006114839 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.741665837 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.749559711 seconds)
    (66/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.911847282 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.829485362 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.969700163 seconds)
    (69/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.743908948 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.759925249 seconds)
    (71/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.626411991 seconds)
    (72/309) benchmarking ("sort", Float64, false)...
    done (took 5.53964863 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.087017333 seconds)
    (74/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.851461456 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.877746936 seconds)
    (76/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.130192354 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.741293147 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.737199057 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.878684801 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.385168532 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.618912085 seconds)
    (82/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.611716644 seconds)
    (83/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.199082097 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.783689416 seconds)
    (85/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.754690681 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.645874606 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.809738837 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.016054925 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.537439264 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.115968293 seconds)
    (91/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.75529201 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.74080494 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.680068372 seconds)
    (94/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.808929166 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.002191939 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.771961749 seconds)
    (97/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.757977237 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.894647887 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.773474553 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.896110312 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.81786643 seconds)
    (102/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.750130639 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.070450158 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.74639589 seconds)
    (105/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.937762623 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.728675097 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.954089212 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.014408395 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.035442556 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.24066878 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.954132137 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.766157331 seconds)
    (113/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.806603794 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.829553516 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.913915782 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.874668361 seconds)
    (117/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.905748354 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.741747584 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.986441024 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.80587006 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.976345807 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.058398147 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.842358004 seconds)
    (124/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.132619538 seconds)
    (125/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.780494061 seconds)
    (126/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.74410131 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.918398629 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.767083525 seconds)
    (129/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.843736074 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.733067194 seconds)
    (131/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.00497556 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.778969865 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.846894139 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.004820903 seconds)
    (135/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.941223606 seconds)
    (136/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.846494526 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.982550673 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 5.488846011 seconds)
    (139/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.886809605 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.613833189 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.84819408 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.766410192 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.994555432 seconds)
    (144/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.744833872 seconds)
    (145/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.521728163 seconds)
    (146/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.905588716 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.77709334 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.854978558 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.918464392 seconds)
    (150/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.993579757 seconds)
    (151/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.749273662 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.155454874 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.751924231 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.193582437 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.257453704 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.728976388 seconds)
    (157/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.762610143 seconds)
    (158/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.823799627 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.458151529 seconds)
    (160/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.838327019 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.103857651 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.847953857 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.867722403 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.1350069 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.10942908 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.83548829 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.028803182 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.695018828 seconds)
    (169/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.979901527 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.73629355 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.977090819 seconds)
    (172/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.064977181 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.9779622 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.075229495 seconds)
    (175/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.834016939 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.744847261 seconds)
    (177/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.770579292 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.770058556 seconds)
    (179/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.842184737 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.37704203 seconds)
    (181/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.838950299 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.159113143 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.839047471 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.735218457 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.144342023 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.027524493 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.772458126 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.729394047 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.912550736 seconds)
    (190/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.986590747 seconds)
    (191/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.856586298 seconds)
    (192/309) benchmarking ("sort", Int8, false)...
    done (took 4.649722426 seconds)
    (193/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.935379229 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.44970795 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.772705642 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.68512533 seconds)
    (197/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.854866205 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.968862981 seconds)
    (199/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.829404422 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.073478542 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.098369548 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.687619324 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.753452463 seconds)
    (204/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.837007932 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.144296995 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.098522427 seconds)
    (207/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.862148123 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.820373614 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.731101989 seconds)
    (210/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.18203642 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.747405348 seconds)
    (212/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.328585088 seconds)
    (213/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.224799119 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.048009559 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.999193809 seconds)
    (216/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.751987373 seconds)
    (217/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.931174127 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.865822083 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.551321796 seconds)
    (220/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.877959232 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.619315213 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.950960771 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.732511015 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.828712551 seconds)
    (225/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.823325328 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.846036268 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.674431959 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.834322672 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.749086799 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.749879233 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.82337502 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.778500813 seconds)
    (233/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.872140271 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.187199343 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.770983419 seconds)
    (236/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.756547464 seconds)
    (237/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.604665804 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.86893761 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.774616667 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.859889366 seconds)
    (241/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.829403254 seconds)
    (242/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.995836182 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.868142844 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.73558977 seconds)
    (245/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.326292536 seconds)
    (246/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.841391442 seconds)
    (247/309) benchmarking ("sort", BigInt, false)...
    done (took 6.75317144 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.752067354 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.089728447 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.944673204 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.062902095 seconds)
    (252/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.915642502 seconds)
    (253/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.611962283 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.517919493 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.916962822 seconds)
    (256/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.822853119 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.893229112 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.067644058 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.751368375 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.487249058 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.474156215 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.732899999 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.142183521 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.148690976 seconds)
    (265/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.174731 seconds)
    (266/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.199669796 seconds)
    (267/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.025051154 seconds)
    (268/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.037799065 seconds)
    (269/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.756356437 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.238084708 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.974418213 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.786165412 seconds)
    (273/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.933337816 seconds)
    (274/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.783475327 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.085982088 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.746999347 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.078772955 seconds)
    (278/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.798420822 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.766148628 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.070236473 seconds)
    (281/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.928843339 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.749435089 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.166007827 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.150887294 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.751390302 seconds)
    (286/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.77994016 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.047710199 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.954047567 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.748245061 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.81482437 seconds)
    (291/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.301424824 seconds)
    (292/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.756283103 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.07888966 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.435639872 seconds)
    (295/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.952361759 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.750372563 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.380960903 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.917594693 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.881346967 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.053761707 seconds)
    (301/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.565493947 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.878054551 seconds)
    (303/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.891152749 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.790702382 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.128502543 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.103497088 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.73918748 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.839683106 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.013397002 seconds)
  done (took 971.204536906 seconds)
done (took 973.136431897 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.783430294 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.774208275 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.760070625 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.779090331 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.868760323 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.785610351 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.768743304 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.761063189 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.80539628 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.810412543 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.754744043 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.78403705 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.760551335 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.758864766 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.758042828 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.772629695 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.07687216 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.791951853 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.77730948 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.767017204 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.776253907 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.75661941 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.807758664 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.785528647 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.76392133 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.761608059 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.763298653 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.779462493 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.871138333 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.762824293 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.763295388 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.770888893 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.076025432 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.789604008 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.754635933 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.779605463 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.77097653 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.76932812 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.765822921 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.792039075 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.161155402 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.797638925 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.761618339 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.761589628 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.760836208 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.764146096 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.762478657 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.767427303 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.772366787 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.775591675 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.153323351 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.818260473 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.764185605 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.761823324 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.772106386 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.762510677 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.765402787 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.778724467 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.780397005 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.775723673 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.06082209 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.796005195 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.763101546 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.780332377 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.768154963 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.189703204 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.797481369 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.766692033 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.162593635 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.806047596 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.188013145 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.810082697 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.763366734 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.777293068 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.79526664 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.077776944 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.788665475 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.761396667 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.770234319 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.758727772 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.771735652 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.773798276 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.767959083 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.76277525 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.77646274 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.791155116 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.772636023 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.763948636 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.771647787 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.780291013 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.772179524 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.772799636 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.767934913 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.758096113 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.773107449 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.768699301 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.764445935 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.764193148 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.769854568 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.773024084 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.160251238 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.821171871 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.759082277 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.759965037 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.76441854 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.776981141 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.161453351 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.803808677 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.785863998 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.811586904 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.765892712 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.060747857 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.797425689 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.779964311 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.772478732 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.768915992 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.758274837 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.059842024 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.187537579 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.819453369 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.766237761 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.7605857 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.78090085 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.76624707 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.761395034 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.079664269 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.796208696 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.777454624 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.889281769 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.775153653 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.796576935 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.761455196 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.768358251 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.797020905 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.780109473 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.796681081 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.768543512 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.779982068 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.781729355 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.762430397 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.776179718 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.775097253 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.767313504 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.772120625 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.761218037 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.797307918 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.778401711 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.778753417 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.787334132 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.887778701 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.76383611 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.06205764 seconds)
done (took 277.486281787 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.834427412 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.763024674 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.860780613 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.763001599 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.84401287 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.848873671 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.759097743 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.761552375 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.761312342 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.137096124 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.761549882 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.761048002 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.759702657 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.762307127 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.846049462 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.763169044 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.762687274 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.099569176 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.76462694 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.8384901 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.764602677 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.763868286 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.765405562 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.137883775 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.76595768 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.761444809 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.838579539 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.763683443 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.101892496 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.759278121 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.762326995 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.102610305 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.85550232 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.783011581 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.775203398 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.77075914 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.846990145 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.769755751 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.847603277 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.846848234 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.863070349 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.805013174 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.766104548 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.758114879 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.767405105 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.7663861 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.761300706 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.793683529 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.759433605 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.773123499 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.099926115 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.776289994 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.762873289 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.762301215 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.76279745 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.796210033 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.763053457 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.766799797 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.85446276 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.766441546 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.827017728 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.140988538 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.140194591 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.76620699 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.765664032 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.764139749 seconds)
  done (took 177.246307958 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.831481235 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.843557639 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.831945786 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.773602954 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.814605536 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.833279119 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.772685623 seconds)
  done (took 14.383990645 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.772386934 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.766841278 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.817493437 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.820129192 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.767037834 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.922378234 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.768235313 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.77854463 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.764674639 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.792078316 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.767994538 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.767602455 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.774517539 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.761307896 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.818449827 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.778354733 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.882957045 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.768160214 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.768979386 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.917026979 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.765702734 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.774120244 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.79178255 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.778376923 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.767674729 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.771897327 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.360659013 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.767956621 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.764069678 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.767727359 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.764601036 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.809539074 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.768043632 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.76562553 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.766493346 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882596385 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.769266177 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.766206164 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.769095098 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.763268264 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.767964031 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.768145346 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.769744901 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.766397191 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.767859834 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.789531659 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.768012134 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.769591486 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.769524228 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.768430604 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.793410372 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.76785387 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.765090421 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.766371922 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.811147412 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.775184666 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.769385734 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.765574176 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.769687926 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.768142578 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.920443849 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.818921839 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.767689384 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.820755643 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.770087736 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.770948718 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.768787092 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.768406155 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.864416002 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.770596953 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.819181728 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.766084645 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.927123312 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.791951267 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.771816409 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.772177067 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.775071146 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.770964286 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.769736613 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.776654275 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.76727156 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.770643168 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.777145592 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.769179013 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.767576722 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.881549077 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.905755199 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.767846669 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.784708448 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.776938525 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.767212097 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.813982109 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.77074019 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.767579191 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.827243475 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.887081994 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.797067427 seconds)
  done (took 195.834285049 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.774695935 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.778461473 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.769727302 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.788667976 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.770497993 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.770151594 seconds)
  done (took 12.339926367 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.77347656 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.774543186 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.771852047 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.770081687 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.771723009 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.772371541 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.770981965 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.772591009 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.777570291 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.771173023 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.772964843 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.774818917 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.771871565 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.77415261 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.773296994 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.770746519 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.771718096 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.767286858 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.771042782 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.772733277 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.914588223 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.771307757 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.772983199 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.771782177 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.776304866 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.770819971 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.778363079 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.770811642 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.770986733 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.780435737 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.778271734 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.771928368 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.772655093 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.778801977 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.776928732 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.774840436 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.77592877 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.775607859 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.770656968 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.774040375 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.776204553 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.775206641 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.77219255 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.775857812 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.77497127 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.777074928 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.780332268 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.780611835 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.773089337 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.776663055 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.777094091 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.772274409 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.775901601 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.776448 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.775273393 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.778907594 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.781239037 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.773497293 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.773212557 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.772805993 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.774292084 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.774522483 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.774736829 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.778995049 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.779879511 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.776382667 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.77393319 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.77708571 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.773690565 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.7743875 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.778935469 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.770399463 seconds)
  done (took 130.59153604 seconds)
done (took 532.096618998 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.92060062 seconds)
  done (took 8.611047494 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.845832705 seconds)
  done (took 8.579204658 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.256977055 seconds)
  done (took 9.955281418 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.782425605 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.799888131 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.785345808 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.775424521 seconds)
  done (took 28.86327999 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.854840765 seconds)
  done (took 8.548635636 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.796493099 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.773716955 seconds)
  done (took 15.30242021 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.929677235 seconds)
  done (took 8.623694766 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.87128687 seconds)
  done (took 8.576382925 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.787077461 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.772776598 seconds)
  done (took 15.269975929 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.757826352 seconds)
  done (took 8.452645098 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.437451177 seconds)
  done (took 11.231328505 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.795282743 seconds)
  done (took 8.60003739 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.841998333 seconds)
  done (took 8.536622714 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.843115266 seconds)
  done (took 8.538416436 seconds)
done (took 159.380943125 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.776606882 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.772453331 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.770233257 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.771858246 seconds)
  done (took 28.785766531 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.810543442 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.81164372 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.812904748 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.822720427 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.813353466 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.811747458 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.804158845 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.805415049 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.822666967 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.814845201 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.812775722 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.81388863 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.811386641 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.804457942 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.814120376 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.813082888 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.821689956 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.812631122 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.804158925 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.813833485 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.779026448 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.822923765 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.815761386 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.781848418 seconds)
  done (took 45.147601178 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.972577898 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.849958659 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.932723289 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.832568033 seconds)
  done (took 9.284626384 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.830943584 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.832739664 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.844174151 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.883178216 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.918179167 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.841668251 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.805147292 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.801228726 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.787526657 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.834141319 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.910395242 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.827358148 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.9168202 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.779435339 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.959140874 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.778967917 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.779025866 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.830715014 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.882930479 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.895105503 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.781118317 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.83142049 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.8350426 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.827329113 seconds)
  done (took 45.910573556 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.778332297 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.789206744 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.783999959 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.779631645 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.781601751 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.779259309 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.785402541 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.780321927 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.800133162 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.779937034 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.778740833 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.780202333 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.778394042 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.780808353 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.779438303 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.79050867 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.792999946 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.779802311 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.783385685 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.786103401 seconds)
  done (took 37.36567518 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.773640531 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.627077295 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.125452279 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.031577786 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.776279048 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.778079974 seconds)
  done (took 30.808812129 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.796219375 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.788359198 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.780983658 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.838153107 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.921260199 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.788939345 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.780896518 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.793853668 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.827665689 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.846507433 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.801672211 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.810232417 seconds)
  done (took 23.474191321 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.778824306 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.817252691 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.779174331 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.831832398 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.792304273 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.79171217 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.787649532 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.776087402 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.793729674 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.802390831 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.792307871 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.793113592 seconds)
  done (took 43.239399512 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865172244 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.664385183 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427452012 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501412646 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.31248956 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98780519 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.305885812 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.958356409 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.780698227 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051693752 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.4262731 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028318872 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.030323994 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777508178 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850055991 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.259655578 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081288369 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021010833 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809172677 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.468897871 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902940566 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341834683 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.561224054 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.910106825 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987148475 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.911645375 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.038083482 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.734163162 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915585712 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815088642 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789248034 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778282685 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052457802 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99935356 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866587884 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788419733 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.432715475 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.494265017 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.768987429 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.477916597 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.498361172 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.91941521 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786776601 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780148241 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.712207759 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320925176 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965338947 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.786108621 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.480286744 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.779391948 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.789045221 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866232894 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.782210449 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.597210926 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732014704 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.063776107 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.77766986 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787012756 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332665907 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897216182 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466143702 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.722483003 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.872113041 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.535402378 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260351592 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.937584105 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.783192816 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783429387 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712670282 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.530743051 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908736892 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925638029 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.799385408 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430395602 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086248217 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.4933613 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87119312 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082263438 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.615393403 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.723060972 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006483441 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.736250667 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716765118 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.618541011 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.714298222 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058498472 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821229111 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.45554797 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825522926 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.955437606 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.791168852 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800690738 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787465714 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.002640157 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.668817941 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782633804 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.370923383 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071363604 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802656324 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.959633284 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714015835 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.786004052 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03586891 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.99480448 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.060127955 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.270046285 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951469897 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782689056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.871345181 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.731121356 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798762525 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.066838643 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853021207 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.89450259 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917030461 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.738861453 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093867438 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81483904 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.957525192 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.44492618 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0535674 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.135120452 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037221428 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866282857 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.784193891 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.782888897 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.571395287 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420051768 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.006111587 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.784966654 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311703309 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.801169732 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.785429569 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717805969 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.447911336 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.428260306 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.910616419 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.006783818 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.78171762 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064942801 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71678279 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928918736 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.782845327 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.007004835 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.452413483 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.868882241 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04245524 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297880976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.060097848 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801845895 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803210451 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869350285 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807178678 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.247376273 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.044802419 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.788161982 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.78970075 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.551582257 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867547615 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786954686 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.793852792 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.585570614 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075917181 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.82214941 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.786433328 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.673062285 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.799178451 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870170594 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790731099 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.794963959 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.313135835 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.541250461 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.798162685 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.482066981 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025168139 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795140103 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.532754466 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983985078 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.873734473 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066870864 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858147504 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.719852747 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.494574496 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.489715474 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788601475 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.721223007 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.788292664 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793566476 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79701164 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.979431998 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084864913 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842489295 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.534829035 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.908014048 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797787148 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.79274742 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788537983 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.285376815 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908406064 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444456335 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.80169788 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923192374 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.800136526 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.72159401 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.792113756 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.792185533 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.789055835 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.744547996 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840632271 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.54069489 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127121325 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04629578 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.434325528 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805689424 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.508983354 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.92279683 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.810280621 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.378290888 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914556631 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.802787791 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864360279 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.798960277 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.536068097 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.575786493 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34226852 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103664004 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120619898 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247116092 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.32443638 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.013502739 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.965543667 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023702441 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.31845173 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850999152 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.96985718 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734056899 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877761905 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.457179388 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149853719 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805197762 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015791293 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185878838 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.450086997 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958862322 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999012994 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825510178 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.752691251 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.717572743 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.312717856 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943349467 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.406462167 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018930915 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96709556 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.375457683 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.907856034 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.791438378 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272519427 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8755636 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.49809072 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.151230746 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348523478 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.458044386 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172843964 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.801093829 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.234859086 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154486641 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.153831173 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.890380126 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726430515 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.801873716 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.802421404 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.792047027 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.768524156 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.732815005 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.079659908 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803948347 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027156935 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.085152776 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080583049 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.706167152 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.798284145 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793262468 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097722305 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.575583115 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032207672 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.163161116 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.375491338 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802527655 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.725394931 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725159383 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.494679561 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.800044384 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.764681719 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026644161 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.917700873 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.750148632 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.200882366 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109990876 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047833237 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.806546294 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.073891623 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078597367 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.529601494 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825150115 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.893554817 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.392686341 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.559771153 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.014698987 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.027063565 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593150158 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.02189968 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.441512499 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.775363679 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.794040081 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006327013 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.014788327 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.451554772 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051795669 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.51959174 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.800180765 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159931429 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863004047 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.443076672 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015518849 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.894507437 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805902791 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873869212 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80559826 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.805996049 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.805502147 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838148092 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.448705893 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937118966 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.808119451 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884675607 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.91543294 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.386419583 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.806035045 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081023974 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165634 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140235738 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864474096 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.795853831 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798775816 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727273121 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933320859 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.239614326 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.069733325 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.9241379 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.938073031 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822521636 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.377552953 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.098106381 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110669031 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06955741 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.689638462 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797532391 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.889680728 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.019289887 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806778291 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.007359957 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033540097 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128778684 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271821223 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.945155157 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.079728358 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077236788 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165328155 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.797116104 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385316032 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.808184697 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338825861 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.844421228 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.46429834 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091269194 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806567907 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018013387 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.819902418 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.998845305 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.249774761 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.551190368 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16441987 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.795718316 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.863546628 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085915805 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.213796938 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118744754 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878515564 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808415206 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.495221828 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936396992 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.781872533 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.069617622 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.799873796 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011950848 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.510514473 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.806233018 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090297125 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117862095 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.796908645 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.79575821 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85182697 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.807963695 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.021395212 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073880035 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05626749 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806643421 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.807308737 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.611988247 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085476334 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864446157 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732003632 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.802249817 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892719123 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047074132 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.819879928 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.31717805 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.501344603 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107372827 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.721569803 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821472113 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.234750761 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249166008 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144229839 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.331386029 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045630738 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.365167507 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.681920307 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179446799 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.804703218 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.21874049 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180431686 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.803052974 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.32554003 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914953748 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.07466791 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129858892 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.813987252 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54818714 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.844967482 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021728581 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39279117 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743107116 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.803843977 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.860803556 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.802022194 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.797656683 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813251918 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.79176275 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.688286579 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.646699386 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294505755 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.806368869 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.792111499 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.339405995 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377303738 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911162602 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962386877 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809903769 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.511545502 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.104589513 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.055360897 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.325660194 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.876855725 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.806020824 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804924256 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.72815747 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997898382 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.993712613 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10959847 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.176565602 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.916828759 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.806648583 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.020408123 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013346554 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.414020761 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962512688 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.207544218 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918301701 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.729890841 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.516720681 seconds)
  done (took 1641.918678429 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.827585843 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.953936302 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.828331473 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.857622211 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.875497668 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.873225418 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.908182676 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903198801 seconds)
  done (took 56.753470934 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.803713493 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.008899726 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.812218714 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.803713903 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.828063782 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.803442212 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.020654314 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.815199821 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.814167965 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.812505156 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.804207082 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.303242338 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.14963974 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.83550014 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.802368572 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.797689161 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.814961841 seconds)
  done (took 73.846053997 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.803613821 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.128258466 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.826179857 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.823207374 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.770101271 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.814500533 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.921311566 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.827994225 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.806761613 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.984763045 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.147859042 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.823869246 seconds)
  done (took 89.40181937 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.819301843 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.80831244 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.807745822 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.813030426 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.80844834 seconds)
  done (took 10.788659631 seconds)
done (took 2138.442729178 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.039914008 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.987884563 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.036605717 seconds)
  done (took 5.74873274 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.947327063 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.998452076 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.115933235 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.14301388 seconds)
  done (took 9.931397361 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.087062964 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.18629337 seconds)
  done (took 5.995593843 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.130983526 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.828042587 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.220900163 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.800157946 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.805130864 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.804478365 seconds)
  done (took 22.142104548 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.804839884 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.808002276 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.805541417 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.808953407 seconds)
  done (took 8.952009697 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.789613162 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.49198925 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.787987704 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.805835626 seconds)
  done (took 20.601721212 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.956645222 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.921434534 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.949352955 seconds)
  done (took 7.55116321 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.300300454 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.045684711 seconds)
  done (took 9.070406945 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.967345781 seconds)
  done (took 3.691383661 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.833553031 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.075898004 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.296426206 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.336167863 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.395915125 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.64175917 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.150035904 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.038881184 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.2594675 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.270178616 seconds)
  done (took 24.022409705 seconds)
done (took 132.651423682 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.158995328 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.836181253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.009449988 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.169566722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.048401257 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.005294218 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.003593068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.18093105 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.87666955 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.876714035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.212899019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.042510265 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.951699692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.82765828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.956803073 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.845194493 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.038198334 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.202542966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.859470102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.070337487 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.037803855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.816443961 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.006651412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.829874497 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.041031574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.956753617 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.360041024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.833937341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.996158097 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.373551447 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.958680429 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.214432887 seconds)
  done (took 166.324916077 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.806973797 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.805846413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.805605323 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.807714231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.294648458 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.808679704 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.810294402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.805843735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.26894077 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.256421581 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.8066044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.279420937 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.812825597 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80619524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.805335346 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.806471252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.42907039 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.807198263 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.809848382 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.805574956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.807978392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.092265551 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.8079369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.114489476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.420500915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.808395389 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.813619291 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.807530249 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.80665303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.811333577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.806213435 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.80636881 seconds)
  done (took 207.270747987 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.764595564 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.812071573 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.808795745 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.80778623 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.811458645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.807750393 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.811626387 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.808892369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.582901798 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.574685445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.809379685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.810572572 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.806355934 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.808987865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.809022821 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.811050989 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.808840937 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.801944042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.808623868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.81013219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.812425188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.439101417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.809914927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.445551509 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.813021285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.812560112 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.807504768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.809704762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.809659261 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.81096648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.811360437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.808583265 seconds)
  done (took 218.396912861 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.072868869 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.81324026 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.815934217 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.721698912 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.817530855 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.814115823 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.820136438 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.063679134 seconds)
  done (took 18.669401984 seconds)
done (took 612.396844831 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.286638795 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.136848857 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.992903074 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.848258436 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.070207438 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.875532 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.835023731 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.904206155 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.469731813 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.907561113 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.511062236 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.856174342 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.584377962 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.863360453 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.959706779 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.901658227 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.379216102 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.471095371 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.019664144 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.896720645 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.00832893 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.772790028 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.920797211 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.491025842 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.610283784 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.825910756 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.90647233 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.389922775 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.845658534 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.000747973 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.56941008 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.139436218 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.85063812 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.834184269 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.893905704 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.868418178 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.105434867 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.84903074 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.957435624 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.590070145 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.892615817 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.361879421 seconds)
  done (took 100.191593042 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.804916355 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.802878275 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.803420297 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.803729331 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.803076529 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.804343383 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.803055738 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.803645134 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.803495581 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.803421292 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.803312918 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.804050668 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.803734773 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.803974548 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.804874117 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.803324058 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.804551981 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.804321366 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.804755526 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.804630099 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.80506556 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.803816366 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.818562433 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.803652696 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.804981955 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.804849647 seconds)
  done (took 48.662695087 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.817238751 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.981381224 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.060609136 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.842865819 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.81682536 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.820265806 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.836357105 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.825988879 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.820773136 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.820055331 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.923482605 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.827617361 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.837689843 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.059078779 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.838280949 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.81801276 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.817713474 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.818720614 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.990440608 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.838490017 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.837818277 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.825817133 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.837547223 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.836185438 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.821181132 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.818834316 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.821279215 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.242111892 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.831380027 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.922899575 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.870386949 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.844420265 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.185436279 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.071712071 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.87871455 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.82935292 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.818554351 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.927055751 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.828915535 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.818559887 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.839354791 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.828573621 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.054888873 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.307041666 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.837168736 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.819482891 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.256751787 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.942225379 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.866354813 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.830622476 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.058677993 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.840679348 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.819481447 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.819824807 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.857008146 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.82596324 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.820795688 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.11580666 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.836635337 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.837300822 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.828990085 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.821736723 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.992258905 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.83330327 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.98258534 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.833128457 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.825960138 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.820447636 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.057103052 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.841444015 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.310180322 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.83752333 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.820955671 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.924122592 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.993332409 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.289690425 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.840062178 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.992981992 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.204540844 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.851350771 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.832244287 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.232385796 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.853711203 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.832376248 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.823335192 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.823023469 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.822128898 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.865795199 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.838009969 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.25161141 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.321578849 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.134303096 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.854233102 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.840367335 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.824577956 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.114036361 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.834427414 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.822649021 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.052819816 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.326032035 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.839264483 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.829640637 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.299183498 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.842677337 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.840998914 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.834249462 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.061209251 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.841413165 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.865058236 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.822039492 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.829686993 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.825497685 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.841543694 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.832962204 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.822852656 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.290212007 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.952748702 seconds)
  done (took 226.104453151 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.823652521 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.82131458 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.817118729 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.821791654 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.81631328 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.822850362 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.817698207 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.816735175 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.822465478 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.817794311 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.816976077 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.819431942 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.819787272 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.823578204 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.827933941 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.823236349 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.429643871 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.819676472 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.817749701 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.817099682 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.475193419 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.825006827 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.818876359 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.817288243 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.817630462 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.818837978 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.822725478 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.822745285 seconds)
  done (took 165.973922708 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.825050481 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.939918863 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.843160534 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.853212202 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.835418739 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.821834126 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.847251579 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.841321261 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.830377707 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.822662514 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.822883261 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.884645595 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.835369063 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.922995901 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.857120774 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.855179509 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.928630077 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.833039023 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.822693037 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.8217924 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.853915201 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.820722843 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.884823279 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.951244585 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.844657579 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.943220834 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.829017816 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.825413449 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.825253893 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.941316439 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.841037876 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.884793456 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.852990661 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.846941683 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.946478957 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.942307106 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.930964559 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.856712096 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.830601969 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.823703841 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.826540669 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.812743147 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.943620763 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.84452056 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.82603103 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.929624053 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.844957385 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.827234501 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.834874328 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.824020152 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.840764099 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.843661433 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.892883466 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.959312768 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.860459172 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.856074349 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.852821954 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.121654133 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.837104784 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.925265535 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.819099421 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.944242527 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.84702801 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.812842738 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.826368824 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.830803234 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.854749676 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.858395666 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.93043132 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.836419301 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.927138265 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.862856036 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.838284701 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.824944601 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.82809549 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.942868853 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.944708552 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.861913972 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.865686898 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.858861989 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.821844251 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.828251594 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.813733823 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.84476553 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.830901931 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.944575122 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.945603868 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.835686415 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.828510467 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.828814592 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.830032978 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.852991118 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.953647422 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.863112832 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.92241937 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.895996798 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.902822691 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.841898845 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.840100751 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.832485054 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.891456811 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.844499169 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.838579752 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.172283369 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.902060782 seconds)
  done (took 197.991809015 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.281121973 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.88378235 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.883915526 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.146581747 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.172398611 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.786911939 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.875149378 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.87615129 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.901133418 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.069206244 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.950709458 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.899816878 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.865768365 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.85193925 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.877496193 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.898429677 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.885721737 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.212594659 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.981503086 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.031267975 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.85799782 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.171478706 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.151262398 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.26722635 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.91425296 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.200206917 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.542280791 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.034360006 seconds)
  done (took 60.221646419 seconds)
done (took 800.876610118 seconds)
SAVING RESULT...
DONE!
