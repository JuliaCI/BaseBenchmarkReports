cset: moving following pidspec: 21087
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.396415273 seconds)
loading group "string"... done (took 0.584597406 seconds)
loading group "linalg"... done (took 7.334999535 seconds)
loading group "parallel"... done (took 0.158905919 seconds)
loading group "find"... done (took 1.178190901 seconds)
loading group "tuple"... done (took 1.848131628 seconds)
loading group "dates"... done (took 1.346458698 seconds)
loading group "micro"... done (took 0.2248211 seconds)
loading group "io"... done (took 0.962619065 seconds)
loading group "scalar"... done (took 39.470636034 seconds)
loading group "sparse"... done (took 12.460661846 seconds)
loading group "broadcast"... done (took 0.976768448 seconds)
loading group "union"... done (took 13.054039588 seconds)
loading group "simd"... done (took 4.819203888 seconds)
loading group "random"... done (took 9.918503715 seconds)
loading group "problem"... done (took 1.885822747 seconds)
loading group "array"... done (took 22.339964829 seconds)
loading group "misc"... done (took 1.737119656 seconds)
loading group "sort"... done (took 3.687933263 seconds)
loading group "collection"... done (took 18.820287949 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528798847 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12534325 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118984168 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120056245 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147886241 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112222693 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123990029 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085781891 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.807382367 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148840849 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117581318 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.433937166 seconds)
done (took 5.175977934 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177196532 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086382485 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085601793 seconds)
  done (took 1.304980898 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065355373 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126207198 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066077298 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066609496 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066506887 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065982182 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065600204 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065755069 seconds)
  done (took 1.652601441 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075976765 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069384466 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065546538 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067805471 seconds)
  done (took 1.410107774 seconds)
done (took 5.752305021 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.792715135 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203442713 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187590374 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413891415 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133793559 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158612367 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639847958 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.307993744 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189033245 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079644239 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108665688 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3283826 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111280813 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63190481 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074626063 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090070944 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137093416 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.40552857 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066677932 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081671837 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088811529 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127910244 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085009561 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073688904 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145609923 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066994649 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136560962 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080177386 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06587386 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212661408 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172056831 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653562907 seconds)
  done (took 10.222738375 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099540005 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097383427 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069801395 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123087381 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096426142 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069467182 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071024299 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067433744 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086403574 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128039927 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088206677 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101017721 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065397282 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068379794 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084512936 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204580873 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081710979 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082021854 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070541141 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075282661 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104604622 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077836141 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077611652 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076986424 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129286031 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179863506 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099409191 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096934237 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06646934 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078964149 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114883905 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125255421 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065661716 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066209223 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124589765 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094096332 seconds)
  done (took 4.570127685 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.005618441 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146132651 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090056164 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135080571 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064591768 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108856654 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064780897 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080719746 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209615781 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.382501401 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.591544669 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110992019 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103697208 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067208809 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083931455 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067522565 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066100903 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.48449302 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094616148 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106682648 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080998575 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069975247 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069155488 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355325045 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067460999 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064000827 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068403169 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056948991 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125605284 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06778646 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952148048 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127385687 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066457923 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101385527 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162063423 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089101052 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06324667 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.275541132 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068848981 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06451494 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153924695 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070281325 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065849649 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084239538 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102820443 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11309618 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065187823 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066625996 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165071324 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064855516 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079407213 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.637001736 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151701721 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07585161 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063697666 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254902086 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088292888 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068329595 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063776994 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180610758 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131257862 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06741227 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066188946 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067613318 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068887469 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385556826 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066338406 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.884654185 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070406706 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078133804 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071504853 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069535173 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090828147 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072589996 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072485939 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087304657 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065901557 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074820373 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065811441 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065890108 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066492124 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083478524 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.378674963 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067023891 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068055505 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0642217 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088749675 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096298407 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066460785 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065686032 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100184491 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068035985 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065719911 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106852218 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066245501 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063620715 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083385795 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068954778 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113010275 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065804235 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19002026 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0673968 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098459459 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069535559 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098733942 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079962616 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069908909 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.42069568 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064885843 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06454809 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06864379 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065429444 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067087022 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066311764 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079828714 seconds)
  done (took 21.017194512 seconds)
done (took 37.940460359 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238486176 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077742955 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077756529 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078335669 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073814171 seconds)
  done (took 1.768942257 seconds)
done (took 2.967442891 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124811017 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100470076 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064070272 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097794161 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064153309 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101357216 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10128323 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081199294 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100372005 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063661509 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097521541 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063699684 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063848788 seconds)
  done (took 2.346435558 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086427197 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084272896 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070893283 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083490815 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063517582 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083092449 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081612812 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089279337 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081192254 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073159932 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063300243 seconds)
  done (took 2.053834642 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084751672 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085171333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069892179 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082294671 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064467166 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082640436 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081770689 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08613633 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0824659 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074144158 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063625099 seconds)
  done (took 2.047837239 seconds)
done (took 7.634583133 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07934126 seconds)
  done (took 1.258665894 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592886692 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.054397949 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081509945 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112497955 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189969849 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119305854 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272271824 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086443278 seconds)
  done (took 8.874797889 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089796256 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08243912 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068438389 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069561645 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069594969 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071475101 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068808399 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069720409 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072089333 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072098416 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070984919 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071726223 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070993949 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071718632 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069273438 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069549816 seconds)
  done (took 2.418678631 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092609431 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091267059 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073942481 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074799646 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071941214 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071714249 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073990306 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073855508 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071006933 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072770921 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074407654 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07420399 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071405481 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064297179 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073864061 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075155042 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071080365 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073521257 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074437178 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075389126 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074980393 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06394116 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071774424 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074151473 seconds)
  done (took 3.078062212 seconds)
done (took 16.816420969 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117091096 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071402058 seconds)
  done (took 1.377614634 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082939073 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082397673 seconds)
  done (took 1.354283803 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085581376 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065437599 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090955083 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078532542 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06643486 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065588158 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088332984 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065712349 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0654412 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066133587 seconds)
  done (took 1.93484603 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070757994 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07710212 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070039102 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081253366 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073239817 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064014624 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072399526 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067128283 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077211679 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062426869 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071097961 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082525116 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.0709489 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084995325 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071474323 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06862495 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070697792 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067153479 seconds)
  done (took 2.501789386 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067773261 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066913381 seconds)
  done (took 1.334658477 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068925966 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064006173 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066453074 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065965013 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062933812 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062196546 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06267987 seconds)
  done (took 1.649662027 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388089044 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113204279 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.312242106 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071341387 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081546996 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258530982 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06545985 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070556448 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070737292 seconds)
  done (took 2.673754506 seconds)
done (took 14.030322369 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082577361 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086615047 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.0960777 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.377080526 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091512113 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066082889 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11359422 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188703428 seconds)
done (took 2.311758577 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219270188 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.640692841 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404995821 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205064262 seconds)
  done (took 2.454624828 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346932546 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089890684 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060016088 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067230443 seconds)
  done (took 1.778200332 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067521481 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069530726 seconds)
  done (took 1.348549607 seconds)
done (took 7.010327925 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068604132 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067474871 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083222836 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063041716 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066142899 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065568294 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063185168 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063649227 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066092498 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066397401 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068720989 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066095372 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065692321 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065745485 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063345739 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06317615 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063664913 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065941799 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063329545 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06366933 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063348335 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066266131 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063279772 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062841579 seconds)
  done (took 2.822606368 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086008776 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066409886 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07072524 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070422642 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069085684 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07067228 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070898755 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065694469 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070894714 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067888749 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068818862 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068769323 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068176551 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069997084 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067764422 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069203952 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071508686 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066061674 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067875157 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069117746 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.0707738 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065822442 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069141366 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070744725 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069031377 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070562945 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067870655 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066055185 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070874811 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069176126 seconds)
  done (took 3.304209783 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071778043 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064370578 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064642368 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070927164 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063486474 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064495152 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063187001 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063903792 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063871049 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062943393 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06500493 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062818912 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063015339 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064069763 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064074342 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067030662 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079021172 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063495622 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063273483 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063855455 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067114917 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063153034 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063904035 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063608036 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063449696 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063371646 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063532472 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063489258 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064070193 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062827678 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066606476 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067282427 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063272824 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070827847 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066970076 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063375194 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067470694 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062986775 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06374202 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062864419 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062931782 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062595755 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063328272 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070380799 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063337537 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064561561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063371312 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06441999 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06364278 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066091746 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062812111 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.175293377 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06499407 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064486316 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067003459 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062882194 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063836387 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062484359 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064115304 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062936875 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062794039 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062482499 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065555296 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063812773 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078084803 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069792482 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063136962 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064910521 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063395778 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065601469 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064918246 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076874725 seconds)
  done (took 6.021988049 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091855206 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086505456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064906752 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064650512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060987905 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063605245 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069246081 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063682979 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064708397 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081769815 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063248449 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064529533 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064817404 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067330772 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064152644 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065250183 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072148078 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061289243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064040075 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067467305 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063695416 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06906291 seconds)
  done (took 2.730294752 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156763599 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069753659 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105123268 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07474614 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069218801 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074983397 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069066696 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069408952 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069521006 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067391832 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067322027 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069395643 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069388201 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067541053 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066896823 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067124112 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06963151 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06685899 seconds)
  done (took 2.594983544 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079307782 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066050722 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087021011 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065437498 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06555073 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068278478 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070006776 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073606016 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068289606 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065336396 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074052046 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06800882 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068305145 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065314082 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068185585 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065499761 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067983319 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065820819 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073944028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069942169 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069582403 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073334265 seconds)
  done (took 2.765783597 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081211571 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067445769 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080686309 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068086608 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061826572 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063793572 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070034819 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06515951 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069373857 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067472594 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065558421 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063673473 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068320934 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065743032 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067974381 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065563863 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067754464 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065300774 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067523496 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061418142 seconds)
  done (took 2.582942913 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088085477 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067625249 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067384748 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075804392 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066873712 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06720358 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075231708 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067000292 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06719613 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088762598 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067224636 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066920864 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074870719 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071541514 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066759714 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074211694 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07480219 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074526546 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067063119 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067169924 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089134367 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06685236 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07456468 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067799065 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067520028 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067422666 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067445376 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072004636 seconds)
  done (took 3.238798834 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068317695 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065882397 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063773887 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063580264 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063148974 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063662429 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063383551 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063042704 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065793297 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06335051 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065802166 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066150523 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066092558 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066518251 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065810666 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065745098 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065793731 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063428074 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063041202 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063392699 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065505938 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065622853 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066292668 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063255694 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063655473 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065684014 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063241695 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063377023 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065451326 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063199362 seconds)
  done (took 3.174209835 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077217211 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073219797 seconds)
  done (took 1.38440963 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065566645 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080041468 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063347213 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069470892 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070172978 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066674521 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072999964 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069122393 seconds)
  done (took 1.786144185 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083831481 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077531877 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067153284 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079213969 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076816284 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083358197 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136108969 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067309688 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072822073 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064296463 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079775191 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065378161 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072321247 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066688648 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071799386 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073088756 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064090197 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072306811 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06793184 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064690827 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067383816 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074643399 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068639892 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061278416 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067161285 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088784965 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077397236 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065962883 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068531755 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07305641 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071683177 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059550122 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065644229 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066268547 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063501528 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07552585 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080742852 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068899389 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074473163 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066280912 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075674884 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060994438 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070618159 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072357002 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075492041 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06607736 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066510124 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060956658 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0636263 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068245187 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060862423 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067879223 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060124462 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072368601 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069567118 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076330424 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06525506 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067951658 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069231716 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068696775 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072533576 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067849862 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068311323 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065572449 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075992405 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070503757 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074314059 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061821328 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060037015 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064221103 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075469821 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089649298 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071859904 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06688851 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066756359 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063733645 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069859788 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0665287 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071404123 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072459908 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065601237 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071378901 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072983566 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066065155 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068142568 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073330361 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064111082 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068294954 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063796611 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082230693 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064799752 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063817197 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063375349 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076549548 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069219073 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065777378 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063707746 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072894601 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059997236 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066676418 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066535139 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066539601 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07669597 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069963896 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070408183 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073309334 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072443461 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064976924 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067357719 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061974618 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065513071 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064073655 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071905355 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059037855 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067554664 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066003744 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065027998 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073853267 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062980336 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064873053 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071966294 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070582445 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.189801309 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064120332 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070299319 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06755431 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070279638 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074918187 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065131704 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061234843 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061176797 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070285946 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065750244 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070595667 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070926528 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069037279 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060486004 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064752364 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071409693 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075366179 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06609008 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067619461 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072938941 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067591048 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065547259 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072935968 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068340815 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065892305 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071740739 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067110758 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061763337 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069577244 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069091878 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065235631 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07095168 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069945408 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068765388 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066456342 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064254117 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073341875 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068098864 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065521356 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066853541 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065518182 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077745815 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069273203 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061875417 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063204585 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075564668 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064210956 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065668453 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064688885 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068966464 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067311309 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063961381 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065708705 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068552842 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075958937 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069997518 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067179031 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071736772 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07732547 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065266712 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068732385 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066794515 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067301353 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067040082 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075126136 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071144137 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070514822 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06929916 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063296011 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071946267 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073012829 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065352116 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06355204 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064757832 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069626856 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071222552 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07055518 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066497084 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063747618 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066085861 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068830904 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06832007 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065478374 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065291858 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071923061 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063929015 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072577892 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06676692 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075557344 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068982543 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061205457 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068724465 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06456141 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072624207 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061397432 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064102609 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065478452 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067276619 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065232036 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068486889 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060319027 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073113712 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074105236 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066592141 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065089985 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066464408 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073559911 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067373779 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069784965 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068471108 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071401438 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075493374 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064824456 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06875896 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075343697 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064952243 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059366102 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070496931 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063372231 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063542697 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06422081 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063466773 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067755431 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072627742 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070711272 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.189081426 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070071861 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066366874 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065789962 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062228412 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071076815 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070265361 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067240135 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074368614 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068065292 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067718972 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0706759 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06597171 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066695909 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067883299 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069597223 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067733778 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06835408 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066207946 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069269033 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065136153 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063854549 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068237376 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067263285 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068063362 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071388272 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066198212 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067177151 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069637847 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06708596 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066548579 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067127196 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066150892 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068771405 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067697275 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066469481 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068432397 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062041675 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074458007 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065960135 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074271668 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066951548 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06257281 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07319975 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069059503 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071686115 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066840643 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06787272 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068235956 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066030845 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069071369 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073616062 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06410461 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.0771323 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073536272 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067967721 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069682375 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066558493 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06781593 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066231502 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067446276 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066972457 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066165531 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066234257 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07143233 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068709041 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066690941 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067528669 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067007574 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066577572 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067417054 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061268598 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065602098 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065287678 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066458537 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07556465 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067090945 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066114926 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065098689 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067093154 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06569667 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062903102 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07395539 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075257036 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066412399 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072991568 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066064599 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067644743 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076680841 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060801313 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064134676 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063809876 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064205168 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07299367 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06625236 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074950721 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066578667 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06589158 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063222016 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066313678 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064446069 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06022316 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063533401 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069692265 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065257321 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065089247 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066484675 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068048881 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066980845 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075058533 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065152788 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066991619 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065348256 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062168748 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064351932 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063972375 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067487832 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065330568 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062649085 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062287331 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064252992 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066021233 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065993092 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067522475 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065932206 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071065585 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064114372 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067918161 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067967959 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060155558 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.200115076 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066300689 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066435565 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065429433 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070221773 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069964937 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066639423 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075319914 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066013118 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067678373 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06613357 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064806073 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065850619 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066001809 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066981789 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06546485 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067337396 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075103354 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064346333 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06937366 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066995218 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06720807 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072929652 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067320154 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069289436 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072229117 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066941048 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068026999 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074181863 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07062674 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069358273 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067688544 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067911953 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072034433 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065637579 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073317334 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067192885 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067751693 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068862548 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063878067 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065623262 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066346897 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065636493 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072713825 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067648563 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065696052 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066362829 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063879883 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067743179 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069922932 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074277071 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069194105 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069662049 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061028149 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063492376 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067524389 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064402621 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068133653 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069150411 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072557421 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068666301 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067401406 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065249556 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075771538 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071700824 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070418711 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064933869 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070305537 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067753332 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069209423 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067823101 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066822035 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067808955 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070449875 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067960147 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06530965 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073153882 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069095562 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067173919 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067446698 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06713674 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06741848 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061614775 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066583865 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068323066 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071518724 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068057556 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066332304 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076837577 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063754162 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06708035 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069513444 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065343137 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070719141 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061139923 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067865594 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066915602 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067515111 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06150754 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065600359 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064549678 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068357055 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065253669 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061501754 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077113275 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075598229 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069468885 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065291544 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065266749 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061397779 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061502268 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065251677 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067174073 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068185124 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075689728 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065084007 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064530141 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06044328 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065037898 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068341905 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067914251 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062256545 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06023942 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064077753 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068080935 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070268828 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063599345 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064596635 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067895763 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066690236 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.195918037 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069983993 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064100768 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070394943 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079051257 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067492872 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06776909 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073474116 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074129433 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066885725 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061332179 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067012494 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069356254 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067769478 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067726051 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067591067 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081724483 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06946067 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066137075 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065925563 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069328875 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065986121 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075111412 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067564663 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068014469 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071443698 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069189721 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074954313 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069594373 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073977239 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070308591 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070028008 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065605407 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066973638 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06495197 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06701852 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067300616 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066926169 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072212326 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074237807 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065879195 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077028555 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075454712 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068885835 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063186873 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06582375 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065839295 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061755343 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067086998 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064920849 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064610662 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064019826 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065542692 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067547895 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071585667 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067070676 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067162325 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066724208 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060304199 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068674938 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068574684 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067798739 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063203619 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066988583 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066816346 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070688926 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069766961 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064160253 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068173996 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068791577 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066941492 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061148546 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073546926 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065204222 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06775764 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065918085 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066409161 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06661943 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069276022 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070077468 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066911082 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067995067 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069689213 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067594941 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063203946 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063073858 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071683908 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063985006 seconds)
  done (took 42.403313565 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102255685 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062120514 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061160397 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061539651 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073520187 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062352791 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061512534 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062508129 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06263559 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064650236 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06209415 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061639016 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070009376 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077728296 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073004298 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065932449 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06161729 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062624514 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061715424 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062408565 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070251204 seconds)
  done (took 2.72812605 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07601175 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077595399 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074989813 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081473701 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070358721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070212181 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075088746 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069923191 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078219883 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072085159 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078268492 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070140281 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072227276 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072081852 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07258442 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070938775 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077823318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070412349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070048156 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074571053 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070699124 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075413959 seconds)
  done (took 2.927280206 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068923813 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065041195 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067806567 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0607425 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065476339 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060672792 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068601728 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063619751 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068640033 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064588422 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.0646345 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064619464 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067650117 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060692029 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065592976 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063454758 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107548148 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068386916 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065184056 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06621141 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060948714 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067549514 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060727319 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061237748 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064614445 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068735283 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065863386 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063713057 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065221033 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064755075 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065215695 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063342434 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067314009 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065967452 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064185527 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064559104 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065053482 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065286101 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060778947 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063736712 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065535344 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061011868 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065917268 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066605938 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063404194 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063189495 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066704381 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064709693 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060409407 seconds)
  done (took 4.524056785 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081538787 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109414486 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067505211 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09108491 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079672798 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072372898 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06893414 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089246225 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062689318 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063464342 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081629403 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078422698 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065124072 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069572248 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071889486 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06522493 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066354882 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064893801 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06872331 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064249068 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068757596 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071730612 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079521684 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077693071 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068947867 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064198263 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064342664 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069226927 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07742055 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069326474 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069794721 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070499839 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079918549 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066581408 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06399636 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067502676 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08102554 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065064191 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067376865 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06308023 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067455284 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069119035 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072059929 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082108907 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065406262 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069942704 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06497779 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062905174 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077587093 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067596657 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072450478 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078824837 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068873527 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065057861 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069425345 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080394632 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06534293 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063269261 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067932849 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077021738 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063060988 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068469042 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078214502 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066651099 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072118512 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078299316 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069553256 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068866066 seconds)
  done (took 6.30866764 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077422914 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094877209 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083143083 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083071415 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07469549 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074716857 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075518671 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074785915 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074852032 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079856055 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074799462 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114753896 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.0702399 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077561837 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074904111 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074942205 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074958092 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074976513 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075001591 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074938201 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075291396 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081837775 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075354633 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082191136 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078735224 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070239523 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074791492 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07493726 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082199023 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074867812 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079107702 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074734072 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083277242 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082168155 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079061213 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074144768 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064951523 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074582079 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074917048 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075399508 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07012151 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08261535 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074449963 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070506137 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074610161 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074395585 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082250787 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078864659 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077098273 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079670224 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075383896 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08263764 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075083399 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075029115 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082878722 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085664613 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082426021 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082972873 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075095359 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082341182 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082502206 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08580405 seconds)
  done (took 6.173551372 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084764789 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073830963 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08165675 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061197923 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064208926 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071446724 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063487594 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063718048 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073775357 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073921875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075807746 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071185016 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073937794 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076391289 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071339506 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074099609 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07153573 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071293759 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073321939 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071515882 seconds)
  done (took 2.775984339 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075434767 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083237554 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066458363 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071386904 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068628146 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071158966 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067930949 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069188856 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06647017 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069163483 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076019749 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075554485 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066779932 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070853879 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075929371 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071175554 seconds)
  done (took 2.470340077 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085950829 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072513878 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079449236 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066075705 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066554539 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062503874 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065363255 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06108948 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061952088 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077830401 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065626556 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075750643 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065331741 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064039108 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062095899 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070833304 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062365429 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063238922 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065488234 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077902471 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06907188 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063980625 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068672364 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065700793 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068520362 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069728969 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064547052 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06569442 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062995667 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066035302 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068491379 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069059271 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062368845 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062996387 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064388168 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062997589 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065073832 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06560886 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071134683 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065632043 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064032537 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06784018 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06551878 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066309963 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061762441 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066179424 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062432362 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067858496 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06320317 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068249334 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06543316 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068048457 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065965737 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072827914 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068488632 seconds)
  done (took 5.014602785 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081678471 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069427851 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061833024 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063789102 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069331728 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066607639 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069219906 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066852729 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066934013 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063551126 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067624765 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068609558 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067187437 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069335797 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067224535 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06930591 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06157397 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067230239 seconds)
  done (took 2.553664743 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072841041 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065590168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073109732 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066064496 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065859933 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068084779 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061677103 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064293646 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064327464 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065689764 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066001867 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068422381 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064285675 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067852274 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065612318 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065795993 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068478039 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06395201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06554329 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061315632 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067592125 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063937775 seconds)
  done (took 2.782030634 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096321476 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083415382 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.13995383 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078969846 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084600041 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070938285 seconds)
  done (took 1.882471183 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093579179 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100050814 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065737174 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069218958 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076299916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069991707 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070133143 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070153221 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078028594 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075566121 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070376437 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078713376 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078538339 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077525406 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075523512 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075803015 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06949332 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069958778 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066033544 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083666655 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070311079 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078649276 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070216121 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069468671 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070247033 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077352431 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078123574 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075660901 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06946861 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079082572 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075844199 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070609302 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078332938 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075769179 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068660799 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078521917 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070259548 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083583257 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075697899 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077733292 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068990866 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075870223 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078380791 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07452935 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078335904 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069815046 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074999112 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070208107 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06997314 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08551075 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075441562 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077657642 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07764775 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079110741 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078102466 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085193138 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075869485 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077253079 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075998776 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075958341 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077330292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075940986 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07735787 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075585052 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075467733 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077186688 seconds)
  done (took 6.323895431 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106225666 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066962686 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070399319 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076490125 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077815132 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069920064 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070367354 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070054979 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070059332 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06692688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10865966 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070660661 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078042393 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077892084 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070600856 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070155432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07030917 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077745835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0667221 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086221249 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06966344 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077386724 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077715965 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077616947 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075890182 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07594122 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070221031 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070215168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070426818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069759874 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074945923 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070133137 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077880982 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066440987 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077525106 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070401834 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07028375 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07427856 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069755686 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075504553 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077384869 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083310866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069726982 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06942599 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075977646 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069577235 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069833772 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066365045 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069740076 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066358201 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075692597 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076115531 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075691619 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077208228 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069658126 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069598581 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069757635 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069833391 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069796261 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074854214 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077296759 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069705169 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085727795 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069616905 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069660859 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07725895 seconds)
  done (took 6.228640356 seconds)
done (took 128.707639272 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186393052 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165160437 seconds)
  done (took 1.675940239 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070572978 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099022383 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077393705 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128443677 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066349632 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099988003 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099020924 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07754005 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066150065 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065226838 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065411914 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068030408 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131052757 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066471833 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065921932 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068312424 seconds)
  done (took 2.651977608 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101906166 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163554208 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102230886 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064958366 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09913212 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072438399 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064751102 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074779898 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070621358 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06503512 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072978552 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070140197 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065184462 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070165646 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07113936 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072832653 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064745455 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072429511 seconds)
  done (took 2.777090532 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101101149 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091368524 seconds)
  done (took 1.537012866 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158007874 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.110395584 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145019192 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351626007 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164478868 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148487797 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144120438 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143349462 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11720792 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138913597 seconds)
  done (took 2.962760501 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101172422 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154358324 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265518087 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116833206 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072969769 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094086328 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117846273 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077980517 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079809095 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079590233 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080136029 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075568314 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099349626 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072970542 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073612479 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075553573 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103644614 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072503546 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07422591 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076223729 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099860565 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065241713 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073527632 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072168581 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076785423 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076673385 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065532265 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064824486 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076045997 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07454263 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076574947 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092719897 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076277047 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105684956 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070308745 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106701123 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07620828 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07352481 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074753802 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073432014 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078241562 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07781557 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072188863 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07566365 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064623365 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07653005 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064989698 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064679264 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078098789 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066128557 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077357672 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076264316 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105434002 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06639166 seconds)
  done (took 5.946795269 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105988295 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105997014 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070878498 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112383508 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102438354 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071780712 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101774226 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095221407 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103888743 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06999459 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067810715 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0707074 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082071683 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082560332 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115280034 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106533239 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073470605 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070809252 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107229931 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104500531 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068127199 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096253241 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091424322 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102763688 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067398196 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070004998 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067629379 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070101919 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0762901 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078139028 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06963597 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079802614 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084672782 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077543232 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067084576 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067570884 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068133595 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079494505 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079625058 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078363771 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077004322 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067451993 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067780834 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069291601 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069900212 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067152177 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078190231 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080082163 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077603985 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068869651 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069566842 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067447896 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068780913 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079688987 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077404843 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080112027 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079159685 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067970869 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068090759 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072348286 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080342755 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078948438 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079504184 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0689085 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078512043 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068324216 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080079662 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083461728 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067773881 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06955842 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06792684 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069275812 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069249619 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076953316 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077339712 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069038791 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069173406 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068026761 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079368326 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077922329 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067600604 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076143342 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067022369 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067689198 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069098093 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068993513 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076817123 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07927091 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06970229 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068002687 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069059647 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067765211 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066563392 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076343554 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079534508 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078737189 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077168232 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06841262 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077424246 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076839956 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069295361 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077342966 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066968062 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068823533 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068682256 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076719952 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075538877 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.207519054 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069419563 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069053503 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078751762 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081127763 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069187225 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078120361 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08006065 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079503969 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06870578 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081056664 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068244896 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079290006 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069489302 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079955153 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068592804 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080402169 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068850753 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068030231 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069499079 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079189949 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072852155 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06838622 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06970526 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069332608 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079327654 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082311694 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069827045 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077841913 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077544343 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070058162 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079410004 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068624119 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081153463 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069367977 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070177333 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066771693 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081806147 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068695717 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068134162 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068782404 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080484604 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068610853 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080001381 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077592635 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06739008 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080496957 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079922593 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077080947 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080804563 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070464044 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068806767 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067476227 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068797451 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077432528 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078900644 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070300521 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068117154 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077531548 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078767928 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066984667 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078196362 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077664217 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079163843 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068683356 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070718134 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07999761 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081205655 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077748498 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077587167 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078038476 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068939938 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077104787 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07816089 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067989563 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083645187 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06790102 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082837217 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078357087 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076485519 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078848547 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079957111 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079941538 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080112987 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082513917 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068276416 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068084915 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07963532 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068130004 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068696525 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077649663 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069010088 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069761191 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083111488 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068078842 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079733328 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067930469 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079088609 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066582638 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069609482 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081460902 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066799504 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068637806 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077854889 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06807744 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076086481 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078693693 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076300238 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066950609 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068874528 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212075729 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079934521 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068206253 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068785302 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070689646 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078240522 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077614257 seconds)
  done (took 18.57089778 seconds)
done (took 37.471010215 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214380513 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154145132 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183405946 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119834059 seconds)
  done (took 2.11032215 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119854277 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101613941 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093266619 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065527336 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099510445 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065445354 seconds)
  done (took 1.928937133 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317343411 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214032822 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190071504 seconds)
  done (took 2.097509864 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203822411 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191336198 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.426391055 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265921793 seconds)
  done (took 2.579190954 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147421156 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089066766 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067477829 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084648861 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134130543 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162065275 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101075539 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126417329 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078905859 seconds)
  done (took 2.431139654 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150166491 seconds)
done (took 12.672288783 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.130242766 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.116405187 seconds)
    (3/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.223614917 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.209341352 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.217808742 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094517458 seconds)
    (7/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.163806698 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.114716859 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.210187999 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072445988 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083715864 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.190136358 seconds)
    (13/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.201995137 seconds)
    (14/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.149950195 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082940555 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074591455 seconds)
    (17/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07990393 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104882052 seconds)
    (19/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076824487 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.210010719 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078677218 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073643604 seconds)
    (23/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196133945 seconds)
    (24/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07432388 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065331624 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.212715843 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07456252 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091464703 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076690635 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117629925 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.153592719 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.173525361 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05041295 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.230167358 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153241111 seconds)
    (36/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071435272 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072490471 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160126625 seconds)
    (39/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.062134944 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066552905 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051993839 seconds)
    (42/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072646672 seconds)
    (43/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107415932 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073568192 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09436661 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07105399 seconds)
    (47/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.14280814 seconds)
    (48/309) benchmarking ("sort", Float32, false)...
    done (took 0.132673434 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104980976 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090465849 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137861503 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153448803 seconds)
    (53/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.2104318 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172736891 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073449684 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071416375 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.195004793 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053441687 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076566064 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.140661648 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070980239 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073713831 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065359883 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076626835 seconds)
    (65/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079717864 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085885809 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077800284 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155522506 seconds)
    (69/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.062686928 seconds)
    (70/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07954035 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106553317 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.161965749 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052295488 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066994799 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.20278455 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051636121 seconds)
    (77/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097913735 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090934842 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.143781843 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075441008 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134751115 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064865772 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079861004 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089486726 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154507505 seconds)
    (86/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079534631 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08796738 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051609685 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.288231679 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051420417 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066457493 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090044013 seconds)
    (93/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077729814 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158466927 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185448991 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 0.066842084 seconds)
    (97/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08998173 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.062309124 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052796792 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077325199 seconds)
    (101/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075726352 seconds)
    (102/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067917921 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.141392123 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07532373 seconds)
    (105/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080694821 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.16221714 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.163370729 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050624227 seconds)
    (109/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.103208119 seconds)
    (110/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067036976 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.117281297 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066635373 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089884048 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125657134 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141419064 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073168071 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183594446 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097932769 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075091359 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070606787 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140946981 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063423998 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052459636 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142803507 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050640056 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.13802501 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073937098 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.175891188 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.170052448 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114580823 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088286129 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072717995 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089684501 seconds)
    (134/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051655953 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071066514 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065078664 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072077488 seconds)
    (138/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049973122 seconds)
    (139/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072595362 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090663944 seconds)
    (141/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065881329 seconds)
    (142/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07249427 seconds)
    (143/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080232381 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072140978 seconds)
    (145/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051813539 seconds)
    (146/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074916003 seconds)
    (147/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072630742 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065122209 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072452207 seconds)
    (150/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060928044 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.049951649 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.153732903 seconds)
    (153/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072104199 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.18490419 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064819378 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071841412 seconds)
    (157/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065094363 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089612045 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109314591 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064574415 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067373586 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073633327 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064749235 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065073057 seconds)
    (165/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052060266 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071895238 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173345684 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101535292 seconds)
    (169/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109786428 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 0.130269651 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.290390925 seconds)
    (172/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081992256 seconds)
    (173/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051464064 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 0.142126437 seconds)
    (175/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119846903 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17778969 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064997327 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068419915 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086741142 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100559184 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050301712 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.19156042 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193346641 seconds)
    (184/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082043526 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050348069 seconds)
    (186/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050435089 seconds)
    (187/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.11214443 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072353458 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090486096 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067384276 seconds)
    (191/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052097234 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074036181 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100087006 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094471695 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069191593 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051327446 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068777468 seconds)
    (198/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05057226 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.0500561 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141419282 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061931274 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062848836 seconds)
    (203/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.225798592 seconds)
    (204/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068553151 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076660019 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093659866 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064331082 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157327483 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051333312 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075539229 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.183754752 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073134163 seconds)
    (213/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051018587 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06654084 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067305138 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065676927 seconds)
    (217/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076717718 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124397868 seconds)
    (219/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074934908 seconds)
    (220/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066406722 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050518674 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073556485 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071400575 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11110587 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.050939883 seconds)
    (226/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111495135 seconds)
    (227/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051189853 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071477043 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064329968 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054311627 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.157062729 seconds)
    (232/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050994286 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066041001 seconds)
    (234/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053038212 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136719924 seconds)
    (236/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100877321 seconds)
    (237/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050199186 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136572408 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182576514 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074283043 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07854081 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088686335 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066754173 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088468968 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08854637 seconds)
    (246/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068577735 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065722153 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086916841 seconds)
    (249/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061184109 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150386724 seconds)
    (251/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051277335 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065736185 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064987537 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052303305 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050950782 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051127421 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050831013 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061503389 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089390965 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065228888 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065189619 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066475263 seconds)
    (263/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051046789 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066203639 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07384332 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071904607 seconds)
    (267/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068754809 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050845328 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073824889 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05050167 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.074165865 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065373816 seconds)
    (273/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060311825 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074049661 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088651896 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064633091 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088434582 seconds)
    (278/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061945863 seconds)
    (279/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071094619 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066506482 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06804806 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073899723 seconds)
    (283/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070209472 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063645035 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092351428 seconds)
    (286/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176993271 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086271828 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063816376 seconds)
    (289/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051709683 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072976439 seconds)
    (291/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052803079 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050943615 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067071289 seconds)
    (294/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187318055 seconds)
    (295/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088884129 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071408136 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050595802 seconds)
    (298/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064802638 seconds)
    (299/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05054183 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070961611 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094302642 seconds)
    (302/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050326291 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07075275 seconds)
    (304/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065527134 seconds)
    (305/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051820376 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141653188 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065380938 seconds)
    (308/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052369228 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090758531 seconds)
  done (took 30.92227977 seconds)
done (took 32.316967732 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08629681 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094045314 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074488613 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09253614 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080680134 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075743727 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072684721 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078626259 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079618649 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08171073 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077352456 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053673384 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074404507 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073709619 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07471919 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090697321 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07864762 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072840836 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073187435 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064213992 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07251638 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065558738 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066880632 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053831648 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078513349 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071414866 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071580691 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073688382 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065399212 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065436514 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068895955 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073308456 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064776894 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07783664 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072328539 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072714989 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074405296 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07685774 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067150319 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065367326 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073954101 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064996407 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072560369 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073870063 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071964219 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071113941 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07294244 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077487612 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090874881 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067421969 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074759742 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075552593 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075256507 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072889186 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069566663 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072806514 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070859794 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091141695 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073190169 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067125774 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073835978 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074393481 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070918705 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072377171 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073101912 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074730226 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075592921 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071189812 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074427307 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07130932 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065108782 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072217045 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068564326 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064811546 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075632339 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076989062 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064375719 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070776074 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072466876 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07009961 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063945041 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066660504 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066770021 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071777505 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066223897 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053666215 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069017776 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071491207 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064219283 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073434877 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071116696 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071887454 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066869443 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075528652 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064708674 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070378963 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065117713 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064763294 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066856147 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070383807 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.0651149 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066955296 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074841325 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066206188 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071399763 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07864976 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064581958 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071277514 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063915502 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064390447 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079147521 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074165801 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06529999 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066885309 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06368964 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073169938 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064080503 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064789638 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065041602 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064698942 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070933482 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064729609 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06647424 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072526982 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078150293 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064232663 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068277882 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066031084 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063914489 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070103585 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064280205 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06442706 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066041354 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061036453 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066266291 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064329398 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072141333 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065687254 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.207492001 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067669347 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074458644 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070988438 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071682131 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071376844 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064224652 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058829628 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067740196 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067252663 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067201797 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064747441 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066816999 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064985088 seconds)
done (took 12.37678136 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06861052 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141325785 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096489179 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095880764 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086953662 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066650533 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076276524 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101259826 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06783428 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101409021 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087749426 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08578316 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11391144 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064760219 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065415216 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069681198 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066672803 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081013091 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100412463 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086135137 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115329875 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064928991 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093233352 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089549843 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087737327 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103472029 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06918468 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069734566 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069112654 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092843143 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088116529 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069387742 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066450458 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098484722 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094455859 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083812648 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066499838 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083540009 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066722266 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065634211 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067549422 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098618873 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080192277 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08055313 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070059834 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069126412 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067292528 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08414521 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090034587 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079279992 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086126711 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102415732 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06839179 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065220124 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064454431 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086783536 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065005358 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068979505 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065625049 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068466121 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065376516 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068659306 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080500654 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080687651 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069840678 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079646256 seconds)
  done (took 6.780565753 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087099381 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092153047 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083240546 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083799724 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064778406 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066641478 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066892091 seconds)
  done (took 2.026755965 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06953305 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089558265 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0891962 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089359304 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081114472 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088485963 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075475991 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066302311 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087791776 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067588713 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087791193 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100395286 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069917623 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073866771 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090596542 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066022098 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09039319 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066464412 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069021632 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090112655 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068897496 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095981971 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069548591 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066986778 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08045351 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066087685 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11368174 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070872793 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067676315 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069232183 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064323939 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107419313 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080034229 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073819263 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065901021 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080768914 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081111276 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064605734 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082752119 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074647377 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079822279 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066489331 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066756126 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064175718 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070191084 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076258047 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066704987 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067494516 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06872962 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086628088 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067236762 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080565819 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069423665 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071540289 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068302354 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073047894 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076931075 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067852251 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087269208 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068477983 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083968537 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082946702 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080076137 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.0827179 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068796659 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080116495 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080184926 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068605079 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068262313 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069657645 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08242363 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064256984 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068228359 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07660999 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068643472 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089731965 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089360197 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067611404 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080032395 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066737598 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066063794 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066746828 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089280154 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071497987 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06573528 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070712187 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069186539 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064658237 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065549904 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069410471 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064543916 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067317383 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069210482 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069786302 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068843126 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082700822 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068126852 seconds)
  done (took 8.777031722 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07026803 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067491825 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06912236 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06779865 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067787778 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067205346 seconds)
  done (took 1.91060931 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096644619 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068342965 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.0796526 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07180627 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104325009 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086826456 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086818363 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077961973 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083361808 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07845024 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086295267 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088313256 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092077492 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071866519 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085941607 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071223803 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087759465 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074949543 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077607372 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072447336 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086447468 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071876681 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072271513 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081019275 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075951163 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071505031 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067237657 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078439703 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078302301 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078211513 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071896796 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075701703 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.0701664 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077982756 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086568 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070395035 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071692936 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076735908 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071942999 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075395855 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087980528 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072345074 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074057646 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076675198 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077697429 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070292874 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.0768084 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.0754478 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086532514 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077564751 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077376664 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070862578 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075007466 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077435892 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07054572 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077598199 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076439665 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086346835 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071782771 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070012611 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068398124 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075212989 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077826016 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075307603 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078407631 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076733504 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070267057 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072269266 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07287235 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071091331 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077236603 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068468217 seconds)
  done (took 7.042400223 seconds)
done (took 28.000392252 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542355535 seconds)
  done (took 2.007819092 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.626227481 seconds)
  done (took 2.117119685 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.354892451 seconds)
  done (took 8.851074874 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.407916043 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.496410825 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.723371925 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131598743 seconds)
  done (took 3.259081059 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.712978018 seconds)
  done (took 2.216575491 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.218200403 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201468068 seconds)
  done (took 1.929162459 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380717204 seconds)
  done (took 1.867062688 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.140819252 seconds)
  done (took 2.630497235 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265446828 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175946222 seconds)
  done (took 1.942163985 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.49121153 seconds)
  done (took 1.989210901 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.868642258 seconds)
  done (took 6.365920673 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214803764 seconds)
  done (took 1.756847145 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243447987 seconds)
  done (took 1.73970462 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.727869424 seconds)
  done (took 3.225739399 seconds)
done (took 43.390959992 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083334903 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080622078 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081087629 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07858297 seconds)
  done (took 1.809789124 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080126891 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073755372 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076431492 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072590958 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078091674 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072743952 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07485365 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076998329 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073039461 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073650102 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072745627 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072966462 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075476131 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074536988 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071658683 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07562194 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07662121 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073105894 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075752086 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072871913 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070773265 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075366724 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07509699 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07156528 seconds)
  done (took 3.288486467 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.0804357 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072642543 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07559265 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072362532 seconds)
  done (took 1.813234738 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080768135 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095576342 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089911456 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077794684 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092698369 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087815114 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069049339 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.0691247 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070778184 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077732407 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068571332 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09673142 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088788681 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07768153 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080016862 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066071642 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068421435 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088126426 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078279961 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078778664 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07035426 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077744986 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068129248 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088980841 seconds)
  done (took 3.415624785 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090733582 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105591308 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.0823145 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090280887 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091758976 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065300525 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088206663 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092323994 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127476994 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065709888 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070398402 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06566559 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073342259 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065163255 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08104232 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108088818 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111778018 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068716544 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097233977 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065233857 seconds)
  done (took 3.221742348 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075841184 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069372231 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06597955 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06809512 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077860267 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072729135 seconds)
  done (took 1.945633021 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070928733 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067632339 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067241175 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067256219 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072189515 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067886529 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065778114 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067390729 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068186206 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066894396 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066961527 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065846359 seconds)
  done (took 2.322963887 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.206240324 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06823447 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069755028 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065297104 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070573661 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067141096 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080406003 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067976349 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091362226 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066372719 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066755688 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068297199 seconds)
  done (took 2.501556867 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214470243 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076426614 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2401451 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151008412 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11141437 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116182458 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112332503 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114661942 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142873255 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101097445 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168939267 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168443701 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107656176 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138236291 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089193841 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100915258 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154708885 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164190999 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105667786 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167862074 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146593346 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126761335 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154731888 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103517669 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106619012 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122735291 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071422078 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079786293 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171190856 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134050365 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145083284 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111315057 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092505291 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178465306 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173500643 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142364099 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14727532 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084929506 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10496394 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134897486 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201009941 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088247141 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162326362 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109016554 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221396901 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135956524 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121457394 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122001041 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106762931 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090438154 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147325634 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187158451 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138570409 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087991557 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124571734 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114275026 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115784273 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115165377 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184361744 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163171745 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129869314 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071944792 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108516252 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154978874 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135088415 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109606541 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125403109 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093191684 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135618988 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156579044 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121698682 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146285734 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117450685 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08986752 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120107035 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141096034 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128500789 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162537283 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125637729 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073176617 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124565915 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102230519 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081206847 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146364238 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075592278 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177827485 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099850616 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109332631 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125703071 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111123984 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109808875 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160529161 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145688313 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102754646 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065100799 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24957601 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122957219 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147566928 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087733766 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110095208 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118031278 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078123282 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13855666 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075464526 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124499717 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077336361 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128959764 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130707375 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078065879 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124350253 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10443041 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101118498 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133239922 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162087748 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087740269 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082353501 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171014295 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122821273 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104529948 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144765144 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157528376 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102784546 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101606691 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150336081 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181109193 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090054357 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164810177 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106907195 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084009178 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088376057 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124597559 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11317671 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124421512 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081985486 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119265499 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169783451 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075175543 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095725578 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135522887 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079048261 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081366916 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106411651 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105350656 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096116967 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100655884 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103591868 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136995786 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124305896 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106149336 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124330692 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098411794 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31818026 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088755244 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103735224 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10480546 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070708021 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137511268 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159507655 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079670526 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164640282 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125220354 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117946524 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120615805 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084765003 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1415346 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079844962 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070463998 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145683123 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111744505 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111781579 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153240448 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117512872 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126033543 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119836793 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133865169 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13251947 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131821659 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106073838 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089537834 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113363079 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126993886 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073267828 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091161899 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080758629 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105721848 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096006351 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083211685 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142657911 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124934547 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110401899 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112952569 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097080065 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148998321 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076301843 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129098351 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120265487 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096221354 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15382996 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156392201 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132642489 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099397274 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13753368 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070382367 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074043925 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088069459 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123304554 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08250488 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082884159 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264397964 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150220796 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131794302 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137632166 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124384227 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120893065 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157552751 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070724893 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117994551 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149004859 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122591839 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104885244 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092851695 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099385937 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145898702 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108687824 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183194203 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117740152 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124220021 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153466803 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101733024 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080049754 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103960702 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136337294 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103375248 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144769428 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10025251 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088463317 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10995545 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075143135 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099185315 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127654724 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119373366 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135713898 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115792675 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133271404 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078112756 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116678609 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122403259 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122652701 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063976522 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121756748 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162715216 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094664636 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118924263 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153783565 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078998249 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134540151 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176214654 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145203198 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084689643 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255098026 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122071071 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129237636 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121942163 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142068968 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107842263 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138940937 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111498398 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086986453 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088157875 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098703827 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105736144 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095927565 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107089027 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115232244 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096353887 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133378687 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104678074 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110710891 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118309713 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098592491 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091375547 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096926815 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177905057 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119494232 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172647589 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100052209 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14594419 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165239991 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074847542 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079242364 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078369226 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141089815 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084768628 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131531979 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107708866 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117822477 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124872722 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143955401 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096152531 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06885091 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109573816 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133839225 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124687815 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098903021 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104038959 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165365289 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101926672 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079672469 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114491813 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11628415 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103354198 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172558008 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061741726 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106308144 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07620327 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080211828 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128700205 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299022929 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081318129 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104185918 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120885203 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114379574 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129785785 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101437381 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109090408 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127541671 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150890218 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130157158 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090147578 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11238353 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130222889 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157336275 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106004221 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097084145 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174234469 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154509863 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162259799 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087937928 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115675944 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115133487 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109498887 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139539124 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083968856 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165375076 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082457834 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137794477 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103274415 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089113968 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13007463 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108963322 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088641047 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148765714 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118348017 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083443808 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07808607 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118347783 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120818417 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106468112 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07602832 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139937829 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073857959 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135532851 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160535948 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080946157 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108168481 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096786261 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079556795 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106855725 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10182793 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087189652 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.240582419 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1777528 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088590487 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152667923 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136139596 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114360301 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138697621 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102711277 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641161761 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078434335 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153679451 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117241726 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175753359 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100544744 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119845158 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111597549 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124358805 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144757535 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104664269 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181805502 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132403509 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116590289 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079732248 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102539668 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104293112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088388281 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107970313 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114309222 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115606201 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093087242 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117037552 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1249968 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082151987 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096493348 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157616917 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117033581 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144572126 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141833014 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085805443 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119408356 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138937829 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080582399 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122065959 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152901863 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106453054 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099340875 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080697763 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100635191 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159559274 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073644533 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158910016 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262926484 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113498779 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114742295 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114420852 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132408506 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107204819 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122709851 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093010445 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111177766 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114302535 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082451316 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077658685 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106014095 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11215442 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099250025 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099030258 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099499331 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153247844 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072715807 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099824179 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114989169 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145983765 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176243211 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089817161 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082529846 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119154793 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114279608 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113196468 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121800374 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079078151 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082110914 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080785124 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07799029 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11017873 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112886285 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114529044 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111917318 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16471919 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083369406 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231778057 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096139034 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105764684 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070019411 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07873545 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096681648 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098553248 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108030543 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110820581 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160878743 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09598137 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091301426 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092177064 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074344305 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083537503 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129445269 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109467526 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118373268 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098530497 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062001029 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107321287 seconds)
  done (took 59.31853431 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113128656 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082559004 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097496033 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144555559 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123168684 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203128673 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154387871 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188957259 seconds)
  done (took 2.744712998 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070230042 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096714193 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103101988 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083415337 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066385389 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068893249 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.235009088 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082139481 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06616772 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098805461 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078584048 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06922007 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.433745876 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065783977 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06785267 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062112415 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067279623 seconds)
  done (took 3.429341572 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395284513 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.6131874 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.384468349 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073531301 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.477468472 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089493288 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.153687176 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128115569 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074032504 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524341096 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704248442 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123905061 seconds)
  done (took 18.360600988 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079320321 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070778445 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084642291 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083437676 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071986658 seconds)
  done (took 2.003511489 seconds)
done (took 107.727292745 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084359592 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.617809938 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052845573 seconds)
  done (took 2.316777764 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086458166 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085749615 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086036256 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083248432 seconds)
  done (took 1.970417763 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076069411 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075777137 seconds)
  done (took 1.772582836 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235228611 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169597914 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096596908 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087114968 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079561263 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079648445 seconds)
  done (took 1.869880413 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075190654 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075676193 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073236058 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077462834 seconds)
  done (took 1.920385784 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08090832 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05221684 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05453718 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057744414 seconds)
  done (took 1.865352786 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090658558 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079724795 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079122698 seconds)
  done (took 1.869698557 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105727088 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085767369 seconds)
  done (took 1.814911004 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086292568 seconds)
  done (took 1.706363318 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10501471 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105635026 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132281256 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112623389 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140865535 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109911448 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085657235 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086358456 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076741861 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087235394 seconds)
  done (took 2.662509164 seconds)
done (took 21.965492432 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081874182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368078551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360968972 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09036096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669361741 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356975211 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981330621 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093091775 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116559753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068049975 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085214243 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647514916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971265537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323463743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959754873 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323715504 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649666374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068649409 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068073709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068051068 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967854992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068179472 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067970507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06848388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647736564 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372723149 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068324917 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324085613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068419052 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070449445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35502001 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068357447 seconds)
  done (took 16.106248481 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073238152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121429433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073753569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085144612 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070578582 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069847459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071371946 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069226473 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122223147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067653025 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085961965 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068152884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072159723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068801939 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088270372 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085560781 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069692577 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068642119 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068487478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068977518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087834501 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067760604 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068384777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068811148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068114908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081014845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068760148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068338678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068965892 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070032003 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071548106 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069292515 seconds)
  done (took 4.062802761 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121744343 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128326602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0739038 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105876752 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114579287 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070418768 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148461468 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094236533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130921812 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06896061 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085340583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068204175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103060025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068537557 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088913528 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069117642 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069319091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068966657 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068447467 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06891232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088034839 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067954402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068282526 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068496745 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068108208 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082227256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06872117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068133483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068357459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069911501 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071663557 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069239373 seconds)
  done (took 4.313069729 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076224109 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07577232 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084054504 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084872748 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069739101 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072528954 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07346964 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069962542 seconds)
  done (took 2.248736673 seconds)
done (took 28.35523999 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08206096 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06978419 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073284226 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082916039 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073229029 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079412393 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067777344 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076206969 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073037841 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073879044 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075157108 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067888285 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071601154 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067690749 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074999969 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067918969 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079770862 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072565495 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079524588 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079823479 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070295117 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073355283 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075339845 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079467919 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079271408 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079327616 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077737986 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073202772 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068995739 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071083315 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077073192 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084512234 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068342486 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080033408 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068017106 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068157755 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071875115 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067742989 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079794327 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076879925 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069855455 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076650877 seconds)
  done (took 4.739433211 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09099374 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093653338 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085348427 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061368862 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067338724 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065944546 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089854716 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060618881 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059412266 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089232278 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055572454 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05947905 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065827092 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053550435 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060299659 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056812159 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061680301 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055701207 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06006426 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059880873 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089482634 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053384498 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078425237 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063828069 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055536005 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061584737 seconds)
  done (took 3.404634473 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077662454 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088067759 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090407979 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131659522 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106715015 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079323528 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.0809438 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096252999 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088819579 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066898022 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07099852 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093435201 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091959976 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073823974 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067590526 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086953023 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084235805 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069454901 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073437263 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096515851 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087482758 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087177847 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099875222 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084606514 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067230693 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070736535 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071621871 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082283413 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073402811 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077572186 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072092665 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071791606 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07057716 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080211378 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071976771 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070071918 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094047771 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078488293 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080287162 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068935475 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071828579 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069642596 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09391931 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135100044 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067827364 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075599459 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076415467 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078538857 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068955363 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08907475 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080281096 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068438343 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071917976 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067577498 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068647494 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082036322 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070736015 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070862625 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077655019 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07105268 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093601531 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073583919 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084567391 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067649115 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076669302 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067596808 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069760429 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067942325 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097902873 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069945722 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114590986 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069513801 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069167345 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077664507 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076811889 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074665096 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068473101 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084934733 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079561473 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071878805 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078479068 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072387481 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071399081 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093140966 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07124313 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070014117 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069573282 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074358394 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07071587 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069979983 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081834492 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068060556 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072554438 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086064756 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.0678109 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069677286 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074435478 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073364575 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067963595 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079027254 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072816151 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069108799 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07797135 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067990119 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.0711458 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081242405 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075024841 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06717776 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07294192 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073972157 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068926561 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069363013 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070962323 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069625841 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077371271 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074672647 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072432385 seconds)
  done (took 10.753731261 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.171058827 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15888533 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071235697 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149758644 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077404484 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079481768 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152687369 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095777252 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068560666 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068729692 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069331056 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110907163 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106777142 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11753481 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079256563 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068070032 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085595451 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115748159 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153872347 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148058694 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084695785 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077683705 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07006215 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069190297 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070562939 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078778902 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08556979 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076910426 seconds)
  done (took 4.441813057 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084048021 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106579027 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075928495 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092370892 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091682074 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068166517 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070994102 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070106509 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081376599 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079484699 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06810815 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073624915 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074983114 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071442627 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069689115 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07512979 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075071853 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069863434 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071784109 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073792299 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078705474 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093407496 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07237318 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067393508 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073225602 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067437344 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06391501 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08527919 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068691132 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09591768 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066238782 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076050494 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082667116 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069478014 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067721403 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068051839 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067823049 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067873739 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069612074 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066569744 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066451993 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057204221 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067485595 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079685298 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075095622 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056261995 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073054368 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074311482 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073699209 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06574422 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071074216 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070796116 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071674535 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076367392 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073787763 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07415192 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069587392 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074724206 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077954308 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068071368 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065405407 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066518599 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073049751 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065530861 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076783372 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073105883 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0669393 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06804384 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069916473 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07583753 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06814531 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071279653 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066288188 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07035561 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072966971 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070570842 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069396322 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067033324 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068166956 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068245256 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055371598 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067899212 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053742692 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071466 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066136474 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066949924 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068161709 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072874851 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080388811 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06960764 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074860608 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068958892 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067613363 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071660078 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060474762 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070677482 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08396154 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083118926 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068585049 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066404212 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083219977 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073456597 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06713895 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056362861 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076488951 seconds)
  done (took 9.23892935 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093904194 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070816645 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087814072 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094621236 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087866008 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075301322 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07796832 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069784626 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08367754 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074523106 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07788563 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068499953 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079362536 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078391658 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070454355 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078872408 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073297431 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085594832 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083387311 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069309338 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076981874 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08112612 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090957618 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083462633 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081797807 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08315156 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091531013 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072969812 seconds)
  done (took 3.926688484 seconds)
done (took 38.133287251 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.727343441 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.88626835 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.711896773 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.093350303 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.887292361 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.851140619 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.805805845 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.706026489 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.937037308 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.749453031 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.911283599 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.817663267 seconds)
done (took 64.727514906 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.774446331 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.853648412 seconds)
    (2/2) benchmarking "String"...
    done (took 1.935042578 seconds)
  done (took 5.43435038 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.940558418 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.263968793 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.955849239 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.704782784 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.70703831 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.049010427 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.520899695 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.215106416 seconds)
  done (took 30.063756665 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.982495128 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.946569881 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.422762476 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.464913798 seconds)
  done (took 15.518409422 seconds)
done (took 62.46504127 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.731147888 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.741285762 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.725887967 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.688707728 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.764019933 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.713193213 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.791001348 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.893205053 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.70320031 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.692431088 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.705800565 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.140498646 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.714781256 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.785270793 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.700996056 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.71196195 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.726507124 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.148068005 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.866858637 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.719266403 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.709938544 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.723659573 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.706049098 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.705096084 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.738535752 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.707537987 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.14781303 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.708469004 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.327775112 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.706086673 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.73349117 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.947354158 seconds)
  done (took 202.168114229 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.707575105 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.890943985 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.923106013 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.719862125 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.448059005 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.88632372 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.827438 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.462071299 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.711392363 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.712416406 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.046359354 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.705899904 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.042010522 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.661019863 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.739638996 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.711153654 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.993631209 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.031001516 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.744073754 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.880422012 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.725826538 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.886535539 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.822697754 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.011596527 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.735676147 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.816647256 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.865357958 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.734620413 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.898471204 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.986393836 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.73577801 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.744427187 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.934352688 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.580492708 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.732509442 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.726892984 seconds)
  done (took 169.428413875 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.095958234 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.707949257 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.714708011 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.711812209 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.72261734 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.710617606 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.831829975 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837534325 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.320818095 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.227745717 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.759509199 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.54571384 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.706757878 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781346353 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.706825887 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.725456369 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.71490525 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.730388189 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.740227176 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.709787575 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.709092331 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83889558 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.717640987 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.943871864 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716346626 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.711515854 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.718644642 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.085451843 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.706586821 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.717599805 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.971764691 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.708414229 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.710276713 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.602239378 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.32989424 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.800313931 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.709515747 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.71460432 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.721782344 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.709777326 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.933350812 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.708857069 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.714156082 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.718604782 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887009331 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.709292726 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.835543638 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.710530314 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.214443999 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.709755786 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.712621934 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.612556179 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.383475132 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.712184699 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.712332178 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.712774829 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.712318861 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.714608291 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.724019255 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.563919829 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.78579555 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.7133731 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.715448481 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.71906466 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.715170482 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.756259595 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.712889101 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.273394424 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.764223011 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.83469904 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837142452 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.713638273 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.715486948 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.782155555 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808776656 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.710925457 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.714692496 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.71635507 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.713902035 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.794046909 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.709023231 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.845084806 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719859524 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.71787144 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.766193894 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.786455467 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.712388572 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.59891064 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.712946986 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.717045807 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.020191323 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.77744307 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.71155463 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.715600519 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.71544742 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.71458633 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.853296503 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834639477 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.482088639 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.714636038 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.505096172 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.713336353 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.870395166 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.712316561 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.885887009 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.718889863 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.797610389 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.718977117 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.718033338 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.714928685 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.748428678 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.716310263 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.776868324 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.715673422 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.092706619 seconds)
  done (took 395.845961057 seconds)
done (took 771.2428714 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.389450173 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.341027007 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.459865592 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.368234112 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.345765457 seconds)
  done (took 13.556603537 seconds)
done (took 15.206601384 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.808149083 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.809552391 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.738436657 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.808598568 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.736084441 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.804202619 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.788671966 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.745610976 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.773713066 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.745217657 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.77540425 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.740970553 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.730815869 seconds)
  done (took 24.659351592 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.953797018 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.959283438 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.791014599 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.954001545 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.766496776 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.951834221 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879737231 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.880341372 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.874235575 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.730376777 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.734944563 seconds)
  done (took 22.13108479 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.958076337 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.963292344 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.799198173 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.956326342 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769533348 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.966921653 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.88550822 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.872991688 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.870631163 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.735569758 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.73414432 seconds)
  done (took 22.170799365 seconds)
done (took 70.615064113 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.726654557 seconds)
  done (took 3.385002884 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.752769015 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.907198775 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.735590202 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.733916179 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.729132505 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.729936411 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.731831245 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.729848739 seconds)
  done (took 15.710345083 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.728126355 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.729255911 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.725676324 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.724047898 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.725759221 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.728692374 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.726455909 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.7242994 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.729544642 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.729683737 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.728892756 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.728161669 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.730001747 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.729604034 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.727785142 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.726461715 seconds)
  done (took 29.301606582 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.72942414 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.72579601 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.726157218 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.724136828 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.727396358 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.726738137 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.726981615 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.726428982 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.727370128 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.72834958 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.729396034 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.728444337 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.726973739 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.728110743 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.727857246 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.728030613 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.728698402 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.727874878 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.731800017 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.728638478 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.72918809 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.728701932 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.728695219 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.726853824 seconds)
  done (took 43.129036397 seconds)
done (took 93.18216487 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.81265411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.111131487 seconds)
  done (took 8.58390422 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.730145431 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.727496011 seconds)
  done (took 5.158713043 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.728514472 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.726588975 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.728128613 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.727702857 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.728089267 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.728873469 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.726033038 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.72721967 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.729942478 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.729127163 seconds)
  done (took 18.938914842 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.730080538 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.727274294 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.725492219 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.726402521 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.72893233 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.72866112 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.730294985 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.726903266 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.729330084 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.725048047 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.727104157 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.727586718 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.727709995 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.726789455 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.727694485 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.726892881 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.72496766 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.725957618 seconds)
  done (took 32.752543149 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.730321738 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.728786553 seconds)
  done (took 5.120856542 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.727925534 seconds)
    (2/7) benchmarking "second"...
    done (took 1.725378079 seconds)
    (3/7) benchmarking "month"...
    done (took 1.726115894 seconds)
    (4/7) benchmarking "year"...
    done (took 1.725809853 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.727101595 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.724164145 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.723848094 seconds)
  done (took 13.739946981 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.731306196 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.890357428 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.95650739 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.393658096 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.732185801 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.732416102 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.712882189 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.731037919 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.735674048 seconds)
  done (took 19.277761737 seconds)
done (took 105.230755071 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.562452962 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.721689236 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.071907847 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.777089044 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.784545458 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.069787911 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.729258289 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.025516587 seconds)
done (took 42.400114694 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.81722858 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.282273144 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.314839198 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.196267455 seconds)
  done (took 12.450054311 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.713776489 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.254270414 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.756594969 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.314160327 seconds)
  done (took 19.71968331 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.090731533 seconds)
    (2/2) benchmarking "read"...
    done (took 2.066758431 seconds)
  done (took 5.81957682 seconds)
done (took 46.464019435 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.728995489 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.726689136 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.7247398 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.725895977 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.725548064 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.728859402 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.724348887 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.724333608 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.726150747 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.7284217 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.727817096 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.726935862 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.727945329 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727915124 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.725369584 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72375428 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.726778422 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728081465 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.725993176 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725135457 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725308642 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.726528291 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.725664248 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.726740737 seconds)
  done (took 43.091330115 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.728472779 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.725494522 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.730875032 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.729330841 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.725655726 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.730554914 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.729856567 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.725287958 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.730576343 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.731102787 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725514941 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.727341036 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.730189551 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.724791906 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728256151 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.726761159 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.730454522 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726255171 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730386028 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.727315792 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.729916753 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726159616 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.726562891 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732018083 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.727417032 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.72880977 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.72916602 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.728344434 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.731009614 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.727480783 seconds)
  done (took 53.512693638 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.737537427 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.739386123 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.730635816 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.730441264 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.731912505 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.730448331 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.730029048 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.729679677 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.731868145 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.729631969 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.729689758 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.73117651 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.732252176 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.731157697 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.733061029 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.731620633 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.730367424 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.731975382 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.732872379 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.732645293 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.732946211 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.732950395 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.730564593 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.732200615 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.733161568 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.732492272 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.732251654 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.731223752 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.729925858 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.731387489 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.736899989 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.735682181 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.734111473 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.742175352 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.733585941 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.736040983 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.739381797 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.744148301 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.731245462 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.732488691 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.731706635 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.731460467 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.73129704 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.731034503 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.732076777 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.732403954 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.731424563 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.732734395 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.730531271 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.731529868 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.731680544 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.732403044 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.734491656 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.732961009 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.730586419 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.732254232 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.732322401 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.732514754 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.734059863 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.732883888 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.733518564 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.734079862 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.732802884 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.733554376 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.731977058 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.734833879 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.732212138 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.734754548 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.7333455 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.732393049 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.732768475 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.735077106 seconds)
  done (took 126.430714973 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.734582862 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.730715673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.731183293 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.73095781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73018297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.733691104 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.73171939 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733677257 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733230515 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.734838266 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733171696 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.732158221 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732483441 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.736500287 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.734217646 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.733120702 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.734919955 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.732656499 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.734031811 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.735841232 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735278943 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.731922415 seconds)
  done (took 39.795704664 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736647567 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.736270577 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.732794754 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.737667872 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.732836276 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.735620451 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.736802764 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.735683969 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736807586 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734756365 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731705757 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739569244 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.732404804 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733470129 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.733277867 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.731659863 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739200019 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.729581801 seconds)
  done (took 32.892630196 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.73180231 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.730431106 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.734050404 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.731377434 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.729671216 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.734496058 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729562537 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.734519794 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.733669919 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.732360921 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.732764667 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733681232 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.733108143 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731410008 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733310325 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.732375175 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.734310657 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731022934 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733066267 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729715283 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.731388016 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.732794958 seconds)
  done (took 39.773463712 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734353702 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.732774784 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.731709364 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.739452282 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.730130066 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.734614325 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.732181713 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.730835839 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.731901084 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.735484377 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.72796126 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.731540083 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.729144025 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.730771194 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.72847768 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.734124736 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.731940748 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.731562838 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73352418 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.728647362 seconds)
  done (took 36.305173352 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.735294592 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.732060647 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.730039727 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.731487446 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735666066 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.732530913 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.732598444 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.731063804 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.729336485 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.732197078 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.732529358 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.737878375 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.73133179 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.732957985 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.731202169 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731282212 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.730387427 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.729526445 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.730271916 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730449641 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.731015257 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.73011848 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730728961 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.733539218 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.73054465 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.733425711 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.730060148 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.731321321 seconds)
  done (took 50.153816119 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7305869 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.732644092 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.728074904 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.726399837 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.729419229 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.728095733 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.726919291 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.726330349 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.729657574 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.727913784 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.732358742 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.732965717 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.731020653 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.731057957 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.731661712 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.731816098 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73166591 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.731137594 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727984436 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728723163 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.72980608 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732545585 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.731975905 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.728367438 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727869702 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.731483017 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.72875032 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.729643884 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.732500659 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.730501725 seconds)
  done (took 53.561563935 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.75086891 seconds)
    (2/2) benchmarking "in"...
    done (took 1.750042839 seconds)
  done (took 5.162337578 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.734877523 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.731485931 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.732433517 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.729182443 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.729979011 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.732816388 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.737213127 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729273939 seconds)
  done (took 15.519808601 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.734341324 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.731856591 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.73448539 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.735998503 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.732918001 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.733850895 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.743024037 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.735281455 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.736240594 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.739304454 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.741504518 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.744629565 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.734807108 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.735270829 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.732802974 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.73584012 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.73502396 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.735454284 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.73337489 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.733366452 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.739260478 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.738730891 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.738857254 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.732152128 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.739592844 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.747006629 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.740560543 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.736056143 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.735812039 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.739112899 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.736186819 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.732149117 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.73747382 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.735737367 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.735732112 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.735055379 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.741935469 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736077601 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.742695683 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.736924516 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.734836364 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.731968815 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.736339558 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.737530609 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.73494422 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.735332007 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.734588367 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.732522732 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.733654899 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.738029895 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.740794769 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.732129899 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.732306951 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737999927 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.736704388 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.74198853 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.734453259 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.74016565 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.744795248 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.745464541 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.74964481 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.745190089 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735976224 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.737298105 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747652899 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.761480601 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.741773073 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.731607289 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.730332595 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.732804419 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.741255579 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.74614531 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.746275798 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.73657934 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736023049 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.737313171 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.735384665 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.735564635 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744599095 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.73766024 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.738209216 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736970685 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.745646815 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.76287325 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.736907081 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.733785775 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.736925668 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.737129813 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.740141122 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749923509 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.737650463 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.738460072 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.736304666 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.735867726 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.739331247 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.736335245 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.738668944 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.738360145 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.734493612 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.736174724 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.737132994 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.740519667 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.748011217 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.736470365 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.736190917 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.744673174 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.73650073 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.737037052 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.745249754 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.737175318 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.737356891 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.740104136 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.742941337 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.736399193 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.740327802 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.749052039 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.737658686 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.740953263 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.738414036 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.737960592 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.747399787 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.766612 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.739720311 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.736276244 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.744241085 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.751802451 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.740014517 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.742296904 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.739626116 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.734429825 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.736793337 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.742469436 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.741463705 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.739948642 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740292 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.740385977 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.734228401 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.737050014 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.738026023 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.740039129 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.740297128 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.738354671 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.740937296 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.741157439 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.739005483 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.740798353 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.744195646 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.738536999 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.739888476 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.741543873 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.735490365 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.739706298 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.739059517 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.738698795 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.739443495 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740954638 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.738898245 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.740187865 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.740937305 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.740677127 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.741538438 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.7409811 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74549914 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.743648263 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.745493352 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.742229549 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.738408193 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.739177302 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.740002281 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.740404754 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.741411866 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.739808508 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.744948114 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.750017438 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.740772701 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.741869708 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.744403616 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.742796773 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.743388232 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.741508911 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.74587309 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.749275416 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.741111218 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.747553781 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.740925853 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.741325653 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.74053823 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.742467404 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.741145517 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742498635 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.746331763 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.749085085 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.75568314 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.750880112 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.74337399 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.746441163 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.743988821 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.746840704 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.74649093 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.743261579 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.741422097 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.740749185 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.739474574 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.742906442 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.744661306 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.74159844 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.741872149 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.743026886 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.743306566 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.744216431 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74270766 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.743678407 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.744890902 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.738908941 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.743213266 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.744981896 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.742082451 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.740086647 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.74243258 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.742842747 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.742549316 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.742734584 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.749971824 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.738971846 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.742675053 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744267383 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.744302933 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.740985209 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.744872259 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745975368 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.743081699 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7495879 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.741744883 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.744444641 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.749849452 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.741343995 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.741989812 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.745442566 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.742796372 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.740116103 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.747090429 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.75296789 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.743225851 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.744516655 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.744148132 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.744298264 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.743855033 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.749570755 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.740818834 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.743132398 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.745423724 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.746485764 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.74271262 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.745587595 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.744594828 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.74664748 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.745382879 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745017457 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.745432156 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.744624314 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.7457347 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.746464038 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.746237176 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.747671618 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.754311928 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.749263229 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.747224006 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.746594805 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.747265846 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.747861073 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.743951216 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.743738524 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.74545209 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.756866337 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.753909864 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.74940202 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.746411158 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.74648504 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750258679 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.745453363 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.750684049 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.746729485 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743913192 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.745323371 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.746202332 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.745674183 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745949084 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.74717268 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.746738197 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.749076796 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.75158535 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.746269407 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.746661032 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.748328668 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.747585276 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.74820531 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.745726205 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.747974845 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.749048523 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.747609357 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.747058376 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.745939426 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.753473155 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746726535 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.749114226 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.747014572 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.746515034 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.745938713 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.749201152 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.746897997 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.750127392 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.754874303 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.751048501 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.757666423 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.748880717 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75739311 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.747451107 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.75170485 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.757301338 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.74587012 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.748651556 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.750128908 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.746624131 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753653012 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.747926774 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.74883879 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.751332243 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746176068 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.747100879 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.747495133 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.747695099 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.748507743 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.748608887 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757348193 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.750561885 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.752974496 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.751893952 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.745759806 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.748878768 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.749805669 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.749202636 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.751152572 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.749298041 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.749662699 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.749869883 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.75071518 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.747383363 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.747338392 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.750974137 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.745877535 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.748422571 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.756041541 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.748680206 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.75324799 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.750159036 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.756233562 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.750909573 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755966189 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.750667396 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.749691143 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.75203068 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.749773308 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.750759064 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.750257981 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.752016767 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.750853094 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.752296291 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.753091967 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.749526601 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.752307169 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.750939303 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.747979006 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.748948919 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.762644562 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774577617 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.751777168 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755244907 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.746504877 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.751970701 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.753659692 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.748733045 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.750399586 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.754834572 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.761529348 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759677365 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.748259389 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.750268896 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.750812132 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748762131 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.752075949 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.751308308 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.752403904 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.749746946 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.753134252 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.749957807 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.755441033 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.750209765 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.753743266 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.750089728 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.750889536 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.762076409 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.750006248 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.752247831 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.752212094 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.750629128 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.751913466 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.751386824 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.74928227 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.751138652 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.752193149 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.75630152 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762625675 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.762754027 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.758490196 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.755416706 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.753838775 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.754478081 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.754519343 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.753371683 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.750750295 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.75167971 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.752988012 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.749739834 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.75152783 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.749470398 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.751165126 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.75292251 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.751202418 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755093955 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.761774478 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752503681 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.750292129 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.752159439 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.75128192 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.752434653 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.752225434 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.763896759 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754811232 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.764871666 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.762653834 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.756349028 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.753760207 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.759906303 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.761544931 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.751544361 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.754548113 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.753864605 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.7569172 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.755790203 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.759232483 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.756582379 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.76316029 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.754962683 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.75621298 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.762483049 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.755942796 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75666927 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.758262808 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.761531916 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.760832722 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.752382123 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.756457997 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.756479318 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759672155 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.757395271 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.756699649 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758081948 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.754474155 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.757358389 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759102718 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75790963 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.754594071 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.752622533 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.757087123 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.756622922 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.755963044 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.755770898 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.757424953 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.75400776 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.761934559 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.764105989 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.753092007 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758824443 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.755490786 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.754533364 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.754858781 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.753302374 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.751966505 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.752850522 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.754167961 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.755865536 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.755807584 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.759891407 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.757380047 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.758028219 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.757165207 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.756674682 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.759984537 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.767075377 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.766110698 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.754772381 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.756038935 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.758140069 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.762308414 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.757609979 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.756917274 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.756266768 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.756904778 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.757298716 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.757744195 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.759161429 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.761161061 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.775557958 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.757440765 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.758043981 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.759630111 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76151281 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.75836337 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.754297008 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.758906568 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.759286611 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.75988386 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.767419247 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.759405111 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.766325035 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757015066 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.758909925 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.763348191 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.765852047 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.768080754 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.761049593 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.759098757 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.75794891 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.763048544 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.774972539 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.758289391 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.766624944 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.790405783 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.758690861 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.75996212 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.758376686 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.758470636 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.759059535 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.759274882 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.757033084 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.763159246 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.756534864 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.758196267 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.759490266 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.764293977 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.760085012 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.757114833 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.758167142 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.757915483 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.760216454 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.753982776 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.758403614 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.758223997 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.759501679 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.759724618 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.758491546 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.759637385 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.773852412 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.769590939 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.758373777 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.760109228 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.758642516 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.764254264 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.763551533 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.771996891 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.770363021 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.761143835 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.760987692 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.764326541 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.762384316 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.758386946 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.761822616 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.76113509 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761866593 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.760714055 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.776017108 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.770334103 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.765302574 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.764420826 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.763450055 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.762415797 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76331344 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.761780726 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763024438 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.762719083 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.762080442 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.766770856 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.763795458 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.761678302 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.766619697 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.7704952 seconds)
  done (took 1044.060479751 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.759432713 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759268723 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.75877946 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.760175626 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759426585 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756370632 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.758555588 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.759309677 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.758679986 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.758575912 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.759040062 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.758198939 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.760096228 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.759317558 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75967582 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.760218265 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761441215 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759713866 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.760303838 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758408612 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.758881623 seconds)
  done (took 38.638933457 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.762689083 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.759856853 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.759234171 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.760966924 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760515357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.76152761 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.760872235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761499564 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.764429157 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758837724 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.763837179 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763314471 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.762669201 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.759413803 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760332882 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762234492 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.763870488 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759386421 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.762679814 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.762758202 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.763678037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.761652843 seconds)
  done (took 40.447560427 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.764430204 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.764976267 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.764158305 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.76079395 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.762061266 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.760101328 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.7641693 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.763573424 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.764669989 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.765507967 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.763356349 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.766460956 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.77340104 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.770753465 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.766113369 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.764066718 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.906566996 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.765554367 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.763572688 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.7644704 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.760956302 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.769997073 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.761431468 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.763122447 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.76294134 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.765500844 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.764407158 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.765353153 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.766423956 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.767987087 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.770058799 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.763087802 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.764904828 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.768333146 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.766597086 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.76772482 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.770440378 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.765590679 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.761930992 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.763889103 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.779716764 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.78783751 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.764927968 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.771781054 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.763985461 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.765297688 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.769504715 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.774934564 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.765094052 seconds)
  done (took 88.386523187 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.767496233 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.766333286 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.761473802 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.766599362 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.765903386 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.767320641 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.76561371 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.76771911 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.762603272 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.764226469 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.764552933 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.764145123 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.763967027 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.766132949 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.764873103 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.76147858 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.762483718 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.763694281 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.763782751 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.7645084 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.763884547 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.765950617 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.768065068 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.763634705 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.769000057 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.764671371 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.765370742 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.766229642 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.766499308 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.765897127 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.769066198 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.768852996 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.768427573 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.763061625 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.763656189 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.766851874 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.768458855 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.765713981 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.768458078 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.765353823 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.768069621 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.769356747 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.767454446 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.769222461 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.762613654 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.764977863 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.764796297 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.766263655 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.76630911 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.767484528 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.766805571 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.764088623 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.768619698 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.765634962 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.769397594 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.769116312 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.763905998 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.76641765 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.771237005 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.764847804 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.764837074 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.768751737 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.764713112 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.769339525 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.76917947 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.766254559 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.766834531 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.768678474 seconds)
  done (took 121.794522409 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.770783223 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.769010382 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769342745 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770406593 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770976902 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.769347001 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.772358807 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.770389499 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.769803404 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.771014792 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769257822 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.770607305 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.769270212 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.768493205 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.769601653 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.769070612 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.769656161 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.769956898 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.767649686 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768892266 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.769296263 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.769379955 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.770799852 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.770694497 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.771548719 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.769153956 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.770076325 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.771345848 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771428806 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.771977213 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772572979 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.771255051 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.770216743 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.769877319 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.772243833 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.771820487 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.770764325 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77223425 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.769325761 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.772087419 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.771828342 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771081467 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.771475077 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.771049673 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772321218 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.771011197 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.77160072 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.771861311 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.77239498 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.771662574 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.771907093 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.773231264 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772383092 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.77154129 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.774506903 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.772553102 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773222571 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.774637262 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772567958 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.77246729 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772041349 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.771888696 seconds)
  done (took 111.502878014 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772308835 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.76980158 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.768767175 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.76828782 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770475769 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.770186866 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.771105064 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.773359574 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773127854 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.771253847 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771033282 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769157615 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77216109 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772200769 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769673357 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770389186 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770544287 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76947041 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772026886 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.769390786 seconds)
  done (took 37.115358837 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.770588041 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.77258846 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.768811599 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.768762082 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.77042644 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.770574481 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.77114064 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773165641 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770495134 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771884846 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.773699164 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.773559892 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769787856 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.769943378 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.771505356 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.770056636 seconds)
  done (took 30.03773595 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.771321076 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.774003005 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.773645426 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.774774787 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.771361048 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.769250143 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.773968454 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.772097617 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.770842782 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.773323902 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.771166589 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.774128941 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.772832604 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.772820113 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.770532665 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.773531961 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.769873976 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.772730278 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.77507294 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.774394552 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.77438903 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.771530127 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.774340021 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.773321722 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.771447956 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.771556379 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.770610207 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.772591154 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.770897501 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.774564593 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.77303245 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.772079511 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.77193358 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.771840926 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.777112585 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.772256887 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.772733394 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.774289992 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.774328322 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.774555674 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.774005828 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.774118059 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.774377958 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.774796369 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.772798332 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.773906592 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.772729309 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.772888909 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.772069496 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.771873856 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.774284534 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.773952868 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.774311928 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.774661129 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.775165053 seconds)
  done (took 99.220711057 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774955796 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.773317494 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.772407087 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.776531922 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.775548628 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.770986309 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.775071883 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.772687367 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772916534 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.775716214 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.774490698 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.776216508 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771978875 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.777737161 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.773145073 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776529409 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.774407663 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.774054119 seconds)
  done (took 33.642451013 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.774694995 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.774163361 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.776432392 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.773480692 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.771634637 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.777927513 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772704185 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.776620486 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776175129 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.772866917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773373434 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.777626227 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775258088 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.777250742 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774462411 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773727759 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.777010388 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77672408 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.777184097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.772495185 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.778331509 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776482599 seconds)
  done (took 40.760482146 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.777626477 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.775713183 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.792999696 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.800594384 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.799270606 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.814646713 seconds)
  done (took 12.467772766 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776503154 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776355925 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.774311636 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77636094 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777861716 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775119223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773938077 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775812341 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777636872 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775053008 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774063023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778084094 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776917096 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774766721 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7796668 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77762383 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777197794 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775495922 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774665591 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777444516 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775667347 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77801137 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775525461 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775678732 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774924364 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776651829 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779958346 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77582642 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77674285 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779885089 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781333016 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779364833 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778992954 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776446186 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781079037 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778275668 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774942575 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778515017 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779141617 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779757662 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.779458884 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780778012 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779954039 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777371719 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78155798 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778100935 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778185503 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77879606 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778249321 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779786809 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780567156 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776266062 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778872933 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780307012 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780532719 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782036783 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778060311 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777530402 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780120014 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778901932 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778379383 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781211988 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780436523 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779987277 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780595509 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780352904 seconds)
  done (took 119.054993771 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780660342 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.778492337 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77987846 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780317583 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779489712 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780033813 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779423119 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778323819 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777922658 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779325375 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781027309 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779084624 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779019514 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779445972 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779610369 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780234965 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779135698 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778916719 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777899355 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781690923 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778589024 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777487992 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778465066 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779305316 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77863048 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781964302 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778745741 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779862999 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779987881 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778214663 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778131493 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779859148 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778283481 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.77817609 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778979753 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778381644 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780160049 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780071404 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779915691 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783938247 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781180301 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782349749 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781249702 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781255484 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780961228 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779830287 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779955485 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779741345 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781401813 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779344559 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780951014 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781795496 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780095624 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78133231 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779347705 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780210742 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779165253 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78059284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781355832 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782053701 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780388359 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780934469 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784059445 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778834764 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782263055 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781719397 seconds)
  done (took 119.190235525 seconds)
done (took 2434.175122391 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.845635823 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.033066382 seconds)
  done (took 15.587804517 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.946001078 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.899210747 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.781205529 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.829932496 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.776976641 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.797808128 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.786212507 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.776192594 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.780854989 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.779025311 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.779693262 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.964793207 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.778779111 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.774243025 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.776935463 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.870631869 seconds)
  done (took 50.816105676 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.786584263 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.781242834 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.793607683 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.784050517 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.781293563 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.801981593 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.814054966 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.785334005 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.842835366 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.791996305 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.90350487 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.7902744 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.776761327 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.850917956 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.790607912 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.791412686 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.872476981 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.856264407 seconds)
  done (took 34.303259335 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.859561878 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.775552738 seconds)
  done (took 10.350331369 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.776545494 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.801815588 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.782203166 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.787832045 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.789721015 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.802307678 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.799348313 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.768300236 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.769478286 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.786335321 seconds)
  done (took 69.572635966 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.781044702 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.776727407 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.776602656 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.773109608 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.768379076 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.766619269 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.773544776 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.769002085 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.461814908 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.806066984 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.779356665 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.778750974 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.776987768 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.775817736 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.768937685 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.798014995 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.963814048 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.775260642 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.768602356 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.777899799 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.771456399 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.849097752 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.78386005 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.7707435 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.801960137 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.459220003 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.779886774 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.778733069 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.905233889 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.769191626 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.774328526 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.773687733 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.776364093 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.158644438 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.070896255 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.766705876 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.777720144 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.780323831 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.768753288 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.885330866 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.772677571 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.778771865 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.658060068 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.055114394 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.889529598 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.811969739 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.142864443 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.772580357 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.774760761 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.801313052 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.771548842 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.772911824 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.784634538 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.282146725 seconds)
  done (took 127.395629739 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.77185741 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.027667515 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.923160758 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.763941605 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056709952 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972468189 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.765836111 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.817824815 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.770427346 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.995668193 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.987262369 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.87523839 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.765389072 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.770405373 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.76517502 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.76324531 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.930422529 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.841266959 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.765639766 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.764470915 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79979855 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01457704 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.903820432 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.767392047 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.789506811 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.982630159 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.905782362 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.878566283 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.223771803 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.766434645 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834408702 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.770191019 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.768559877 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.763417804 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.927423136 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.868201264 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.857865071 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.768623749 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.767312074 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.767251677 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.440645217 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964781764 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.865182278 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.912416935 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.019160773 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.972975614 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.555580147 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.766499572 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.504950702 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.928314991 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.003387536 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.008345784 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.891885432 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.769982885 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.284294156 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.76717777 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.767532207 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.003502625 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996418128 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.872805244 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.768757404 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.769494311 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.766301132 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015144377 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.769401164 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.862163352 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.768587066 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.767408856 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.870288223 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.87277101 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.999673517 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984664947 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.801251994 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.087584037 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.250581126 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.020862557 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.837669998 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00387396 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.76904285 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.765910697 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.85970942 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.719631515 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.972641909 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.019048454 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.026555829 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80497478 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.493043257 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.768870648 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.000005662 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.995758173 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.070479887 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.011381012 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.921186733 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.085953939 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.770133672 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.770907149 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.033146146 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.909796771 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.769534437 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.134127503 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00891862 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.344915863 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.799925178 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117036971 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.904927242 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.770007841 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.412595064 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.771030852 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.999294176 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.815552788 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.771226543 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.771687956 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.990932684 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.847477701 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.771456136 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.3911563 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.83503264 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.773936156 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007003237 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.770509108 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042166038 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.771358518 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013040251 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.247423944 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.807016372 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.00324113 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.012664392 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.771773522 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019293045 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.015932508 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.891403341 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.995386946 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.39656754 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.774137384 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065614214 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.769509579 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.769268863 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.944720048 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.77167091 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.949588148 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.772258121 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.110405633 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796060641 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929237298 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.773227771 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.032609041 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.805942421 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825852418 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.77146144 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.905337466 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.770960091 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.778414425 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.928706846 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772913824 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.769677016 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.516182467 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.771108629 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.930139957 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.009354302 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798247837 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.847390093 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.443349391 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.772326245 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.862416091 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.798967293 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.189971543 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.776815182 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.989763827 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.774595837 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.308201958 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.773911492 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.021385356 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.955888269 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.776714035 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.771793913 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.690391892 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.770971301 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.774868929 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937449643 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.142497285 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.774100847 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97725527 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.775521514 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917365049 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.777228369 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.854296121 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.132386018 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.77337484 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.773070752 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.775900146 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.77443047 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.775219939 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.042295416 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.8053258 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.30508755 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.913697152 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048820531 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.093585849 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.031157637 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.819954445 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.77398649 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.022763202 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.773495059 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.838512979 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.774997613 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.800929205 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009482292 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.773906364 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.987099113 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.061434544 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.755764248 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.826534698 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.775512541 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.774093506 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.731983827 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.938481056 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867609287 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.776355459 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.776587162 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.903360704 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.909147274 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.995216294 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.778318819 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.109729227 seconds)
  done (took 883.046730888 seconds)
done (took 1192.780425481 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.776351357 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.775083697 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.762442591 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.779633661 seconds)
  done (took 28.80441036 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.788410411 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.786572016 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.78633276 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.785257158 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.78836716 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.787223895 seconds)
  done (took 12.437879842 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.845982297 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.779687483 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.779760536 seconds)
  done (took 21.121146159 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.856309353 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.198908215 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.895206566 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.232656895 seconds)
  done (took 9.898750555 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.789137263 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.787921915 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.788438888 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.789244354 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.790950383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.789760032 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.791126358 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.789290137 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.791791355 seconds)
  done (took 17.822756623 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.13233813 seconds)
done (took 95.927142424 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.78710244 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.048207219 seconds)
    (3/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.092051634 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.288358827 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.763775549 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.837422339 seconds)
    (7/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.909490054 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.461234045 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.004663377 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.036111435 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.018558583 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.98484941 seconds)
    (13/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.972809883 seconds)
    (14/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.970505171 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.942366832 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.812240592 seconds)
    (17/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.781525238 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.531275539 seconds)
    (19/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.900948488 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.135867818 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.824927224 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.807348381 seconds)
    (23/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.766053993 seconds)
    (24/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.842952786 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.10899115 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.157857645 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.808517318 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.98683051 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.783043157 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.898205851 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.946816365 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.238410519 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.091049084 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.771161098 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.532578196 seconds)
    (36/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.907290324 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.118656133 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.784069874 seconds)
    (39/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.409897406 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.782646553 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.122761824 seconds)
    (42/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.815174629 seconds)
    (43/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.955507715 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.809227802 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.841992562 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.892428484 seconds)
    (47/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.813569099 seconds)
    (48/309) benchmarking ("sort", Float32, false)...
    done (took 5.505454919 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.423655697 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.088795428 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.784912952 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.992469924 seconds)
    (53/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.721806049 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.110270903 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.867602655 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.925410715 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.130938652 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.768329865 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 3.546086119 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.766988293 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.881464158 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.897509749 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.05340139 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.769681506 seconds)
    (65/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.975388234 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.044539014 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.783973974 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.003132681 seconds)
    (69/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.945968819 seconds)
    (70/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.478815515 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.774430348 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.332165656 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.979036571 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.852141159 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.156958988 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.770914515 seconds)
    (77/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.9466839 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.803835503 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.889614505 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.073095926 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.817035104 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.117093816 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.356939539 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.17236981 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.008701244 seconds)
    (86/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.301772377 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.777022732 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.675911726 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.871072966 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.156599915 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.086655128 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.805324262 seconds)
    (93/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.804232682 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.040066967 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.78458698 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 5.469648958 seconds)
    (97/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.797834154 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.854994568 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.025102619 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.873407789 seconds)
    (101/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.989645016 seconds)
    (102/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.871004486 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.009008083 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.908716242 seconds)
    (105/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.946297772 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.346405822 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.98017679 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.894356232 seconds)
    (109/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.120206374 seconds)
    (110/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.870664924 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.890102997 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.787210612 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.883649266 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.484551965 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.994915121 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.023409935 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.78905418 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.001206366 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.894051713 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.890273574 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.7882175 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.774996221 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.176069567 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.788879476 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.158794285 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.227361773 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.811799097 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.713306098 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.345936273 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.141453392 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.806444367 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.053353051 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.175548143 seconds)
    (134/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.357136245 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.009414017 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.425907039 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.037826713 seconds)
    (138/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.866368896 seconds)
    (139/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.196945844 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.586316468 seconds)
    (141/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.793425424 seconds)
    (142/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.996209705 seconds)
    (143/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.304925226 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.927500347 seconds)
    (145/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.26231604 seconds)
    (146/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.298955926 seconds)
    (147/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.954085292 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.014026445 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.817358103 seconds)
    (150/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.295131297 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.976679242 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.894836883 seconds)
    (153/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.823864081 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.134911061 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.987669338 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.89660605 seconds)
    (157/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.791865776 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.738760357 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.783584425 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.163950917 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.879054376 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.810152749 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.739895143 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.928280528 seconds)
    (165/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.166163066 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.819664156 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.7924981 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.927699561 seconds)
    (169/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.081665555 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 5.554601541 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.879844053 seconds)
    (172/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.716659344 seconds)
    (173/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.263269984 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 4.771071679 seconds)
    (175/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.797696112 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.791202768 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.088090616 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.779038576 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.716668364 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.876450782 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.89374827 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.085631011 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.781292357 seconds)
    (184/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.198012709 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.091657854 seconds)
    (186/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.113136578 seconds)
    (187/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.086811526 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.819402248 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.436780393 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.645517808 seconds)
    (191/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.258177688 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.828745654 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.869348155 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.792629299 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.883716466 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.289377207 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.968317768 seconds)
    (198/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.939469129 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.98680274 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.795236379 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.343217426 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.850475803 seconds)
    (203/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.006227899 seconds)
    (204/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.941221792 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.907708145 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.85287569 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.893037529 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.082919732 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.894844164 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.58116798 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.085361546 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.014002341 seconds)
    (213/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.778353708 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.833913515 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.876994676 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.039062116 seconds)
    (217/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.808804659 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.870089772 seconds)
    (219/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.804147368 seconds)
    (220/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.793897598 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.036694121 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.516139709 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.925188205 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.781040916 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.185896533 seconds)
    (226/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.053894582 seconds)
    (227/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.939405952 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.825585732 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.838491931 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.780079903 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.633717333 seconds)
    (232/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.097747032 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.179585121 seconds)
    (234/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.781164014 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.519267661 seconds)
    (236/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.953098043 seconds)
    (237/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.40729034 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.689704238 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.799526365 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.812182979 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.485748581 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.04858437 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.885216627 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.790568596 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.039542622 seconds)
    (246/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.859095981 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.798530403 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.755374429 seconds)
    (249/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.977790252 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.887890335 seconds)
    (251/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.941643846 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.193494324 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.500762469 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.183977673 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.725398589 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.16360049 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.965103625 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.100818903 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.919760629 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.126420291 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.88807855 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.941767888 seconds)
    (263/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.012152542 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.546696103 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.915296214 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.825089876 seconds)
    (267/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.858778996 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.968694741 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.165685002 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.414356425 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.788722469 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.038877757 seconds)
    (273/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.976216231 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.912101276 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.800293498 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.068226185 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.831222969 seconds)
    (278/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.10595921 seconds)
    (279/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.882655207 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.855208479 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.86248416 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.879847585 seconds)
    (283/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.277230997 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.89089503 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.604731254 seconds)
    (286/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.803625771 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.813895154 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.943532017 seconds)
    (289/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.369793208 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.551501059 seconds)
    (291/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.779323489 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.067368154 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.901347157 seconds)
    (294/309) benchmarking ("sort", BigInt, false)...
    done (took 6.798806665 seconds)
    (295/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.888137047 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.833621172 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.84068877 seconds)
    (298/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.207664091 seconds)
    (299/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.904024505 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.889923391 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.826693201 seconds)
    (302/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.897549512 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.826834043 seconds)
    (304/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.564797926 seconds)
    (305/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.400526571 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.829583514 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.132597502 seconds)
    (308/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.789573663 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.224806652 seconds)
  done (took 994.461666969 seconds)
done (took 996.242320942 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.834054089 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826325559 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.812925481 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.830346359 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.922445685 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.843782484 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.822833301 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.812467384 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.857660754 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.861209881 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.809907557 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.84197812 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.812226149 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.812086943 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.80938534 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.825224807 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.123915522 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.840369776 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.827034402 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.821831858 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.827870071 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.812487315 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.862540562 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.84456442 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.816552426 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.8164414 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.814868781 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.832335036 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.926527615 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.815708157 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.814146705 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.82406904 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.120905521 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.841830442 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.807169321 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.83255078 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.821950452 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.823794219 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.816155494 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.846299349 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.270401483 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.816796007 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.815276875 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.813813924 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.814398857 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.816656517 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.814580667 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.821515938 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.824703975 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.829066907 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.265659235 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.834221075 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.81633083 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.816156989 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.823992033 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.814962637 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.821517268 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83007674 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.833310592 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832052765 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.115857 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.847469918 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.818530516 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.832197876 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.823086492 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.305538815 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.812888403 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.818230149 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.270370885 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.823494399 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.305867965 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.827720235 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.814930758 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.828397851 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.846377787 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.125911833 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.83894357 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.815400699 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.82290124 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.814602958 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.82705619 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829045695 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.819083401 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.815516992 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83031927 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.847536087 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.8267775 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.818860082 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.825004662 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.835826087 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.824288431 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.827776303 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.819622882 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.810740625 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.824850551 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.822850702 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.818100761 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.819947267 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.821228601 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.827171774 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.272002316 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837879038 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.814711055 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.811114975 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.815449204 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.828245629 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.271787673 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.822412483 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.839050322 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.865002947 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.821091923 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.119570231 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.848146372 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.835815942 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.828521545 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.821277551 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.811013758 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.11810136 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.300342236 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.837193876 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.818480291 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.816105629 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831238166 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.820183696 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.81453907 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.133534173 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.845154846 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831882504 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.939833619 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.828859355 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.849700868 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.81664432 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.819319251 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.851549797 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833137153 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.848551451 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.821810222 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833757833 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.835088339 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.812711207 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.826732891 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.828311744 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.820429917 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.824148061 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.811511217 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.850153374 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.82901145 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831587003 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.84018167 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.937778596 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.814550808 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.120337419 seconds)
done (took 285.78830242 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.885554241 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.810201128 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.917294293 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.813825564 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.895054873 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.901308301 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.810376995 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.812035068 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.811834492 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.206256728 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.811551958 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.813591195 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.809146044 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.810484097 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.898469162 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.816355726 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.814427487 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.149859171 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.819190998 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.888473774 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.807785873 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.814156195 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.813851871 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.185665679 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.813604787 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.818525198 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.888843551 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.815639978 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.152787474 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.808760737 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.816945873 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.153926013 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.9077217 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.833915138 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.82808193 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.823177741 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.899328717 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.820667495 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.896770358 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.897369746 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.920357226 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.856534001 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.816261729 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.810767691 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.822338127 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.818794343 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.811955573 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.843203995 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.8097562 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.813945234 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.152822536 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.825576276 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.825309374 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.814176902 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.813598267 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.839848174 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.816782225 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.819712238 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.908445581 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.820757416 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.879547819 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.190901472 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.215502216 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.822200362 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.822453382 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.822904763 seconds)
  done (took 180.751035582 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.883223026 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.88887549 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.884417296 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.820130832 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.865657552 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.888300792 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.824373325 seconds)
  done (took 14.79906518 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.827251487 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.821069542 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.870382494 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.869907634 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.820791475 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.971237669 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81921312 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.831153306 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.815411955 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.871476185 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.821737942 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.817258225 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.824526984 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.819330558 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.866964182 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.830397874 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.934381565 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.822301072 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.820076355 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.970457527 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818889349 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.825644482 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.87512274 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.831321998 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.820674655 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.825025984 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.414116974 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.819596517 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.817859151 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.818775567 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.815191564 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.861251061 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.820496443 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.814570442 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.817437923 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.934934841 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.81879624 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818219762 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.819705493 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.821850808 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.820923767 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.819591129 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.820767781 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.819517743 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.819100641 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.842592647 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.82238314 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.821189254 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.820860152 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.821756246 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.873614827 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.822057492 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.818141707 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.820047659 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.875680924 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.827859006 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.822686605 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.818056042 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.821008005 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.81951067 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.973529158 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.867979215 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.822367753 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.868371718 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822419551 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.819701024 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.82145877 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.820127813 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914515861 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.819547618 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.870008277 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.817785853 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.980805837 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.844803628 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821057617 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.825376899 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.824842487 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.821440512 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.819405679 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.826949908 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.818133742 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.823385359 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.827369004 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818016776 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820806147 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.933397094 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.929064816 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.818696399 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.833748976 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.828781156 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.821230998 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.876807963 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.821527453 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.819937545 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.877224984 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.937730765 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.87679938 seconds)
  done (took 201.034562701 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.826947808 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.830589159 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.824952551 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.840862142 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.823331616 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.820877851 seconds)
  done (took 12.717662548 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.824803634 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.825946503 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.821212888 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.823257677 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.823089854 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.824262716 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.823026968 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.823641477 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.829396166 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.822839494 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.824348122 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.823776119 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.825481121 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.822606075 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.824935538 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.823042134 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.825840507 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.820374556 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.823123348 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.822812397 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.971001937 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.824869155 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825021229 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.825246134 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.829224308 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.825177192 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.830531296 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.825261837 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.823478832 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.833623389 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.829933704 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.825869857 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.823932604 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.830715455 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.829279436 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.823657497 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.828562521 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.824421571 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.821916004 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.824193223 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.823446244 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824457098 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.822143423 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.824142223 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.82676745 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.829212229 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.830129466 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.832058477 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.824872594 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.82621283 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.826919949 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.823749493 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.827083169 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.825412654 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.82980916 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.830793143 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.830720496 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.82678532 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.825169792 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.826890814 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.828098219 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.827428728 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.82821023 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.829855206 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.83284016 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.826590996 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.826530194 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.829796331 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827594192 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.824374628 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.828351761 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.822754393 seconds)
  done (took 134.374629186 seconds)
done (took 545.434468532 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.906283954 seconds)
  done (took 8.658226444 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.824577694 seconds)
  done (took 8.659195008 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.565610098 seconds)
  done (took 10.31878784 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.826663144 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.883624879 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.818560403 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.842440951 seconds)
  done (took 29.135681539 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.853274036 seconds)
  done (took 8.60694796 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.833749802 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.817389033 seconds)
  done (took 15.439843326 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.891288166 seconds)
  done (took 8.644819278 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.926991053 seconds)
  done (took 8.685206355 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.839216782 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.858471111 seconds)
  done (took 15.467173249 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.807693504 seconds)
  done (took 8.561824117 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.570776931 seconds)
  done (took 11.332581179 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.834098167 seconds)
  done (took 8.602543881 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.898694923 seconds)
  done (took 8.652748358 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.093821693 seconds)
  done (took 9.847838382 seconds)
done (took 162.363720161 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.823571107 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.817187521 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.818881224 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.818391379 seconds)
  done (took 29.030782551 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.860369044 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.860350197 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.863404343 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.870909641 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.863783043 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.859589452 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.852547619 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.855292249 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.872074816 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.864109078 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.863887831 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.864281258 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.861198212 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.854736625 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.866100499 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.862556125 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.872021303 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.862571209 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.853246535 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.863367581 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.826439208 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.872461524 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.865098223 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.827960437 seconds)
  done (took 46.393462813 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.029330169 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.904104303 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.984348982 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.882243691 seconds)
  done (took 9.554124049 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.881271447 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.884642995 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.896720064 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.934982915 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.957356028 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.890552215 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.859857057 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.851433334 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.836299141 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.884089979 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.95896155 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.877555763 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.973473036 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.829709721 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.026102252 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.831846938 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.831031692 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.879825673 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.934109909 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.95034987 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.830349484 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.882546824 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.889020117 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.878344072 seconds)
  done (took 47.204780739 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.828279483 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.836845202 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.835952897 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.831628909 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.828329022 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.828776598 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.833432245 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.831463547 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.851642293 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.830072326 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.832243031 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.829306394 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.828208263 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.829050501 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.828354591 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.843408824 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.841069745 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.829055442 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.831324263 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.836445957 seconds)
  done (took 38.421995526 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.824734973 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.676153333 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.176013726 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.079835703 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.821418544 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.82229913 seconds)
  done (took 31.160029082 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.845857316 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.837097915 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.831084806 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.888893854 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.969180498 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.839450899 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.831645326 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.841055013 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.876762707 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.895748998 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.84957061 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.859392726 seconds)
  done (took 24.124013973 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.832546978 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.82419871 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.834621838 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.840550391 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.843704812 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.83859141 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.837758403 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.82335565 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.841788659 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.848734132 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.838652605 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.844002988 seconds)
  done (took 43.81043464 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915961146 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.721117682 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.849300656 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.630238613 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.306868089 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035966679 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.482527648 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.161266211 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.829730614 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099398443 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.831313447 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930665653 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.080576281 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827379018 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.840324001 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.300480732 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117686088 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066997541 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852978579 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.59279165 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874454803 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444510821 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.663950603 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.883448509 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040944216 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.960666368 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.088224667 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.794702133 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959827659 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863925723 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838368471 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.828684657 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103453738 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20324145 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930411494 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840713093 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.484213611 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.542082065 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.814395021 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.604364863 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.57421969 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.975033874 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835366485 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829352408 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.762373748 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40384411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20785728 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.832218862 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.539526712 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.827861144 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839514217 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917224443 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.831783762 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.644422061 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810189177 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.108426954 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.827462872 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834813285 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397974012 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927482482 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451687939 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.808940052 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.025696602 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.590471567 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21961733 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.976848576 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.830630967 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833692911 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764836382 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.590291898 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882443654 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965000088 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.849643575 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491167446 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157232249 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.88195342 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.217310663 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12947381 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.714153881 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.81634725 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059877251 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.793086572 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768470374 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.689220308 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.761201004 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09431131 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866387703 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.469543283 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870275205 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164579681 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.839203649 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848447563 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837425863 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054507349 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.395859193 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83189033 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.624860296 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981744926 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852502876 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16701679 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765160203 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.83231211 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086376231 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.043637779 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.168391444 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.345860244 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985690493 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831558446 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.908872887 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.830445975 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.884306074 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.104705257 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890512044 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951791919 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891341128 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.79455785 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141485638 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858202516 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.995186241 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.872181392 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960754398 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.158164688 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129348492 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899362882 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840240623 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.837588446 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.713943504 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383391452 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.10157559 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.835300104 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433570935 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.884153873 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.834007794 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770039282 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.434266319 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.890981848 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.802050522 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059745277 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.833359668 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140046786 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769179831 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96989632 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.932516947 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.056770611 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.47712919 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.900662756 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092568769 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433371568 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.19192718 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888984164 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855108049 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953573064 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858454257 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.347820341 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133181001 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.839496242 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.840014846 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.660983702 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.835625603 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837561393 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.840423354 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.694991931 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120495744 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.852870854 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.834111023 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.731013568 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.849043791 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902671918 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841424495 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845219132 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.382294311 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.585866418 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.843068737 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.460683298 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059636382 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844972071 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.588666261 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947843638 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.921332035 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115055269 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894155596 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.770518465 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.550117186 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.529228057 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835817658 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773082534 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.836331038 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846377308 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84773539 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.219154388 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116896158 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876924748 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.586679223 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.878793293 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847018284 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.842663848 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838736638 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.381946227 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.94972249 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453723673 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887605013 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97595119 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.851287416 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.771498716 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.840211091 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842948588 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837251188 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.795869403 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89125083 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.600271414 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233967949 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09405266 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.490901355 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854859677 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.614007655 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.897779492 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.873073495 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.632870759 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851247309 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.878431338 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861665205 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.849866865 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.596501342 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.553593977 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398895671 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165631512 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154207772 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271738977 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.40476991 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.146079095 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.173631809 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071908648 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369266449 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899749789 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181719775 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79703963 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926685819 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.478311271 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186207802 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851871231 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069040144 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218469217 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.707939195 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864214163 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052308437 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876179771 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.840704316 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806884496 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.045024291 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986426801 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.558215945 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036916981 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172453449 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.658220673 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.814838792 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.840166607 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.523712813 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925401177 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.551671377 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.212767231 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.487713098 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.910502115 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20429762 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.849294136 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.287144193 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201774912 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.265870366 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.969578934 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775552045 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.855207192 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.853584064 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.841864079 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.841102979 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.707256053 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.093576179 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853476253 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076360203 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.204011913 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146166931 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.752586232 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.847420226 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84074871 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13763522 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.751188908 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01346695 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.382121868 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.375245213 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847333514 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775634571 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778878922 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.536198971 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.844299168 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.811620475 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062590049 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.031140129 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826062749 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439941856 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091387224 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.099483286 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.857572973 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.122904861 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118127767 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.580614173 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869584602 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.944081513 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.529660542 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.944937854 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.115250439 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.080054093 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698264406 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.073826307 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.881137066 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.66159874 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.843199295 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058797955 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.11523079 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.744550377 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068957935 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.564881337 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.855753627 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180474172 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9007792 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.732153283 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992676782 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.041578665 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853978482 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930483254 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855140253 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.857149022 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856827776 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890685713 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.736277873 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.960622653 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.86104245 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934685042 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.981260587 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.374695359 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.849336717 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127857207 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224098798 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171829462 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905880864 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847540239 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855055385 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781886739 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979495313 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.293555406 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121427844 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.96558234 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.200870422 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870053714 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.539611094 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305330146 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091889741 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121607041 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.743066091 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859867616 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.857082817 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.115963229 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858715758 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.059293617 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077765012 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162824525 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323234846 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.192093951 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.214048557 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120343674 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.217550508 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849457935 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.444608687 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.860353203 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.539738693 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.888447975 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.772117506 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105048234 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859620736 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221411929 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.867573425 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.045798161 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.364932995 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.59809495 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136410191 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.831556495 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.903146797 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13025435 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.235902852 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160494528 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922054114 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859897921 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.568522575 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984501924 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.723674475 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.117996733 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848694124 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061791014 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.559667088 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.858499525 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12803184 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15556469 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.846681343 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.722930858 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856355793 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.857850424 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074526136 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131558703 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10261216 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860294389 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851128688 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.669748948 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126633607 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905881101 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783654823 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.85049472 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947234678 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098321209 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870157593 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.537528965 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.55939188 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159564993 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.770619084 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873220451 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438032964 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.22276363 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173041476 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.393417639 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097713235 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408166427 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.850604535 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144742633 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.856362626 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.431633178 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157809744 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.855587246 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.554014668 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894775406 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.128165475 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169801647 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.858861399 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.602448291 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.818910627 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075699563 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447109242 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793311992 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.858770493 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.913077025 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.850268321 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.970964402 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861111974 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.732285535 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84903888 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.597075395 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354903412 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.857052525 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.843753518 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.572971517 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.556953246 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890387914 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002186837 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854934767 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.564917625 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.145527778 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.103923753 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.565193877 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.860544302 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.855826378 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852495013 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.7808127 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.057541586 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.233448233 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162988834 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.404719665 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.894884556 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856250877 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.069187172 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066414988 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.721375538 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983448424 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424760022 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89395888 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.626525974 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.543286459 seconds)
  done (took 1674.127497015 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.853618574 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.86686285 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.88063778 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.928285462 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912585171 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.929380562 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.952588278 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.952080035 seconds)
  done (took 57.061826631 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.856908776 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.056893391 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.865687689 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.857751543 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.863592788 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.852282846 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.024210685 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.867384502 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.862188576 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.866432706 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.855914641 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.853222737 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.183342488 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.881135341 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.853375045 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.844094567 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.861263988 seconds)
  done (took 74.131234865 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.857937065 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.090401906 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.87952391 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.868903884 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.887530108 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.866153481 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.890592158 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.887060601 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.858602356 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.098532925 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.49101704 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.897005914 seconds)
  done (took 90.361308991 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.868007102 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.863662041 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.864964955 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.863133075 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.865741641 seconds)
  done (took 11.117000177 seconds)
done (took 2178.280466759 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.103886543 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.083512744 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.09576693 seconds)
  done (took 5.967941024 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.003219429 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.052133656 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.216141797 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.198177535 seconds)
  done (took 10.260533285 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.149705994 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.224505295 seconds)
  done (took 6.159905534 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.264727993 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.860319988 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.252404343 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.854633992 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.853168309 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.852998627 seconds)
  done (took 22.351475645 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.859569323 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.860083818 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.860200551 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.860642385 seconds)
  done (took 9.228486486 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.839902838 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.592244966 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.838021256 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.852439151 seconds)
  done (took 20.909668765 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.606440396 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.255340787 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.602075603 seconds)
  done (took 9.251906016 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.312904688 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.743783814 seconds)
  done (took 8.844620653 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.132901363 seconds)
  done (took 3.918803085 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.887731148 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.128569719 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.381599105 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.366410761 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.467878828 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.727150307 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.186221901 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.110768388 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.266556474 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.301908234 seconds)
  done (took 24.61241738 seconds)
done (took 136.772460644 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.24187644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.861557831 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.074525276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.208456827 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.08590243 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.07244996 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.124197146 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.196046175 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.704437692 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.698769522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.20679875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.090273696 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.052169709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.860494944 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.056687168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.863689398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.090542221 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.260791436 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.901952527 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.10496704 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.130778085 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.833638876 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.047154192 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.847572698 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.088092736 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.025436674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.426510351 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.866182427 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.059370342 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.432995034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.026667202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.262462687 seconds)
  done (took 167.591122842 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.598085483 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.854571126 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.856052921 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.855615217 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.347428743 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.856763264 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.855974739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.85545319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.008677257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.977437011 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.86122106 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.359537436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.862399196 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.856378483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.860237288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.856391758 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.186005013 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.665831863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.864977342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.867597302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.871678377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.314159818 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.871831453 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.327392575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.196127942 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.875035236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.852749714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.872667523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.861241719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.843289226 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.86524221 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.85810513 seconds)
  done (took 207.707082206 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.859273245 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.858440651 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.856709807 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.858337758 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.858607001 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.859311098 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.856126841 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.860140934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.553005101 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.540009797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.864584884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.863403547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.866830549 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.856962771 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.86570779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.856173012 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.864906695 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.863469735 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.862571532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.864179585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.865036326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.682263818 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.862581521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.700130448 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.862374111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.863428505 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.858222391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.86724103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.869517094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.870556872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.868092526 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.861367701 seconds)
  done (took 220.422970575 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.060002363 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.867450437 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.868424696 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.818140913 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.870691291 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.869047764 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.831019627 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.061859551 seconds)
  done (took 19.052161188 seconds)
done (took 616.571888609 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.38093275 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.224278008 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.044296358 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.894517562 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.145614474 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.923610442 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.889170925 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.955221771 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.628338666 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.955700428 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.57779084 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.906333674 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.669442743 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.912951947 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.014247347 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.946178884 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.43821211 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.530931651 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.071829393 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.973813927 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.05878885 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.833940388 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.964397834 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.659348629 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.683536119 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.875399123 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.070950354 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.442361367 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.897103638 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.058973493 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.662991534 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.28947896 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.89978213 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.888466098 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.942342019 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.925012895 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.244017711 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.899521039 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.009577401 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.639187042 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.967991377 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.505297303 seconds)
  done (took 103.29403528 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.86133089 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.859581727 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.859214053 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.859196728 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.861720342 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.860230124 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.859439601 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.860130702 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.858292175 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.857720596 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.85901588 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.860934261 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.858835513 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.859654377 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.856998306 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.858276231 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.858993655 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.862970861 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.858559242 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.859726112 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.858027131 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.859540247 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.873178339 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.858918976 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.858715056 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.858956842 seconds)
  done (took 50.163760813 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.872701262 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.043022494 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.130908746 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.891382149 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.873643633 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.87514939 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.890373351 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.878622368 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.873588247 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.87565895 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.982172038 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.880001761 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.891840215 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.132981275 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.889293557 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.87959558 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.87782079 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.879873001 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.054980301 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.896870497 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.900055925 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.887332344 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.900135113 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.890420517 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.876543447 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.87504038 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.876049526 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.334495478 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.884305389 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.982447595 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.919602731 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.895288267 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.301645906 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.134313014 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.925645579 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.880106038 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.873301272 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.98286426 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.881082955 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.874949744 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.89300985 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.879591122 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.122093901 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.363084334 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.889385732 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.874451795 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.341746734 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.991690585 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.91688277 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.884041892 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.123606234 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.890204278 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.87528697 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.875413048 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.910618631 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.883951975 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.874156337 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.217431303 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.886673726 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.891220749 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.879592375 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.877502377 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.049457568 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.883785563 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.035576722 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.884984397 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.883032389 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.875288184 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.125519477 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.889064792 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.371091326 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.891498355 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.876163978 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.986646073 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.043213152 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.365694842 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.890484872 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.052692683 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.31910033 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.904671739 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.886126386 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.319420164 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.907020626 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.885268629 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.879332793 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.879271781 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.878183754 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.923257323 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.893179773 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.307112684 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.374385029 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.23436983 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.90307773 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.89402024 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.879486264 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.217497173 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.886579654 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.877767444 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.12829742 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.378495727 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.894285008 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.884447352 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.357000711 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.895674219 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.897495945 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.88572314 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.131408669 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.890286946 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.921592362 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.876929469 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.88371816 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.879760285 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.896931799 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.885194669 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.87788718 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.348097012 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.005554494 seconds)
  done (took 233.060811454 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.87370345 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.8687632 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.871583107 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.869797382 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.871068009 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.878386307 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.871786957 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.869148192 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.878816137 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.871345435 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.870346898 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.871510279 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.871740071 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.873021034 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.336861281 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.887399164 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.533943675 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.87932939 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.878631739 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.881745593 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.566382964 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.884973771 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.876752529 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.877654139 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.878923943 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.878964358 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.878448438 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.926310319 seconds)
  done (took 168.183056819 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.886584211 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.064995536 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.902824508 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.923679393 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.89460647 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.882628875 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.907926435 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.909333698 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.891616709 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.884108922 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.883200145 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.947252388 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.894840071 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.032397919 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.917951188 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.913956103 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.996826116 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.894186781 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.883363842 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.884601036 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.914365856 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.881842435 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.947991812 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.012149257 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.902636156 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.005142172 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.889028579 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.887307841 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.887729899 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.006767007 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.900708722 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.947426902 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.913542909 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.902283062 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.012711045 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.00516525 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.99588585 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.918298444 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.890967476 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.884355502 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.883997447 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.875822951 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.005830573 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.904751905 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.888094323 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.997872112 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.902503421 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.8890454 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.895870404 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.887082559 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.900628564 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.905445481 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.955333536 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.021742663 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.91890189 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.910063632 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.913226158 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.180491744 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.897472867 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.991791989 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.879410881 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.004507501 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.902467051 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.873537035 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.886638771 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.891287429 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.915037426 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.919045999 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.994124156 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.893986826 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.989998652 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.920548121 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.894110268 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.885937306 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.888283552 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.007221258 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.006168076 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.920044644 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.925081946 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.952429919 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.882321827 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.887727394 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.875778187 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.904623868 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.89928762 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.008140202 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.005252541 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.897084108 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.889353207 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.897938703 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.889484935 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.912315096 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.013376428 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.922208514 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.989250998 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.957429141 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.965385638 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.905433724 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.907045905 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.898427723 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.964115842 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.911140177 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.89895383 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.232046452 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.96079831 seconds)
  done (took 204.66951901 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.354271567 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.945094907 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.94542938 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.209918701 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.322710136 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.774396328 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.93541895 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.938391721 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.964276008 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.133682897 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.009831954 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.957931816 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.925281417 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.916210698 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.937417719 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.956191403 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.948454685 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.265750154 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.065972593 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.041093342 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.917541012 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.25461504 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.273276716 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.335147741 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.976082504 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.267217252 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.632444542 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.195649339 seconds)
  done (took 62.229165066 seconds)
done (took 823.392585422 seconds)
SAVING RESULT...
DONE!
