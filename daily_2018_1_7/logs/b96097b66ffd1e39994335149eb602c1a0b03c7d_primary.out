cset: moving following pidspec: 17588
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.232318964 seconds)
loading group "string"... done (took 0.527373263 seconds)
loading group "linalg"... done (took 9.731395013 seconds)
loading group "parallel"... done (took 0.16797445 seconds)
loading group "find"... done (took 2.496416236 seconds)
loading group "tuple"... done (took 2.313979102 seconds)
loading group "dates"... done (took 1.439552755 seconds)
loading group "micro"... done (took 0.485409167 seconds)
loading group "io"... done (took 0.565151774 seconds)
loading group "scalar"... done (took 54.726186496 seconds)
loading group "sparse"... done (took 13.794501554 seconds)
loading group "broadcast"... done (took 1.34647285 seconds)
loading group "union"... done (took 2.562113504 seconds)
loading group "simd"... done (took 3.56732872 seconds)
loading group "random"... done (took 13.437753609 seconds)
loading group "problem"... done (took 2.26412613 seconds)
loading group "array"... done (took 23.792884464 seconds)
loading group "misc"... done (took 1.107225982 seconds)
loading group "sort"... done (took 3.738199136 seconds)
loading group "collection"... done (took 20.719944909 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.785545068 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.162700075 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.24907205 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.306772887 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.306112566 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.211230206 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.202430101 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.167701679 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.693672025 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.23274852 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.194943759 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410385904 seconds)
done (took 6.748042823 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.319905187 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.135882436 seconds)
    (2/2) benchmarking "String"...
    done (took 0.229938515 seconds)
  done (took 1.02707521 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.146035742 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172548371 seconds)
  done (took 0.977828407 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.130958169 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171777114 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148553041 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.133231181 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.151801182 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.133674237 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.148991939 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.149628335 seconds)
  done (took 1.695402055 seconds)
done (took 4.81052205 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.493679293 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.915250086 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.563897184 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.208027068 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.366231363 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.333222833 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.358687863 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.262660671 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.135178396 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.117685011 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.215396407 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.482340369 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.450941183 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.983168465 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.101400194 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.155884428 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.178784826 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.828848583 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.124651549 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.160888516 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.555715778 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.244921473 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.163894164 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14028213 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.311914429 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.177023996 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176106469 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.149265473 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.746304239 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.181219434 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.249747653 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.129771271 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.174129525 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.20771273 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.286417566 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15893816 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.736615536 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.247302362 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.130900195 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.146422796 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.742461326 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.16738387 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.241532347 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.150464085 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.121992286 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185565726 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.146814312 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.122558187 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.164510972 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.147446853 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.218545071 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.540138164 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.156711385 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.233784076 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.153180175 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.764887287 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.143871424 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.341804064 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.181284672 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.152839688 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.120811711 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.148865163 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.221022625 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.141202714 seconds)
  done (took 23.146563716 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.213599236 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.230971159 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.143567389 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.189080183 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.195118868 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.145165683 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.13448201 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.141353071 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.162303438 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.246092913 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.188529187 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.240611048 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.121276203 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.154393202 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.203340049 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.28282098 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.170636519 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.153761141 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.155576901 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.157914629 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.174366608 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.16257196 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.140857556 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.158585587 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.219490996 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.253401347 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.157131929 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.174162461 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.152292635 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.142544021 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.189427681 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.21106209 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.124495093 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.149551662 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.221059142 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.170613978 seconds)
  done (took 7.115971763 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.271282772 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.148559595 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.281131146 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.174342399 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.240620206 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.196363086 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.228530631 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.219332794 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.331993038 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.251966468 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.551261161 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.228890364 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.17587323 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.147763288 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140614723 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.126382956 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.141742228 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.885611779 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.219264603 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204534559 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.22670751 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1589506 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.12931491 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.79991957 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.129466662 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.146010193 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.138542849 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114917664 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.254795965 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13774917 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.53710498 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.146401253 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.14367692 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.179446188 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.25763283 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.165804018 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.184329979 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140023495 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.150452091 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.259741323 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163739454 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.065229852 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.144751826 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124444944 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.182459394 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.182099178 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.154370033 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15204839 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184842576 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.149077811 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155412753 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.961349626 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.244062499 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.186087449 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.150163111 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330231473 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.152042753 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.165280785 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.146735672 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.138234112 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.289656521 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.169763211 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.147955446 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.124719221 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.160706168 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.143768355 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15050627 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.787548748 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.14579237 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158263983 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.149294218 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.21992114 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.761998666 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13597298 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.151000242 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.17114794 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.134310467 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143316013 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.133828028 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.144298007 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.137350422 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.147308167 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.127435537 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150647936 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.123632106 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.209733889 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.146236168 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.173951858 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172096723 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.137489338 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.149175632 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.16007589 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.142794203 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.130740581 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.226454868 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.162527266 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.144555087 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.16183372 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.178447653 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.153808151 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.291721882 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.130670479 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.172758673 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.146330465 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162762215 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.163544022 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.127096109 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152126914 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.126241441 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.149254999 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.197097131 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.148606126 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.129464486 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.154641229 seconds)
  done (took 29.298252244 seconds)
done (took 60.217566792 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.432183852 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.119322512 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.115693962 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.138902759 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.118246862 seconds)
  done (took 1.665575495 seconds)
done (took 2.384900646 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.175311288 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.30476803 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.18422164 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.175723374 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.15017954 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.170327491 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.171751659 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.150598051 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.16754357 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.192719358 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.135432769 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.197207792 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.18511397 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.161076218 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.161223088 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.210577506 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.153528361 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.172468614 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.208604439 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.155581156 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170092704 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.154041447 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171516566 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.138932583 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169236252 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.153566828 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.169557557 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.15323235 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.162475045 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.138796807 seconds)
  done (took 2.460713268 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.170582546 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.154011277 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.169905459 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.144275892 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170091647 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.138921387 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169552357 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.153982657 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.174348141 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.153362988 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.166804864 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.137826234 seconds)
  done (took 2.457643296 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.153640735 seconds)
done (took 9.423097704 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.732401133 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.185969959 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.227951784 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.335279422 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.640414063 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.324371512 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.688752427 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.252588825 seconds)
  done (took 18.250436574 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.165916523 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.214789063 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.139225266 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.161784363 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.144048312 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.164540989 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.144287864 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.161122237 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.143740248 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.160927237 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.14077555 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.157673433 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.144832444 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.159794313 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.141330514 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.158644344 seconds)
  done (took 3.290091535 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.17042428 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.186101728 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.146648007 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.168593347 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.14538869 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.165706765 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.147369381 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.168311068 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.144261663 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.164864943 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.149154909 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.165652877 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.147754313 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.16229124 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.149902335 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.170901033 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.16202072 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.151108319 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.165371535 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.151069327 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.167916258 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.146685652 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.166392576 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.149833453 seconds)
  done (took 4.616226951 seconds)
done (took 26.885558661 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.203809864 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154249712 seconds)
  done (took 1.097150352 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.208575099 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.226214414 seconds)
  done (took 1.180814799 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.16639432 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.158911583 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.170778169 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.170865532 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.142166812 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.160667402 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.184107789 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.143529339 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.142124367 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.166225426 seconds)
  done (took 2.356838948 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.146249749 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.163547771 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.157879143 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.213798399 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.149480856 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.163714836 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.146414259 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.163132349 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.14726602 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.159770465 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.145805464 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.176657105 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.163020431 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.16150222 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.163200995 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.14841902 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.167687938 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.144915123 seconds)
  done (took 3.63317167 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.142270925 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.142694789 seconds)
  done (took 1.037466415 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.145213344 seconds)
    (2/7) benchmarking "second"...
    done (took 0.142204789 seconds)
    (3/7) benchmarking "month"...
    done (took 0.161773674 seconds)
    (4/7) benchmarking "year"...
    done (took 0.160320732 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.142955164 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.140345806 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.16071285 seconds)
  done (took 1.804912027 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.662706446 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.275277467 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.437048704 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.128121033 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144432388 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.383806907 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.16448054 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113872342 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.132642834 seconds)
  done (took 3.224068342 seconds)
done (took 15.081581303 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.145553567 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.234470303 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.672527968 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.163770902 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.160277759 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.205311488 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.358090834 seconds)
done (took 2.698272138 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.385446757 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.195921484 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.126783421 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.14678991 seconds)
  done (took 1.609520658 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.135352321 seconds)
    (2/2) benchmarking "read"...
    done (took 0.151769043 seconds)
  done (took 1.049398238 seconds)
done (took 3.424166291 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.161837577 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.159608635 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.146749576 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.163617759 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.144979633 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.163782839 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.145554382 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.162342331 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.145897247 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.161354772 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.14613557 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.163930882 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.14422019 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.163617156 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143253539 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.16428022 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.1457693 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160806424 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143038175 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.164506769 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.144950192 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161356299 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.145063429 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.164177762 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.145491643 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.163928865 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.142728432 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.161860319 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.146260131 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.164490515 seconds)
  done (took 5.391341058 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.171598311 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.137284494 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.161212056 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.149008429 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.158052728 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.14282449 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.157748429 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.139631364 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.162925804 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.140323003 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.162747806 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.142061907 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.157887974 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.265329394 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.162147766 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.166978795 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.169613714 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.139922815 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.158070813 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.144835808 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.162896148 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.139682061 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.159442593 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.143309641 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.142138052 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.159964669 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.143366681 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.162018236 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.142148674 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.160731037 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.144962087 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.164779913 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.141853538 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.171272919 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.144748629 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.161357874 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.148864938 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.157846454 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.144950918 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.158081233 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.140486849 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.160339186 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.140907786 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.164799713 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.143562824 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.158865884 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.141919455 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.143672784 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.161642752 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.144262051 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.158737457 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.141676095 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.164843295 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.143779594 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.165750998 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.138997765 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.16301293 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.139439374 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.162540083 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.142721976 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.156804818 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.141107009 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.165428145 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.144156333 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.176757212 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.148615036 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.159014646 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.144557744 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.161134068 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.150805758 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.161963499 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.155226252 seconds)
  done (took 11.900497098 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.144335884 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.141227492 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.161905862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.142396582 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.161304557 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.142567736 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.162533755 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143755652 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.161401273 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.143076428 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.16152885 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.144505941 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161642248 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.144909324 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160866794 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.144708797 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.143228898 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.163835174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.143986709 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.163777582 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.143572822 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.163864017 seconds)
  done (took 4.122294935 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.295437514 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.151197049 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.215469077 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.174479644 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.162491361 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.177144399 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.148214494 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.169211418 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.148717128 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.172675628 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154187854 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.168619707 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.162042311 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174354303 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.171971907 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.155646008 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.168626248 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.154743347 seconds)
  done (took 3.902950536 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.146215347 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.144250338 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.165016093 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.143489354 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.164713579 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.144762402 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.163937004 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.145816686 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.165700311 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.147194927 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.163628415 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.145499011 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.162542134 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.145498323 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.145071576 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.165676126 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.14476702 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.165528102 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.145171116 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.164437033 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.144921937 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.164823404 seconds)
  done (took 4.172288445 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.160895081 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.165097306 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.166466721 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.169696479 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.14707687 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.164936146 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.151830377 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.167319434 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.15398158 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.166406381 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.148152746 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.166866887 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.162792119 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.16543058 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.152888023 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.166784809 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.148102539 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.164807726 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.150077179 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.164821264 seconds)
  done (took 3.989354558 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.243067805 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.185334064 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.184571158 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.172759705 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185806807 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.163755843 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.192147331 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.163802828 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.183942129 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.176202213 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.184420243 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.182733495 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172664739 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.188536415 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.164159253 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.191807416 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.172069215 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.195783928 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.18406815 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.16402526 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.195928522 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.164921775 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.193024991 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.165222736 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.18746316 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183371435 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.165614289 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.189410745 seconds)
  done (took 5.882672887 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.159346395 seconds)
    (2/2) benchmarking "in"...
    done (took 0.176724416 seconds)
  done (took 1.12628032 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.151269805 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.148129253 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.170958848 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.14907371 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.170373499 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.149894537 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.171408871 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.148115527 seconds)
  done (took 2.049280385 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.216251863 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.239627145 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.17749356 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.16159649 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.240566199 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.230475414 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.23317852 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.155859584 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.169106653 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.141955128 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.235416406 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.140336866 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.172151048 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.145952274 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.172870427 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.155686459 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.170166382 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.157807954 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.177004608 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.151016938 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.176510859 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.153912661 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.173828534 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.156814133 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.166102206 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.153049011 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.175013485 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.178935321 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.14736912 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.171791598 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.14870118 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.170864187 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.155158904 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.173230948 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.14966361 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.2415704 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.157249684 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.169724244 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.150353551 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.177636681 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.182254751 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.171627086 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.152040103 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.165848316 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.150512966 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.167918275 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.148267148 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.169222926 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.137033128 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.160260475 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.141717809 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159220967 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.142660326 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.164083772 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.14339899 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.169906206 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.14330205 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.160174568 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.138237813 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.157740476 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.143258272 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.1593482 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.164234523 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.145837451 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.166048168 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.146992522 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.164292106 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.148100582 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.168597881 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.152425746 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.171168002 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.19075928 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.171646639 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.152859101 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.175759382 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.159882142 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164140723 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1487193 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.163974289 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.145499356 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.169532224 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.170924578 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.168446699 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.144243807 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.165384756 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.158383893 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.171937574 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.154273958 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.16245122 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.154565319 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.169016519 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.148399407 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.161868792 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.151187431 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.166234659 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.153513977 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.163626634 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.150619509 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.168256972 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.152603246 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167464789 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.141707466 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.164552001 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.147534063 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.16777212 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.142554809 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.211748727 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138959714 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.160192165 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.1455292 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168403979 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.137156265 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.164483989 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.14092202 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.159829812 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.13878728 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.16738828 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.144687212 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.165463375 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.146464846 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165682956 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.145092481 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.164798272 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.141443851 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.161146294 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.147788176 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.17024962 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.147046087 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.164797149 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.145380641 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.164037671 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.143740141 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.167954072 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.142170252 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168946418 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140477461 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.162981824 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.144804492 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.169419347 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.145755571 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.160235385 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.143776837 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.166696214 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.143471335 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.167505504 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.146340323 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.160844343 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.137477072 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.166410265 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.140018932 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.166382048 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.153393643 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.159990388 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.146625214 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.162240339 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.151299661 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.161358308 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.14693626 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.167565078 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.148852308 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.169554809 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.136049425 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.163334632 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.146684713 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.168064669 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.141002092 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.164825415 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.144168013 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.170660131 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.13758527 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.167567839 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.13768369 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.161850579 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.149045134 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.16432703 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.148565133 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.161725311 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.192532719 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.180036294 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.153589425 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.165285547 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.145611391 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.169935642 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.143523916 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.170687907 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.149560644 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.171343617 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.142984858 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.164330468 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.150862849 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.16325377 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.147590083 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169611988 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.15216581 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.161475112 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.146624012 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.157967759 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.150319825 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.16730532 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.150119024 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.170137185 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146506002 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.163733973 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.153498165 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.160194235 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.150057491 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.157093185 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.151253725 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.172857491 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.15157188 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170268874 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.149226288 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.163396889 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.146595067 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172308653 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.147766031 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.16557065 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.147717237 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.15958458 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.140034715 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.170435917 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.150178925 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.15968716 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.145273383 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165110904 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.149099772 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.161424283 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.139413449 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.168196132 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.150103222 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.160391109 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.14682496 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.162086751 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.145992054 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171736128 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.138293268 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.162257764 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.147605608 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.169650292 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.145277616 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.166227166 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.148821126 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.171041781 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.149760694 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.166722832 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144837555 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.171791534 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.1442952 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.163864179 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.143689691 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.165961038 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.14059067 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.146192876 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.167999601 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.161964432 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.14440668 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.170199285 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.153172287 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.170410956 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.14736505 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.169090465 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.152121657 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.171514031 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.144344397 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.170907435 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.142858068 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.159510597 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.145402223 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.13878894 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.168749076 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.142339508 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.171301062 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.143179968 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.166450558 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.149112962 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168655941 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.163330711 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.151516031 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.177134637 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.141229116 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.159022604 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144649302 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.165883422 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.143489528 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.163295173 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.147773088 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.168317598 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.150208319 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.170029736 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.143101574 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.165252729 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.15187331 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.162914109 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.152849345 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.172985623 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.152039197 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.162524919 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.15148425 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.163865514 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.151991006 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.160441548 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.147867793 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165451642 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.146715968 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.164898667 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.144436048 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.163041651 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.139489928 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.165021693 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.151849883 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.167352641 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.149711109 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.168447349 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.144489784 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.164568281 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.141712645 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.173359389 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.145281948 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.1734298 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.147774212 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.160475433 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.14119267 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.171654775 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.147916015 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.172946131 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.142763346 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.172448796 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.153054992 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.171128364 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.147770439 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.155121545 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.176815423 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.151599129 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.174119521 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.160817977 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.146042945 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172657167 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.145982727 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.168098423 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.149143223 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.139822344 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.171180415 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.152009152 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.171661953 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.166730589 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.142625179 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.146550467 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.175002307 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.149871637 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.174365971 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.151081535 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.170484124 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.146067018 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.174549894 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.152584609 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.169770435 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.152352549 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.174245486 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.153262418 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.169195604 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.152586255 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.171739557 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.143470781 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.165689986 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.145183328 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.175383407 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.141486539 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.175976429 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.151261417 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.16613191 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.145512598 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.172369327 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.144449367 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.171443885 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.153450636 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.169005313 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.156824172 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.169640827 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.145554653 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.172159374 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.152306458 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.162682146 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.14684317 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.167307006 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.154399236 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.169122362 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.151909147 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.16823771 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.152788714 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.172375344 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.152646552 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.174381613 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.152976315 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.164411441 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.154251552 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.172810158 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.149610868 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.168530401 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.147097041 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.167279691 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.14828958 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.175243089 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.145912712 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.176276531 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.153444216 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.167489832 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.146329488 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.174763134 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146671865 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1773886 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.14571672 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.171482179 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.142738313 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.174411287 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.149372508 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.175500746 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.145749557 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.165612361 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.15438484 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.174890731 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.151732547 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.172789691 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.154032102 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.165611517 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.143177286 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.172036905 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.146311528 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.178275675 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.151943988 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.169613481 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.148183578 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.173375514 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.1502772 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176947074 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.14315716 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.167126128 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.150441187 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.171046926 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.147774989 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.164219578 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.154398638 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.169698206 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.153173491 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.172524869 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.144080766 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.169940697 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.154993862 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.169454 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.145438377 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.167130262 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.155061829 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.169143488 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.146320327 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.164987963 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.158035313 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.172934758 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.156768702 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.168018299 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.150259799 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.1677555 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.152663173 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.176332726 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.148340545 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.171673737 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.152128254 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.178760997 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154262393 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.162170673 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.14780972 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.181413767 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.155678743 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.172578554 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.151426022 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.170130851 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.155742795 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176830097 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.152263926 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.165067514 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.145210592 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.169125621 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.145323466 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.172969997 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155511316 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.170755935 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.148054658 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.173818754 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.153564074 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.173076668 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.152789682 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.143249797 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.181814397 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.146976843 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.175596343 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.144095671 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.168876558 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.153090733 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.178925425 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.147749876 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.173018204 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.150663178 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.177541774 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.144919352 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.170607542 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.153016747 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.176295735 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.155402974 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.170983763 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.148240257 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.17405484 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.158983992 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.172828084 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.150329332 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.179375099 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.155769247 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.173875553 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.151339272 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.175887594 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.154792576 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.176589558 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.156249638 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.170197387 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.14920065 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.180422826 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.157200177 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.181329941 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.147765211 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.168312622 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.152992566 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.171122023 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.143735149 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.177285709 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.156644526 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.178730399 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.149510492 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.169894806 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157762523 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.177599035 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.150637689 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.172682241 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.147333738 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.177162869 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.148336998 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.17705236 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.146625655 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.179982078 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.156429507 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.18072771 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.160144039 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.168093782 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.155482975 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.179099502 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.157873624 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.177676593 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.145421995 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.169004605 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.153148058 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.179899835 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.155703014 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.178250678 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.153783239 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.175834074 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.152799452 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.173440779 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.14855558 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.17979557 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.155694105 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.174698552 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.152845511 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.172075478 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.152053611 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.175549611 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.156386449 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.179651741 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.152760089 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.182958827 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.154689356 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.172643011 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.148960735 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.177221099 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.153355638 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.175940052 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.156927573 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.170581123 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.146322621 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.178580576 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.160631755 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.172555722 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.159529608 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.179452278 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.150533733 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.176747867 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.159513863 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.177733594 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.15402038 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.176697817 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.154776754 seconds)
  done (took 96.387524492 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.207004906 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181955338 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.152795211 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.175382801 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171785581 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177086951 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152210197 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.178384144 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.154736397 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.184846139 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.152943189 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175403416 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.167773248 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.198447568 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.192228952 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.166816493 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.177858706 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156453223 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.173737817 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.155080146 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.188576111 seconds)
  done (took 4.53464904 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.159085958 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.151666625 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.175709948 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.153539308 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.176368167 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.152829595 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.174998565 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153358412 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.17675258 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15458619 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.175066988 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154001493 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.173327766 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.153339649 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151769714 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.176034462 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.151926585 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.176341945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.152339267 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.176042855 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.154473325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.175694847 seconds)
  done (took 4.490547041 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.187235499 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.156396652 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.173089123 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.152775546 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.17838049 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.15384461 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.179655473 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153848199 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.183764965 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.147662784 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.167732458 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.148156949 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.173425864 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.15385358 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.170924451 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.154369778 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.182136631 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.157560467 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.178798696 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.15549411 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.16653752 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.154830811 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.153775025 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.169975573 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.158383778 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.181642379 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.157565125 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.179525117 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.145438574 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.180249717 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.15370012 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.170579365 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.146424441 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.167215043 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.145302538 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.178639533 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.158236506 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.177006957 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.156599995 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.167746091 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.15801959 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.158983385 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.168726873 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.154025518 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.178090626 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.147961512 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.181501443 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.153880876 seconds)
  done (took 8.775339018 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.188410789 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.213950194 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.157790299 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.209245823 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.19087587 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.164652917 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.181226323 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.185606012 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.182436055 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.158126033 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.194017355 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.167887722 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.184603071 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.161791707 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.181023215 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.158517339 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.182308274 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.156754316 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.185704531 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.178424898 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.163105233 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.181925217 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.169294637 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.189797199 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.160448508 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.180651089 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.15775382 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.187889759 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.170032667 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.18550071 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.161710867 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.190083958 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.194023019 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.160158858 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.181147539 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.160874671 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.191851052 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.164135525 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.18392481 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.159877267 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.184174255 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.162376868 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.184062043 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.169578665 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.182959903 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.160478454 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.18415645 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.15645953 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.191489319 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.160357692 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.191868422 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.191773968 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.164587857 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.183148154 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.164403262 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.194402803 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.161170954 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.184755068 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.163844874 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.193969115 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.159340982 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.18719124 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.169338372 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.183066423 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.165534723 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.193130551 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.184414406 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.163348815 seconds)
  done (took 13.002433126 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.196649788 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.185473776 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171317141 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.193849487 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.163008374 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.189510576 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163038432 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.186306754 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.162819704 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.193578028 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.186397571 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.297975098 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.167736039 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.192418862 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.164586554 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.186910856 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.412193489 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.189772207 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.164987588 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.188262662 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.163778783 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.194213812 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.162761028 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.197814395 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.198147062 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.161457846 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.186639693 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.164455644 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.194754282 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.163646492 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.198349456 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.164061469 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.188586851 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.195139161 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.175888325 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.186877848 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.158812357 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.188196029 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.164003713 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.186973983 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.160503952 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.194154271 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.164113043 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.188806788 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166814822 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.191592107 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.19887519 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.176462065 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.191768582 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.170072408 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.188549744 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171480985 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.187116057 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.163379525 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.195424999 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.2012088 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.172283087 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.194075733 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162908928 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.196350433 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.194998579 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.179927488 seconds)
  done (took 12.482421651 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.172511512 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.16066412 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.182395426 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158667251 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.182606625 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.159076528 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.187207911 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.158717054 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.184859713 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159307518 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184366437 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.159271543 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.182334546 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.159367258 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.181343478 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.160204953 seconds)
  done (took 3.661495141 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.185184695 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.197887873 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.266138344 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.163949897 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.185489169 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.17046807 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.183687758 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.161709234 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.181950628 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.167036088 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.186059099 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.162973479 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.199505423 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.160292034 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.180854459 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.162644254 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.182217173 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.166830547 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.182831641 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.242026891 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.190024442 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.161654461 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.184714438 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.1628256 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.186311759 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.163291796 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.189620635 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.159798899 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.186663136 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.161611809 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.184979597 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.166731567 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.183963124 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.16362003 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.185158787 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.161083831 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.183546504 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.161299611 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.186426694 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.160578946 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.186135358 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.162190751 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.18515327 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.162571179 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.18612789 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.162356167 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.183927386 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.16539851 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.185370383 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.162710981 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.189056608 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.168592792 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.191221943 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.167095119 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.193281077 seconds)
  done (took 10.757277979 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.176816217 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.187138326 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.171238374 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.183515308 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.161681192 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.188017775 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.163909923 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.18603889 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163737672 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.157744038 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.186094017 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.161807218 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.185936708 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.161676295 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.185947644 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.162409098 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.184549364 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.161674234 seconds)
  done (took 4.068674503 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.166684317 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.15969166 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.183288578 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.159197575 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.184008622 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.158980202 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.182771639 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.160375693 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.182641149 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.159207198 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.182882651 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.160969028 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.183951664 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.161133903 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.157486189 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.184803091 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.159312788 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.184365554 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.158597586 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.185431879 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.158673599 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.184283789 seconds)
  done (took 4.701433065 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.176784763 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.261370505 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.188845548 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.245481411 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.184409638 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.154463239 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.1909482 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.180020092 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.174665541 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.178958627 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.157131219 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.178775976 seconds)
  done (took 3.215523211 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194834892 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.219846072 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.162116377 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185697661 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169675543 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190270348 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165763358 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189137059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172209345 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201569262 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187435556 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174462919 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1944086 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173256665 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193427184 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168413546 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190679695 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165401928 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186766747 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202320257 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166951703 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19633781 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167339253 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190189196 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165947491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198161556 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172764164 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201175517 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18922711 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174167134 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193498371 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166594074 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19807465 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176330614 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.187227672 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171267116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189851863 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203473183 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170083508 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198402953 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.163575139 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193749239 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173406939 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195907454 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197466743 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167397206 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196202409 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166816296 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189131209 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185103571 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195581887 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19738695 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171466275 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198021695 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173953777 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.212409432 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.20046391 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174890968 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197479975 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17818376 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197263382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194266775 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176917093 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.202292175 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169547329 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199416354 seconds)
  done (took 13.180236978 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.207065093 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.189242505 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167357993 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.20190882 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17420708 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19090769 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167073065 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19302953 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166799899 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187901285 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.235242378 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167637237 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199446886 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174490263 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191329019 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166591599 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192894668 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198998034 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165285568 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.212811952 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167693526 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199077993 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175148115 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198790824 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.203256032 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172365055 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191667496 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167255115 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192354719 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16780808 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198264384 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168226434 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199254711 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.18889618 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175268456 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192007895 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16962775 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19798257 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166524544 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196444982 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175229126 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.206899729 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193143422 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167823141 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205231805 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167515631 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19220572 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164362166 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191502258 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163925635 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.209272656 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.203049941 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17930127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201670165 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166979344 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193957066 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168092665 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192167453 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16820493 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198040533 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199084675 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169489584 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.213101182 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167625284 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193601752 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17551465 seconds)
  done (took 13.222646558 seconds)
done (took 235.779572562 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.245881187 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.28139451 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.321607169 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.216299263 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.218086746 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.209385153 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.18527209 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.191509389 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.156765202 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.180360349 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.242083944 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.157188757 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.22013409 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.181039373 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.314479684 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.157638532 seconds)
  done (took 4.431600826 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.260448164 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.391089386 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.197269169 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.158720219 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.187634629 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.15866778 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.187359034 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.159636603 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.186115858 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.188640552 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.161541669 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.178503972 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.165897231 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.179091118 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.160671363 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.183999616 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.168133064 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.184116804 seconds)
  done (took 4.429825621 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.185678973 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.231553497 seconds)
  done (took 1.38466235 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.193947184 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.281844962 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.387796257 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.234033954 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.181183144 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.203113857 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.235598793 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.172008866 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.274826534 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.171409762 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.198078567 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.182465654 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.187999604 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.188694492 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.177072301 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.182224899 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.188477493 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.200177089 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.173325306 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.18495199 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.185195279 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.189430463 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.164909055 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.200558023 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.26661422 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.172608181 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.191417876 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.164852035 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.187108391 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.172912931 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.192215234 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.20115507 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.172540708 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.249109632 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.187067157 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.242016815 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.16900877 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.185827647 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.175202675 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.18467379 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.162409991 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.186850117 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.173677145 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.183227993 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.163659527 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.192821475 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.165231639 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.18946168 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.193109223 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.1698948 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.192102398 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.166459431 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.239906534 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.196230115 seconds)
  done (took 11.595279924 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.010675255 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.217738225 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.193330384 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.049419454 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.223013629 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.17347829 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.990845039 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.188231589 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.279031136 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.009459481 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.19978367 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.165396719 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.215814197 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.269568535 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.268500352 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311447442 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.874519748 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.194726658 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196714621 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.21373893 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161217084 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.204403217 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.214518892 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.483212851 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.186791233 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.170088987 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.183136998 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.161793847 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.246333784 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.190089522 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.159558432 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.239182248 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291836515 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204248457 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.160239131 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.185088547 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.159612935 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.207120562 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236521961 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.199948805 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.219716529 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183403083 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.165638463 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.18623465 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.203485368 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.160098191 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195403133 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187661255 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.210972531 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.158239214 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.20296476 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.168047877 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.184413216 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176115826 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.18616398 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306164184 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.333372705 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.159820024 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.201730819 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.181388315 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249453612 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.170405953 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20477833 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.184395325 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.30446875 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.160360183 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80597388 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182962413 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.187181154 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.166280177 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.185004928 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.163813856 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.189530254 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.197141684 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.488401409 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168571426 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.186217546 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16755933 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232226683 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.165189535 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.190877121 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174727567 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.189983108 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.178287524 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.196288299 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161485191 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.218264561 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.289582573 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.168470999 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.188609025 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.161477878 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.181160079 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.188744167 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.30274567 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170913008 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.200311365 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.247344492 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16899594 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.201472553 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.177234137 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.204194427 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187277444 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.18620698 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.172172465 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18639826 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.173375725 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.203837202 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165278971 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.202517677 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.166851112 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.201340256 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.174038954 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.186798765 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.183552442 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.499361127 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.17767825 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.186530178 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.185201066 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.194607784 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.24309359 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16675123 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324463283 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.194460263 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183211065 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186436272 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.158629141 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.205573851 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181018083 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.191520255 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168576527 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.188097953 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.166840043 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.298953636 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.177926928 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.206036857 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21777354 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.237584137 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.193488219 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190763502 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190114161 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185334786 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.188661179 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.181324244 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189546161 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774697929 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.191694823 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.168686429 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.187102222 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.227037877 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.193575316 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.167303537 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.207250995 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160053195 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873676302 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.19491063 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.169126456 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.193392915 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.166722284 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.192354419 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1614263 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.203900279 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18268132 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212925774 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.16963977 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.188372901 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.168103871 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.24933026 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.190513888 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.162337019 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.207352376 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.169753018 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.189358386 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.166787617 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.193109602 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18724041 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.198699444 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.175079174 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.586045947 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.189442182 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191427666 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217876576 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.165314196 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297744097 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167812919 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205373736 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.194874335 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193963482 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.302987697 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.210898227 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.221178914 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.198810347 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188716795 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.187317221 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.161018767 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.215882274 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.169111192 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.187959665 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174595667 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.192897188 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167751442 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.229492711 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.163124915 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.28719022 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.15955111 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.213412395 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1628934 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190874915 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.280038024 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.191379444 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.172851681 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.203152486 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.186649765 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.185859217 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.978830707 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.166427284 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.195195406 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.165018656 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204137767 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183498544 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1871608 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.181256655 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.197642166 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177932045 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.255853899 seconds)
  done (took 56.972150787 seconds)
done (took 79.783314577 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.329188885 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230839879 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.426696135 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238297351 seconds)
  done (took 2.292009344 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.351949264 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.20437179 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.304850242 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.185674976 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.315096574 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.160474296 seconds)
  done (took 2.541953246 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.236576034 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.232204196 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229846391 seconds)
  done (took 1.724660436 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.272493239 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274824995 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415171431 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32741798 seconds)
  done (took 2.37611871 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.340997008 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.179092809 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.220550228 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.290187725 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.30583052 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.272845354 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.186439463 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.239432484 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.218382748 seconds)
  done (took 3.313684461 seconds)
done (took 13.267029452 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.213042206 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.223164889 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.184119168 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.20428686 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.199156975 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.226017781 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.190503071 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.223872277 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.191898074 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.203972335 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.190181019 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.200635159 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.284316864 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.196568924 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.20266782 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.190593743 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.201703389 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.20094387 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.224680654 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.175107214 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.224461 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.17366064 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.202198823 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.205796076 seconds)
  done (took 5.949647153 seconds)
done (took 6.977370803 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.273829493 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.185554093 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171255065 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.19963054 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.278561054 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179729176 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.21629516 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.174183448 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.210575602 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.172668053 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.188787523 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.185989743 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.199023718 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.247142409 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.202773433 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.188697773 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.165441997 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.209159805 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.188811514 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.214368917 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.254696051 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.196896104 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.183672398 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.19230712 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.282004144 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166614954 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.19825984 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.173495465 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.21373089 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.172900027 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.199339365 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.163186757 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.216188425 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.189585937 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190962934 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.175177944 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192069576 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.138373771 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.198945756 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.176380672 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.210014884 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.176745255 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.199238061 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.165918862 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.199828525 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.175603059 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189301653 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.179165846 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.188634563 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.174867475 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192418452 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.191653249 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.19899298 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.166108474 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.188655956 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.166426134 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.210931022 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.167325362 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.211334236 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.165971048 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.163958987 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194300952 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.173959596 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193234856 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.173449633 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.191853411 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.173898175 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.202873456 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.171584324 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.19590274 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.164927487 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.200875923 seconds)
done (took 14.879219468 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.173098332 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.238598751 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.275437869 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.254557357 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.225113235 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.207477992 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.179732471 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.216253674 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.179459407 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.209511935 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.200079957 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.22380694 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.286377248 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.182317536 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.208465374 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.198707158 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.204505358 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.17345525 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.283944297 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.21774263 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.188775697 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.210801443 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.190500219 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.211639506 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.169065542 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.230013992 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.199033238 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.179618233 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.19449173 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.182075802 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.215275846 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.169438647 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.198815312 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.187960896 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.213344832 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.181050058 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.208696881 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.177354704 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.196250325 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.168388264 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.205443994 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.18448962 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.196596209 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.180212713 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.203988715 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.183717488 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.203936004 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.181488927 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.198193403 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.17585789 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.198379427 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.219960402 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.184024241 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.211343587 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.183514147 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.209545228 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.184468634 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.211550344 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.172787863 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.209970948 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.176799568 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.196556753 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.171776315 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.219103683 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.17374754 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.210437118 seconds)
  done (took 14.29464315 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.193012573 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.227946963 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.179618398 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.209433531 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.174130783 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.192236638 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.162372607 seconds)
  done (took 2.39887061 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.170918488 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.294527903 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.290056142 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.289484227 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.284802582 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.296750447 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.190535233 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.191668098 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.204613384 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.202091554 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.291991941 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.325665988 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.177786458 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.207825069 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.264117604 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.196467637 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.293962231 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.27076772 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.180823897 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.292764967 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.212606586 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.19900357 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.20771176 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.166338676 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.283563643 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.195288561 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.340697915 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.183892874 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.204615006 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.180203971 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.210203208 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.272690301 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.258562955 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.211559759 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.173408578 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.286555056 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.286972547 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.209776423 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.29863809 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.170704558 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.285849886 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.206779212 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.183308518 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.207314925 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.183252287 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.277120506 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.185469813 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.211457814 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.180171575 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.294340169 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.207046056 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.288592265 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.179289021 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.21028847 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.176966559 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.212351751 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189251814 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.208556661 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.300172683 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.183555903 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.288259805 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.290831657 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.289947462 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.292792885 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191950379 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.289971663 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.279597311 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.20860848 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.258875189 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.213663861 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.2928575 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.180556415 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.208065941 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.281259396 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184992725 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.293500054 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.29404716 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.20651988 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.182508843 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.196578764 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.181277045 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.192992468 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.265860668 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211904937 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179616872 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.217020057 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.206119077 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.183846096 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.285827438 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.217698067 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.182719589 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.206823315 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.188316368 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.208920929 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184826643 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.294325581 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.208124147 seconds)
  done (took 23.450045954 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.175900549 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.16771579 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.201429361 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.168788333 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.198084936 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168710362 seconds)
  done (took 2.172773511 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.21300035 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.209479304 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.19313361 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.210189378 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.233776861 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.298356522 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.301977972 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208388888 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.200894276 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.221012302 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.298879291 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.301446849 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.301849485 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.189589384 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.304155262 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.183563217 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.303749678 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.211281893 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.192409093 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210917997 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.181477335 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.216650378 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.179483131 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.28813574 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.214787188 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.183969051 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.205423054 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.1912426 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.220509742 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.203308485 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.189338178 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.209349732 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.176803992 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.203916555 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.3040161 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.176082018 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206556182 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.187422016 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.212718706 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.18361555 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.302903509 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.20902985 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.190986877 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.214865864 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.178044725 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.205448293 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.184950481 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.204608113 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.306364656 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.186015283 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.216265357 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.185388751 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.214324915 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.18622827 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.205276351 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.177854146 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.215267773 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.306864795 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.185808576 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.205767785 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.183547668 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.214830048 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.203244081 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.190772228 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.210536627 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.188791063 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.203847327 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.186910313 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208770889 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.185273253 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.214644571 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.185208883 seconds)
  done (took 16.677872418 seconds)
done (took 60.040111058 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.66600922 seconds)
  done (took 2.757865832 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.038226507 seconds)
  done (took 2.133465087 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.550609829 seconds)
  done (took 19.681159828 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.491364557 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.417206992 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.112110784 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.240384726 seconds)
  done (took 3.356797649 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.152124064 seconds)
  done (took 2.260477455 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.492206702 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.351287122 seconds)
  done (took 1.944200177 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.829245499 seconds)
  done (took 1.943611227 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.822646922 seconds)
  done (took 2.925275952 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.341027228 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.314900869 seconds)
  done (took 1.770951689 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.695393227 seconds)
  done (took 1.816986215 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.29591892 seconds)
  done (took 15.421317393 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.329224481 seconds)
  done (took 1.455040714 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.364696094 seconds)
  done (took 1.494069263 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.761497949 seconds)
  done (took 4.888215512 seconds)
done (took 64.959783617 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.190330173 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.212649203 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188517776 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.209842448 seconds)
  done (took 1.908888453 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.194284788 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.209922682 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189469751 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.209048 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.190343143 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.209353504 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.183955021 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.212826284 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.183380804 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.212419891 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.184227533 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181664806 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.21492568 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.181741118 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.209882232 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.185453731 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.216198319 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.182386547 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.213794 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.184915062 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.213444019 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.183386331 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.215092017 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.215513954 seconds)
  done (took 5.897303131 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.185312957 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.172785142 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.204559758 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.171534944 seconds)
  done (took 1.855011734 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.201410499 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.226092122 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.198691253 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.220910171 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.20087315 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.225944529 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.184346269 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.209240794 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.184085781 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.223021012 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.200800402 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.228963833 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.197524601 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.217975084 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.194437526 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.207412566 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.188542072 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.227415527 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.195693114 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.224998812 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.187032257 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.223433745 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.182272854 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.225631471 seconds)
  done (took 6.106480328 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.266771488 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.224268316 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.211847313 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.24250027 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.181119888 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.241969891 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.258115738 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.191279548 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.218233332 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.190210049 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.213142418 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.185248808 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.260264709 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.188533364 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.217625317 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.184405088 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.223716148 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.216627088 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.235742911 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.216181688 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.191160258 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.224008478 seconds)
  done (took 5.915805234 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.280047209 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.208600947 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.172677683 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.203003954 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.215648032 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.179342666 seconds)
  done (took 2.398178716 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.181271014 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168349184 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.199588949 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.167956465 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.201713621 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.169068364 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.198842019 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169655078 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.199420372 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170541288 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.19909077 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.169812526 seconds)
  done (took 3.335895519 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309853945 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218999919 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.351277853 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.464186493 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261222943 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257333362 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.355186479 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255781014 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.279160489 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233235131 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251091636 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258825194 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250528436 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27659959 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240051989 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.247714447 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238843507 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.332036679 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238985721 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332443324 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252949412 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246004866 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.289308123 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245466092 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204547923 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260874899 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.213055798 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195768342 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263494923 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262318433 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265717702 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221275701 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239913544 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284192996 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305437163 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241550213 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.384148803 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200459679 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.262352296 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.294374423 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.329647637 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207962279 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288820758 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249967822 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225633706 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281926977 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246847754 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.284863753 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.199974979 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24275036 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278203543 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274682912 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.265440104 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203292314 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399668824 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231527956 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.208304971 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279377294 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287643768 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302101195 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276569373 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.190365471 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269953965 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289166194 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31455808 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.23829223 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.232610451 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223652114 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261963165 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276594963 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279999232 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260085584 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.285217281 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197185841 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269407905 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264596526 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249627141 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274512451 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270541604 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.215997336 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215373289 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231971867 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191471176 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.287603023 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217178733 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317404307 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199875626 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.276218288 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274518602 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220795604 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259665445 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257114528 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229784384 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245876872 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158799755 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241555452 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.25583502 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224108753 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227034674 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21831917 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237375115 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.220884253 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217835843 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.220222654 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236858098 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.223898376 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254993857 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23696775 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.231469095 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277725219 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215797526 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.262791077 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265587917 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291688552 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198082534 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233093234 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31993159 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237083606 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.233936029 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271602182 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296065873 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.209841449 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233454687 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26011116 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261030644 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240856221 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300559565 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234910219 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203824824 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.226570995 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24215958 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258052651 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.260818225 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193562994 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.265132165 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288335028 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.193036612 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236083798 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28366926 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198661713 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222361441 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20379523 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232584807 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.239709062 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.219533711 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.237538834 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249343171 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236294866 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.26700297 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252552991 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201992599 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26797711 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227312991 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.237776017 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247110878 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.183714865 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.273144184 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297772805 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226251423 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249098062 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.260754515 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280161594 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272728979 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197205523 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.283137411 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226539593 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.188714349 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259238722 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268017841 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230154745 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288086065 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278216101 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.262531084 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.264939605 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215396092 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267250833 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.286124291 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255195691 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.207690618 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272990059 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267771475 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.187865983 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.222612157 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.195376427 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236435912 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196770557 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23652758 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279155369 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260757857 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273544827 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237340832 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236924554 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.290924312 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.192324052 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2594015 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.279334653 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206698138 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.290391786 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292277082 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27991053 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208015212 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260947184 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.219774529 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195125055 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231958706 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228143093 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23848863 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201989429 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241453459 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.292856897 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268705876 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216260926 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28985907 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262362228 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.305084555 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.220488773 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.230305148 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264910777 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266679832 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.257952998 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231342724 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.228947203 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296008763 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241931596 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292631055 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236243065 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279927496 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294502709 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.266151336 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19894565 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243864767 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260544631 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206346362 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.260721844 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211541191 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231063196 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245475484 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.207592632 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240572125 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286628564 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211635913 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273218947 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.25543218 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265777823 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194127256 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239669839 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272765649 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215269484 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163893392 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264472855 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290316615 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248688654 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218374036 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26997164 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228663564 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.415411905 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281214868 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271967827 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234678075 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20789417 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275144904 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.255981717 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226684348 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.286237871 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240262134 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306903167 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239584013 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.239055355 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197987581 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247278491 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250514065 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.197582922 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.2520215 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.263988322 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.211202365 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286309273 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237421996 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239360285 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278445578 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.246484625 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.216834268 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238497168 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.332550319 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268552391 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23991446 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.267367133 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.263243926 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285100984 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194634025 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225731588 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.200798011 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.289223696 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198598564 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278561731 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.264591231 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282494494 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278741652 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262477695 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20977515 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.228217275 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236946526 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251022714 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281832231 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234348621 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.206261083 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288523505 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.186390688 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234858069 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260568713 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386996429 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217919701 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27091794 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.166053342 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.384934699 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230407258 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20242033 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259790586 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269948924 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.202205335 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.288892801 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244594031 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241337089 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.261542473 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205185065 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277707214 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282482808 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268938858 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274500717 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.215125091 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263465475 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2569269 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241662713 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248125361 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.247620211 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228812697 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297636436 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.2764762 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.200569042 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274114504 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273549416 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240430082 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271677944 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242402536 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284215235 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199306322 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266351442 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205852148 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22774895 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258653025 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.265156582 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200279576 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274292651 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271998063 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201685595 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227892743 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215960125 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268943757 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238899879 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.201832589 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288702561 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.229865915 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251487825 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313946044 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230941015 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237776448 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244435796 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230081867 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209518074 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246456361 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201385783 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.279899803 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248080742 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.233003991 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276198212 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265951199 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232450407 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255606431 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24453854 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.340684867 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.231742821 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294314356 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221320169 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.321369652 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.251568469 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248928975 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27497026 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250187051 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232108443 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248165017 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.324643268 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232962996 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.27135945 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234618958 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211582759 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239465487 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.203413609 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255677641 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271828142 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209612224 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.239273148 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.271194208 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213564171 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.250046286 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211225934 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302357135 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255486745 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291550428 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.290240257 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210119713 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27947105 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275942371 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199834886 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.266002175 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273708799 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212333494 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255100717 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.235138763 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.208578088 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31945197 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.195158764 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263261911 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279687392 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274813104 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244335773 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.24048726 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280154504 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212722219 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279674907 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196017402 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.255042313 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.273813747 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20405473 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.231019603 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274100208 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228841475 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.270371404 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.244424707 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.250206269 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299510203 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.194538902 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237449331 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.388935229 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262117882 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268039531 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.228198528 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20754632 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250180827 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261480188 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.236409235 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279861016 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.232132966 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202409102 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.248906051 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.222928245 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.231991168 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.271999758 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259509199 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260070944 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29036024 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.205109332 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.359856659 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.24418044 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244971434 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.210090659 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.199502406 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243623917 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204799669 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246019323 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.281493931 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323361676 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.235252122 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.251349072 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237891774 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.197704249 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232980663 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232464921 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255364325 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273866813 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21817582 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.196422934 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213956172 seconds)
  done (took 121.754306163 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255453416 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.247403113 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.260449688 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.316754939 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286357341 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.387469145 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.323948099 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.337937621 seconds)
  done (took 3.680478232 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.196791178 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.261621823 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.243416991 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.18848156 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.213810098 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.551699067 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.23983745 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.191314788 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.267551991 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.229169875 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.184371635 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.661966265 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.223433257 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.220168444 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.222184359 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.181809641 seconds)
  done (took 5.530302458 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.267740963 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.635873837 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.287274544 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.372670877 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.341168554 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.288754249 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.89902474 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.27276809 seconds)
  done (took 13.633180716 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.253205598 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.282455718 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462940514 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.387481338 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.29753967 seconds)
  done (took 2.955332738 seconds)
done (took 176.083015464 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.20164781 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.195628839 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.230710255 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.228752796 seconds)
  done (took 2.111536836 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.252833076 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.162755037 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.196241495 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.153035829 seconds)
  done (took 2.033340416 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.486888368 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154344584 seconds)
  done (took 1.93568482 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.223547989 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.239365647 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.209172989 seconds)
  done (took 1.957867042 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.214521929 seconds)
  done (took 1.491680109 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.198079309 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190957259 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.317844109 seconds)
  done (took 1.984607411 seconds)
done (took 12.793845428 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.222036184 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.052252241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.657031063 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.205971604 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.828255868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470088047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.533453529 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253789556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.280382558 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.217390428 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.247332364 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.766804857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.51831394 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.953758688 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.500107795 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.952867926 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.7991209 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185269676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223682877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186712719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.511811041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182598538 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216691042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185286068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.799934538 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.492151999 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217213155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.966535676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.21535709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19230797 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.504357818 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183570884 seconds)
  done (took 23.98141853 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.193827499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.274840597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.23809686 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.220530606 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191969237 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.21840985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195817669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.23137902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.321624442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184802924 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.240500872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183898387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.224379894 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.186416564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.241727584 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.184036457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219860666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184893794 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225258891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186317072 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.24056936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183428655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.220391591 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185502194 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216856588 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202289629 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216666866 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198462548 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.218114907 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194266278 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.223065527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184657205 seconds)
  done (took 8.123490689 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.234651279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.287859385 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.241478957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.259419063 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.274845953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.187724125 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.309154188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253609677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.29786037 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.219114048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.207153885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.219621775 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.226526907 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.220023595 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.209109756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.219377086 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.187015287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.219601487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224937607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.190138005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239518033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185489717 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.22032211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187271001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216312899 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.207402266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216891457 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198791555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217444455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.195513294 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.221992922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185680665 seconds)
  done (took 8.47785706 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.20543323 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.201092164 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.244634643 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.240562779 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.197330553 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.198360842 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.234651681 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.195797275 seconds)
  done (took 3.015493013 seconds)
done (took 44.881263896 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.215454903 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.233488024 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.208489479 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.20077553 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.36265634 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.711165144 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.240844309 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.194110085 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.200277268 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.243013684 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.183138628 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.228227545 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.204907648 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.231491675 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.317243823 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.20184605 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.320003218 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.317566294 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.194387405 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.237120103 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193864553 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.319891898 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.235399336 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.193703939 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.296796549 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.190047287 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.307025064 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.231913637 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.197245383 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.219082916 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.281513082 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.231789534 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.194711101 seconds)
  done (took 9.61371942 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.301010214 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.232543403 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.19339346 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229478634 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.196017986 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.227436354 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.33433638 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.19435603 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.226570601 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.195784269 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.192681087 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.317176266 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.23830938 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.189198593 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.231343819 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174967425 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.3369839 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.195400741 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.221486847 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157069026 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.222875045 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.196547256 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.347327447 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.189635714 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.230210101 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.194283615 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.230581489 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.198649293 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.229234013 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.196545491 seconds)
  done (took 8.134937491 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.205682717 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.207838843 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.248516956 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.297913148 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.225902981 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.241804624 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.209550597 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.241172199 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.216038151 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.223868676 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.203538188 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.259578593 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204101404 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.234030546 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.186881078 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.238510594 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.203370681 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.222991764 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.196063465 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.240742613 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.20594351 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.238074074 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.210954496 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.233625046 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.186129454 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.23515743 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.197970571 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.233220969 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.197134882 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.23893964 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.189253626 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.225515798 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.190449659 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.257075757 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.190425002 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.235939422 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.208598232 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.237540308 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.234949393 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.22443475 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.224447897 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.19314292 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.247683283 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.244616501 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.225112105 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.200646774 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.224839987 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.205102971 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.219025516 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.2073354 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.265624786 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.189243274 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.242859486 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.189577859 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.220933421 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.196841283 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.221928529 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.193402901 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.236769885 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.191072863 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.240526124 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.198858531 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.233353105 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.192504199 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.233103485 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.190293421 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.188108041 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.227784584 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.216029027 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.233318476 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.26151645 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.191247739 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.199989814 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.237574375 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.200837545 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.237257421 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.188757538 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.236142594 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.199188168 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.22801911 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.201875622 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.227060847 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.191135584 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.242144635 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.209847284 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.238583279 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.234157253 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.200874101 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.222139545 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.194471411 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206545876 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.227435211 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.192385381 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.238313 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.18989799 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.228343308 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.200004681 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.234400501 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.187916388 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.252036208 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.193337626 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.224047364 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.216399101 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.228474416 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.192959657 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.23356605 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.230064128 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.226729788 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.19900969 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.235050306 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.189475647 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.232147414 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.191475188 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.223543831 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.204807537 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.241368112 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.198525093 seconds)
  done (took 26.857561966 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.422770931 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.410172806 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.295400891 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.456432643 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.240569332 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.327716776 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.409070861 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.411563653 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.189947216 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.261319697 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.281780647 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.370483657 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.19156769 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.255583719 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.414248845 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.491894842 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.222712978 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.266270985 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.260083224 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.204688962 seconds)
  done (took 7.721384245 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.205384435 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.255734596 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.21237667 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.241089211 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.200907696 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.236247409 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192232702 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.245376344 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202141551 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.23109711 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.19493948 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.23104461 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.205271271 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.204484605 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.237672615 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.249423023 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.198457236 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.225405578 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.215579827 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.225648226 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.209287877 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.251473606 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.199256911 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.243553006 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.207526679 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.235207169 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.189157126 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.228159315 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.198459367 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.232220552 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.193107876 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.230763821 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.199752469 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.168227754 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.237959334 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.205601933 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.231426565 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.193746228 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.231269481 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.193354381 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.237001956 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.203726783 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.232743309 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.203617742 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.209727452 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.211804723 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.202228711 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.236692293 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.173713398 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.244511937 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.205285487 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.20091723 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.233805967 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.207958217 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.232730304 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.207964731 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.2336539 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.201287053 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.228357496 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.189082768 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.225730686 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.193217972 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.235183351 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.202130026 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.238924582 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.200779121 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.235857288 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.191776477 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.226251548 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.193690134 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.227560611 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.205141089 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.247994296 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.200416839 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.23222419 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.202748456 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.233256056 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.162605253 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.199332234 seconds)
  done (took 18.391897473 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.224565169 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235595523 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.210381606 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.258033062 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.205393968 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.230958842 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203047105 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.243591611 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.204887974 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.208187473 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.240442326 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.239455774 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.217099762 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.237917705 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203398416 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.240186863 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.205608811 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.264509483 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.204693502 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.250479292 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.204317885 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.23157509 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.204965885 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.23822043 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.217624825 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.238252743 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.217156773 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.239870081 seconds)
  done (took 7.681208597 seconds)
done (took 79.700949156 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.510665645 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.691679487 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.452609343 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.459143638 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.484057397 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.454095995 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.45028304 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.454162327 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.042935306 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.427623782 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.455384435 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.45141657 seconds)
done (took 31.73812702 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.516179822 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.49729438 seconds)
    (2/2) benchmarking "String"...
    done (took 2.459653727 seconds)
  done (took 6.303314769 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.496685983 seconds)
    (2/2) benchmarking "String"...
    done (took 2.503514725 seconds)
  done (took 6.33562359 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.441855809 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.453297831 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.843098818 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.446782376 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.447061274 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.447127112 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.44418725 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.447593124 seconds)
  done (took 17.865639258 seconds)
done (took 36.803412712 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.470076241 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.736798334 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.709532963 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.4241986 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.46112327 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.448846273 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.442457967 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.500165409 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.456680461 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.429297359 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.922410333 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.734742611 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.464022679 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.863154232 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.441884919 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.457636248 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.458655152 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.780768675 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.447411118 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.480442044 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.424125335 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.434059895 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.469170125 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.489388141 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.458599339 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.446033792 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.494750304 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.446670304 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.727689866 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.46205052 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.432801028 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.464248081 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.490527091 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.446429965 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.451053521 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.454824612 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.726916663 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.461446207 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.447633998 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.452732467 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.726876704 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.451359057 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.452246276 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.444981989 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.432146648 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.458538454 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.431606358 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.574079903 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.487375093 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.459374397 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.532270859 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.865193338 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.449244792 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.460483412 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.460834519 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.761922538 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.483002405 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.552122382 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.488915941 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.456564137 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.446008478 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.447893284 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.50488434 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.454252234 seconds)
  done (took 160.43058123 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.452114431 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.453201328 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.452699858 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.455786019 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.454196002 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.455525107 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.451444313 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.451239531 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.45413478 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.479684524 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.454672762 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.449216237 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.471929047 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.389757197 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.457438856 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.471721303 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.44824348 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.45019898 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.472103192 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.454557241 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.462112494 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.455275492 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.448965652 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.448590463 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.464260709 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.552790595 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.466873826 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.480817299 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.458676476 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.45680947 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.461438198 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.461022726 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.16228226 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.321803218 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.467195471 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.460764426 seconds)
  done (took 89.451126672 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.453678847 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.454280422 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.454623194 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.454194961 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.492651192 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.454904619 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.105658284 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.106324137 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.517077878 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.855749696 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.736842217 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.044801986 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.78239399 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.453061089 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.55006543 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.462991461 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.449574104 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.555320258 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.475579783 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.457608915 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.453982785 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.106506689 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.471420489 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.017644729 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.646659251 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.452117673 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.494909753 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.851686213 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.451463663 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.492846578 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.807092251 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.492112434 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.451880323 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895172217 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.091355414 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.567567114 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.453128522 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.496086312 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.457255145 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.748976578 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.452786372 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.139260659 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.459929141 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.462665457 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.18741812 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.458332199 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.11113677 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.458948136 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.513676154 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.459377161 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.457922994 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.894841616 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.343924225 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.459053893 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.457832594 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.460001305 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.460757175 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.459345386 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.459465335 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.494744624 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.862259376 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.436314731 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.459466211 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.463029508 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.495409705 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.457829529 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.45951915 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.750601536 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.524660682 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.108949159 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.459705201 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.459798945 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 22.032300963 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.55803555 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.579321402 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.454599156 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.460218092 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.458444776 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.459582379 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.575970967 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.457587277 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.459741931 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.902630473 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.643953624 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.454260203 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.063348661 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.5635315 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.455612082 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.908647022 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.460335229 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.462239719 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.299588046 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.561851845 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.455081741 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.461275278 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.459903719 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.909223167 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.111971878 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.788816367 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.461344901 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.043862925 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.464855006 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.926840329 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.080963171 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.206441343 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.4639703 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.579599502 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.644429534 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.458842344 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.461669738 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.068786612 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.463929883 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.525887862 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.456872989 seconds)
  done (took 402.919738703 seconds)
done (took 654.14431323 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.443175435 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.441478457 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.451070258 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.461859075 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.446035468 seconds)
  done (took 13.591919484 seconds)
done (took 14.94626078 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.741064928 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.744941213 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.739280125 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.531291826 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.740748399 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.744691935 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.615413157 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.695710877 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.746733153 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.747650821 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.49793408 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.764053656 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.69455366 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.543915434 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.48696845 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.631122718 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.513756201 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.638268941 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.62134554 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.786833682 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.808775192 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.515957864 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.76005015 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.501167618 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.786983325 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.818899187 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.672612102 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.62750715 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.483658711 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.482708863 seconds)
  done (took 19.599563518 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.506706819 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.765666433 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.808971022 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.520591362 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.771118954 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.498442977 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.790681838 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.808022646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.674901299 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.629587088 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.483761398 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.48041284 seconds)
  done (took 19.588345713 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.479743799 seconds)
done (took 74.972371725 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.50224388 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.566934987 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.498064537 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.480768973 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.47949287 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.481343603 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.481717286 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.478985038 seconds)
  done (took 13.318877464 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.478628959 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.477693595 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.477271145 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.480367121 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.478216891 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.479954847 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.479084945 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.477482512 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.480823496 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.479116723 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.482541673 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.48080563 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.480698603 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.480597283 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.481947618 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.481792157 seconds)
  done (took 25.031847297 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.484174097 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.480056849 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.478126181 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.478749622 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.482976691 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.480969263 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.481050063 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.481786865 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.481561267 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.481570687 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.484148401 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.482887814 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.482211869 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.479608157 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.480134033 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.480161261 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.482116791 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.482548283 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.483844893 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.482673778 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.48161893 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.480268284 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.479378118 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.47936738 seconds)
  done (took 36.906605874 seconds)
done (took 76.616163938 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.476770947 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.473160619 seconds)
  done (took 6.30561673 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.540613234 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.542843255 seconds)
  done (took 4.442451837 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.484075742 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.482561665 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.483844734 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.486558704 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.481481962 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.483134429 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.481366368 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.480248485 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.482516789 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.481476035 seconds)
  done (took 16.183609209 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.483258566 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.482307429 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.483455978 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.483195561 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.484183549 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.481932468 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.483919182 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.482437334 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.485221544 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.483380057 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.482740439 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.482324164 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.483569667 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.484414821 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.481448284 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.482201582 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.482982374 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.483390646 seconds)
  done (took 28.056973356 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.495821606 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.504350628 seconds)
  done (took 4.356134749 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.621892652 seconds)
    (2/7) benchmarking "second"...
    done (took 1.524331297 seconds)
    (3/7) benchmarking "month"...
    done (took 1.587307439 seconds)
    (4/7) benchmarking "year"...
    done (took 1.580821737 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.524412435 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.500891854 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.526705646 seconds)
  done (took 12.225785253 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.477142711 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.773966739 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.969754874 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.664664888 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.470701733 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.492501353 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.453193747 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.492310647 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.496000154 seconds)
  done (took 16.648136053 seconds)
done (took 89.578987563 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.472345625 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.484683423 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.476720782 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.487580156 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.803128645 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.535303424 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.473210977 seconds)
done (took 18.101442922 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.469062684 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.457393084 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.470765859 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.47980123 seconds)
  done (took 11.237601902 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.476594635 seconds)
    (2/2) benchmarking "read"...
    done (took 1.797248814 seconds)
  done (took 5.632641124 seconds)
done (took 18.236448212 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.485868233 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.486600889 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.489091658 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.488708283 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.487366693 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.486836087 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.486056694 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.486638467 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.487915775 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.485699488 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.487686113 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.488039882 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.489025859 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.490392855 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.489627091 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.484713492 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.488233602 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.489422122 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.489495256 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.493495302 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.488089133 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.486949619 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.487371545 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.490955619 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.491435532 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.49021979 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.489618363 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.48976045 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.491716252 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.48860152 seconds)
  done (took 46.015596541 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.49567534 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.493863103 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.490323701 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.490671862 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.491446412 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.489064181 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.488526416 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.489290621 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.490777689 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.489200313 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.492819059 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.488741944 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.490213677 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.489110934 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.491600587 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.489442834 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.491164609 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.491527923 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.490123535 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.490636576 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.49158233 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.492363091 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.489199634 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.4912309 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.493228451 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.493212761 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.492660352 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.493023546 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.49076834 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.490767925 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.492501528 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.493892641 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.492384624 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.492745787 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.490903797 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.493578499 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.495663348 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.500030703 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.492668846 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.492726378 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.492149303 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.491852686 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.494527227 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.491041172 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.493662968 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.493789717 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.492306458 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.491919665 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.490177491 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.493607351 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.492091597 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.494878166 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.493576337 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.493057832 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.493550247 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.490650729 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.49346905 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.493369708 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.49420022 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.493290038 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.493185635 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.494161505 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.494969378 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.494650061 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.495677275 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.497143374 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.494283439 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.496278822 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.494248705 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.496389476 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.495766047 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.497101498 seconds)
  done (took 108.837873922 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.493284176 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.496069121 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.495303714 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.495843464 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.494281095 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.492605066 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.495951654 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.493899128 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.494110186 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.494617617 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.49607598 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.496036863 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.495235983 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.494326598 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.494290144 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.495559303 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.495493595 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.495241894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.497743323 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.49680221 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.497556399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.496493971 seconds)
  done (took 34.266013889 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.500608292 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.497428843 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.498003974 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.498709542 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.499013518 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.498528062 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.49686624 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.499211979 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.498246453 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.497026737 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.496634234 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.495986012 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.500634826 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.495716841 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.49640257 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.499850023 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.495030267 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.498600145 seconds)
  done (took 28.329746834 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.49813787 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.497820632 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.496323753 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.497419753 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.49786355 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.500065221 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.497108836 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.498850845 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.497743224 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.498999122 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.498287159 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.500528335 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.496937887 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.49974144 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.497742862 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.498070569 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.496115587 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.498662217 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.497873977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.49766512 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.49943841 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.500897873 seconds)
  done (took 34.331567301 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.49510002 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.499118674 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.498566142 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.498929031 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.501210128 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.498075385 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.497750571 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.499891479 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.500659053 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.500891077 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.497126874 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.501256652 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.50386777 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.498149724 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.501821465 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.499845434 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.501855648 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.499650153 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.500716271 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.500339571 seconds)
  done (took 31.36590746 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.502316603 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.501754469 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.499619716 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.502173529 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.50240342 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.502140233 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.502708549 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.502493365 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.498336478 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.502173098 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.50403867 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.500080155 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.501867519 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.504227547 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.500145118 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.501923514 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.501374543 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.50194407 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.505197747 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.504076447 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.503919335 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.503695776 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.506699533 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.504270457 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.506129588 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.503848557 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.502921532 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.504621929 seconds)
  done (took 43.449707547 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.521428043 seconds)
    (2/2) benchmarking "in"...
    done (took 1.52288796 seconds)
  done (took 4.417886605 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.50212103 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.504226758 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.504182533 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.50595756 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.502556653 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.50513413 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.504442702 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.504813408 seconds)
  done (took 13.407082193 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.50590496 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.504199793 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.506239766 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.504077388 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.505187711 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.502147613 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.510557639 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.50895494 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.503167126 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.503786337 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.510518721 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.509746477 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.503865992 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.503964565 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.501349121 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.507495806 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.50299293 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.506183875 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.504893891 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.507009751 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.506792848 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.506887893 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.509289118 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.50694626 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.502645315 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.513743746 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.511111434 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.508784261 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.504256836 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.511080392 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.507053212 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.508480095 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.506447795 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.506380515 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.50533717 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.50690406 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.513772383 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.5126128 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.513316524 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.512114029 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.506560336 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.506266033 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.505644655 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.511008306 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.509060973 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.513578324 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.506888843 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.507276972 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.503325678 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.50897693 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.514227248 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.504943478 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.511604415 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.510528236 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.510498273 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.521579336 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.515633116 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.506471906 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.514820294 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.518309971 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.526792372 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.520905712 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.516240775 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.51231207 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.51408929 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.520522114 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.517387768 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.515904458 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.51103175 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.507991193 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.513803878 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.530332636 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.528430289 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.516678474 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.512669455 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.509137182 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.509044063 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.512977242 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.517613152 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.519669108 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.516026523 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.512361865 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.514645559 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.519679507 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.511141774 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.512132196 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.51226633 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.509498925 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.507745609 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.519597716 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.518725845 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.511224119 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.510927912 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.511998536 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.515740502 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.513133393 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.508838042 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.512191374 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.514113901 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.511375033 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.514126188 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.510468463 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.521116848 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.515080457 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.513205929 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.51840807 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.515699982 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.51047803 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.524296726 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.519203237 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.51445416 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.511805465 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.518605303 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.51584296 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.511732257 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.522234482 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.517212563 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.515408201 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.516335152 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.513343767 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.519762761 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.52796306 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.519699329 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.515904187 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.513356349 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.521762553 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.513928504 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.515654513 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.521199794 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.51278201 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.513667755 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.518369383 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.521362249 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.515868123 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.518810545 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.513764802 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.51744613 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.512444638 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.514354997 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.516593168 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.520626424 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.516787109 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.519682486 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.522793352 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.521652096 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.518260296 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.530691104 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.522641107 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.518404548 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.521820978 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.522376002 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.518496015 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.516902755 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.520517221 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.515480046 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.519963361 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.512657322 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.520165234 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.515771683 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.518054881 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.517013895 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.513525725 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.518352998 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.519271263 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.523752537 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.522356028 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.519077844 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.51858018 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.518277581 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.513883012 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.520340119 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.514501606 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.518948892 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.52450246 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.520651267 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.518161262 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.523656773 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.526185104 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.518762959 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.52013274 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.519823297 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.527213705 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.523485924 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.523304 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.526879698 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.517573615 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.519575208 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.518267727 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.519273779 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.519619726 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.520121217 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.527236613 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.535121094 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.537792605 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.521623045 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.521634689 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.515186767 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.522338869 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.525367852 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.527619794 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.51746828 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.519305681 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.514742049 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.520549014 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.517732698 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.523309562 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.517884492 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.522669472 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.523249578 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.520622134 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.520107014 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.518432537 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.524848915 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.523838514 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.518566118 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.520712965 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.517797754 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.526404036 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.51596265 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.52261281 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.527413363 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.523791033 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.529263386 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.52863315 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.525886688 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.531784758 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.530818581 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.523128713 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.521970707 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.524220183 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.525934139 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.531621437 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.529107386 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.524663767 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.53496092 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.530530012 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.520502031 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.528465909 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.532533046 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.52352512 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.521951855 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.530171947 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.526362185 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.524239635 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.523393041 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.522852994 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.52674971 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.531577399 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.53143404 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.522273455 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.526584364 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.526741844 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.527043676 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.525641037 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.53121216 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.530274129 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.531309502 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.530147859 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.524461028 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.523783667 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.530063524 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.525134103 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.525805291 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.524275071 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.530593657 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.530963568 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.533100693 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.529000927 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.528232212 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.529198998 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.524789294 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.52806977 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.525188451 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.54693323 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.547383206 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.540561614 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.534000326 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.529601637 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.533284518 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.531344 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.527802693 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.52850162 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.530663427 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.526488128 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.527828963 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.531096226 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.529766128 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.529874185 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.530384979 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.533924179 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.533230914 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.527472992 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.52503829 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.530613913 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.527173501 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.526991625 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.525466406 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.527380356 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.526837054 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.535787299 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.533792827 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.529400671 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.541058579 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.538797226 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.530996536 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.53280169 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.529156543 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.524437568 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.53079439 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.535786986 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.525668149 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.534768856 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.52831622 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.536969791 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.530328236 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.53802832 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.534955337 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.527115824 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.53964473 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.530876366 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.525844425 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.529932043 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.531247135 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.538250525 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.540473812 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.526593468 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.531839833 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.529803987 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.53095025 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.530114517 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.531816776 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.52909346 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.530770963 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.540530373 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.539307389 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.531651226 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.538744634 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.537534275 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.531608474 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.527962868 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.527054768 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.541368007 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.543436013 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.533517241 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.53714704 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.533700045 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.534042073 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.531576354 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.5323243 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.5320287 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.531772646 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.536339726 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.540579741 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.534323133 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.531891286 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.541796101 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.542674599 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.542458223 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.543871157 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.533269441 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.537024528 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.532519696 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.535051354 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.534856701 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.53776134 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.535367859 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.530451093 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.539726712 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.534352565 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.535896737 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.538536154 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.541765688 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.529981344 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.536472061 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.545106802 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.531786048 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.53694924 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.533019834 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.530998666 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.536560718 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.535144534 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.528975615 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.534329508 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.53965291 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.539001687 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.533039657 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.536085428 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.530970646 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.538260395 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.534748481 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.532988708 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.537540147 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.535207599 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.533616227 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.535979603 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.541892568 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.540613073 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.536834853 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.54199796 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.534988723 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.544800874 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.544713595 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.533917971 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.539651613 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.53615179 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.535229774 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.539423072 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.543651336 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.536628434 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.541217258 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.535948455 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.538313479 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.540165182 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.543839042 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.545897169 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.543123913 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.535887682 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.535845575 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.538573377 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.533888062 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.53746148 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.540439171 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.546237407 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.535220113 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.534788837 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.53793777 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.538657628 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.544378187 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.539363376 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.542216179 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.541604681 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.541468323 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.538480124 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.539106243 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.534964192 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.537138601 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.549383673 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.54900002 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.545471596 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.540239765 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.540816068 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.535020427 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.541043583 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.544454507 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.54170223 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.542635683 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.544008369 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.541748959 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.540226278 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.536021846 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.541674611 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.547962296 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.548393292 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.537758025 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.549759537 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.552465084 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.548798112 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.535982299 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.542095712 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.54305346 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.542143607 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.538539095 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.53885302 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.55346084 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.548596103 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.545955653 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.542740647 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.547155409 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.537188691 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.542780446 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.538509051 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.545996426 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.549490698 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.543430634 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.546285212 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.54054626 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.539567382 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.53545675 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.542172182 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.543098389 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.542742624 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.541058749 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.54304968 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.546209776 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.541962503 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.551855833 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.541763805 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.542344018 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.541424168 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.541778896 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.542023836 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.541488082 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.548307296 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.547172608 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.543842927 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.543651602 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.543783446 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.54087735 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.550529182 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.54932139 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.545765481 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.542336458 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.547994335 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.555367396 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.552923493 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.546250735 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.545337108 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.550809363 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.54898934 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.546679991 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.543839426 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.546622575 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.561418448 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.553525628 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.542881729 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.548800201 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.55422289 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.554817575 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.543535651 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.542527556 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.54708489 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.548543932 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.550762027 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.545762551 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.552478618 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.554537716 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.54278458 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.549828383 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.547323706 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.551080995 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.55205357 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.553727711 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.544538705 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.543881352 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.561729362 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.549938602 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.54939827 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.565171892 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.556948293 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.54910073 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.550256005 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.541113399 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.548822236 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.546600178 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.553222524 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.544697086 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.548652153 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.548863736 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.543528188 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.554126576 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.5580878 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.552417558 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.547076612 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.543860532 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.549866213 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.548457982 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.549409137 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.547062467 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.548635016 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.550628543 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.546432647 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.548440004 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.568445622 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.573239597 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.554851438 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.552448201 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.548901741 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.552911057 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.556196371 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.553075302 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.556143324 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.549264289 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.545810352 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.553662033 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.560306961 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.549960365 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.5494325 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.548862728 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.548547954 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.55214496 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.561967572 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.573674417 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.556560044 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.557614377 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.551183243 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.550332724 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.549854258 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.555978363 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.550607441 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.554252627 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.549531385 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.552790121 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.55419577 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.549555176 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.550834118 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.553401538 seconds)
  done (took 913.689112892 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.550499148 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.550237065 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.55108155 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.549776918 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.550598503 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.553242421 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.551587514 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.551308728 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.554135762 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.554468595 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.552799403 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.553895525 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.553881485 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.555414108 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.552905758 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.550296224 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.553057092 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.553533213 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.550951667 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.551781427 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.552016185 seconds)
  done (took 34.01169208 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.553233047 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.550151539 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.555095219 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.554541225 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.55070486 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.551472539 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.552375436 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.552377241 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.553667321 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.554157127 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.554226815 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.550820352 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.552997012 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.552720201 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.554423498 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.554775092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.55519815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.554071815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.551036028 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.551123851 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.553868754 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.555921304 seconds)
  done (took 35.584602724 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.556250302 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.554082538 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.552056458 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.555751123 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.55310092 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.555116735 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.552862882 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.553954002 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.554948659 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.552667659 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.552951212 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.557423939 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.55421172 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.556753367 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.555882577 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.557934541 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.564091571 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.555003124 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.553757288 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.551614413 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.56036577 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.562976237 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.559232172 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.553036583 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.557055319 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.555330533 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.556764637 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.557897698 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.551437165 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.561889445 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.55759196 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.554461237 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.563132872 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.559820751 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.552029594 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.559088333 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.559470144 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.557706069 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.556978232 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.563023205 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.566989707 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.560533998 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.570016971 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.566424984 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.558792995 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.56033121 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.565255264 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.558500318 seconds)
  done (took 76.183822949 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.560579328 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.561574198 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.560607762 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.55818675 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.558396528 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.558516992 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.559864478 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.559356925 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.554922286 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.560469978 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.558370987 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.558061798 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.561361688 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.559601492 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.557105685 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.559605412 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.560479496 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.55776419 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.558243301 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.559336877 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.558294622 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.558982479 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.558488527 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.557194882 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.560535278 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.560988154 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.561768601 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.560069522 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.561829766 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.560009429 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.563053209 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.561034021 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.562029875 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.561646167 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.562201507 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.559469341 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.559577217 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.561381088 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.560820894 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.561326334 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.560403289 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.563177803 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.559421545 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.562212974 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.564690247 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.563625691 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.565603149 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.563357586 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.562897135 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.560691266 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.562744847 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.560416505 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.563870637 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.564231458 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.56381135 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.565250503 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.562294659 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.562546742 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.561263684 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.563277173 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.565603779 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.563841937 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.566398262 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.564824586 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.562050858 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.564168061 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.565764842 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.564015707 seconds)
  done (took 107.586471491 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.562971405 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.559692139 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.558909185 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.564833018 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.565676991 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.564695507 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.565724788 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.560987762 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.561539375 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.560556912 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.560273151 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.564995122 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.562301054 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.562257962 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.566699181 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.563812986 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.562833423 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.564003089 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.559522246 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.566421043 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.561102967 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.563157975 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.562993699 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.562190624 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.56101939 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.562745969 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.563841921 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.56125831 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.561646989 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.564318397 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.562776552 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.563700601 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.560300597 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.561828067 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.562626204 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.564495531 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.563459198 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.568839598 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.563386978 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.564888526 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.56192949 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.562997607 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.562123161 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.564714741 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.563919391 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.564635982 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.565912779 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.565202781 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.564659226 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.563967978 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.565495175 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.564772213 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.566218865 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.564132605 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.565630641 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.568027223 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.568074275 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.564902483 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.568108665 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.56533494 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.565295722 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.565032887 seconds)
  done (took 98.374204814 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.566634906 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.566997092 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.567736577 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.566607462 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.565252544 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.568291816 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.567279605 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.567083433 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.56624434 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.567630839 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.565991081 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.568096002 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.569082428 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.566037428 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.566482608 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.567194538 seconds)
  done (took 26.502275041 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.566822649 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.567648357 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.571583263 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.566421563 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.568617651 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.56837112 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.570100811 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.571846695 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.570458968 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.566385189 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.567934052 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.567152637 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.570529335 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.56968499 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.566036103 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.569938432 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.56795789 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.56738855 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.57099324 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.572344087 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.565928522 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.568732681 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.571707318 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.573020241 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.567817707 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.57476128 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.571672213 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.569112786 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.573155545 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.574851817 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.571098833 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.571331039 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.570548722 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.571003798 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.576077458 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.567378703 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.571109016 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.573436242 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.573626527 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.569805506 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.572989566 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.571013593 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.569213194 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.571765693 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.570339092 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.570821528 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.570946431 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.57628036 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.572113046 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.575360042 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.572033585 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.573961172 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.570455255 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.574887075 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.569256716 seconds)
  done (took 87.818225553 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.569899111 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.572690991 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.572479731 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.575344465 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.572208734 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.572060583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.57439822 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.574772386 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.573177662 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.574917288 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.574704089 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.573398628 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.575309869 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.574318145 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.572579969 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.575001911 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.575672543 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.577203199 seconds)
  done (took 29.760750763 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.575702239 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.577169929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.57686577 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.57913266 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.578799219 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.577088971 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.577521595 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.577683429 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.575950855 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.573425397 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.578383292 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.576720471 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.579145351 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.576051568 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.578515128 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.578061506 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.579336543 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.578834745 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.575524084 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.575684851 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.577815688 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.576479767 seconds)
  done (took 36.133906924 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.569970029 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.570233869 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.569855791 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.586891067 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.579261016 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.568431931 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.569213382 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.570021684 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.587982925 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.597127986 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.590528056 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.577258685 seconds)
  done (took 20.372453929 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.574019374 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.575975069 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.57425003 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.582064314 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.580215286 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.574208727 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.577216301 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.577605169 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57937206 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.576991604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57631923 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.580284823 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.580307332 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.577336818 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.575880365 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.576507762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575218615 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.576398933 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.580928686 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.583390543 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.57748853 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.578672024 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.580332182 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.577235247 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.578069136 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.577267144 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.581290722 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.579635941 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.583686215 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.582151262 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.576608143 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.57981679 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.582996928 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.577150227 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.577473862 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.578404154 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.583192894 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.581700049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.582049847 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.578336422 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.579858732 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.578840524 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.580915876 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.576748472 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.581344159 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.58085948 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.580215865 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.58094424 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.581329527 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.584017577 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.57998068 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581250781 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.581505731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57926596 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.580782415 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.585348402 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.584207887 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.58488777 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.582317274 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.581086857 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.588636694 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.581148088 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.582554122 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.58708386 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.584765653 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.579212213 seconds)
  done (took 105.714394663 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.580125407 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.580466047 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.585296706 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.580770858 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.587660605 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.579580439 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.583146956 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.583593964 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.586225646 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.585224132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.584336835 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.584286836 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.587297969 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.581393879 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.581285683 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.583429281 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.581814949 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.58281687 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.586279274 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.583569516 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.584397937 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.58511552 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.586370478 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.585107096 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.587075207 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.582112393 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587751105 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.583504956 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.588433949 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586336015 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.588049843 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.583367519 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.583383647 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.581605117 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.586583881 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.588777885 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.586009244 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.588151216 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.58749882 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.589672057 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.584727934 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.588831047 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.5910695 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.590041111 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.588456283 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.588634883 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590378625 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.587426299 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.584159613 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.58781912 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590106653 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589694248 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590059691 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.588969343 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.588390031 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.588981879 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.588663971 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.590790771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.588508188 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.589169621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.58852223 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.589328086 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590030346 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.582610683 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.5898966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.594405215 seconds)
  done (took 106.139571952 seconds)
done (took 2023.657139789 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.756518208 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.706160949 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.667318376 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.597466331 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.570015083 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.581741819 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.589649401 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.228244488 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 2.271721182 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 2.034889658 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.60474921 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.768817027 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.619842765 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.524250073 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.664253435 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.692400498 seconds)
  done (took 38.320233506 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.620839663 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.591646345 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.723381609 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.586607892 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.619988828 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.8135918 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.65441302 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.589006033 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.804279306 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.596604609 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.581008442 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.610041257 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.592734147 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.595480643 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.609394871 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.815473941 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.906440953 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.578319326 seconds)
  done (took 34.33546587 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.149508707 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.613450931 seconds)
  done (took 6.208979193 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.614354827 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.589590493 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.591061701 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.588023131 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.577913571 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.573360863 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.586379942 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.580517132 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.584828069 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.743160644 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.589959614 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.607423434 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.590096263 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.586171756 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.594456104 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.63985441 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.726012676 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.591042676 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.593716464 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.600916585 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.590325643 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.699699027 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.638276639 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.595824259 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.744785772 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.592748523 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.596012216 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.597081177 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.755885294 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.59335658 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.589818835 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.587605453 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.589890705 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.581205268 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.157108002 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.597716663 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.615185479 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.594683777 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.593545486 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.750762777 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.58946383 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.595697056 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.590734763 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.147020195 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.702153729 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.737724032 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.584373153 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.590166337 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.592628183 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.668198754 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.591342965 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.591769097 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.655076616 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.478816925 seconds)
  done (took 99.784690654 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.590341475 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.57776864 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.509144351 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.587120314 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.577999666 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.576215338 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.580466974 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.935859905 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.602240394 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.587227088 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.913562158 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.597989465 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.584471253 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.633557608 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.64365472 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.63078231 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.581268873 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.577240766 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.582261059 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.585473474 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.57666083 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.582964501 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.57648791 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.78959092 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.627318887 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.585647491 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.579361133 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.599953264 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.584194038 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.582361291 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.58198444 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.586122307 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.655966455 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.583758893 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.906672518 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.601062726 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.580732683 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.591334338 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.596029195 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.584946983 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.591470643 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.203765683 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.596600248 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.577783668 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.596787325 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.209598887 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.582861684 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.592318797 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.579532173 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.572939322 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.580444007 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.580877828 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.584413831 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.586896034 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.585544353 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.666493515 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.649236343 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.580777976 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.582241282 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.582538745 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.60139798 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.584162176 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.586586271 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.587679905 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.585404117 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.580126799 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.829162362 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.584475954 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.583103801 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.601478259 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.58623958 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.583962377 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.591904442 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.594242909 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.706849094 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.588588252 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.600998667 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.585442663 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.627205614 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.584990955 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.585285096 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.583664339 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.942618699 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.609008768 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.585872945 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.605483741 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.59282307 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.6609423 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.584126981 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.602501799 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.607636168 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.590652814 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.914200763 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.643050198 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.587166246 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.587406148 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.639915156 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.587620021 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.590458587 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.590236839 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.584374177 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.596367423 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.591044997 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.587062957 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.598754465 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.591736684 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.586277963 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.58758798 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.586740045 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.585330611 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.592680196 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.585869196 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.585651039 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.619815343 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.799874878 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.59406317 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.984667087 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.607082464 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.593196361 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.594447786 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.58783361 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.605419111 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.584541605 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.592776615 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.587535121 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.959763721 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.610001346 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.595234523 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.58850702 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.588586367 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.591383039 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.593211072 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.6340319 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.592003979 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.591904308 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.616178323 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.619739058 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.587129322 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.600048437 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.58835439 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.600543924 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.590879549 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.590993467 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917284682 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.829454209 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.589844157 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.591669243 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.592393808 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.647361678 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.505459261 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.59187804 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.587976126 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.895320343 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.806744228 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.590374273 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.597177781 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.591724273 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.590332637 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.591270596 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.598127353 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.590833442 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.597069266 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.601077759 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.601919876 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.597132074 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.591545386 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.594125824 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.9352816 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.615973372 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.593859899 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.612605315 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.592505847 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.592751702 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.595194705 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.592379362 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.593713257 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.590489546 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.717408497 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.531237964 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.590300744 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.599087708 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.596408619 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.60676159 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.602437099 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.5986839 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.598309372 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.590807562 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.645400073 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.598403374 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.638109033 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.593417163 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.599409495 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.293844076 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.600795343 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.596786199 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.527940543 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.593247138 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.60012669 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.601437939 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.600448267 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.640503948 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.595079494 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.636902612 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.991962843 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.602353392 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.639059954 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.600630325 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.629345675 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.596138693 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.615455136 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.601229306 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.599762953 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.594141827 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.392991469 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.593595415 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.598093093 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.618558522 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.594599956 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.594915749 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.599525439 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.595383749 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.602482899 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.593594985 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.622083614 seconds)
  done (took 575.638712138 seconds)
done (took 755.737376495 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.60066384 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.602301948 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.601014482 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.601061176 seconds)
  done (took 11.870076945 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.613094056 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.608118946 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.612040341 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.60630388 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.612022274 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.607845564 seconds)
  done (took 11.124556372 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.599574268 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.598511211 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.604156313 seconds)
  done (took 9.269018802 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.863911292 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.608691173 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.029969112 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.61975666 seconds)
  done (took 10.590319761 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.613182461 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.614747183 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.61319631 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.611380086 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.615643655 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.614718481 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.613967254 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.612160114 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.615584543 seconds)
  done (took 15.990035003 seconds)
done (took 60.313729173 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.684960805 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.682401457 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.619187101 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.641910279 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.735457906 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.686658294 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.690078476 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.696690184 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.686050009 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.640015774 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.682806881 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.631373477 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.684879357 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.797294592 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.64051583 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.680664212 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.632814016 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.78382939 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.689225933 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.639638028 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.711734759 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.643267956 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.643254111 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.610055357 seconds)
  done (took 43.702418911 seconds)
done (took 45.175396247 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.635345156 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.704440348 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.61044633 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.613694747 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.615476055 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.615032765 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.633559602 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.6142806 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.627775775 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.626108269 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.611681167 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.616871884 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.627476578 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.622958018 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.643746528 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.612116571 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.60915285 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.62282758 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.628194642 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.628791939 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.616547017 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.613888501 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.640959351 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.610887813 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.623169006 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.622087761 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.617199079 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.616987124 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.616676985 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.631164514 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.602936684 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.616754975 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.630388723 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.626005228 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.615741943 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.62307564 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.615966284 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.704043553 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.636678315 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.628425736 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.623861018 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.630390102 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.6198517 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.617022748 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.622736417 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.641818505 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.622881393 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.62916754 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.602310495 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.629886055 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.636011165 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.624865823 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.625298794 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.61742941 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.61530132 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.629383518 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.624616345 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.636943832 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.621258696 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.620008472 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.649568126 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.637159892 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.628826034 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.62455365 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.623559646 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.630656483 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.626279934 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.635503565 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.620773967 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.619443729 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.618852853 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.625271468 seconds)
done (took 126.549033575 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.744432711 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.618935941 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.772051179 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.626076186 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.792512769 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.744512201 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.623896532 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.62793976 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.626398212 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.442128502 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.62303216 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.626128552 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.620057542 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.625992164 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.742972117 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.622635618 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.627156894 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.327380491 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.627846316 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.759071756 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.61597003 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.625671533 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.623597124 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.42325559 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.618064288 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.614185115 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.762456973 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.625879193 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.336327839 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.614688377 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.615970268 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.319183639 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.760228586 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.645239169 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.636148294 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.635308547 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.795230566 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.627237071 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.74875416 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.745703912 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.772937061 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.66161121 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.615616698 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.620585333 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.630232135 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.629352999 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.627104397 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.657535396 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.624458967 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.628413043 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.349447285 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.639062007 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.637068746 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.626358905 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.630701661 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.648042842 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.626792327 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.63005432 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.76321267 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.627760008 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.745996748 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.433613662 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.42963989 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.627745298 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.620626447 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.631968637 seconds)
  done (took 127.825997691 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.696193634 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.704285878 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.75120529 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.627634877 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.672243232 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.756283378 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.627053759 seconds)
  done (took 13.317362751 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.632542982 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.632261082 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.674940209 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.676012763 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.630288544 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.796452433 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.631141586 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.636511971 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.629456314 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.677147564 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.631356983 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.636044512 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.637255128 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.627075045 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.672437414 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.636115143 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.743963048 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.626983682 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.62973888 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.780881909 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.628691421 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.640329734 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.679711322 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.63950452 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.629631642 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.635348839 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.386290136 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.632913912 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.631658553 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.631406995 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.630497088 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.694035914 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.630762447 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.625508713 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.632354231 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.742375229 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.634606162 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.628404153 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.629350224 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.628413673 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.633775021 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.632297059 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.631588002 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.63613765 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.633414921 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.65871935 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.631949897 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.63371765 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.632762718 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.630304813 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.679439279 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.631133135 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.631963701 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.635017521 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.685130216 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.642114052 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.635765244 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.632121999 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.634081207 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.633664558 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.78118316 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.677015076 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.630699244 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.676992616 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.632050016 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.633259331 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.634065941 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.634507164 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.723897745 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.634390582 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.679777027 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.634762179 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.811681869 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.652359366 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.635941281 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.635798481 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.634615883 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.631724553 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.627409234 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.640380957 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.633936581 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.633010122 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.638649997 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.63094917 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.634453111 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.793421781 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.737326586 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.635373726 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.647923271 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.637176641 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.634441806 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.686705703 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.633175024 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.636561017 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.682524347 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.750493878 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.681167916 seconds)
  done (took 166.699534293 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.644205148 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.644223049 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.635906356 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.658216817 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.632318883 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.632645581 seconds)
  done (took 11.337297618 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.635513306 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.642211604 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.637537503 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.638404616 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.637784791 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.634984759 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.638917672 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.633303658 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.642227688 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.63892543 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.636136543 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.640635839 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.639467592 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.640905681 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.634155078 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.636083432 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.638092779 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.633639174 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.637464807 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.640484179 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.626744012 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.635272666 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.636488554 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.631897034 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.640550397 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.640784993 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.662633175 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.637920035 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.639455772 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.642187426 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.643397923 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.638050474 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.635630916 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.639218914 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.639724007 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.634667079 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.643054162 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.640545454 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.637883892 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.641456101 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.641063441 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.63854433 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.637181704 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.639839043 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.638141074 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.637424947 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.646943912 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.660419908 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.640587288 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.641186192 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.639617756 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.639459489 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.639885304 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.642405662 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.635583266 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.63941159 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.645578772 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.640289307 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.635842294 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.633923237 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.641358542 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.64168946 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.640705355 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.644805285 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.638220398 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.644809815 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.636066732 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.64579089 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.64007375 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.638849075 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.643105609 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.64031036 seconds)
  done (took 120.53984023 seconds)
done (took 441.202074951 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.085195886 seconds)
  done (took 4.573745922 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.847315779 seconds)
  done (took 4.340152846 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.17316796 seconds)
  done (took 27.99107606 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.693507338 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.631312665 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.640376972 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.635103536 seconds)
  done (took 12.091893755 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.196026902 seconds)
  done (took 4.691487864 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.650319038 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.638648701 seconds)
  done (took 6.784174775 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.044279259 seconds)
  done (took 4.538827147 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.452641141 seconds)
  done (took 4.954583105 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.651009615 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.63328276 seconds)
  done (took 6.788188173 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.613638278 seconds)
  done (took 4.1049801 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.156019085 seconds)
  done (took 16.65049028 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.654268325 seconds)
  done (took 4.154420529 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.682424269 seconds)
  done (took 4.177940945 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.946249423 seconds)
  done (took 7.438518438 seconds)
done (took 114.775840953 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.63272336 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.623517534 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.627169645 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.629617104 seconds)
  done (took 12.006170892 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.707276225 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.707822571 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.715166685 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.703569278 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.705042632 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.713281936 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.671854356 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.690383033 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.699167784 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.696230273 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.716533502 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.702827486 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.712288018 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.689891874 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.697375045 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.716647792 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.702135965 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.718336808 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.670952397 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.702746301 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.646992446 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.698546003 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.70165768 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.647956753 seconds)
  done (took 42.229519682 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.136401152 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.709948956 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.79446692 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.69697831 seconds)
  done (took 8.830966204 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.748962673 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.752273399 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.768961116 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.80393135 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.849681734 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.766200834 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.67535665 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.670695785 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.655112475 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.752232462 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.82642524 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.753893616 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.973029313 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.645770825 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.965180527 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.648030924 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.647841157 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.75159031 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.799114413 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.834867692 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.651391874 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.752352796 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.756398392 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.752898567 seconds)
  done (took 43.697413821 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.65261371 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.663772316 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.650524375 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.647842417 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.652107565 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.64891585 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.663039916 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.649131959 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.659012627 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.650561643 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.651969577 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.653683844 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.661169848 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.650131566 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.652149558 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.658593701 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.653616601 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.66068056 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.657162565 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.653371545 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.651591508 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.655113493 seconds)
  done (took 37.893739516 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.639920438 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.637338301 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.991522607 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.896687294 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.639211975 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.639576381 seconds)
  done (took 15.94185371 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.734096818 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.900958562 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.647571103 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.081054537 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.159340411 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.643332758 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.645172186 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.945306801 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.305614499 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.334436229 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.699309601 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.727064931 seconds)
  done (took 24.324880691 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726647616 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.645294752 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.663400976 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715269984 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64629278 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.64353031 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.73134707 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210697959 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.650136058 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922286559 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648901579 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730629511 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.897013605 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64659188 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.651629154 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.642133575 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880322764 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242429325 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644891832 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666569952 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68157959 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.649447209 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.650909852 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896843074 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.65009036 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648979311 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.910870106 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.649600634 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995578938 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969233823 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963323693 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651614947 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926954681 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159435255 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754737192 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896208041 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651641639 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.664863117 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.622229586 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.667451617 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666864999 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.652007879 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961858276 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647610186 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.649002789 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660020485 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222118872 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.659559443 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.647838003 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.652356462 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96502766 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731200148 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.656855801 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.652612853 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656226233 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653442699 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.652497125 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783888012 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292221698 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663315222 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666314692 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.652830714 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.66811298 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651332003 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379544319 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.653906209 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.657155553 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656541872 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654733858 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.659764111 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668444857 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650516735 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.666354306 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649642394 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547304409 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.657052446 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648434628 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284402144 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652720355 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.651118302 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879405054 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64861233 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650189821 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.64918725 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.651899398 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542484187 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653138003 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.628442087 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694294275 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.217479916 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.901559965 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673639075 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684647493 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.874555849 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.6307325 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655506341 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.654800269 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652757806 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668224649 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.221248085 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648928062 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.654627933 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904635173 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.862629387 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659055706 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.650607827 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197202761 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64869042 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.681037154 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.659382978 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909898728 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.364716756 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974195027 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654962743 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686525031 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.653898423 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.614053572 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64729802 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.666000841 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.664566435 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969977837 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.626346292 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651797642 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728557888 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655990291 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.655247274 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666430298 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65220049 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.655157696 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.885790122 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659744092 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97407752 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.652645015 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657457724 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.654332344 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652935413 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.663421904 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.879382765 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663365364 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928323512 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656776634 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654843492 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651373185 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.87512173 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.673541066 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.664428593 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997997723 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657006979 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.678182052 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969583615 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.69848269 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771103533 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689473349 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.655725075 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.928509013 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.661671339 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.665829168 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659535669 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.688184729 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661709909 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.665789097 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654718837 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352306569 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663254787 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.663780774 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.657300327 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.671611273 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732530351 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669282253 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.908146584 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.661609186 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654508684 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.662618174 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.662662502 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881094861 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974205775 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.662239011 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831270453 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.225281908 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365424099 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671494121 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.654672508 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.655168974 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.655706782 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658136612 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658732895 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.66082542 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908603647 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983731218 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.654154924 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370895199 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658114428 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.667290305 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.661493876 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97724173 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.666760539 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65778128 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.658130595 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682344797 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658128457 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.977152464 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875662726 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.678782004 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.663699889 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.178027769 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668596872 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.655765596 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.661557597 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683014255 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.667190973 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272968504 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000036595 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661778852 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994592119 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.66414474 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.672726186 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.66091911 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669461314 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670330267 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.67798688 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.663731652 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.915373863 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.67676177 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661118489 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299922856 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.572248772 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.30748153 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677287327 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.669426163 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.660114885 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201341406 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65706544 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663578575 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948208687 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231747836 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663766626 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235537234 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.659162546 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.564815622 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977345475 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889403114 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661226575 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.690191792 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980438807 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.873718831 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689819062 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.673974926 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658839414 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.635603468 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278825677 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666714222 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839786783 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240501638 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663130427 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.658663357 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.71087949 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.677721456 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152782141 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.663152769 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663867757 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.670279693 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.660188131 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320849565 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.669342416 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665052199 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398550926 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.673505411 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.207053929 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659868068 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.915608803 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.981041256 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.963771315 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.664719359 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.671025132 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.907258065 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977362455 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661949824 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.675144204 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.324228334 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.528250253 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.672625296 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664002106 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.635987804 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662331604 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002446052 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.672807067 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.680623256 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674737095 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.668927291 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663651734 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.663944 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.673889757 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638043806 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240859771 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.663323788 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667011894 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.691661539 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672894171 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.916505337 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.682551918 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380812845 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890969051 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663819935 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70077694 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.674184779 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667487638 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.6427492 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.664395688 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.663775475 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.753648701 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.890284165 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.6631801 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.638139833 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.729201051 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.87776772 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.666517759 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.667763068 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931383354 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.670379577 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.69533187 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576857318 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698821463 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.669717976 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668866084 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.67657773 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704859787 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743374818 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927238759 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.988830549 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.988798628 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161551026 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672630782 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665717474 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.686140884 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754315857 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668503617 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.682426888 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.670488497 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38611644 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58046265 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385824967 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988624853 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.670815653 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671155046 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673706643 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910601075 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667095982 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946277334 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673990462 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.678958098 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690630274 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67128184 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671566187 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888066246 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946587678 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667506635 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676594994 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66940839 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.67218746 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997647237 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.886839101 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.261033016 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314614605 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671993163 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.677913084 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.257874782 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948625363 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674794899 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671738631 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671353307 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.680672059 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.688780793 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.678939586 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672574325 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895815516 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995181799 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197151161 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990890752 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.696491036 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.553376276 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673665003 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.922171301 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507212297 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92730276 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391717158 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502960573 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924004642 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748213553 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929644871 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.677529547 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916209694 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.686173961 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.669707959 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.673043251 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677284229 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.675782154 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997478776 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389855608 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928874067 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.679320229 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.679900219 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704949818 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.932332116 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905326052 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.601086841 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899307294 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004605992 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.683788769 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.677852454 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3881898 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004877738 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673802264 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.676843274 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941658638 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.678791017 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712945436 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.542057331 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.676129361 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321536136 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.888961588 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698709005 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69527887 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517110891 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386576832 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.683829143 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.279920769 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.680211848 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686790349 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950911617 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.682139807 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.677190117 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98144164 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.681086796 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.687304522 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936777511 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.384306744 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.595758049 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.682121427 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67721356 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.683138068 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679914198 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.754933786 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681606845 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.686324818 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.168315961 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.68076803 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681876038 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686497149 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.69345056 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681930249 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.680622249 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683095508 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.68371865 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.669826665 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.667190628 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.680905666 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812889206 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309208934 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681841004 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.299632622 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.019756551 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932872533 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.681140741 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.655214608 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.685107625 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684026507 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680969871 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678139313 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.690402021 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324789336 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.679513146 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.004111034 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688214594 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.895797849 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895338167 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.681262114 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940864643 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689504054 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704265679 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.66268564 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683608262 seconds)
  done (took 1126.569445619 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.725328552 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.701255518 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.699644585 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.789632291 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.738060117 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.75613362 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.695893989 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.750228035 seconds)
  done (took 23.39381015 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.688025952 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.688972821 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.677976463 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.688194598 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.693038256 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.219684846 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.677414722 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.690367198 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.705191311 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.685929222 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.681785882 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.402017223 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.688486331 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.678586626 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.698816355 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.691303713 seconds)
  done (took 37.807210523 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.911943827 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.892541173 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.31510131 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.685969131 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.722473168 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.681033814 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.09876728 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.701367867 seconds)
  done (took 30.547571656 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.699793603 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.697510113 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.696948733 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.696183614 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.696188401 seconds)
  done (took 10.022101064 seconds)
done (took 1414.76779606 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.694781817 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.690442848 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.693167249 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.691296008 seconds)
  done (took 8.303772692 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.65947614 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.659312065 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.66172083 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.681151185 seconds)
  done (took 11.196663473 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.126076128 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.354267349 seconds)
  done (took 6.020475163 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.68800555 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.452567718 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.438156016 seconds)
  done (took 9.119367529 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.022368945 seconds)
  done (took 3.562007565 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.097988728 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.189260672 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.684156788 seconds)
  done (took 8.512090666 seconds)
done (took 48.255859255 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.692074419 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.447888889 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.853590295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.687598466 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.851324413 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.853876442 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.944641506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.699757359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.683293606 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.692697032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.683459945 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.850824641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.928006175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.450834363 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.938054233 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.454440482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.85485035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.697856476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.688954714 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.682556241 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.962462646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.687177057 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.685088996 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.682813581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.858401586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.844931889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.688185216 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.452330691 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.68605453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.69539528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.839004506 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.690710721 seconds)
  done (took 92.947889392 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.685490073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.696869947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.685021358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.682944868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.698070791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.68399474 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.682709462 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.685044956 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.685136959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.682012731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.682170432 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.691944631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.685689143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.684053105 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.687293972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.682353189 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.68726765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.692867866 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.686190966 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.7020176 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.679810793 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.68361508 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.701178986 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.686405008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.691079705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.682562388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.689752008 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.680023308 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.685214133 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.685612378 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.688516896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.687387253 seconds)
  done (took 87.533193452 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.685705387 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.683757191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.689227949 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.697576062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.701771739 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.688861197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.706363296 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.685093092 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.701222971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.689134981 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.704035542 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.685241296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.685757385 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.682490767 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.682912791 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.685656448 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.687659697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.701785482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.687215402 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.702901458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.689493412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.683528073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.694403123 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.689672031 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.702895613 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.686365021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.683938374 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.686781824 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.703468689 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.689004548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.692256468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.700833168 seconds)
  done (took 87.681470149 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.929429949 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.701749898 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.705334583 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.695178219 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.701856161 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.698780693 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.694873026 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.933802578 seconds)
  done (took 17.604449417 seconds)
done (took 287.313130144 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.692180355 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.692722026 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.723233136 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.706276009 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.727602803 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.723716461 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.939899369 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.722793541 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.932664018 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.71770746 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.720361998 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.69931642 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.696026349 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.855207814 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.697104055 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.701607166 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.708911936 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.701303608 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.700873734 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.964414804 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.72679291 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.693306676 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.697409346 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.716403335 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.681650132 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.783704838 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.784996589 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.867409111 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.839822536 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.779696206 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.698262048 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.700417575 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.695427586 seconds)
  done (took 77.235256663 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.702525241 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.707874052 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.710394872 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.703142396 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.706664086 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.70568802 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.698822184 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.700972987 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.707313633 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.706652927 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.707158483 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.708541167 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.704876445 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.702807463 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.707812433 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.688377285 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.699418492 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.706494787 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.700962598 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.689188984 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.708196949 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.708847631 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.707415237 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.704539294 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.706938626 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.707917011 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.705879061 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.709056893 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.705110022 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.706173378 seconds)
  done (took 52.685866892 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.708759532 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.699679363 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.700677385 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.707231232 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.705357938 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.711601394 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.074064675 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.710701972 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.712730274 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.709549993 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.69980412 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.711069261 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.763572612 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.709105449 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.702383463 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.711931736 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.709346156 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.704824198 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.696706695 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.748906334 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.083209659 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.710409165 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.073716237 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.718927726 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.70833018 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.708212187 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.711485938 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.709129293 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.712701939 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.698697305 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.688400346 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.072883596 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.700160088 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.697035064 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.685265583 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.715475699 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.710963956 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.703851078 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.705780653 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.708725529 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.07448115 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.710321272 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.715653217 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.695192689 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.712369099 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.713256366 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.700067179 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.699658274 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.007689952 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.720820758 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.708416827 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.710764666 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.718255002 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.714748811 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.012273084 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.71291365 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.70901007 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.700734546 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.716542075 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.072822218 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.715935711 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.711239923 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.719376994 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.712256588 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.711851515 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.713393549 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.724146581 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.710172431 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.709040377 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.705942808 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.701579258 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.711586814 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.715765721 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.705801119 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.718870434 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.706320249 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.714541172 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.70508323 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.722861642 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.066302633 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.714836078 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.703783395 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.08792803 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.71555839 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.71745071 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.718641018 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.716404481 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.776256876 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.069893775 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.705380312 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.728644128 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.70578479 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.078082928 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.724433487 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.716381248 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.702365537 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.719352534 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.716234471 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.716607834 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.707904958 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.71292654 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.72565124 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.704947105 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.71572918 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.074638022 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.72187977 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.704319136 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.714040308 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.829119727 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.721900653 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.727613137 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.719292213 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.085926993 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.720616272 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.719603666 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.711814761 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.713048805 seconds)
  done (took 244.968149613 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.709431069 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.731088551 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.709260348 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.728812426 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.704691643 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.72243766 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.704940946 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.713171919 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.71608296 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.708283421 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.716869788 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.718224091 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.717086656 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.706172745 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.710145757 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.712541468 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.711022018 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.714182229 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.714728066 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.709620077 seconds)
  done (took 51.837143722 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.722483778 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.425103646 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.375747574 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.72245773 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.719731955 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.716139452 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.78631344 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.723888028 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.717198477 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.097956824 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.936372319 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.723854291 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.723062073 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.720260926 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.37506962 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.724309466 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.099250304 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.434588757 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.724445936 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.42857078 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.724814962 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.724784018 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.715643189 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.428340206 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.108666948 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.080030388 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.793674256 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.428146101 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.723271379 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.71965476 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.429695453 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.726071306 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.718241252 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.414440367 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.724968 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.736065847 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.723890925 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.790483331 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.792536773 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.101943895 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.431714634 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.082635872 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.737297594 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.923129118 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.725137937 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.700230358 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.431593528 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.72529941 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.702340232 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.727159935 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.729731519 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.385910195 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.722733462 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.384254257 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.72534487 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.725668708 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.433316759 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.385750702 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.381872421 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.932151719 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.721751094 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.076963438 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.728634341 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.436409631 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.727954661 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.72355886 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.726889604 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.940353104 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.434173279 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.08289832 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.108387603 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.105874007 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.728332866 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.797233179 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.727264436 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.108910379 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.80130729 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.137232441 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.108140011 seconds)
  done (took 156.281443825 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.033254411 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.829840453 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.198220465 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.386520139 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.322497977 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.87772759 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.849039776 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.99810932 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.727421413 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.820038056 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.531031423 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.860376006 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.593881815 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.804064164 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.843844914 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.861154507 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.212458484 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.731502477 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.455175834 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.502762213 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.723666398 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.841723924 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.537242745 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.143286683 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.730206461 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.531773656 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.729163408 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.334735886 seconds)
  done (took 64.576736164 seconds)
done (took 649.133141412 seconds)
SAVING RESULT...
DONE!
