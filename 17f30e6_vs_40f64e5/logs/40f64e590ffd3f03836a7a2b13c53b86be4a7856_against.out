cset: moving following pidspec: 14817
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.994459072 seconds)
loading group "string"... done (took 0.522617786 seconds)
loading group "linalg"... done (took 9.538240931 seconds)
loading group "parallel"... done (took 0.172039754 seconds)
loading group "find"... done (took 4.137830656 seconds)
loading group "tuple"... done (took 2.112800797 seconds)
loading group "dates"... done (took 1.418162044 seconds)
loading group "micro"... done (took 0.200220363 seconds)
loading group "io"... done (took 0.527011222 seconds)
loading group "scalar"... done (took 59.347413663 seconds)
loading group "sparse"... done (took 14.242700556 seconds)
loading group "broadcast"... done (took 1.340854308 seconds)
loading group "union"... done (took 10.631892924 seconds)
loading group "simd"... done (took 3.93513868 seconds)
loading group "random"... done (took 14.440789992 seconds)
loading group "problem"... done (took 2.238339597 seconds)
loading group "array"... done (took 24.532478956 seconds)
loading group "misc"... done (took 1.178057769 seconds)
loading group "sort"... done (took 3.854370308 seconds)
loading group "collection"... done (took 22.441238722 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.715912826 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148796156 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.206023546 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.211519007 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.287953028 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.175629945 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.168976307 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.179093584 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.792274283 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214272708 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143353425 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.451249562 seconds)
done (took 6.448636032 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.302003628 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061333637 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172357742 seconds)
  done (took 0.934390051 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.096860292 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.163307429 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.114839883 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.10035515 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.100701912 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114288765 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.162569486 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.116172455 seconds)
  done (took 1.576558513 seconds)
done (took 3.612082096 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.507459503 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.899555454 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.515462127 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.184078507 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.324174883 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.324360451 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.278486112 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.228229861 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094587866 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087154449 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.183366893 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.4367026 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.411409021 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.979303164 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.07244329 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.116229724 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.14357559 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.802127351 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082879534 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.113207971 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.55893211 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.22366727 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.121046957 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.110009729 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190480507 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141810491 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.144053234 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.109049831 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668679865 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135208534 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.221765421 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087537877 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.143475368 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.168276288 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.231573652 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.115746074 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686644859 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.206366117 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103483201 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.107333761 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.695446676 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12501031 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.213261617 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.112810784 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.071860745 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.171334637 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118830544 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083063146 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.099390432 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.107188352 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166463906 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.446236983 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109035723 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.202702173 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096037073 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.70560125 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099066998 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277789026 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126831701 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095508095 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093042558 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.096525124 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.164132743 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098341067 seconds)
  done (took 20.570991605 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.180726614 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.200193963 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.082036479 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.169093291 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133571316 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103676662 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.094385397 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084094004 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.137814033 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.190429523 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.151607407 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.202478123 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080476574 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.095507047 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.179669985 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245953344 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.132508191 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.111088149 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093328139 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.117571515 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.134960109 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116691654 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.101637855 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.103906509 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.178842715 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211912213 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113430765 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12738673 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094064476 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.104568395 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.148241058 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155219249 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096232 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094598133 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.19988715 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111227343 seconds)
  done (took 5.606703688 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.247737579 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.108979151 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.259080083 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.205801869 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.161416546 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.190590438 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.183259198 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.312100931 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.269315672 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1674963 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134023747 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10117362 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085592448 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084617673 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.101405703 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.857323546 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158987466 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.175407641 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.173659164 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12316217 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.104544998 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.376095731 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107325938 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091846666 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.116406982 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066341048 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.232212629 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100295785 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.50553768 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088465439 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.124555504 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135286128 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196659575 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127603029 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14134437 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101093721 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.107669697 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.206400619 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125469307 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.11261872 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.103597811 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084169572 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.141216281 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119676531 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.114733026 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.115398822 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.140388104 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091676881 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11796535 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.093738457 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200917938 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.151923859 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.108575539 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.279367858 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.134664192 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107712999 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.116763172 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.806387251 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139390002 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085188347 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099715892 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104769957 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083212746 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.184653858 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131003391 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.464124383 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085716138 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.169253017 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.198074908 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103198319 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123680113 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.088817998 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090257078 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107901989 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116197946 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.108783666 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085844645 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.092415313 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.101240668 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.095089815 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116598766 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107628631 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086517008 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151304995 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116689769 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113989216 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129572413 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096467854 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.090991459 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135030649 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084980778 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.107138275 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.170752789 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.122729154 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116102893 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117418143 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146187654 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09058631 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.294581245 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099153181 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128846831 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103503735 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119041534 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119734429 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086417554 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090716215 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.106140941 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.084705814 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085480144 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166142147 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093514476 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086061223 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.111547984 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099662534 seconds)
  done (took 27.98862935 seconds)
done (took 54.869905874 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.434034314 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085808467 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083772524 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108468332 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086126036 seconds)
  done (took 1.581468705 seconds)
done (took 2.337948631 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.32150506 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.205374021 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089771891 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192169618 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090229002 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203629805 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186502208 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103788617 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217978208 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.090370012 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.205007424 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089101065 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.111690739 seconds)
  done (took 2.892374443 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109496117 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112372181 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.108393113 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.126109263 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090166284 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107663691 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.126507149 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114556258 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106276503 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119788277 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09065657 seconds)
  done (took 1.970850413 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105987919 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110075241 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096601042 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123374977 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091088539 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103437175 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122287548 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11257074 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103185747 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118752252 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091222285 seconds)
  done (took 1.939049581 seconds)
done (took 7.558503634 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.258378178 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.95665175 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.167542744 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.255202075 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.362976325 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.311600449 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.631651902 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.207063482 seconds)
  done (took 16.050104277 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.115356359 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.191499771 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095769651 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099187893 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.121909916 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100317157 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095448939 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.112781661 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099395042 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099644026 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093332539 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.115930245 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095658743 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100189975 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.117696461 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097047327 seconds)
  done (took 2.576914914 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141776828 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11885422 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118751414 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.105849284 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.118212588 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104608903 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107778091 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.122401598 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099128458 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100705892 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.125110882 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102291709 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103907627 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.116345591 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103678897 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.123336914 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.116585915 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103592294 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.122000361 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.122365351 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104077691 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10256395 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.119489706 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102857982 seconds)
  done (took 3.553800383 seconds)
done (took 22.944312333 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156626202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107080237 seconds)
  done (took 1.027882177 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.171937856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.19084885 seconds)
  done (took 1.132550655 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117624804 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092996602 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142555418 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.1081486 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094473745 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.113176543 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121431573 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.113561788 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096677727 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099458667 seconds)
  done (took 1.87351548 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.100293201 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100750522 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.127659669 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.177245654 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.123295916 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099080407 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101900388 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.118159579 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101877131 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096224177 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.121738177 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116016499 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101659016 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132651156 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101584217 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.118165096 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105208701 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100267359 seconds)
  done (took 2.818435152 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095854927 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097818235 seconds)
  done (took 0.970328349 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.099188102 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097255315 seconds)
    (3/7) benchmarking "month"...
    done (took 0.098305588 seconds)
    (4/7) benchmarking "year"...
    done (took 0.115845039 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097209569 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094984914 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.112870149 seconds)
  done (took 1.490244604 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.540223865 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241422251 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.37412495 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073104617 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125391364 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.321925644 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106866103 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073670612 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092845256 seconds)
  done (took 2.760502784 seconds)
done (took 12.846989551 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.0972132 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.44556497 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.636372125 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.133321772 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091792679 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.149377655 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.337101946 seconds)
done (took 2.671679757 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352776285 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.171547443 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087865642 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097593206 seconds)
  done (took 1.483707181 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086770601 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105305779 seconds)
  done (took 0.970800965 seconds)
done (took 3.239114695 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093422425 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095382939 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.136117589 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.093844545 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09504805 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.093570069 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.114612759 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09491626 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094171193 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.115276181 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.093973472 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.094664831 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093647035 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112958428 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094211701 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.215591452 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.109915164 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094515511 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094412914 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093647663 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112245699 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094713372 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090918615 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.108140567 seconds)
  done (took 3.34927144 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113614098 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094375689 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112598467 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096118368 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09586666 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112952911 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09636833 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094186767 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113793172 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094234609 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097817816 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.114616601 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097674432 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100242217 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112776562 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100111195 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099336445 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11481914 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097781219 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100554616 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.115218353 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096552432 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099984991 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09806226 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.119027357 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100153169 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096351429 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.115954899 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101270489 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098274229 seconds)
  done (took 3.883810365 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100393353 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088626912 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092281986 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118699382 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089541624 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09285259 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105505246 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093430108 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094034095 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091471338 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111890626 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092820253 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091385225 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109727221 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093570837 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09583572 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.118169636 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092105986 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092304615 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093641586 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112379654 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092452399 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091298062 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108580987 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091266634 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088798792 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091099783 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.11394326 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096585606 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.095205822 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.115824435 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098788261 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095999149 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.12263403 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097734984 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094847606 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.119397935 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092600044 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096678495 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091973567 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.110461393 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095240114 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.095575003 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.11989695 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095037574 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097727371 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.094302285 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.114491445 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09709454 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098221987 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.11036571 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096166908 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097678483 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.115700257 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099961734 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093099478 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096065987 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.110332955 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097025886 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.095002584 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.109386676 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.092498495 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100408229 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.095480299 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.129746387 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103029861 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094424648 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.116318842 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096642946 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.102186598 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.115705496 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107783887 seconds)
  done (took 8.050892296 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11592829 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101862115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112940131 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094591917 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096749245 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094637034 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119574144 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098279607 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09714273 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120998347 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098004642 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098030343 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115689921 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09790854 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098113385 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.115510848 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102695881 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09667214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.114672194 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097886331 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097559124 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101054122 seconds)
  done (took 3.078400892 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.244046187 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102357011 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145432321 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12864932 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115060442 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.126848253 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102003614 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102640636 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119381312 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106629412 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104871227 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118784728 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114363076 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120233586 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102714878 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104948891 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116224626 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106283627 seconds)
  done (took 2.977009506 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106433227 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095783828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.158722348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097031892 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095366876 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.114666607 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103648585 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117486658 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.118061382 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099865283 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.105438059 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116924156 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099328553 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098295949 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116403559 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098454489 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098005619 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11467799 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106928821 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104691805 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.120754392 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10689432 seconds)
  done (took 3.187373478 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10746618 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094953136 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129357861 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098426344 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094981841 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113875374 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103139722 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097199302 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.12249812 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098609537 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098817245 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097258947 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.13229322 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098815918 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103569315 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118925807 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099460972 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098139016 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118680316 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098472717 seconds)
  done (took 2.919844207 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197280115 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130016045 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113030435 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119186386 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134424077 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113869857 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13716437 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111870231 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113147209 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141012624 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114038454 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110701996 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140253938 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11621869 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129363657 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1210281 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138861723 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12119991 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111062587 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128668039 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122936792 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110700739 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136478458 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111563628 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128998946 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114306924 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109995273 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13583089 seconds)
  done (took 4.309098175 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093520761 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093800057 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09299325 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.112564315 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095569066 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098085517 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.114586987 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097030496 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098645295 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096710482 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112698898 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094931486 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093295174 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.110987438 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094754997 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094228532 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09387339 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.112092187 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093919904 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092598647 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.111625019 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093652412 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094985053 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092706761 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113048385 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096180736 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100241518 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114443184 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098574896 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098535366 seconds)
  done (took 3.800904152 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106189272 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103837226 seconds)
  done (took 1.013473571 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101743595 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107241849 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092436824 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114245254 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105574669 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097740991 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.125879275 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10574997 seconds)
  done (took 1.652364382 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.168774046 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.194102686 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.099831759 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123686539 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170815367 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.184539808 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132808229 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118609287 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093443028 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086356582 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185460246 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085619128 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.115413419 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096822019 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.097186032 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.124924964 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100163645 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107233818 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.126536901 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101928534 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103877455 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122476399 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102655442 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108519456 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.113447737 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103124007 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.101650217 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.130261537 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096593289 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.099649683 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.116584239 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099407823 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100271969 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.119416303 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099038782 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.199892808 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108076383 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093471593 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.116224557 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100396775 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128625295 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.114957216 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097797702 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09412866 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.119729611 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100644573 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099127201 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.114157254 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08838205 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090456475 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.114487324 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090860646 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094053231 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094977651 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.114211591 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103593131 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.115289033 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091844431 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091032805 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09052904 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111439451 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091331865 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095672292 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.117095128 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096893397 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094578088 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112052587 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095395302 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096663479 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.115301254 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095562501 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109571057 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115121902 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099729652 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10063249 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.116791528 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093723232 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100624598 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113532105 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.096348286 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098430044 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.145194372 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103049138 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090852894 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108651386 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101625144 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096085613 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.117787813 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.089209948 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104372211 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.113791844 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0964828 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087869274 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111003851 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091843243 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099248934 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087944284 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114244625 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094915841 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099751721 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119232202 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094221758 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097316356 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119278227 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103290439 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094443714 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.18236474 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093166666 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110968092 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098002127 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099902579 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107203995 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.096171727 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094189003 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091765091 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.109905177 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104654719 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094034304 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.118195058 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101865747 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096849886 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.117905356 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099403003 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093774984 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109804675 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099927233 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103074281 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115680772 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097585245 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096119207 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.113163343 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.096567936 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099785734 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110580053 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101453264 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091939135 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093884145 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.117052664 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099968089 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095205403 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.11019411 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095721879 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096888788 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.115033832 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097810762 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096176127 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.109325774 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088075586 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095587504 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109959584 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09760955 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104285469 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109969081 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098502191 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091863707 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121772398 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093117846 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101243321 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116728111 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10279261 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10054442 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106004821 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093327789 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09725713 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096806305 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111333571 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097237225 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094604977 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.122638291 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090552786 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099286648 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106047983 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093011269 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100028223 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.115087819 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09913153 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091685402 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152481262 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108233596 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100512223 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.115075039 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09593287 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099180698 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113566467 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099720362 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10369049 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099368921 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113655305 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09422958 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100593308 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.111321 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098630489 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093749352 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115524537 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089261351 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097356724 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.107066409 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101421696 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097157746 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.118871751 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10195689 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098553106 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113277323 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105475005 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091931523 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09871346 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10728124 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100058603 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105071602 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.121541853 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102112985 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097086788 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11342008 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096521213 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104483748 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116796836 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.096231651 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096783257 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.107758675 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090477846 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102263702 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.116925833 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0953036 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096193238 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097053264 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117716855 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093981364 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089034227 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.120344773 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100281957 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091363364 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116048207 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093282044 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094023269 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122013211 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089369535 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093377796 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11740257 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10031541 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095461022 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.115824366 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100516483 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102846877 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.116388474 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097548648 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093771841 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12248003 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095504743 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095774958 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.101021157 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.118829147 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08957871 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096466038 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115595636 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093963485 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092291136 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119782271 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102249455 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101062643 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113214536 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100973665 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101914986 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.12099311 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095613137 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101897944 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.111187114 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089734456 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092987733 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089199611 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.118049928 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092821021 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100679283 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.113543698 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096332781 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099218483 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118666556 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094435053 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101564242 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126453999 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090882926 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089893345 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114105432 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096303657 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092675053 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.112472892 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098160108 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098109124 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.130360222 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100471785 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092708717 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.11459921 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.1024983 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093797822 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.121482907 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102202173 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103252376 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09224504 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120699357 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093637536 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100655538 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.110331209 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096441734 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094842368 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115785604 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094186279 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094151149 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.112801077 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090536722 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.093222888 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.12314003 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095837257 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100967938 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.116474378 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.096529943 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093727561 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112984479 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103495284 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095410178 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.122997973 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.098867391 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090428538 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089670621 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121571814 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096579111 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101093582 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111563699 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099795861 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101897455 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.119190925 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098336039 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105060846 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125738755 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102963163 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102694064 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.109233304 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.094981701 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101804287 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.115327864 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100153239 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098821995 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090358418 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118313928 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102503118 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097314889 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.115528587 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09120685 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097619607 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.122905643 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099877296 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100761836 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118071369 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09892948 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09367511 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099935125 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.1227925 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096792826 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102494179 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116965502 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100765258 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093628107 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.123266233 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098396661 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090972672 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.111026898 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094852844 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103838274 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.110190129 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10203588 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101584776 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093872412 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.115430181 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102467919 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092586565 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119335078 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101912541 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094449022 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128443219 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098820806 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.095383917 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.122302494 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102290522 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09135638 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.115700118 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09688746 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104243005 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115359851 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103808522 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097605778 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121878278 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10031115 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101196039 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103053608 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122394755 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091348907 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104537385 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.12260784 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100993499 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09346398 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116349921 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092657523 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09671593 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.123809878 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09556334 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105365074 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.123685002 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097843658 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094751295 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101973722 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116388195 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104049753 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092863695 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120390729 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091998431 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.099588083 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116291953 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10464976 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093347764 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.11197688 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103823817 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102692179 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121663865 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100622851 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10393668 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.110294054 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.092401694 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09980529 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094312132 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127717848 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100244032 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094839225 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116893705 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100511246 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097402819 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125129181 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.093054081 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.094032139 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.11906542 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100140737 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095939575 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.113293527 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102326559 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096631701 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119684563 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09646073 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.092308596 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.116290766 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105250046 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.096379225 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.113778854 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094754089 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104481024 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096117041 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.115415724 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091641472 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102893602 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.11965984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105318141 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094085708 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.118943268 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094990502 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099397067 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.124556133 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095949911 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097352603 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.117002309 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104056529 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102953525 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.111807095 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096421759 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107788707 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123444818 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10021414 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099919201 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.117556988 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106552586 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10424936 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.121078316 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.093293637 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092591942 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096017238 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.11261879 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101958915 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102481887 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.117820988 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.096231441 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102711804 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122898799 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100656306 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101250934 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.112660695 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106360382 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095513543 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120430678 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.093784831 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.092265713 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100347188 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123842983 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096508781 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097096076 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.121012455 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099943436 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092489065 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.115247477 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.102248547 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102560737 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.124188069 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101130248 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096958769 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100449995 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.130054388 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0994968 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.097189384 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126039351 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105119093 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097808527 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.119389903 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101519334 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104489265 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.12193925 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105336579 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.095314774 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.119574563 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105770713 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105497494 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128497625 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098085588 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091691478 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.124221662 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.097745601 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091960926 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122930437 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105634872 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104985208 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.118218176 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095663422 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107242129 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.124474139 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099514261 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095843054 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.117159731 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103678827 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096166978 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101312115 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.117641356 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105684459 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104508681 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.125351136 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.106768605 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092032723 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125468539 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101018223 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106105881 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.120342399 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092983682 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092495911 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.122204856 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107168936 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104584179 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101760496 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.122720983 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102528751 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099112534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120322005 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.096424203 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104967958 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.124709434 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099713658 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099274985 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.118144423 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100698769 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100112871 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.126279396 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106075361 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099185378 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.129315048 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106067398 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.098064984 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.096234095 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119530773 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101216224 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097539917 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12448692 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09626259 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092349523 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124719142 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105597367 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097870476 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126655421 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106930008 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.097818584 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121033059 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107401996 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103619671 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099997004 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.120179249 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102209785 seconds)
  done (took 63.694918189 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14964808 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106327278 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122230138 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100967518 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119069191 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123350532 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101106992 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10266082 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12281904 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110955171 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099994839 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121438417 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117497693 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142276193 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118953604 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11087618 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123428614 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103688675 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100538832 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122855637 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117009572 seconds)
  done (took 3.290728382 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118655871 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115465102 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134730681 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114729883 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107704269 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134709379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113108378 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134821405 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116104988 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109787914 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137733157 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112681089 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.130764953 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112105736 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109131965 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.131349454 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116036963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107819438 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133843975 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1129446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.130384527 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113429438 seconds)
  done (took 3.502457959 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.131015334 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103665487 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.119344367 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.101975398 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104387646 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100574172 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.125882767 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101390966 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.11029538 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.117592188 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092859294 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096771873 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.119755522 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.102068846 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09555873 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.101742756 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.132480184 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104649132 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10616832 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121739782 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.09307224 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.102316573 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.123304996 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.093280717 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107105938 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107689113 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.122999091 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103855455 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091209015 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.124911625 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102168928 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095100641 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091204824 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112669286 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092344005 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10404284 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.125266558 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.1013888 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100824692 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.111784676 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102048382 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104280719 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093044723 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.123199256 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101795207 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094860387 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.125099498 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101516331 seconds)
  done (took 5.999389657 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.13240336 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159941079 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105384631 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130371397 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138529837 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111237818 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104386738 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131489207 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103041944 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.127068952 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116835807 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115667852 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.13088033 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109168073 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106322459 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129796044 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10795912 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104004008 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.132512032 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105439665 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.13088913 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108466028 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115816264 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.136632808 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107654542 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104762693 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126827301 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110161565 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11368834 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.133947411 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109025247 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.130656209 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117581013 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105750249 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.127543314 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106566904 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.118363445 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.374880633 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10703044 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103160325 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.128935809 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109032929 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106681652 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.139530802 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107242338 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106885869 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129192686 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10436858 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114872569 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.128312127 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112249051 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.137534109 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107098396 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106047634 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12923019 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11559347 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105761145 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.127805289 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106527443 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11262773 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.126199079 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108390738 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.136087557 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105378484 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110826733 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.137138599 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106976802 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107053767 seconds)
  done (took 9.260528172 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135566681 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108005355 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1377319 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117822943 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10819232 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130295829 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108819215 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.129440762 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109427812 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113924823 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12943308 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.226960705 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12759353 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11315573 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130728706 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109452466 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110206961 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129638623 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108998708 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10941112 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129737727 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117535547 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108044396 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138437437 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1197125 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.125496406 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109358529 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109724009 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137971176 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108981876 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140533654 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.109926619 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11203799 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.139375894 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121454271 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.109244339 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125401631 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108234993 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107900313 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132542623 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105528573 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138925418 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109845323 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106706516 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1307396 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110382962 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118624093 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140800516 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114185121 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137118205 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110795305 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117203102 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130219563 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109834149 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116560144 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147764321 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11760036 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.139133195 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109689019 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117673762 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139044847 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125293587 seconds)
  done (took 8.468239781 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102110122 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101842071 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101331531 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.125786317 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.1026215 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102601315 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123483231 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102562204 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103317119 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101188496 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123344247 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103382071 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101561588 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123169992 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102281721 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101478547 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102208389 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.124474628 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102917906 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10180708 seconds)
  done (took 3.023974836 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111663012 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119650271 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.126894838 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110445469 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104566928 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.131910071 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104449805 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104260395 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124666552 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10586905 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11359133 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.135021081 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105493582 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110358796 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.136084903 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110929329 seconds)
  done (took 2.7270354 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122286779 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12054864 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212075433 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105504339 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127606869 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111900054 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104601919 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129179625 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103385633 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.110211431 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.130615003 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107210351 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105505595 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.126954762 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105955793 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108056479 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103242947 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.131602559 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106640865 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.21679328 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109069177 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105898732 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.129373715 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107290179 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105854382 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.134505233 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112057057 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103408122 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.13027334 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106738923 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106151278 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.136612204 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103359163 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109894072 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127541568 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106139335 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106337126 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.126226945 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107392498 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104898884 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.128479816 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106941462 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105314021 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.129181162 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103901481 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106905634 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.1032551 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.135158249 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106539525 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106223773 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.126786234 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109777088 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110886657 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.135957932 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112142543 seconds)
  done (took 7.371879692 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11719081 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107539514 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138542129 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104994706 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10604938 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106261697 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.130540413 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106609227 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106585621 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125826196 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107383976 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106912618 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.130160686 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108413228 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106670199 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.129769016 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104419912 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106162523 seconds)
  done (took 2.92812857 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110545901 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105107639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109328148 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127470609 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105747735 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105026205 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126265638 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105030255 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10394129 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.12637927 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105388123 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104982484 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1040647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.128277276 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106346065 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10560442 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12750986 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104613093 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10540698 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125826825 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105235798 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105079913 seconds)
  done (took 3.33343018 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117009502 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.216095706 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.1111362 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.224826006 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.103540751 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.12582892 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.112438251 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.102140083 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.142443184 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.102165296 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100873721 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.124398501 seconds)
  done (took 2.464461368 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136464001 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144363609 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131370617 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108541457 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114691749 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133392451 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109928574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109672536 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145218536 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121879046 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133245227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118398785 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118372735 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143071545 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116288042 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136876834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110012873 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110633482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130994591 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1285044 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109819063 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141145393 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110390295 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1323412 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110975565 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119049007 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143361527 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123554539 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13442268 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122023059 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114598022 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131808032 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119528398 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144440156 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106989653 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118586868 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133563633 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1261064 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11449801 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140582402 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107525894 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136977754 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118465344 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115972149 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142455895 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111944263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138179583 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111191793 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110197672 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154226316 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115647457 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142198251 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115532918 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11924631 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141845621 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131180439 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143660098 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11964196 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136797703 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124025199 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1189513 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137383322 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119720322 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145439026 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116167496 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118442227 seconds)
  done (took 9.176121489 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147080644 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107322866 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133342236 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123405428 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140822167 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112543641 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110747114 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133575366 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112134162 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106814281 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177658485 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111440079 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140487209 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11995436 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110400561 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133420319 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111745705 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119601172 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130496203 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132852438 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133710719 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119404988 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11916236 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140709094 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122686272 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137281145 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111395799 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111510479 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134021023 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11169954 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117533661 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133007277 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119806716 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.131041315 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11993215 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111581019 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132756687 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118545592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111802067 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137921589 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11780716 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148255096 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111882105 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1105862 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147314194 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114895755 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132554985 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10886985 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111695279 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107641901 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145760645 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121868849 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144964663 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119453319 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133041639 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111303749 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11137813 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132413696 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111718886 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116340074 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14287187 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111607698 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155559446 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111704987 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111522352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143454765 seconds)
  done (took 9.117822316 seconds)
done (took 173.360268653 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.178583324 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.219045732 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199509519 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.160040324 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09734059 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.156070825 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12973179 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.201949982 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.097409175 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09695388 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.119757408 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.100646458 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.165085937 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096938444 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119551376 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.100589537 seconds)
  done (took 3.124906806 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199027125 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.347602373 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112396485 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.125775142 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103548782 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101744573 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124326913 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104068052 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.101139957 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131998769 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102765512 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098641385 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131796998 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099805499 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102701189 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124868253 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109133291 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102330331 seconds)
  done (took 3.220879973 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12369073 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.160287143 seconds)
  done (took 1.182957972 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13497317 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.219309104 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298057106 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174238149 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12357158 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.144258708 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153148805 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138244605 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192543549 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137640338 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.115061559 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09897795 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149585782 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.108677996 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.140349202 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100410883 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.131159836 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.140997958 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115213883 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103953653 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.149783782 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105306338 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107620669 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139263869 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183839229 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138623843 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107578345 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104320528 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126369841 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116778956 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.132066026 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118947808 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.115581667 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.184607763 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.127808012 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158677092 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132137055 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.103654312 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115077413 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.124355059 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106062021 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105845443 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138081874 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10094042 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10599644 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131195874 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106260091 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.126957416 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111836917 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110076987 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.133650306 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109725755 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.178868695 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110892523 seconds)
  done (took 8.084277058 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.898307738 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154615681 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102276204 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.032185797 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14786643 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11488968 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.875159823 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.151671452 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2594816 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.901830463 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119177446 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132951823 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242731076 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.284411516 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.26962472 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36523164 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.742017333 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115271432 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131999607 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165080908 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107406884 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144605679 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118464367 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.521088681 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103768573 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.125073796 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109470974 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110881768 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18244003 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102664662 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129051117 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178220079 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.295863461 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214095033 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126390165 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103316211 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10128809 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188777707 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278693261 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225539575 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.199886103 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099579283 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101776979 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130735201 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117250455 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100017537 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18329349 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195851302 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193491505 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107490624 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111524587 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134051683 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106055456 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181659763 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100078998 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.363553074 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.388174082 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102852953 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108749793 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136873342 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274925464 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104546954 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241661108 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14810396 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222450914 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102917487 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.851436136 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190460393 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102360922 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129253099 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108316917 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108085393 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128674464 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169239328 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.50167427 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109021406 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128978692 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10452663 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.249870671 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103211379 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102875372 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186634907 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103863766 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13240308 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111348518 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130881238 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169052573 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27405147 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108484955 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13139094 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107544262 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136019741 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.10387529 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.238652694 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235240528 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178869184 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.217201852 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130243797 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161650235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190173695 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130280813 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.16853037 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130762509 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115690271 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106984135 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.25548626 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138627335 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105101634 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.13051108 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108812301 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161711346 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107565005 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109441152 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191228647 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.561338282 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.190841377 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.100251645 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108260135 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132552471 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162826502 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132607505 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270228358 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110594999 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189544006 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107750714 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.123498735 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108863425 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.185767128 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111584022 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131004858 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107744358 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112875597 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.283715408 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227868991 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134329302 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25639259 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181549623 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108719062 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194247956 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132555334 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169616261 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136555633 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107734859 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103964827 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.860919046 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11574307 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108874459 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130718229 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187272627 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102714808 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127522152 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102889201 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103953932 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824742588 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130163689 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101862046 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105642694 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130517156 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110053939 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108528885 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131185956 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182046055 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249680005 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112270283 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108744764 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.127000926 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183220297 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.105345519 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104968935 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10332138 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.128170489 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110516079 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107535951 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128777828 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193846718 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.158596215 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234414725 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.682162166 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103954281 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103798884 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246165871 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127007282 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.333696415 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109434656 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.240775311 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186986138 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100657912 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.390059868 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168495868 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.211313394 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106772307 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194839721 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100287403 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13268475 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160237555 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.126650253 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110800053 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181689794 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112549369 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132173232 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284155269 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103700338 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257160774 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.102690363 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193411257 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105816459 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131527061 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332016522 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103898477 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115802924 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18126069 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132278763 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106074383 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.642855003 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104072103 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112823565 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.132081949 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.240805971 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.191244781 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109462244 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134388388 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113149095 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182072804 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211195711 seconds)
  done (took 48.437808608 seconds)
done (took 64.943082219 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27104138 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172508459 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.379359205 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180397242 seconds)
  done (took 1.998065117 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.27398994 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.171001075 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.254476145 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100315759 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262961791 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100250179 seconds)
  done (took 2.079747082 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.183752906 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171749354 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150400131 seconds)
  done (took 1.434900974 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215827026 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212632905 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352074659 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264462401 seconds)
  done (took 2.062348571 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.286112012 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119814608 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129016476 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237606262 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.255357682 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211490162 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126863619 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178937839 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132428153 seconds)
  done (took 2.636093948 seconds)
done (took 11.137843018 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.367983107 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.362313392 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.13694912 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.229734452 seconds)
    (5/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.267045551 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.36068162 seconds)
    (7/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.2364191 seconds)
    (8/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.226884647 seconds)
    (9/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.289131949 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.228221061 seconds)
    (11/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.298990884 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116151363 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.404937807 seconds)
    (14/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.28609979 seconds)
    (15/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.401041082 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120361046 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.331785558 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.171235672 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122953414 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111550358 seconds)
    (21/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.147892899 seconds)
    (22/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.278093674 seconds)
    (23/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.174572688 seconds)
    (24/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.14627335 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.390546173 seconds)
    (26/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.174659082 seconds)
    (27/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.243071412 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.146671026 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.132211505 seconds)
    (30/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141476301 seconds)
    (31/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.137891068 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.186814259 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110748022 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.149775121 seconds)
    (35/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.086609128 seconds)
    (36/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110116586 seconds)
    (37/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202526802 seconds)
    (38/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114363286 seconds)
    (39/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.174234797 seconds)
    (40/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.11153227 seconds)
    (41/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.13305868 seconds)
    (42/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.174505362 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.103951766 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106329094 seconds)
    (45/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.130495086 seconds)
    (46/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085624016 seconds)
    (47/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.151646589 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11482361 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078867571 seconds)
    (50/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.158823479 seconds)
    (51/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.17858472 seconds)
    (52/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11419881 seconds)
    (53/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.193142019 seconds)
    (54/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079851635 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122934837 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.197921467 seconds)
    (57/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.374741788 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.122426253 seconds)
    (59/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.105045341 seconds)
    (60/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.171059951 seconds)
    (61/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.084701692 seconds)
    (62/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.314239611 seconds)
    (63/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.106779082 seconds)
    (64/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088004069 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.132026216 seconds)
    (66/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137606395 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.106211551 seconds)
    (68/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.19914369 seconds)
    (69/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195938324 seconds)
    (70/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079089107 seconds)
    (71/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082329813 seconds)
    (72/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.108611088 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.087453998 seconds)
    (74/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087431859 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104874859 seconds)
    (76/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.157259523 seconds)
    (77/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.146959959 seconds)
    (78/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082680556 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.13242054 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.105927506 seconds)
    (81/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088246627 seconds)
    (82/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.135376014 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.149206474 seconds)
    (84/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.180567515 seconds)
    (85/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083253743 seconds)
    (86/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.15481871 seconds)
    (87/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.13892912 seconds)
    (88/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.105543239 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.145701908 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112582473 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105265691 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.204795316 seconds)
    (93/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.087997573 seconds)
    (94/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081906714 seconds)
    (95/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12516892 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.134523811 seconds)
    (97/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082484232 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1267004 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.132838959 seconds)
    (100/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.086605915 seconds)
    (101/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107823278 seconds)
    (102/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086643979 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.127632571 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115165483 seconds)
    (105/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114958823 seconds)
    (106/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.135567379 seconds)
    (107/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154417751 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.089675859 seconds)
    (109/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.136355538 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.131806146 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.088230564 seconds)
    (112/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.132082648 seconds)
    (113/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.155994907 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080072822 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109786866 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128994965 seconds)
    (117/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081594733 seconds)
    (118/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.08508589 seconds)
    (119/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.087270036 seconds)
    (120/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.138426891 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.132423334 seconds)
    (122/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.091018767 seconds)
    (123/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086167941 seconds)
    (124/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.140146243 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.136387596 seconds)
    (126/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.197136172 seconds)
    (127/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080270892 seconds)
    (128/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.192780032 seconds)
    (129/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091159078 seconds)
    (130/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.080145248 seconds)
    (131/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113665641 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.112850244 seconds)
    (133/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.085920353 seconds)
    (134/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.176249438 seconds)
    (135/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.158318108 seconds)
    (136/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.145417794 seconds)
    (137/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081383394 seconds)
    (138/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.085768099 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.131694121 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128063702 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10376983 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.15055469 seconds)
    (143/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082065394 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11420307 seconds)
    (145/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082264512 seconds)
    (146/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.08182507 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.127553441 seconds)
    (148/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086919782 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103427748 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08619937 seconds)
    (151/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.104877024 seconds)
    (152/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.113590143 seconds)
    (153/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080135679 seconds)
    (154/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085882569 seconds)
    (155/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.13855903 seconds)
    (156/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117474017 seconds)
    (157/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087111147 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.128813448 seconds)
    (159/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113099299 seconds)
    (160/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.141559901 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106065653 seconds)
    (162/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.107031697 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104727843 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.088780144 seconds)
    (165/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103316211 seconds)
    (166/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.103091601 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111943007 seconds)
    (168/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113792474 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.150146398 seconds)
    (170/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083859547 seconds)
    (171/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115350073 seconds)
    (172/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103167519 seconds)
    (173/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.105206605 seconds)
    (174/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113861337 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106118174 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.132573703 seconds)
    (177/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081880734 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083049318 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103455195 seconds)
    (180/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079286968 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.13011054 seconds)
    (182/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.095762178 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106372885 seconds)
    (184/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082267864 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.148906646 seconds)
    (186/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.080638885 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087455745 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082620422 seconds)
    (189/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.110042276 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107398713 seconds)
    (191/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083204645 seconds)
    (192/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085580506 seconds)
  done (took 27.655822714 seconds)
done (took 28.591122168 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230567518 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131449327 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113112498 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113225711 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234734179 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120179249 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155864304 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115271013 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123428126 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13910065 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10414376 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125359726 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13768371 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.210168625 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.144563984 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106211202 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.1039987 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.149730773 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130214743 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129886489 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.234859405 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107449558 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.150140392 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105687951 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.239261641 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107172427 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113321534 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.14152065 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126794057 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114140073 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.140615717 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106147087 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.130505213 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.15345862 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106359405 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.116366054 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129302197 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087379687 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11418547 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.13789889 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128600082 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114293933 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.138613996 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107472466 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114765921 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113543698 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130039162 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118033166 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102843525 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.140294586 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106704491 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129722502 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.138109532 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105206116 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103856503 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129877829 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124380203 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10510757 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150963959 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105144237 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106832301 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128883638 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117852487 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10630905 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113720956 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.129187378 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.1145858 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115495693 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.137150053 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10741743 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105569081 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.138151856 seconds)
done (took 10.280646512 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111025222 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150094506 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.237401977 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.239498542 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.135214332 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.149301737 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119284023 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128801575 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143807813 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125051238 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142284015 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162682908 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.243727991 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122692418 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.121734684 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.144070695 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116547363 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113963375 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.241682759 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.156413676 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.131054305 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.122161763 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159572876 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123069212 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108468961 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.168894242 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113411908 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117333217 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.134117055 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119030011 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.154671764 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11113613 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113314828 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.151631992 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.128866178 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120761097 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.14615888 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118053071 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109430536 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.134087791 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119202449 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126936673 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.135922312 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.123183821 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117697788 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150341464 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117661541 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122501751 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.13528564 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117048823 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110679088 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158103974 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12238365 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125279968 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.146926296 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12296843 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12270038 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.147514149 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11338914 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121392532 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.135310783 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110234549 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110642561 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.156527866 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.11370587 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.146869375 seconds)
  done (took 9.986344492 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129580863 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140189964 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.145433648 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.121642564 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114465114 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127821213 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.103363563 seconds)
  done (took 1.854763724 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105813944 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246817908 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219821669 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246405566 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.245419896 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.259374883 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128947264 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104345183 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.168614179 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115094664 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247822436 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.276025674 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115700328 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.147097895 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.22392219 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.133535976 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.223192838 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.133822185 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120858735 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.253313637 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123481904 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.165906643 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.12035071 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.106003005 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.242391927 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.107298002 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.296676763 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.153497382 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116932537 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118753229 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146331108 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.188156119 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.244193902 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120832754 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141665711 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.246078359 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.217425135 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.148541584 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.233359913 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.138644376 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.243690416 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.121090887 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121399167 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.146910581 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121526068 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.236028478 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125387732 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120975719 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.147807553 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.226961054 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.145513477 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.246789832 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117913109 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120467345 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.143332333 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123283973 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127295797 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.148109406 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.226386819 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.150859547 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247240239 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.222265904 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.247672906 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250917104 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130290032 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248483624 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.235467443 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120075815 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114800144 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.147800289 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.251678653 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121053942 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141734434 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.212154632 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150782373 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.225202241 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.251658678 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117917998 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.147345204 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.111196054 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.119685332 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.133708903 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.240569209 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12044723 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118615154 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151791719 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121478786 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121841192 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.137704662 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.130706077 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119652017 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.143956993 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127312628 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120383325 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148921731 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.25566652 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118829566 seconds)
  done (took 17.362157716 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.109130986 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.108112072 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111591984 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133379252 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108712847 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108402472 seconds)
  done (took 1.683298833 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14563514 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12134909 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.157123193 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123916177 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.193465873 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.227934991 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261549252 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115117222 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.170002904 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133162395 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255001352 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257817562 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256734464 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124578342 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260822553 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123625358 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.262646947 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118758886 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.156894742 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120690906 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120748176 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.152400246 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118622487 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24663674 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121885961 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122697726 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142927673 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130054457 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154735459 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.117412976 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124609491 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.148275629 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.114347571 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115486614 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.25931866 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.114461971 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145262257 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125615276 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149728328 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.123919878 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.261134185 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119233528 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127973885 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.15240709 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.116337 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.11346806 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.152722842 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11608662 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.263347944 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123652875 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.151607198 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123144361 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121987719 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.151673757 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114922435 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13616976 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.151280271 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.264896674 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.125595929 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.114564498 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.149240487 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122760234 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116127337 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.154025313 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.123230685 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123847523 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.140256104 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124678634 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118151407 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.148241896 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.125430196 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120979421 seconds)
  done (took 12.007119621 seconds)
done (took 43.862247288 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.677349334 seconds)
  done (took 2.67944541 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.123301504 seconds)
  done (took 2.127040736 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.529044581 seconds)
  done (took 19.563922829 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.442254214 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.481915892 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.173945723 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150483871 seconds)
  done (took 3.251292012 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.856577851 seconds)
  done (took 1.879856301 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.347545941 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261068185 seconds)
  done (took 1.618740205 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.72835568 seconds)
  done (took 1.749061735 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.572262576 seconds)
  done (took 2.586590096 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.294777639 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.251928335 seconds)
  done (took 1.572570088 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.645449397 seconds)
  done (took 1.672390183 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.04150919 seconds)
  done (took 21.070660174 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265131411 seconds)
  done (took 1.297054604 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300563291 seconds)
  done (took 1.333204593 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.678089511 seconds)
  done (took 4.710608451 seconds)
done (took 68.127623494 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.121533612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124512692 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.149054499 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122982469 seconds)
  done (took 1.536919185 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127951815 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122844043 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.150302144 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121734964 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127500851 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.147455274 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121555472 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.125612831 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120242944 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149950004 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122956837 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119995496 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.15031744 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121396094 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.119666893 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.1503305 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126947079 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120951624 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.148132873 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.124076952 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121621332 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148854474 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126404621 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124881663 seconds)
  done (took 4.176223038 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117969052 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.112556771 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113879636 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135864693 seconds)
  done (took 1.515153917 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130921048 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.134472547 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156915625 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130404782 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134480998 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.159303986 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121000304 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117983299 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145703793 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.13106108 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.1386559 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160579358 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135254001 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.148128892 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.132964254 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116095978 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121101503 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.159674984 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128588209 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.155268837 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122826234 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128070685 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.15111775 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.131182534 seconds)
  done (took 4.324143035 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.201059576 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132933874 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179492168 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16745642 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.184586113 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.120277306 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.150440988 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1531201 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.129056566 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.149931846 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.125807549 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16868898 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.15368763 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124628558 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.122206183 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152843319 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.135894586 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.151925535 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.169877748 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.127419904 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.15516205 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.134728026 seconds)
  done (took 4.332760752 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124769987 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.112394041 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.135937747 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109844765 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.125687142 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.139229996 seconds)
  done (took 1.788741152 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111653095 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.107120326 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106428687 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131656616 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.111492461 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.106953266 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129772369 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.107477075 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.107456052 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.106055526 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131125613 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106540504 seconds)
  done (took 2.398638961 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208575406 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149245236 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290456769 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375167262 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191488317 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192558076 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289079987 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193286102 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208864618 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14086491 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217498677 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165724146 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185833478 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19149998 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170179811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160922489 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199137405 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210682797 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171843849 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247037001 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162167061 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205399792 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192711797 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179573534 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141864758 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19253859 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121985066 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156957459 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172893703 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195893696 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206625996 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154243916 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143900841 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223989238 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262924496 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210433394 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274219578 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135654331 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201491544 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.193468108 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26349056 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171127347 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226530832 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156112939 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160350699 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189294881 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186362875 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18805925 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.166232591 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146815248 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218040715 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183771064 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203739107 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1652428 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303416657 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162780756 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145712314 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208517089 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218365827 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204682802 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21007874 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12608831 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204548009 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222561612 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218165941 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.171920256 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196279918 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129495308 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167337201 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235558377 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213706994 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162108324 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.242349883 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162280692 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175428803 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20060037 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160757244 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241289692 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20191618 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123324552 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182841128 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138017202 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128129213 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219036513 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124065986 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247436075 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133554204 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343781357 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212673065 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157606704 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194035987 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191515555 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166552115 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176936746 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103902947 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145449502 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.192513168 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162507956 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158173816 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158002076 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170031957 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129488394 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183211427 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126931435 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172077888 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163605162 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166328554 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203400167 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133712115 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209366778 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150178246 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.192033288 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200612243 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196437271 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161496375 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137335272 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252927624 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17161938 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.167242706 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176632797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227762274 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178702962 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138734541 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197125276 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19662647 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173970167 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201907239 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16835863 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13651317 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.171606808 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175056619 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192845683 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162407314 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157435243 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.169611722 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222908025 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127755352 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169343043 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211113648 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137489342 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126999669 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167866389 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140115304 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143806416 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.178455096 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.142515819 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185261478 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16887315 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196856877 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188320806 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138163938 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205141659 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134255481 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196321963 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152163973 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12117337 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.206353894 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229842077 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132355168 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210498975 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165293646 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212598473 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202043291 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131141677 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212601966 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131062895 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.123373789 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192967975 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171785602 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195988471 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.220671149 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181781008 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195342927 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.194733213 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153231217 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203111932 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185463947 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187798183 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144597648 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205337146 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201973031 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123854576 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125704742 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.158751263 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139320231 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13253969 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168597557 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18575791 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196846541 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207007818 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169148325 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168361913 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193536832 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.158005358 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163640852 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20578825 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140475406 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220229053 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223200171 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18193368 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172630612 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165869975 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.151833205 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128590654 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135350661 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192418533 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139034859 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165072877 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144070765 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222865561 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205299221 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152321325 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219527078 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196455639 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203441303 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150352918 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16438962 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200300611 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171613374 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.190622285 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15944332 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.164843518 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224582051 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143845945 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222135301 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199298598 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182548353 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230009836 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.195825321 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133223575 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150582626 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191317206 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140270701 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194533537 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14802888 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16170066 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157924482 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.169367488 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144330714 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221955529 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145733127 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211927928 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186197421 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176962448 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156250805 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144904879 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205232104 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14985914 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106174605 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202754415 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228327918 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152808119 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188454551 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176146352 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16017386 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.324326858 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219778158 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18064029 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167064751 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140550974 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205215761 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16216713 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194912705 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217411795 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144668886 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240939508 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1750122 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.173173279 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133300191 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179191851 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155056659 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169268103 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154273249 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.193614286 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147127787 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222347968 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14092211 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201790674 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180369864 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.175908473 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.153246722 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170424396 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230046572 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200234681 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207475406 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.168003976 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.197698255 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187394291 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154662545 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129128781 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135869163 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217921776 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131982566 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209195527 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196613549 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211578162 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178736137 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194987644 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144618041 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12941541 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197611302 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152507313 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215734767 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166125525 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.141541812 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22438412 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131192451 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132726096 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192724159 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320380685 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15187469 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206293133 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109167234 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.31221561 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132346369 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134191156 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192060806 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200993018 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136528116 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186524208 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20239089 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143755851 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194621536 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138684326 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208788701 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213564518 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171032643 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209061781 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14815229 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196453753 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193421594 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178946498 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175505698 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.151662861 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189227346 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198103334 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208823552 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134570534 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201605734 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173689616 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203249798 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178050016 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170693564 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187039846 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16055205 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169451367 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170657107 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128046172 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193023149 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.169807697 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163165931 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179784874 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203321596 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133744662 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158512336 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151351649 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197832909 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14427114 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.161055536 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191009276 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.162939785 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185351014 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245277629 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131398134 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201029754 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148652563 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161790337 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141395354 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174695888 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135020382 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177412365 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212716087 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134519271 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210299648 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1701495 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198454286 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189835174 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147430968 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.268391533 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.160354679 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19429454 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184047077 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233710725 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154298462 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20779926 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172665183 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182771007 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169567163 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180764607 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.222163447 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199274433 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.170220669 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16246626 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146191426 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169990122 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138573348 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155035427 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200402998 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145173838 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.169309728 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.171035507 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178553502 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.151802475 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173122504 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203560663 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183742639 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221683218 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190259599 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168987481 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178826301 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20854733 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130877048 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.198785055 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175585248 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177049051 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155842653 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.166680553 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141849113 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248001928 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.128639193 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192471123 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177807248 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200360185 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174646301 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.167250738 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181345267 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172606098 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179022066 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158605713 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157193383 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200581792 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137428301 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128457955 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204007647 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192810552 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.168116211 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172950764 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177925629 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199597659 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.153669192 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136457366 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319795136 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167552522 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227679372 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13691343 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169957297 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149583267 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19271012 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.169668922 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204103887 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.133498959 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159850845 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.148654588 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.185396062 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144426816 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198688674 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187642926 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194176298 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188595282 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.165602204 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257615371 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17364359 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175241628 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11788622 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.161701289 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144686625 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166146058 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14608373 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211411661 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248226188 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.166330369 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.179063133 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138884002 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129462343 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161362 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166055963 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183029071 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171935202 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179389292 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104858865 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143546118 seconds)
  done (took 87.254627354 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173448802 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.169649925 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.189932881 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.240870365 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.216530538 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.313615369 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.24615756 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267726504 seconds)
  done (took 2.945377831 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122564678 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.163814895 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146255121 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146662296 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.113216911 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.493531615 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16457463 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122607421 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165054858 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.155035497 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138793767 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.58533882 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121933312 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.150168258 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12435478 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138566852 seconds)
  done (took 4.173992238 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.350581593 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.555326135 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.189763098 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.294213531 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.274467165 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.217562862 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.796639224 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.214552493 seconds)
  done (took 13.018366651 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.179175647 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.17421126 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.463525634 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.319677174 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.188257459 seconds)
  done (took 2.45686976 seconds)
done (took 130.943626983 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128981276 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127546527 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126693765 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157547479 seconds)
  done (took 1.653398452 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.197911131 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093410761 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095018717 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122292716 seconds)
  done (took 1.635767229 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.477444723 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09345085 seconds)
  done (took 1.730002747 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154356779 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147448778 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.170205722 seconds)
  done (took 1.618471525 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141934949 seconds)
  done (took 1.272715336 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.123195555 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.135226623 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.280585541 seconds)
  done (took 1.678200908 seconds)
done (took 10.729026994 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123064113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.943141024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.437756295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137966636 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71967811 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431647279 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.443497598 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.180671928 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181120588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.143709476 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136126179 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.69658921 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.45834823 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.889859877 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.410116538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.916288866 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700300087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115804671 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149893433 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116154785 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.423132089 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.142157114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114969997 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115792169 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723198809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424956554 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114228143 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.931421097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113645946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118195407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.432028891 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115393445 seconds)
  done (took 21.228585493 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117820429 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173736549 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150821624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116653173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11819429 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144265203 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125367408 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.127431568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207629406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11467408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.166506439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113443476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120195173 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.144672517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138760103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113566397 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.146380416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117207293 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122307453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144705063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136057944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113543698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.14514192 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116897617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114469934 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163556553 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115016791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125918946 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.142552066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118091763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119010525 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143689641 seconds)
  done (took 5.422278141 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166771557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182859636 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.152000474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153369364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193462451 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117208131 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.233926745 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153567224 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.211752206 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114792042 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13660543 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.142793298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155945878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115731756 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169037627 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115375077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117922678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145945864 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122331478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116300823 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.165570845 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113843318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116143959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143979762 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115033553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.165226388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114873337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126398406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.142648726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118727598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120567427 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.144069647 seconds)
  done (took 5.743352071 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130423988 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129413593 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136978522 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167436865 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123671733 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12756727 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.159070437 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125061784 seconds)
  done (took 2.240201705 seconds)
done (took 35.778253926 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.14071552 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132946305 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135824535 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.159305663 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.259025328 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.121361173 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.133218058 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.121167503 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.159959587 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135511367 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115724143 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153270748 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134795982 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.126013999 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.259970699 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.129680108 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.264071779 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.260564978 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.123047561 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129465206 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.152855611 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234371983 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157022203 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122794036 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.256517048 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.118209096 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.254396875 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125269841 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.126106888 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14465834 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.231389411 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.157858971 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122615872 seconds)
  done (took 6.530045965 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.241362396 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.156479535 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122900824 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.123764552 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.1243633 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150929039 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.24928624 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155209961 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.123027376 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121975916 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.153763478 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.230512762 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160232178 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118820766 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123946906 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111147514 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.280024995 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.155861091 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.114991299 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095472616 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.118702315 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.153154323 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262061049 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.150304938 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.12232198 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.1226649 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.154881707 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.128450063 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124408349 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124138062 seconds)
  done (took 5.733213351 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129144565 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136654459 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.170589012 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191605231 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.153364474 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165750267 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143062955 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13796943 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174987756 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117018303 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.131922292 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183109179 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133946363 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127863746 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147227452 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135846814 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138546808 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147842892 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124991035 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134807226 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16851242 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134372325 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141058301 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155817929 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115886315 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124353872 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.157368126 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128329238 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125082666 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.161539606 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118466321 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.120999465 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.148836524 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.1521037 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.117862614 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.161036889 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143969984 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132055341 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.164112629 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.152263567 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.120215357 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.148969084 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145302556 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.173770212 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.150521515 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130597474 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128665523 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.162831391 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115908525 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13631035 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.189305777 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.123377002 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.138131392 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.14901469 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.116496588 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124640081 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.148098093 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.119912595 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132558896 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.150111058 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.143109469 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12526118 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158247986 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118855198 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127994768 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.14560008 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.117025635 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120806703 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143588441 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155197249 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.154903498 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115436817 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.157757212 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131674356 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12872426 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.159872076 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11635928 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127807733 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.158323486 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123054824 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130353937 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149159471 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121511681 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.134349766 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.168550065 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.13191901 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.129038896 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.161099886 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121055688 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.118882646 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164982083 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118907858 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122437148 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.158822222 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119593351 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121998964 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128757016 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.159162488 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.115253832 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.143387507 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.152026176 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117252899 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142877456 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.151066906 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124365116 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.126083771 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.188344412 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118898989 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128941327 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.160929264 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117310658 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125407009 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.150155896 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117405712 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135856312 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.162320153 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12458372 seconds)
  done (took 17.515614661 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.360511766 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.346476601 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191687644 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.437970848 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13053727 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277044239 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.345543103 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.34731323 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.117032759 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183100449 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179591343 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.316051294 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14952034 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.146366448 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.349495352 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.406638372 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.180276346 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.154724285 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.185252678 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132424661 seconds)
  done (took 6.110724136 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137510224 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154004709 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170892332 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146521495 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.128229435 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164434946 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11750363 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139246408 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.159124425 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127335815 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.120259636 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163317346 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130850718 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134247798 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162904445 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149326252 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125580914 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.1527593 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.141250015 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121858722 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134711334 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145046867 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126177568 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.170490815 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.137132173 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127987155 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146590569 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123615371 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123407802 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.157471701 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122655681 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135736046 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.154865993 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108241907 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129199949 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.162032267 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124486989 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120430817 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12259869 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151612576 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.133471163 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.130268451 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.156425688 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101734026 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136405684 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11180933 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.161355435 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130292476 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108404009 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.167568306 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.13107861 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.13199786 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.155018177 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.140673126 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12412996 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.163987893 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130284934 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.133618319 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.151580309 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116918429 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115499813 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120778977 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.155863256 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.133817436 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130119549 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.16814729 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.134307582 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.117660214 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.153072049 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122584513 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.121346576 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.161921638 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139420453 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126251809 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.156387206 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.131519797 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125031891 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125706837 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128379943 seconds)
  done (took 12.042618199 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143579222 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129046508 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.165545911 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.154435979 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131764312 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.153420208 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.1288168 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13741105 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.132061347 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.169485938 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133486737 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.131680921 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169082465 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130511569 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127563917 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163257912 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132961252 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.186180869 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136347925 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145177121 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.164181073 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123708539 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130960858 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.160058761 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147331585 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12963981 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.175635183 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132612325 seconds)
  done (took 5.254420831 seconds)
done (took 54.339822126 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.318620126 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.584273461 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.279480722 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.279808627 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.315711167 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.283805993 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.282666462 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.279581223 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.839031416 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.252363167 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.280357858 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.279240468 seconds)
done (took 29.453556839 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.434266536 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.503958639 seconds)
    (2/2) benchmarking "String"...
    done (took 1.65017835 seconds)
  done (took 4.33955547 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.279744931 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.269561513 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.605047122 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.269889908 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.27134079 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.27020538 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.274591483 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.283143198 seconds)
  done (took 16.4152644 seconds)
done (took 26.641603377 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.325888369 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.590115963 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.537709369 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.250985269 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.2733606 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.27211107 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.273742143 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.337841565 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.284889021 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.255407479 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.788036872 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.57469438 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.271132314 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.696925007 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.253032736 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.284605047 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.288673581 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.632491185 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.27262154 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.31042914 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.251086887 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.253300507 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.313973726 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.278145007 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.282481802 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.28553659 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.289504622 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.273843412 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.578335066 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.280232353 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.312360321 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.271700053 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.291764756 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.287324666 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.285414647 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.275033229 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.574578793 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.285825872 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.259249518 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.298164173 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.573262564 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.296945861 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.272065183 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.280134785 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.257397327 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.295790827 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.263315887 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.474005668 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.301388676 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.27479074 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.361956224 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.666681147 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.289305644 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.277632162 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.283601428 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.608016005 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.30294432 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.381147421 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.305590117 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.277693832 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.273266942 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.27552107 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.316450298 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.276257267 seconds)
  done (took 149.360426843 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.275141832 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.274318683 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.276390943 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.276927813 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.280703783 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.27603566 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.274833972 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.274487978 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.27624316 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.275544467 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.276335559 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.277496949 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.279414721 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.287478247 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.286427275 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.300117634 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.279800734 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.295829239 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.287425936 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.277209762 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.297608656 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.278238105 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.277529706 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.277752219 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.319541194 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.361731195 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.287113536 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.306282245 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.286468482 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.276059546 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.282889604 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.283755986 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.010059519 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.239840695 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.287663117 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.314118157 seconds)
  done (took 83.170531813 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.275527915 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.276882696 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.27815709 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.311182448 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.276353369 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.888088143 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.893779579 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.340072645 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.751474611 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.783905341 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537560538 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.278670004 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.372148651 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.292127302 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.281562621 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.373527038 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.303789958 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.280776557 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.27887003 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894157141 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.296392229 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.350517409 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.466318797 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.295609239 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314154475 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.672296387 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.279363179 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313267141 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.615015988 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332362307 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.280211471 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.65732004 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.468208981 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.393702789 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.282960704 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313513611 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.278755629 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.565110061 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28095109 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.279269033 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.281029591 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.282534742 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.915629774 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.282241967 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.894981547 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.285260786 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.263837043 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.278916404 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278765547 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.359481329 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.988369331 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.280967364 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.277649134 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.28287899 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.280833338 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.281613674 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.31533123 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.414672146 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.173910035 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.283132653 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.284700729 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315380888 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.282044456 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.27929208 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.2808105 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.373977236 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.341678576 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.402422473 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.310483967 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.897703402 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.286676609 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.281891363 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376780455 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.403621997 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.28389078 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.282192729 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2826145 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.283073986 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.394037748 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.283879745 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.000764413 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.465492435 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.301081792 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.798590519 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.384610571 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.281010595 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.6679385 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.285715034 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.281563598 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.027132291 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.381965612 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.286084564 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.282557439 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.282817808 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.001706642 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.898356768 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.605374608 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.286687154 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.912035323 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.288394285 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.188457624 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.879529373 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.932786844 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.28548337 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.396196193 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.466945972 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.298316986 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.286118438 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.283305999 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.798780906 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.287946323 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.337159844 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.283931777 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.686399228 seconds)
  done (took 387.64541721 seconds)
done (took 621.350592574 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.264015697 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.269264479 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.26850691 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.264329144 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.2658579 seconds)
  done (took 12.51009678 seconds)
done (took 13.693231381 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.563864581 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.564046727 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.37790483 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.564411089 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.35027925 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.582161949 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.553186826 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.33507166 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.465810213 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.401628937 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.470472188 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.371195387 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.350953707 seconds)
  done (took 20.121154793 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.672348139 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.297890814 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.41817734 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.649735976 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.362243132 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.659102949 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.707941561 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.298322643 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.525538827 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.36441289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339725184 seconds)
  done (took 19.480682146 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.662188467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.297987265 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.422880172 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.637114468 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361431157 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.663745788 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.711253226 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.29703491 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.516911474 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.341771953 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.336392498 seconds)
  done (took 19.428176028 seconds)
done (took 60.210203408 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.354384661 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.417988698 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.344942049 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.326985435 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.328497849 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.327321791 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.332768364 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.328584382 seconds)
  done (took 11.940015836 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.326016737 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.324305137 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.322730635 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.327553665 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.32172946 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.323350127 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.325756089 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.327811588 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.328679646 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.32770543 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.326642096 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.328971372 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.324253035 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.328263322 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.325041962 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.326299525 seconds)
  done (took 22.394726383 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.328490795 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.328351322 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.326762502 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.327043823 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.325163067 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.328063646 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.329000706 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.327139296 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.327725265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.328308719 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.32979082 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.327158223 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.325325588 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.326603893 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.328424516 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.330674103 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.328646331 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.327103817 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.328995538 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.328276033 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.329515786 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.325639874 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.336725711 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.324669568 seconds)
  done (took 33.054273592 seconds)
done (took 68.572888355 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.294085722 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.295286852 seconds)
  done (took 5.768494514 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.424193258 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.425134229 seconds)
  done (took 4.029669835 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.327211163 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.32773162 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.327407626 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.328697595 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.324801848 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.330913449 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.328274636 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.329643176 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.327351195 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.329158827 seconds)
  done (took 14.464555863 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.329110147 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.329963328 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.329945449 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.329580179 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.329718465 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.326185404 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.3292455 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.326221512 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.327830724 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.327830585 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.330115862 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.328294262 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.329981976 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.328204236 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.329230414 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.328660719 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.327634331 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.328697944 seconds)
  done (took 25.100435817 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.352275383 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.354343524 seconds)
  done (took 3.893207788 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.512716316 seconds)
    (2/7) benchmarking "second"...
    done (took 1.409731154 seconds)
    (3/7) benchmarking "month"...
    done (took 1.494788478 seconds)
    (4/7) benchmarking "year"...
    done (took 1.481828171 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.409766144 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.357432883 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.412441484 seconds)
  done (took 11.265043132 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.32634569 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.703488132 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.892106741 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.531067114 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.316549192 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.34785897 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.273079558 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.364632192 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.358668375 seconds)
  done (took 15.296619913 seconds)
done (took 81.002712917 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.294247404 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.372136149 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.320298064 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.31298617 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.730024188 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.337590625 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.298217183 seconds)
done (took 16.858282258 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.278613782 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.282793783 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.289399511 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.303515203 seconds)
  done (took 10.340297115 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.301627044 seconds)
    (2/2) benchmarking "read"...
    done (took 1.708979543 seconds)
  done (took 5.192862026 seconds)
done (took 16.727845908 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336349615 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.337284231 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.330442579 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.333362015 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.335724187 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.330508789 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.335589113 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.334437571 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.334127056 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.333732802 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.335217139 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.334540028 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335103228 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.336604606 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334245577 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336441945 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.33565714 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.33388338 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335003704 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.338501635 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33164797 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.334239012 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.335736897 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.333521951 seconds)
  done (took 33.22562562 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.333239094 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.333933596 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.33223345 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.334298168 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.334224834 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.33326738 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.335192136 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.334378415 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.333964256 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.333543462 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.333894764 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.332694682 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.33507145 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.334360535 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335342783 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.335446847 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.333590047 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335471431 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337233527 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.333963628 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.337571628 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335289216 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.333756967 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.334628586 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.332771856 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.334811361 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.335893621 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.336499495 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.334908511 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.33654601 seconds)
  done (took 41.233758987 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.340511109 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.341416671 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.33745213 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.337518549 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.336803723 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.33754034 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.335277971 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.335108466 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.337323272 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.337642447 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.335214066 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.335153094 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.33420465 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.335858771 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.334221831 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.335215742 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.336446975 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.334996022 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.335895787 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.338910207 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.33585067 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.335481349 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.336634568 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.338120651 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.33670811 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.337203006 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.338355806 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.336715514 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.335552866 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.337555495 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.339304949 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.335934269 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.337729819 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.337872923 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.337624917 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.33875048 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.342576594 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.343466163 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.334364796 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.338285337 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.33779966 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.340305845 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.338033768 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.3389702 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.339809203 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.33901427 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.344200684 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.336616619 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.337374816 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.337182752 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.340570752 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.3397226 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.337652644 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.33907566 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.334465577 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.337984041 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.339164708 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.336391521 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.338735603 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.33966994 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.33744787 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.338500377 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.339022372 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.337675692 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.338190492 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.33941069 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.338897286 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.33953333 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.339026282 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.339438835 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.339930308 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.339543597 seconds)
  done (took 97.524870588 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.345247186 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.346863243 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.339387502 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.337973076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340117273 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.339562663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.341023325 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342421058 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339184822 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.341286277 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340472625 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.337535102 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338921869 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.339298314 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.338986682 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.340707153 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.340441686 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340971991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.341239203 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.340734112 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.348270056 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.341235922 seconds)
  done (took 30.70620866 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.34312408 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.347844234 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.341339077 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.342960792 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.347178996 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.343893312 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.341249261 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.340915559 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341511026 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341057057 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341405356 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342342836 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.342682264 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341480156 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.343202372 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.344152074 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.344271223 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.344847065 seconds)
  done (took 25.376643357 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.342632607 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.344126163 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.345377858 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.343363427 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.344833097 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.342636239 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342643851 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.343306087 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.343295122 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.342216563 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.344966983 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342118435 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.344602691 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343606544 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343049001 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.343617439 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.344773731 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343409452 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343353789 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344204315 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.343879972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346072849 seconds)
  done (took 30.763304608 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347298354 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.343972931 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.344204525 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.343998773 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.344345534 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.345140957 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.344825833 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.342630861 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.347524221 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.345146963 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346569281 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.345148989 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.347039453 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.347677383 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.345489954 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34390323 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.345052747 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34411869 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347171662 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.345105966 seconds)
  done (took 28.10953453 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.34800871 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.345736075 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.344402805 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347078354 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.348106697 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.34815363 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.346517529 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.346727192 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.347221948 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.346335592 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.347716773 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.348392488 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350077269 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.347563262 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.349190564 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347936913 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.347672144 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.347930628 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.348552704 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349573155 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.348578685 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.348759155 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.347961358 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.349703967 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.347577999 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34948292 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349564005 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.351227834 seconds)
  done (took 38.950617744 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348350862 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.349761587 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.347709998 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.349721148 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.347892075 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.349719123 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.350065466 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.349312996 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.34820692 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.347108525 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.349358462 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.348324533 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.350443237 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.351693047 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.348380964 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.34830358 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349121631 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.349149148 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351585422 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34823744 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.350457694 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349522101 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.349104031 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.350417187 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350674622 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.351157504 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349026926 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.349405465 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348830183 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.350610787 seconds)
  done (took 41.691765274 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.37646554 seconds)
    (2/2) benchmarking "in"...
    done (took 1.374882658 seconds)
  done (took 3.959048563 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.348359941 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.353739397 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.350489193 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.350844196 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.349377738 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.350145434 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.350264373 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351570126 seconds)
  done (took 12.012260148 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.341710214 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.352107695 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.353774736 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.349751949 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.353135619 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.342128773 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.356937638 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.356856413 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.343333465 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.34618683 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.350913898 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.35124264 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.347915402 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.345047929 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.34726078 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.34780617 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.355183156 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.354488863 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.354442069 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.35584546 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.355114432 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.347780189 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350206126 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.355021683 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.346634513 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.367270587 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.360947855 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.356511258 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.347136392 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.358177112 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.348339687 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.355888972 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.352887123 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.354356794 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.35539268 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.354730305 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363243468 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362540796 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.367060155 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361289798 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.355628464 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.353950876 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.351235657 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.349706342 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.354719969 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.357911226 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.355135594 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.353707898 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.345304456 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.35313974 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.358626192 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344982556 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.354259923 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358983848 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.354406381 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.366073577 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.362427164 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.348185198 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.355787562 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.367005539 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.374162734 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.365325926 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.355968242 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.360438782 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365043418 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.375508855 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.368039609 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.363241443 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.356027537 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.357474788 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.366034186 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.376574633 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.373089553 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.360208096 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356723016 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.362720217 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.356760033 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.36718992 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.367905444 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.364270693 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.362196128 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356572159 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.367496593 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.368973457 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.353575759 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.362365773 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.357404248 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.357833702 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.348152443 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370696092 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.365590415 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.357320509 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.351264222 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.353074438 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.356125943 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.360736027 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.34803532 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.355907619 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.360275982 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.358366871 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360305944 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.355989474 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.367058967 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.364487342 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.357544769 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.369935031 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.365514707 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352590787 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.36938126 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.366095018 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360886744 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.354044883 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.364930415 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.364458358 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.355108496 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.366203063 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.366152917 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.36159249 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.364983704 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.35964776 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.369120822 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.381906037 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.368975133 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.360302731 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.362315767 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.37044648 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.359991239 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.361676649 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.367212688 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.360328642 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.360266553 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.363442097 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.368772035 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.355356013 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.364071576 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.354371879 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.365269005 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.362420109 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.360947855 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.365352954 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.36316783 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.360163188 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.369192968 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.370513177 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.367331488 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.364305894 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.377560373 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.361287982 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.367207869 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.364575481 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.367873666 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.364336275 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.3600747 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.367558962 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.355804883 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.364574573 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.357756947 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.364976999 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.363388598 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.364414776 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.363218954 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.35570941 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.360239245 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.368190187 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.369037222 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.364259869 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.366829399 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.362495468 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.365992142 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.356555677 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.367069653 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.35646167 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.362653589 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.371281083 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.36461585 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.364648745 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.36852766 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.370093502 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.364780466 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371438785 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.361325417 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.372567769 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.370658029 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.373881413 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.372151025 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.365545158 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.36368249 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.359997944 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.363323785 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.365985716 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.362009932 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.373259127 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.377189445 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.379527104 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.362400484 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.368840619 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.357756318 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.369682765 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.373446581 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.371584473 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.366704872 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.365551234 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.359038604 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372803693 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.366176453 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.368336294 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.360498776 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.37209187 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.366455539 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.364420783 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.365735475 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.361120014 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362304941 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.37218846 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.367850619 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.366579856 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.360542706 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.373128524 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.359816985 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.363131373 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.371451984 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.368070968 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.379074602 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.376435858 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372014067 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.37860918 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.370678772 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.36429409 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.370962816 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.371756353 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.367176022 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.380702393 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.370511012 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.363659164 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.383836101 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.371899457 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.361757805 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.373802772 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.378339173 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.369903603 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.364747151 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.375413451 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.370312454 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.370794708 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.370495927 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364548802 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372369908 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.380441256 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.378151719 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.364900104 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.37432274 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.36422383 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.373815274 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.373079217 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.374748702 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.373540798 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.379338742 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.37966469 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.372680422 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.36450578 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.373943642 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.371161723 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.370823552 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365273475 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.377989408 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.379747103 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.370722213 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.375174385 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.369504391 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.373539401 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.363095894 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.371834365 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.365804269 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.390161626 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.392254001 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.382486138 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.375697566 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.374226848 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.381429231 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.374994823 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.366118554 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.367220231 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.370387813 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.365329068 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.368548891 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.375413591 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.365638955 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.377146563 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.37767177 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.374322391 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.37511502 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.371448562 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.364889697 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.376693433 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.373053724 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.371574276 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.363028567 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.375175573 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.373368569 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.383130075 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.37273895 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.367597863 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.388435289 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.380647916 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.370252809 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.371473076 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.369080174 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.365295684 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.373175947 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.376019185 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.368892092 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.379291808 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.368315272 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.373111203 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.366984377 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.387142876 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.383987867 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.370577571 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.380822799 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.373344404 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.364473234 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.36756413 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.375759655 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386018082 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.38504219 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.365561919 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.377485991 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.37427015 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.377311179 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.373065108 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.372583832 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.372366835 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.373439458 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.387866362 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.378515522 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.372035019 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.383420545 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.38342292 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.373486182 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.372332613 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.364415126 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.383070291 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.383848463 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.375312671 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.370838149 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.369647774 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.377265922 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.374039255 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.375950251 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.375101051 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.376841287 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386358908 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.381282005 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.377528455 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.376416722 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.388306362 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.385125022 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.390335252 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.38784108 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.371988086 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.380950608 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.376174372 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.37074973 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.369219019 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.372308867 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.379099535 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.366425577 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.380954659 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.375450956 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.379882595 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.38537673 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.383623924 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.368806467 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.386736191 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.396552104 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.367967463 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.382215643 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.375255401 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.370858264 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.379970176 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.377133573 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.368544771 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.372653534 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.381622271 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.38406071 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.372727914 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.380554259 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.373330296 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382461974 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.377672258 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.375947738 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.37766716 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.378268843 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.370220612 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.381481472 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.385320228 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.38937682 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.377538093 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.382577072 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.373981705 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.392293531 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.391684027 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.37881102 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.383305097 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.37985445 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.372463356 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.381755389 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.384092977 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.374223216 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382417415 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.370691552 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.37594683 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.377063731 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.389786718 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.382915592 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.38516951 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.370825229 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.373310042 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.380927491 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.378984855 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.379446506 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.382115212 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.386398857 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.372098016 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.373938893 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.383770031 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.380127948 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.385732292 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.375042175 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.381094062 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.37970436 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.384090463 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.381434818 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.381463174 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.372794264 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.375630658 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.396188929 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.390815619 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.38197532 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.378323738 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.383395892 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.376687217 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.382857275 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.381807142 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.375338023 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.375688627 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.385815962 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.375569547 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.377345401 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.376733941 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.384620209 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.393118217 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.385665663 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.375373921 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.39531724 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.396568097 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.391231594 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.376852602 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.380254919 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.377447928 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.383425504 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.382198114 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.377622112 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.399092021 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.390822185 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.388722267 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.390454331 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.384014056 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.376738062 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.387051244 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.384141377 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.388274655 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.39166049 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.388184839 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.390960122 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.384378069 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.38525332 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.376617794 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.377694328 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.382716685 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.385216025 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.386374413 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.393523226 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.389827016 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.387483911 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.39050315 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.385861428 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.383644596 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.384005815 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.376038741 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389466007 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.377433751 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.393592439 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.387715435 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.377962379 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.387816705 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38659134 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.382382984 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.387900933 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.392169843 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.384864095 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.379729783 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.387341156 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.400020841 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.399781704 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.385800666 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.381460659 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.386334463 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.389459931 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.389098432 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.385708476 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.383213954 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.408803103 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.400649691 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.381626043 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.384483739 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.398240167 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.401690886 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.385691365 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.387188133 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.391799194 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.389577613 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.394278839 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.387985582 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.400862917 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.395235805 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.385390279 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.39273863 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.386634641 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.388099143 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.399231354 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.402848016 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.38845673 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.391302554 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.409734227 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.398858332 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.398197914 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.422015048 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.398816148 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.394061353 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.394702846 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.382416019 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.391517455 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.395603658 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.395803405 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.388477124 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.389782178 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.389042559 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.382840165 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.401535838 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.405720658 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.402661679 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.387749238 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.381885224 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.384686768 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.391685214 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.391405219 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.393759849 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.390021105 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.389405595 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.39081974 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.384790133 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.411469224 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.414731859 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.396538764 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.389260394 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.390250325 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.398883475 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.397769507 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.395028726 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.398686313 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.390433797 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.391920299 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.399441438 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.403078562 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.392600414 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.385967308 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.38547353 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.387065003 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.397958986 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.408211338 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.417575867 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.40272286 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.395511678 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394217938 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.390506013 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.38582141 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398263983 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392566541 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.38686428 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.389479417 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.39633364 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.393675271 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.39340303 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.389377168 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.401601559 seconds)
  done (took 820.335547858 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.392694001 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395044998 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395126923 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.393509887 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394188745 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.393845195 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395461322 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.395447005 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.393925094 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.394320535 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.395125386 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.39665016 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.395610154 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.395782383 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395896573 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.393397932 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393981455 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.394995341 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.394272205 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.396355221 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.394825557 seconds)
  done (took 30.535842722 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.396007202 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.395644516 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.393901976 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.394913976 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.392983075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.394597385 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.394226599 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394716185 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.395405938 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394528522 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.393559055 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39404983 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.39496496 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.39435364 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395651639 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.395586827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.395550789 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.397374135 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.3968659 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.396368351 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.395594021 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.396906268 seconds)
  done (took 31.940182268 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.396172027 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.394681614 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.38954828 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.398055088 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.396370935 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.395467748 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.397015151 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.396312408 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.397337818 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.387881587 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.38958306 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.39232936 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.397092954 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.401924295 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.399830104 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.401562028 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.39778578 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.3977283 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.397101475 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.398412326 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.409211185 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.412508393 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.398161456 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.388294 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.400247127 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.398439076 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.397343196 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.398125139 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.389411251 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.39937865 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.396913322 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.389779803 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.409545725 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.399750555 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.391055454 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.400593819 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.40018846 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.397985526 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.398072898 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.407703382 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.419843892 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.399755374 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.410680506 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.413735154 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.396673488 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.397836624 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.411120087 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.398743583 seconds)
  done (took 68.402414792 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.403701266 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.400405387 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.398915812 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.400592143 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.399418599 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.399560028 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.398354567 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.400529914 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.39835799 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.398285773 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.398715088 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.399294561 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.400250479 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.399743641 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.400418447 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.401447349 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.401529902 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.399088809 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.399014987 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.399407145 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.3994751 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.400357406 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.400400638 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.397620395 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.401423603 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.400216885 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.398911482 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.400259279 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.400673647 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.399606054 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.401474797 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.400195025 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.399815438 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.40024126 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.400974872 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.402370231 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.400059952 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.400687196 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.399693216 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.403097629 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.400022656 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.401897686 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.402712314 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.403064593 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.401799838 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.400857818 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.401172035 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.400138035 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.403305616 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.404178841 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.403342562 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.403070391 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.402879514 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.401602536 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.402580314 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.403321539 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.404613813 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.403073813 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.404872924 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.402832022 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.404357426 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.403722708 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.401925203 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.406707585 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.40447874 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.410355814 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.404531819 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.404171439 seconds)
  done (took 96.549007875 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403934955 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.408675852 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.405619947 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.404086442 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.405696493 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.403930347 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.405758162 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.405555273 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.405194823 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.405946035 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.406770931 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.403199177 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.402670898 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.403719356 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.405243642 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.404137007 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.4051694 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.408203725 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.405957001 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.406189153 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.406634461 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.405645159 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.404558778 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.40610667 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.404543133 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.405277934 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.406288118 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.405065337 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.406594861 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.40568441 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.408359052 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.405598226 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.407722867 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.406949375 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.405511483 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.407231604 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.406662886 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.405525731 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.406539617 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.405366073 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.407093458 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.405566309 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.404120734 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.404842962 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.405105286 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.407942728 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.407296836 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.405726595 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.406923674 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.406992118 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.407850887 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.4059878 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.408900671 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.40773516 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.40604116 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.408721039 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407296905 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.40712314 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.406878556 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.40812229 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.407871909 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.405804607 seconds)
  done (took 88.43400603 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.403904505 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.408239274 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.406249147 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.40559648 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.408467306 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.404586016 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.408224747 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.407044919 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.407791591 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.405933184 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.408799471 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.408648195 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.409793312 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.409941935 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.408327413 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.407403763 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.410042855 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.407720843 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.407996226 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.408724811 seconds)
  done (took 29.410536215 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.407874982 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.407883852 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.410047815 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.409984957 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.410537681 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.409321395 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.409889414 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.407153941 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.409400735 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.407991547 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.408067116 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.408780404 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.409384182 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.408578843 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.40976363 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.409364068 seconds)
  done (took 23.799247307 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.407788169 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.407444131 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.410259293 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.411379967 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.407445877 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.410186309 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.407668601 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.409024849 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.409691554 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.412841675 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.409070176 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.410583776 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.409350728 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.4124477 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.408467865 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.410259014 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.410021135 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.409843598 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.41054676 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.410767669 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.410077007 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.409458004 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.408967299 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.410020156 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.413922888 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.410744201 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.409537553 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.411255649 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.410843376 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.409375033 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.408347179 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.410931795 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.410484811 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.411163319 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.413597427 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.409997668 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.411583624 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.410351205 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.412492679 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.412588081 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.412141237 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.411058068 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.413403338 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.410801192 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.411609046 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.41084589 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.411040258 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.412613154 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.414196456 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.411648297 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.413590025 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.413714202 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.410964271 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.413148278 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.410440113 seconds)
  done (took 78.850995858 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.412573065 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.414662297 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.413606437 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.41533019 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.4126413 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.413833281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.412791738 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.41437937 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.411268081 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.412512653 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.415683307 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.416223111 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.412878202 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.414106291 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.415253992 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.4153561 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.415290869 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.413393631 seconds)
  done (took 26.710152109 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.413936717 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.41423005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.415544183 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.417720438 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.414107967 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.41416831 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.41679965 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.41554586 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.415284304 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.414109434 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415298622 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.415504373 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.414506621 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.416510367 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.415297993 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413575916 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.415177028 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.413854094 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.41682591 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.41662819 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.416308666 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.416655009 seconds)
  done (took 32.398936067 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.408942855 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.406319198 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.407104353 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.429488555 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.425495309 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.407046943 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.407807026 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.407246201 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.436706791 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.457207302 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.45121059 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.424892858 seconds)
  done (took 18.333276879 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417806622 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416437314 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.420067804 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418390496 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419622844 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415965256 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418530387 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418675377 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418380996 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416618691 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419685982 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417293358 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418034653 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418415778 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422067289 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415868597 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418644089 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419092261 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420372032 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419358914 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419534426 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419970514 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419637232 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419469613 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418241174 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41775026 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420138901 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419380775 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420258121 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418127752 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419192273 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419248635 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419840121 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419599657 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417637048 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418717213 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41887212 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421554375 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419160845 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41872301 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.420084705 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421638045 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419924349 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42004287 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418931835 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418209467 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41892101 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418587377 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417698717 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419682419 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420888228 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419247937 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419377283 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420740026 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422647042 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421259924 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422699004 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419858629 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420815245 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421413715 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421528674 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421585943 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421905397 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421728699 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422204877 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421009264 seconds)
  done (took 94.95522273 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422558623 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.420101606 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421879696 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422307404 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422783861 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421494381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421277245 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422939118 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422802997 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422421175 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423886655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42208894 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423576909 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422505614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42261687 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423306204 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.4232159 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423662744 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424508452 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422822972 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423421931 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422796782 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421197836 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422523423 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424726007 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424517251 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422781347 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424775734 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423069861 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423675943 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423726439 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422064356 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423144941 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.423882953 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423189708 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422210464 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421620654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424119506 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42338687 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423603937 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422108496 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422500515 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424065239 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422478515 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424274414 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422555131 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424366535 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423939385 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424246827 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424454604 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425150922 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425250655 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42454002 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42381842 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422034115 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423892172 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425087925 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42228275 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426526655 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424194166 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424676001 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425164052 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423355512 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423733284 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424993988 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42419235 seconds)
  done (took 95.211125873 seconds)
done (took 1920.615057243 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.63647982 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.591712605 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.414512558 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.409680798 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.412992043 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.395855436 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.409350658 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.416468603 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.414269929 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.41519805 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.41161198 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.669025788 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.434346993 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.415814609 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.416925853 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.567028461 seconds)
  done (took 28.700703491 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.451870939 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.435475349 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.566890384 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.425468211 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.452743048 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.675658337 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.495502955 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.422574826 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.630034378 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.453448235 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.398085818 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.456459442 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.434716873 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.388839182 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.467983882 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.677230534 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.776639893 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.396392307 seconds)
  done (took 31.277142017 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.995624025 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.404458556 seconds)
  done (took 5.671112507 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.446723917 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.422348749 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.423347061 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.421787575 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.402756104 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.393786877 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.422154382 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.397685279 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.39374176 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.577720043 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.427678967 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.443164875 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.420846743 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.424525703 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.430090656 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.482044888 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.634888906 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.432549978 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.429119653 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.434153045 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.419742553 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.581418698 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.481431612 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.435645343 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.576448374 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.400524466 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.432349672 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.437395425 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.609688425 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.435949292 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.424682776 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.425038547 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.426537062 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.396213024 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.069067093 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.401862556 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.456947494 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.438324594 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.435231254 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.64304525 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.429702129 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.438687769 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.396598827 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.065280787 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.603861636 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.604670887 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.400853838 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.445517967 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.427839252 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.508276228 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.426182897 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.429345659 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.524096396 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.345743058 seconds)
  done (took 91.115389745 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.396505589 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.395388897 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.665922461 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.426536154 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.396661475 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.400833374 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.402136613 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.794563611 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.424946566 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.399091113 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.836093123 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.173768396 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.404244003 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.46933573 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.435155616 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.456450713 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.395477316 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.419138775 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.422543048 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.401709743 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.095446146 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404713616 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.400138384 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.479989669 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.471476435 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104265563 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.401018453 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.401219736 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.417960343 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.39543576 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.133180413 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.410547668 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.44738245 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.400221215 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.798919541 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.947761723 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906277538 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.408313516 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.435457051 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.401585006 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.423604776 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103322287 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.925883103 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.40379681 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.399855736 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.123410945 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.404395908 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.413669504 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.403999908 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.766966525 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.40055785 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.399352041 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.403311204 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.404259578 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.400402663 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.452956203 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.465665361 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.109947012 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.414136602 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.396326237 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.409105306 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.401969482 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.400786022 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.402359756 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.408419744 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.923077858 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.667511769 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.408303458 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.927461586 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.124821041 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.402135215 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.203162358 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.406388689 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.409509198 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.438582099 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.401691724 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.404898696 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100855842 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.398659634 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.400494294 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904706667 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.402521787 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.827459134 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.425185354 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.403994809 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.119159845 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.407981001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.45488494 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.400978016 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.406023978 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.40630893 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.403743032 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.804648622 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.467576289 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.403463038 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.4038714 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.421837861 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.401833222 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.406561267 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.407055394 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.197346254 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.408659719 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.402107977 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.428797405 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.403516886 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.408723413 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.409115573 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.40767796 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.784276339 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.411401687 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.412823446 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.408710773 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.405061775 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.407127191 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.484254946 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.416569314 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.858199705 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.41061737 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.408598119 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.413453136 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.405617852 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.455478033 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.406163381 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.416133225 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.405126588 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.880609329 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.426827532 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.408716639 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414875873 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.407932391 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.426302465 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414152735 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.464216853 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.408861281 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.350966488 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.451405657 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.409681148 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.406037877 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.412662742 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.422599271 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.415376216 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.408805687 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817390954 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.818373482 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.692541 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.409320836 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.408868125 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.377522589 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.448776202 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.677396825 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.429379392 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.410433966 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.804960323 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.648247379 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.410303922 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.405107591 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.412974513 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.792025299 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.411956157 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835192311 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.167132706 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.411799503 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.413493574 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.356782033 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.337133375 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.414007955 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.413102183 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.836843708 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.42895364 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.415248825 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.411476488 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.409498094 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.409084423 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.412751371 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.408639674 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.412789434 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.414417364 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.753477101 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.695577908 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.427909233 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.414424418 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109362581 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.447297732 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.413350888 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.411124208 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.410208658 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.41010243 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.47122829 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.412866957 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.445676716 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.410724856 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.421904419 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.190245701 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.413726634 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.416176387 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.698849763 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.305547374 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.415078063 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.414434685 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.414399694 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.473091236 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.140241856 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.464439158 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.872996 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.413834329 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.487506407 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.415445987 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.425962338 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.137225761 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.434738315 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.415596215 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.304930466 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.41427433 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.843217493 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.411627763 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.41508358 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.238239933 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.413954806 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.417593117 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.409798271 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.416867675 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.808439676 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.415772145 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.446257307 seconds)
  done (took 522.750080662 seconds)
done (took 680.786212566 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.419063137 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.412595973 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.417213739 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.413919186 seconds)
  done (took 10.951720047 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.451499454 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.443984741 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.452728242 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.44898419 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.453603911 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.443288912 seconds)
  done (took 9.986549966 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.416995974 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.416402742 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.418008114 seconds)
  done (took 8.541463827 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.748016001 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.437681216 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.919238194 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.426528471 seconds)
  done (took 9.820316676 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.455243505 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.454431321 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.455212426 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.456569442 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.454932572 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.45541741 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.454312381 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.455902877 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.458147785 seconds)
  done (took 14.389158286 seconds)
done (took 54.979706359 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.393342547 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.401583958 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.478736437 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.390948039 seconds)
    (5/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.664724893 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.397543152 seconds)
    (7/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.56816862 seconds)
    (8/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.395714147 seconds)
    (9/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.620140592 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.558399431 seconds)
    (11/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.392911976 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.545003732 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.395325551 seconds)
    (14/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.395022161 seconds)
    (15/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.661200143 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.422006458 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.854693883 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.626859184 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.417412926 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.586897538 seconds)
    (21/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.435110848 seconds)
    (22/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.666282144 seconds)
    (23/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.582036375 seconds)
    (24/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.499463793 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.905844102 seconds)
    (26/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.774444223 seconds)
    (27/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.80468012 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.603772799 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.578636012 seconds)
    (30/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.60316015 seconds)
    (31/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.478513015 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.771535822 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.484516362 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.659197025 seconds)
    (35/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.824432423 seconds)
    (36/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.728282067 seconds)
    (37/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.436966391 seconds)
    (38/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.488066465 seconds)
    (39/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.688904085 seconds)
    (40/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.689437044 seconds)
    (41/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.587946903 seconds)
    (42/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.398358408 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.40506415 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.611984876 seconds)
    (45/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.556733017 seconds)
    (46/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.774917188 seconds)
    (47/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582736953 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.486323645 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.396929037 seconds)
    (50/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.745855531 seconds)
    (51/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.564424429 seconds)
    (52/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.555519596 seconds)
    (53/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.39978359 seconds)
    (54/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.636007973 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.423626776 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.393313354 seconds)
    (57/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.777906953 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.625425622 seconds)
    (59/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.419133257 seconds)
    (60/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.660585959 seconds)
    (61/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.686624256 seconds)
    (62/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.503686118 seconds)
    (63/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.67095257 seconds)
    (64/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.399267672 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.671316652 seconds)
    (66/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.671875663 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.609628432 seconds)
    (68/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.736052469 seconds)
    (69/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.907501017 seconds)
    (70/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.401932118 seconds)
    (71/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.598857648 seconds)
    (72/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.990645598 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.906406744 seconds)
    (74/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.903688451 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.643723898 seconds)
    (76/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.582005016 seconds)
    (77/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.583030007 seconds)
    (78/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.735911319 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.562218911 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.747527741 seconds)
    (81/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.780747468 seconds)
    (82/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.698334893 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.772002012 seconds)
    (84/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.81980865 seconds)
    (85/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.815361506 seconds)
    (86/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.595875844 seconds)
    (87/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.576237663 seconds)
    (88/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.434058689 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.673202996 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.495646549 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.635559871 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.845610116 seconds)
    (93/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.402923724 seconds)
    (94/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.611834089 seconds)
    (95/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.588114592 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.613381981 seconds)
    (97/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.685243913 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.588203989 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.624310465 seconds)
    (100/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.625816174 seconds)
    (101/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.426310706 seconds)
    (102/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.426630439 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.620810579 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.489050807 seconds)
    (105/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.558120136 seconds)
    (106/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.493534129 seconds)
    (107/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.727085826 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.404404638 seconds)
    (109/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.406472918 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.646106115 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.402746467 seconds)
    (112/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.830738252 seconds)
    (113/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.580070273 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.408366036 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.603196258 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.611594672 seconds)
    (117/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.403960238 seconds)
    (118/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.754204008 seconds)
    (119/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.403731089 seconds)
    (120/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.513755415 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.78365105 seconds)
    (122/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.601774989 seconds)
    (123/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.675712463 seconds)
    (124/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.574831688 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.501385267 seconds)
    (126/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.859917662 seconds)
    (127/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.404486841 seconds)
    (128/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.425399348 seconds)
    (129/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.405777718 seconds)
    (130/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.600000391 seconds)
    (131/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.492670332 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.402977571 seconds)
    (133/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.644658375 seconds)
    (134/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.406303693 seconds)
    (135/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.698985255 seconds)
    (136/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.737164691 seconds)
    (137/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.412494215 seconds)
    (138/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.74753675 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.427081335 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.692158339 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.585344827 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.606153199 seconds)
    (143/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.402866594 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.561176948 seconds)
    (145/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.604109573 seconds)
    (146/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.407508315 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.649155036 seconds)
    (148/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.914880167 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.628672892 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.097327601 seconds)
    (151/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.651770173 seconds)
    (152/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.504304004 seconds)
    (153/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.41672513 seconds)
    (154/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.744845906 seconds)
    (155/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.562653114 seconds)
    (156/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.653014884 seconds)
    (157/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.734523922 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.779801748 seconds)
    (159/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.495873463 seconds)
    (160/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.563035704 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.446286919 seconds)
    (162/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.7049108 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.551253061 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.785822624 seconds)
    (165/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.54314379 seconds)
    (166/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.405466924 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.501337077 seconds)
    (168/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.49268444 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.623559183 seconds)
    (170/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.859471934 seconds)
    (171/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.597568238 seconds)
    (172/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.74238875 seconds)
    (173/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.406386245 seconds)
    (174/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.518015455 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.681518439 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.628632594 seconds)
    (177/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.406200956 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.62659672 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.626284809 seconds)
    (180/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.406657718 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.684748529 seconds)
    (182/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.874649283 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.673055212 seconds)
    (184/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.670652043 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.718422992 seconds)
    (186/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.490370947 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.100371144 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.694184365 seconds)
    (189/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.634040893 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.43645634 seconds)
    (191/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.41543558 seconds)
    (192/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.689590835 seconds)
  done (took 355.97831457 seconds)
done (took 357.272283168 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.487952554 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.613098216 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.459974066 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.460221582 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.463142973 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.446437777 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.492612085 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.458526534 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.482174723 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.486352839 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.441891598 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.468026766 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.48200033 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.477930189 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.503250448 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.46086077 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.461825139 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.475171529 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.485007905 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.486705467 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.463791589 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.466170593 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.49817613 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.460722345 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.478284285 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477493751 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.476501935 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.435263241 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.473427801 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.486328464 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.439072036 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.478900215 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.490298871 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.472986613 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.461945755 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.474039401 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.46318872 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.61940656 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.490702903 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.473719318 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.472197198 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.490213664 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.475153091 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.478204247 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.476150144 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.499285908 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.475885307 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.480899841 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.439764163 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.447033104 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.493538809 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.483618204 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.472175337 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.439924448 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.44897106 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.490142077 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.471691267 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.492694916 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.474076836 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.472655566 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.509131363 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.493363786 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.485598972 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.480400615 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.47029067 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.487673957 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.474518303 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.492009005 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.471152093 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.46416985 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.467348606 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.47381137 seconds)
done (took 115.724566165 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.643250235 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.437089172 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.678011639 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.472951344 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.6924838 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.644576939 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.473746417 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.47457229 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.474408373 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.330285995 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.473549605 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.475515777 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.437568493 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.476641618 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.646931289 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.479583612 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.476830957 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.235353671 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.476707757 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.656504434 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.44068495 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.475340894 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.474655262 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.33753559 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.438531324 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.445258647 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.657154098 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.475716431 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.240225241 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.447270983 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.437992778 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.238082231 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.655567164 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.49257891 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.484205708 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.485237892 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.698434207 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.478974806 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.647220851 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.647190679 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.685000446 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.513584583 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.44566212 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.445802501 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.479846285 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.477952608 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.477345897 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.505275217 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.438339959 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.47711577 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.232841062 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.489298394 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.486412204 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.478173377 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.478064564 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.496791735 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.479119936 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.480277904 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.66019394 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.479114977 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.650707538 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.343841699 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.335672435 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.479244253 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.44168836 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.479220926 seconds)
  done (took 118.598807436 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.593252326 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.601435211 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.648874762 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.473777078 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.562229457 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.649744706 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.4718797 seconds)
  done (took 12.311415649 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.487860991 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.479062526 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.560940117 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.561335977 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.481521708 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.701672468 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479523828 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.487287804 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.476461707 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.558260796 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.480490291 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.478775827 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.490514472 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.444897358 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.559502224 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.488696991 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.643663136 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.470397877 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478266824 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.680033892 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.475730678 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.487988172 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.565104753 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.489444992 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.478766818 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.487894446 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.317388685 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478669529 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.479184679 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.47947033 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.477643281 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.59092312 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.477765993 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.44306542 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.477868379 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.642148768 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.480397752 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.477771859 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.476855053 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.448559904 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.478417263 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.481447536 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.4812436 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.476040912 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.477480551 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.501618677 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.482443123 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.480833561 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.47612556 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.481713771 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.557159677 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.480809536 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.475921764 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.480185993 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.566771795 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.497864009 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.487662502 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.480121529 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.481081917 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.475210919 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.684170941 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.562733153 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.480214348 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.55945578 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478589911 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.483134692 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.483827168 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.477721434 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.619799487 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.482225218 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.564169996 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.478852095 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.714335951 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.506342811 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.486384128 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.478439263 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.478304189 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.482375936 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.439301744 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.488977334 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.483737911 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.478316062 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.490037246 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.482029733 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.485554204 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.694231997 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.643681714 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.479292374 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.495593957 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.491027037 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.484401054 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.567202156 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.484691454 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.483768362 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.56791761 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.64586593 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.566178563 seconds)
  done (took 152.788878813 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.496157856 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.497535266 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.482013181 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.511751949 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.473940576 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.476074856 seconds)
  done (took 10.253294851 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.482600545 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.488778776 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.485363607 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.484308724 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.48832809 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.484276318 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.483048228 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.479632989 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.49023769 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.488510515 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.487340324 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.490990788 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.487884319 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.483988152 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.486314217 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.487916725 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.486588763 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.486883982 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.486921766 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.486578705 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.451114699 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.488614858 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.488759919 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.47919299 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.488919366 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.486719575 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.509913516 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.487666064 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.486592464 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.488797074 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.488972934 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.488602846 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.481767689 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.483505409 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.491260796 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.479714494 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.489996039 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.491708967 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.485792851 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.490195855 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.491075436 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.489091315 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.489519652 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.48905416 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.481963105 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.482715365 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.492764617 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.512136564 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.486769931 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.493525329 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.489931576 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.488229334 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.49044044 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.490987925 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.482554171 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.48506315 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.495596891 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.490516148 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.492188567 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.481690234 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.495259209 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.492280058 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.481573879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.494399742 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.491077182 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.493040281 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.487890953 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.49650797 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.488701532 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.489862573 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.492166287 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.4896659 seconds)
  done (took 109.461049903 seconds)
done (took 404.7203384 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.826464944 seconds)
  done (took 4.147945909 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.576190031 seconds)
  done (took 3.900966596 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.912821805 seconds)
  done (took 27.240850322 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.48478141 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.562027267 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.463246269 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.454612001 seconds)
  done (took 11.287187777 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.82229088 seconds)
  done (took 4.147501159 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.461409164 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.469884683 seconds)
  done (took 6.255479695 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.775434082 seconds)
  done (took 4.098854889 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.848264294 seconds)
  done (took 4.176471464 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.471005496 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.477985155 seconds)
  done (took 6.278079985 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.432510936 seconds)
  done (took 3.756978175 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.157895568 seconds)
  done (took 22.485074255 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.467536619 seconds)
  done (took 3.79641196 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.501918575 seconds)
  done (took 3.828028969 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.72803043 seconds)
  done (took 7.053472233 seconds)
done (took 113.777386708 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.455581188 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.455331855 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.45794357 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.45602468 seconds)
  done (took 11.148602696 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.613365987 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.605830671 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.613094584 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.6007581 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.5874467 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.61419193 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.546374996 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.52501823 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.587400395 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.585473894 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.620263303 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.588093081 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.611852667 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.523756408 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.584069315 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.618777291 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.590155425 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.612708432 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.524071532 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.599533503 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.494553043 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.590564764 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.585265487 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.492866796 seconds)
  done (took 39.243790429 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.046340181 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.611098241 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.693295496 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.577544532 seconds)
  done (took 8.25295577 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.659777476 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.66302754 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.676994051 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.721340193 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.762154251 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.671798278 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.531259317 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.523615818 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.51189666 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.657037742 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.737070825 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.654090859 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.880989615 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.491287195 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.87936371 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.493796802 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.49640719 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.665664607 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.706173739 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.740826749 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.492565989 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.658775533 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.670166507 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.652247957 seconds)
  done (took 40.924660044 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.510706634 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.518311372 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.49706733 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.513865904 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.497384549 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.496095767 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.499591393 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.510049498 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.494633291 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.497890339 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.495964326 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.521522395 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.496928834 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.495621545 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.510679676 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.499210479 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.498821673 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.510433764 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.510280741 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.498569826 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.495884638 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.512142501 seconds)
  done (took 34.408595186 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.458300948 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.460995005 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.899415073 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.80430633 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.458656859 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.460616395 seconds)
  done (took 14.871091708 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.585195017 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.793825807 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.488593347 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.923008226 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.049275331 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.488318032 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.491535062 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.839406045 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.21802584 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.160133841 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.572337307 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.585784756 seconds)
  done (took 22.526891025 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630072581 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469051896 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476794081 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54258031 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473953845 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.465748822 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.540363897 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315306646 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.494617646 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.831400976 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470105311 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631492036 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.808950635 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478470202 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47456384 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.445735453 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.790143006 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121703326 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469324277 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481513117 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535204651 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478316202 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.486936363 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.749270141 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.467844898 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472914049 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.840597606 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469854163 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887228118 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837140673 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844764408 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474595268 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834807555 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269790803 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64992315 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744227671 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458578985 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47706325 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.467352587 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.479815834 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484582572 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.475041344 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836963207 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476379085 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475546018 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471415046 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334066155 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.502794804 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.471582664 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.472835477 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851107743 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639320196 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.503228099 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472877801 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487620877 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476397801 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.502361718 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.69232107 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195612236 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48271292 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494678548 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.474748918 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472836734 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49837392 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303995571 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.502427159 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.501410689 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503762455 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474764075 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486282159 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530484778 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475758545 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.524929322 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473434855 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473328836 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480655326 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477410431 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181788829 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480876653 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.477853364 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790148105 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474053928 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476601179 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.472951064 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475258341 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.442127103 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50688897 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.445178748 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586031925 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322323949 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.752112682 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524375831 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53549135 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.786758148 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.444683574 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478610583 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.483955396 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477106901 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523718833 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335819032 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472923547 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.50308646 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811285639 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.770853612 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493180173 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.453817626 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079702663 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477414901 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.533446397 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493715996 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.754507678 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.276667584 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863371872 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485271137 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543866367 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480498463 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47796951 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486260788 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.50785683 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483759632 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881353488 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.461266409 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48128299 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629389045 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483760539 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.478782603 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499246518 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483548222 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478974316 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.747407963 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476250926 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872451448 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.484325277 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480696463 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.475996214 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489596966 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.480908431 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.787789075 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485558952 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834219491 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477882907 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47970765 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47887186 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.785383392 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.486856115 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.508538761 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909776725 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491081443 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.496228605 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857200277 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545456444 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678381797 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54548417 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.494072326 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.821390974 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.50993817 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.508529332 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504504798 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484943791 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479243625 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.513433657 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477811529 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298391995 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484736851 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487715232 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482148324 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.530460752 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634542494 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51282059 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.76171949 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.48809887 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476717186 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.510866431 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.484694388 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790216759 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850111945 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.50016507 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73807612 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.090073116 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.292794077 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530795711 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.483359651 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.484400844 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.482066399 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480695555 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480252621 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482925587 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758310117 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86833626 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483867327 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304465812 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488854623 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48683181 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.517378362 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860935528 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.51528501 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483105778 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.491261144 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489072179 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495087818 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.863387027 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791347559 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.532446758 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484122248 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.089747377 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.516000044 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483501638 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48484727 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542326227 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484276806 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499341222 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916377844 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491765538 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864931008 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490562662 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.554781512 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.487049435 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493544884 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493020725 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.510996406 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518942807 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.762791274 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485830426 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511579231 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208831584 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448028621 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232100884 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503699109 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.48691527 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491088217 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342595871 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48451322 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488392554 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857370829 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345523338 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484778127 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091885428 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.493056694 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.48941908 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865549663 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807186655 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498239336 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.496465717 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870829523 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.788991463 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543178151 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.501909775 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489771989 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.453349899 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165804255 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49539938 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.743131442 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341219648 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498143165 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490618954 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.527212225 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.49814526 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024304557 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490050656 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487272997 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485474375 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506495763 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487870909 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492694147 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491662383 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338736301 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.489726801 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.098129937 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486275525 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.768223529 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.863072043 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.851651247 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.493250364 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.501505324 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.824923616 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866696456 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493153285 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489499817 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242758804 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.439890366 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.518502737 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490678389 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.496582561 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498606981 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916584504 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.503620258 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.499113679 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501540105 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493639101 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490953563 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.493875793 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502013769 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491518789 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141017723 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.502348937 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508153655 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507558258 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493251621 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.833864488 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.537421413 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314073179 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806501581 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483486413 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575070545 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.516364615 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49222677 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.487291017 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493919723 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493620383 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506288265 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.803153529 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.488878789 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.479282806 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.539853706 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.793893204 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493921748 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.507059592 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816031983 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.491275531 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.495761647 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459492789 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552770572 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505278849 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49466451 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.499899673 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598845077 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644984253 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773741898 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.870972559 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873565137 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046523724 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506749636 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498284942 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.538684493 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652106808 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509738284 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.515239333 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.495595984 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312648068 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507740894 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322210108 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881986949 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.496479685 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49654792 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495573215 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824020499 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493729126 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857994233 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496269253 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.481877898 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551698928 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494656409 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528661012 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798489319 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853558822 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498232003 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503593578 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494543685 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.501148086 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882739558 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.797858093 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159127288 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211455312 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49763472 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506086703 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361999176 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852253069 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497799336 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497813165 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497519272 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.508579129 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.499380543 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.548736051 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49525879 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812434668 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868524342 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306230422 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.865657707 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.536199331 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.504114734 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507051002 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.83737101 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420342908 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.775639905 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321500311 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.452406832 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841117715 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650725766 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780474179 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.496920593 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819035507 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.50241396 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499518758 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498711882 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499367972 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.494425443 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.873367137 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327545913 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843794382 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.527477761 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.500981864 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560034694 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.785130079 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806662495 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.486786273 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.810720902 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888885102 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.513356063 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.507758843 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333653113 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890820335 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504715509 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.524982681 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823986905 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499913572 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564495318 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.451964248 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.501081108 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220876063 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.797497573 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554173125 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517130566 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.457452795 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33675679 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.52205689 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165104585 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501367806 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515448019 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860446848 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.534693344 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511517003 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871582552 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.532068987 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.517090965 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790873197 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.325855753 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.506881986 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.517936883 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505719547 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.5051861 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504985446 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59053564 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507219668 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503363311 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.05256737 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496250745 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505804404 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543594545 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.510923212 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519983372 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.508564252 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503978893 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.533121984 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.492548249 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.474630398 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.522357836 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722360644 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192866006 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509647282 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.279836842 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.927945935 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.847769189 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.52122962 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.477513306 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.536899979 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509038894 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503999496 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50085573 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500861597 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244729095 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.525368833 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.881164358 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541946431 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.804490711 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807763823 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509212659 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789903171 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52114183 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558772872 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.478663314 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510718577 seconds)
  done (took 1059.377246673 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.513901453 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.504308474 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.521657189 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.582664737 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.522488999 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.633988932 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.502856334 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.609387479 seconds)
  done (took 21.75393945 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.507279662 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.532202873 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.501478784 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.53250801 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.498447463 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.161347403 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.503288162 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.535834899 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.55182555 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.506782042 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.502472556 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.325244013 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.531679901 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.50874584 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.511733371 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.535488137 seconds)
  done (took 35.11457777 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.761065915 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.707048571 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.086134627 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.579559594 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.499057317 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.542265675 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.882312409 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.499405756 seconds)
  done (took 28.920655204 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.543860571 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.548582749 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.543214748 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.551294896 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.545563091 seconds)
  done (took 9.093002539 seconds)
done (took 1326.963457957 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.539138182 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.543855542 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.540673294 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.539481941 seconds)
  done (took 7.523617774 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.482490895 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.477914056 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.475675992 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.514056921 seconds)
  done (took 10.308952137 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.440684043 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.220107948 seconds)
  done (took 6.02240243 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.172837272 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.156735015 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.164421118 seconds)
  done (took 7.856260632 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.910851443 seconds)
  done (took 3.270018485 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.502884271 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.519906198 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.507619999 seconds)
  done (took 8.893395801 seconds)
done (took 45.2396186 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.504558855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.270718434 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.661682047 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.515862317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.665675782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.664707852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.790739661 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.519756179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.502439381 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.504129261 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.513624952 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.664112873 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.781423741 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.277597941 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.777233683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.275866086 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.671460945 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.500699146 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.508680189 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.498313717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.808705493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.515860572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.502640384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.504029528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.670117897 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.651638941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.517552616 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.272335399 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.513534228 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.499659768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.65176703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.522355811 seconds)
  done (took 87.058062553 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.505377186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.499903515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.51396026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.501784061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.506420404 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.502347401 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.501484372 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.503296474 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.502915769 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.534417331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.501193692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.503157909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.505714938 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.498343679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.50564335 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.50255895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.513009999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.501597305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.502124887 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.519351449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.508735155 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.50618944 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.503849407 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.515595034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.508309472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.505671915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.50188128 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.503529534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.505536983 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.503131998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.506596334 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.507072442 seconds)
  done (took 81.567137415 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.506317039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.502318067 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.503393134 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.519756179 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.504360575 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.510398494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.509727459 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.508575357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.505800284 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.509657269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.50361495 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.501974728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.522019036 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.505494938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.505217319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.503614182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.504862734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.526917774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.502249413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.502807306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.50286227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.519864992 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.515732342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.514505721 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.511473212 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.524823234 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.503960176 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.524920382 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.512745231 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.527267609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.510954431 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.523710243 seconds)
  done (took 81.717694829 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.836567137 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.546863886 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.552621391 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.517666527 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.549586927 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.545965657 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.521977829 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.841875842 seconds)
  done (took 16.282652983 seconds)
done (took 267.988855084 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.534548144 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.190733193 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.579799708 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.521023867 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.562706892 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.578562959 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.835850146 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.573247548 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.827678645 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.533577349 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.56393973 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.521914833 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.528734415 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.748713856 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.510966933 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.523226313 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.515591403 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.533813343 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.276808943 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.865255072 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.578882413 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.510754196 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.523725817 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.522236312 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.493086307 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.627396193 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.628655641 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.771023116 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.730703045 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.626599025 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.170997582 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.520395226 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.519764699 seconds)
  done (took 70.918528398 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.5434249 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.550179391 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.551365436 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.553777614 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.552174198 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.553336915 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.544115352 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.553108045 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.553218046 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.550694819 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.550860134 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.551383804 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.55444823 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.549546629 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.553156655 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.527140079 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.541600017 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.551475505 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.544356513 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.524290973 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.552621112 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.551559385 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.553782852 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.552880223 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.554582325 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.556193214 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.55210701 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.554358624 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.553678369 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.552772039 seconds)
  done (took 47.861301008 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.55273635 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.250515446 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.470863788 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.555075614 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.546966762 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.54889962 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.955051407 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.556673862 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.549012832 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.5490048 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.19845289 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.55825032 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.592044352 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.495734828 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.550000178 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.557598631 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.555177303 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.543278653 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.282876615 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.564629273 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.954319959 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.55571117 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.954484366 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.563937355 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.548004604 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.548655664 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.561182745 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.509172012 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.567537394 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.178350054 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.513081726 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.936857822 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.436818676 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.532935299 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.520065576 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.557918224 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.557819049 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.205015107 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.550721359 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.548597067 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.951867273 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.552087455 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.476832075 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.339730702 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.56691434 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.557769532 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.516078406 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.179427705 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.860516411 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.561373482 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.529218695 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.551364248 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.558604135 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.551014972 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.864303345 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.552274839 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.549504165 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.536553147 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.559587291 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.946476084 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.560339412 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.550771854 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.288774501 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.551075664 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.284942869 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.552295861 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.566502206 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.552099537 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.509623605 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.556484243 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.365080224 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.567859362 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.562231761 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.188993098 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.276932772 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.522156763 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.548706299 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.290576546 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.477924043 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.961113141 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.558453697 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.502725591 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.966405574 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.556798948 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.560999761 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.560246872 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.560788981 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.732403541 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.940343252 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.269705596 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.357536877 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.544428241 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.950032473 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.568195998 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.554756789 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.522752998 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.557501411 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.562409508 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.499786251 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.363236345 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.57135876 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.567883319 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.352313098 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.573746493 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.952300359 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.566863217 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.541324214 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.554050763 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.678552839 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.564720346 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.564558105 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.557434782 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.954278473 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.56105284 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.565497331 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.34907337 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.244917388 seconds)
  done (took 221.016927088 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.529060784 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.522779118 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.525416535 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.519322325 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.527622472 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.556065335 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.523424313 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.527488656 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.552943709 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.525732776 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.525193811 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.558709037 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.556583837 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.525675856 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.545684406 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.522997093 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.524638712 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.52742957 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.539981237 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.527315799 seconds)
  done (took 48.044177267 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.565551248 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.293732743 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.260349029 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.558959069 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.565248137 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.555634763 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.636133198 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.565211121 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.565235565 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.974524204 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.78332538 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.567426695 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.565508645 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.564711057 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.277518601 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.536383503 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.968957785 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.291971276 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.56131719 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.291390895 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.535093045 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.564562226 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.556163113 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.298013316 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.974977125 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.948573837 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.640007155 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.295518725 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.563273096 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.566576657 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.293407981 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.565112296 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.556593405 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.276706347 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.565269927 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.588808605 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.5667514 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.63794942 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.63771643 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.974015551 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.303246733 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.944259671 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.583243512 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.789877261 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.568573979 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.536861147 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.310516442 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.563456987 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.538854277 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.571765446 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.581505372 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.291700502 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.559631291 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.291587708 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.567716677 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.569946779 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.321760959 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.292405479 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.281026588 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.786635508 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.560053412 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.95103267 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.569221407 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.304153482 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.565116066 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.569105052 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.570199116 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.790670448 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.295128941 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.938250109 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.965918711 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.966403549 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.568705071 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.649348356 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.565411356 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.973948922 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.64385939 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.049890632 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.971747455 seconds)
  done (took 144.658323105 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.950766295 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.702134748 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.090100774 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.322053244 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.225872718 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.769346437 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.707531384 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.897342462 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.545438564 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.720756739 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.432156282 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.691912498 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.494368523 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.658779584 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.699461363 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.760061388 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.110190619 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.543895072 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.371543686 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.403587077 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.536587649 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.734946393 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.24241246 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.858327584 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.53310187 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.25618146 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.558191653 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.240270428 seconds)
  done (took 60.442539657 seconds)
done (took 594.311308038 seconds)
SAVING RESULT...
DONE!
