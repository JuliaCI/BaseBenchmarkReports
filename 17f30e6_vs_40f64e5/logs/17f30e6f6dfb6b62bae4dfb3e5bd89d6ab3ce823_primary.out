cset: moving following pidspec: 10247
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.533111159 seconds)
loading group "string"... done (took 0.605331446 seconds)
loading group "linalg"... done (took 11.362310389 seconds)
loading group "parallel"... done (took 0.214081344 seconds)
loading group "find"... done (took 4.12234377 seconds)
loading group "tuple"... done (took 2.399879762 seconds)
loading group "dates"... done (took 1.528887787 seconds)
loading group "micro"... done (took 0.215330175 seconds)
loading group "io"... done (took 0.608662177 seconds)
loading group "scalar"... done (took 67.603827346 seconds)
loading group "sparse"... done (took 15.815608745 seconds)
loading group "broadcast"... done (took 1.55083101 seconds)
loading group "union"... done (took 12.088913891 seconds)
loading group "simd"... done (took 4.212304861 seconds)
loading group "random"... done (took 15.883719013 seconds)
loading group "problem"... done (took 2.655954504 seconds)
loading group "array"... done (took 26.895771802 seconds)
loading group "misc"... done (took 1.372945679 seconds)
loading group "sort"... done (took 4.116666162 seconds)
loading group "collection"... done (took 25.626371622 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.960065103 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.174007812 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.248362519 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.28429572 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.353791149 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.19102045 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.192783803 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.307803527 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.89447862 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.251467173 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.182957832 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.531591901 seconds)
done (took 7.322321575 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.452656863 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.069843379 seconds)
    (2/2) benchmarking "String"...
    done (took 0.224141352 seconds)
  done (took 0.993556932 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.096515486 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.228499657 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.124448577 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.14034159 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.139919609 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.143155914 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.125279618 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.138981361 seconds)
  done (took 1.735956367 seconds)
done (took 3.977724472 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.671840392 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 1.018596918 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.643340679 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.217088849 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.43262785 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.424912484 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.333039138 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.264587557 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.136371183 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.104037113 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.232349868 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.498611171 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.56158112 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.137746916 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087263471 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.132904331 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.192346387 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.934699378 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.100516973 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.135489227 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.678764876 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.285586876 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.136586084 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.115763674 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.221759136 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.145817985 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.247221452 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.114124917 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.765374982 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.326482718 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.251070265 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.1038887 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.247197217 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.199300204 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.291652312 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.130179194 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.779170522 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.226740007 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.279811909 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.127327225 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.791775336 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.343221858 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.269181716 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.134331608 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107775297 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.253199586 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.296069563 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.114435711 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.115928499 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.128127396 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.196147569 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.546241669 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.114180931 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.259528604 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.113672067 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.798196893 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.117894391 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.39907037 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.156531916 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.128830978 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.096883549 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.127508323 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.19187398 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120534112 seconds)
  done (took 24.590060021 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.238895253 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.240640098 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.116210658 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.16738595 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.172315348 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.118224461 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.106241094 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.114684625 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.157588685 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.232871233 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.158275155 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.260554921 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096988939 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.12794525 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.214046563 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.281865732 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.137444085 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.149247121 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.112808409 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.133233213 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.166935264 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.124193167 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.134368973 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.135577785 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.20079816 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226418946 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.130828718 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.143907895 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.126194189 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.124399688 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.163774388 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.187165701 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.11287413 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.110614904 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.227991353 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.142434942 seconds)
  done (took 6.513495117 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.301346491 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.144846561 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.350470406 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.24522448 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.192507371 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.259511911 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.241588194 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.250365985 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.376024214 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.702705141 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.204968733 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134820566 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.137019519 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100915067 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.117477928 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100371074 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.051051883 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.190789066 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.2206217 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.257201701 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146501871 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103605494 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.754259672 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112071794 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.131275492 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143837355 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075868238 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.308302752 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128589536 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.619304871 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.129382863 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154652976 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152891021 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21981259 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.170751602 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.154621199 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.145350396 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.132402521 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.268601475 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157004672 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098770241 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11711196 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152620036 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13890712 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.141151818 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167321417 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164223537 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.132787556 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167860383 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.105271907 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 5.164936408 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.23714084 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.207268536 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.115357128 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.380796049 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.140327761 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.156502444 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.142795323 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 3.420790521 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166635226 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.121346925 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.101212312 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.145518156 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.116614969 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.865420945 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.172130408 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.44398963 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.117108607 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.212101902 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147790372 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.156162107 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122635078 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108824174 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.157348989 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.113611793 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117797173 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.113651184 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.118906881 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.134906541 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.138785177 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123149529 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100506286 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.185052583 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.141373425 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.139567958 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148493953 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.138389665 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.113715299 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15207297 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.119634836 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.117212531 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.248939338 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.137153265 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.156535897 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148322562 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.165603531 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.132981715 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.109119463 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 3.006692192 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.120735116 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.103082731 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.176622879 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.124515415 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150233979 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.148232188 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102393607 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123323504 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099560565 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12031977 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169452903 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.129774743 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101246395 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.134127322 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.134562084 seconds)
  done (took 35.40885325 seconds)
done (took 67.20125639 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.517649206 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.120670443 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.121001212 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102231436 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.121647173 seconds)
  done (took 1.759701007 seconds)
done (took 2.505230589 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.398773406 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.234411093 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.150539185 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.233912567 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.114260271 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.233654992 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.209468327 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.148427953 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.255419562 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.125303224 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.23181209 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.125220603 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.113324466 seconds)
  done (took 3.35461786 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126649485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.147597819 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.128597429 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.141972453 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106506351 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.141518346 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125459599 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.148671629 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.125401421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.135658452 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108129882 seconds)
  done (took 2.185777186 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123673409 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.146257007 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.115154937 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.139828815 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.10926159 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.140056079 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123031567 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147062626 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.124217891 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136031754 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108143222 seconds)
  done (took 2.163411632 seconds)
done (took 8.444572875 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.758294334 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 18.863090063 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.243924524 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.30090244 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.411383669 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.390509086 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.147884239 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.267072231 seconds)
  done (took 24.321004928 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.143222333 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.136926979 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.236451018 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.136871176 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.11259246 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.135006903 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.114247908 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.13264054 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.118676684 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.128603435 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.113818594 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.135088267 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.113449902 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.134087512 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.113178847 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.129281873 seconds)
  done (took 2.945909113 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.162266514 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.161328267 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.140098542 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.127374088 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.137651513 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.12222937 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.144849565 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.141343323 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.118393337 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.135082052 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.127772533 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.139730967 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.122466691 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.13473969 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.125206564 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.160682514 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.137393658 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.123905002 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.160313473 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.123711193 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.141682472 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.139917583 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.122533249 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.141043006 seconds)
  done (took 4.136404986 seconds)
done (took 32.155802146 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.2062638 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108411062 seconds)
  done (took 1.069596211 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.226937727 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.227092146 seconds)
  done (took 1.2187869 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.140226421 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.127850825 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.171474599 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.129273771 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.130496482 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.116481363 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.163544261 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.128804508 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.112922041 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.129510883 seconds)
  done (took 2.116910188 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.115807184 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.133999582 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.13220941 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.24942669 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.124886831 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.133693607 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.118677591 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.133483105 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.117994544 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.130179054 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11914476 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.15374972 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.13561089 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.154912577 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.116752487 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.136277804 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.125976355 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.135827049 seconds)
  done (took 3.233760034 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.111088567 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.130293524 seconds)
  done (took 1.008201183 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.116225604 seconds)
    (2/7) benchmarking "second"...
    done (took 0.128031574 seconds)
    (3/7) benchmarking "month"...
    done (took 0.116372689 seconds)
    (4/7) benchmarking "year"...
    done (took 0.13220061 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.111946708 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.128025009 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.111697933 seconds)
  done (took 1.609704628 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.747897341 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.210839591 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.52529599 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086981661 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136360776 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.409895421 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137766611 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106267354 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087317947 seconds)
  done (took 3.261625658 seconds)
done (took 14.27963151 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.112494263 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.772240241 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.812844287 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.155280012 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.111232371 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.183806614 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.591927437 seconds)
done (took 3.516025048 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.394623437 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.214288842 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.093183568 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.112343686 seconds)
  done (took 1.584846509 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.103340236 seconds)
    (2/2) benchmarking "read"...
    done (took 0.13943051 seconds)
  done (took 1.019150061 seconds)
done (took 3.389341341 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.136600751 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.130592375 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.109581393 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.13025141 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.108547113 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.129274539 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.10946413 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.126342113 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.109624555 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.127113581 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.108624987 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.108564783 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125358958 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109341558 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126100812 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109060167 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.126276044 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109188187 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.126208088 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.109531875 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126302654 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109169958 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.126601086 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.108599215 seconds)
  done (took 3.663175953 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.136881233 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.132360337 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116923388 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.132412509 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.116705273 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.13229748 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.133391963 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.112327343 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.132739296 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.114323407 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.132042419 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.115751661 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.129695054 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.116569013 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129811759 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.134483093 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.116309623 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.129365892 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112090092 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.133717004 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.115352309 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.130221867 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.116492677 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13213475 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.132426896 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115852651 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.129719429 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.114240156 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.132768489 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.116602398 seconds)
  done (took 4.528376409 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.118443134 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.124430488 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.111176218 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.137971246 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.110042765 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.127588641 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.108149647 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.110557425 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.129249188 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.109283031 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.129406889 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.10931879 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.128738648 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.111183832 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.129218457 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.113621921 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.138923812 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.111606092 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.127255567 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.111374777 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.133396433 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.11031347 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.128261701 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109968174 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.127573345 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.107709158 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.127412501 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109830867 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.128220425 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.109598713 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.132431506 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113310359 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.128297321 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.122622158 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.132009315 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.110329812 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.135475747 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.108132396 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.130369861 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.107817551 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.12643186 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109835615 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.126989124 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.118221179 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.127165054 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.110134676 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.127394971 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.112448168 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.127649892 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.11301053 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.125203281 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.110459508 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.13018981 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111962981 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.13203781 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.108972097 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.127246489 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.108480135 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.128825879 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.110192365 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.109232535 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.125376627 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.117381687 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.128623619 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.148181203 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.118440271 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.128245149 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.112375952 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.129246184 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.118064525 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.13099466 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.123856183 seconds)
  done (took 9.477105993 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.140503831 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139429602 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112827476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.129997188 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111473393 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129319238 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117504607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128282514 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11189726 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136510167 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11121945 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.129266089 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11238105 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130217467 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111275743 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.129496495 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135942916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111726149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.129611803 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113169558 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111916886 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.135527569 seconds)
  done (took 3.508061535 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.321407422 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119269776 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.194101289 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.148733369 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.139227761 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.147386898 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.136084484 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118415128 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135110198 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.124393682 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.141230739 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134970446 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.136404706 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.141641895 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.141308821 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.125836114 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.134614534 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.126871301 seconds)
  done (took 3.456215347 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.12756273 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.130990749 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.168227818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.131297771 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.131434731 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.114781286 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138272122 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137581252 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.131875359 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.11484987 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.140155323 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113922448 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.131634337 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131130572 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114522244 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.1308584 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.113743724 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.130820895 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123141497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.138481716 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.120450932 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1416134 seconds)
  done (took 3.649477702 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.12996967 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.130794705 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.138071678 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.135629119 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.112147991 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.130729753 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.120522031 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.132841125 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.140742828 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.11444479 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.130320902 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.114126035 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.149236296 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114337724 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.139077393 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113817407 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131075327 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11339766 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.132238744 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.113151121 seconds)
  done (took 3.326438159 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.265288554 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130583435 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.153384589 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.161958444 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131570572 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.149371718 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.159784425 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.131578813 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.150578226 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.165206344 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.13488964 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.150411935 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161295231 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14094879 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.150751852 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.161251651 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142532022 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.160857396 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.148325146 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131931093 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.165139995 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1316504 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.16102285 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.149556518 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132342039 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.149584594 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.152135338 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13910484 seconds)
  done (took 5.058712983 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111667552 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110405032 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.129298775 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110749908 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.128524304 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.110596397 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.12967487 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112219159 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.129426863 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110794816 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.128996711 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.112043438 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.128309333 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.111541698 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.128885593 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.112070536 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128300742 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.111381133 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.128341111 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110758359 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.111712879 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.129364286 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.110486606 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.129447048 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110580333 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.129183746 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111340346 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.129759937 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111998181 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.129404654 seconds)
  done (took 4.384760799 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.129637854 seconds)
    (2/2) benchmarking "in"...
    done (took 0.14760634 seconds)
  done (took 1.072482331 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.119999547 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.147753007 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.111679915 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.130558502 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.120717377 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.130267333 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122927434 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140087437 seconds)
  done (took 1.819818847 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.228667067 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.233923112 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.1183133 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.14707834 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.23147322 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.221861803 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17798653 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118085128 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.131530972 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.12427544 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.227875137 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.1042407 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.132726515 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111803603 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.133658338 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121446658 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.132230572 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.123524996 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.14031917 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.114827241 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.136357214 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.140106364 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117952779 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.144858085 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.109418662 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.136938782 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.118762239 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.146528201 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111665248 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.135172007 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.131184699 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.114239737 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.136053055 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.119506049 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.132142502 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.234708408 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123781173 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.13157588 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115122042 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.139616916 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.169790865 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.114127851 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.135970433 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.113823832 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.138703043 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.120414894 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.138059945 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.115292036 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.124558577 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.110410828 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.133225321 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110377793 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.131700477 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116421299 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.135619131 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.141892625 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.116449864 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.132041162 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.111878403 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.129511581 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.113901705 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.129678571 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119155026 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.136935081 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117644289 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.135811195 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116631731 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.134747513 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.115979204 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.134729214 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.115217026 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.151588411 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.136598585 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.121022373 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.139069291 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.116302988 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132536896 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121562316 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.13455084 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.116591014 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.138371786 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.148423693 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.13647343 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.130243797 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.112269165 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.140467583 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.116477452 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.135758325 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.107340955 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.144899292 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.116206328 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.13443148 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106843405 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.132932197 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.110299152 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.136113957 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.107030859 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.135517233 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.113734226 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.139277906 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121674411 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.134113143 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.137631258 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120460011 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.139616567 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.114455337 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.218699109 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.131899874 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.111285451 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.135590426 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122521447 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.128201708 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.116159465 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.131878921 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112952702 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.129631568 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1209005 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.13561564 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11637276 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.138749767 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118631497 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.137211792 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.13475729 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.114328994 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.130869365 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.120994786 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145121388 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.118193592 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.134346693 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.115499185 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.134358216 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.116488137 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.138135862 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.116928347 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.140455291 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113022543 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.132484165 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.117627109 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.138930516 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.118328664 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.130521695 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.116356486 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.137125817 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.13494656 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.117983299 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.135544402 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.111473464 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.1252044 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.117625922 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.131346033 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.116808988 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.146080448 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.111058047 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.13565042 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.112003559 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.148960633 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.112064041 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.140211127 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.136856509 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.121845313 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.140092395 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.107431888 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.131287855 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.117362061 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.137559672 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.112238295 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.135920357 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.116418226 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.142041386 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.108229057 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.138658554 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.107118161 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.13283463 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.121997218 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.135839062 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.117947471 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.131385912 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.158517924 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.147791 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121376608 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.135303309 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.135804351 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.120442131 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.13445809 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119211528 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.140533932 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.121376748 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.133493023 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.114497521 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.140791158 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.113091546 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.136425589 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115375077 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.138492891 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.108248612 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.135740096 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10710957 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.138573837 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.119380335 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.138261995 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.121724836 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.136843938 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.134050916 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127691587 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.131181626 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.120170869 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.12726325 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.121718271 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.146112575 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.124179478 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.141576314 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.119033014 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.133263734 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.116877642 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157629961 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117114125 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.135984052 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.117161896 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.128111053 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108961551 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.141453113 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.118553344 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.130884172 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.114001368 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.137834637 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141925101 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.11554961 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.127187264 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.120788754 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.140545456 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.112026956 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.137976205 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.112488956 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.133029556 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125448914 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.126733225 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.110793629 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.137342605 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.13928524 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.11455486 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.137315646 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118653287 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.140501177 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118786824 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.136690916 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114270397 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.145220073 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113976016 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.143094244 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.111969126 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.136490122 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.109865996 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.13662743 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.116976468 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.132341201 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.112154485 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.142186237 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122873167 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.140726834 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114448353 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.138521037 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.122443992 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.140854504 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.133330433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.122298792 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.13151009 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10826719 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.131677359 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.108222352 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.136691823 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.113039584 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.140289418 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.115143134 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.135157202 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.120037611 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.140466885 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113707895 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.141539996 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.153085598 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.110443165 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.126831841 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113917698 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.136096846 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.112633946 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.131867747 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.117002309 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.138126922 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.121800405 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.138971443 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.113397031 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.134270147 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.123414995 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.132779175 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.122632773 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.142313348 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.122285663 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.130993125 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.119819566 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.131620299 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.141446758 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.110125526 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.135752948 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116229655 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.136958408 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.114385845 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.135176128 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.112367152 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.128481073 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.112862536 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.141709221 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114714169 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.139531082 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.115402315 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.133021455 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.113057044 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.130392349 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.14140178 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.115726238 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.14131811 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.117373376 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.126811517 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.108622681 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.140764479 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118594829 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.141187716 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111887272 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.138185449 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123240602 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.138949863 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.115756619 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.145703305 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126925079 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.14170566 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123973447 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.12799386 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114550461 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.141040701 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.115646271 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.137434097 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11823417 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.128393353 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.13823832 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.122806189 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.13865164 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.114850569 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.127663791 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.11616114 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.141380129 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.120276399 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.138931773 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118098747 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.137958396 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.111103095 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.138895386 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.122167351 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.137148096 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124246596 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.137545215 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.12063643 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.131983683 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.123528697 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.135261055 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.109925222 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.128396915 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11393027 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.143024891 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.110016504 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.140212383 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.12073791 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.133163023 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114840023 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.139496301 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.112019971 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.139973945 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.140443348 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.114610943 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.147089725 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.11693561 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.13332282 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.121141033 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.141233532 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.109234631 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.134733335 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116060918 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.142881997 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115581387 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.141270269 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117673064 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.140851431 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.11840556 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.140095608 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.120648024 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.14149418 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.109366422 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.142855526 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120505058 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.137607513 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.133025017 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115638029 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.13062087 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115515458 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.142469654 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.115296226 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.14504533 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.122914723 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.134434833 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113990613 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.143470339 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116202137 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.143346511 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.113164321 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.139839291 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109564841 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.138487722 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116416271 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.142482016 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.13268496 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.110605755 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.141324885 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.121163173 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.14040731 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.12216812 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.142803425 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.110587527 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.128499092 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.119117731 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.133223785 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128401873 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.140401443 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.115888899 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.135359811 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.118894798 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.1367683 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123100221 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.129580934 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112751 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.138213944 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120620297 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.134058458 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.130349187 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120427465 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.13550536 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119973148 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.136332909 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.111246409 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.136277176 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.12486511 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.135529664 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.112235571 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.134510122 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124138482 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.136779544 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.113363718 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.13023381 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125089231 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.138891824 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.145686333 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.113430276 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.138039412 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.11504794 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.138167081 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.124647275 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.134585271 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117742068 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.134920928 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122487503 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.144256683 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.110419349 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.134211201 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.128738298 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141908827 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.139379945 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.119098036 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.135877265 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125411759 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.144044575 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.11941763 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.130534547 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111934415 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.135356109 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110032148 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.138689145 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12444725 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.137222129 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.115639706 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.140049164 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120239312 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.138435272 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.119754684 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.131028464 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124352475 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.134080877 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121301739 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.129883765 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110355863 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.138408452 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123185288 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.137036351 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.118641274 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.137521957 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.11958043 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.131720801 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.114577279 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.141453044 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121676576 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.1417982 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.134929658 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.115612118 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.141895488 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.130289124 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.13759096 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116894823 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.147185406 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.123830482 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.137990801 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.117600081 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.140036663 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.126355454 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.140309672 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.124217611 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.133826445 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.136902674 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.124675142 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.143912016 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12892715 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136477481 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110811717 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.140287742 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.116142842 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.130466591 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122566005 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.144780422 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.125459948 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.136746928 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.115104931 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.146592314 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.145362899 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118745477 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.135681639 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115933108 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.13982679 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115412581 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.13939496 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113910435 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.145167134 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.124725707 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.143374028 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.12706539 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.131824934 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125109136 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.141674789 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126265986 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.137902522 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110959362 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.131594388 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.119233179 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.144863603 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122467878 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.140705533 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.120665903 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.141651183 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118494887 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.138609246 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.135256097 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124905618 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.142848054 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.118240874 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.139704777 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.117498741 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.139858498 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.118887534 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.142806289 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.125257479 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.14155613 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.130554242 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.144387286 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.116652404 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.135161112 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119520017 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.142082943 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.119333052 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.140909399 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115280232 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.130987956 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124282215 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.145460466 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117882099 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.144845095 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145954384 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116943852 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.141039513 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.127254241 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.141989704 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.118665789 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.140322523 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.121913478 seconds)
  done (took 77.866576192 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.203651316 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128601898 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139734459 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119322437 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166297335 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122552596 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139481564 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121916412 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.141330332 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133074953 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.138963062 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120264106 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.161076279 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.170042433 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.16537529 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.153058569 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11998069 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.141568212 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.120377389 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140953399 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.140910097 seconds)
  done (took 3.843435118 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.143274923 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.158117872 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.15452384 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.138741596 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.150512436 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.154064075 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.134975474 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.155656246 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.15923247 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132459442 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.160316546 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156281815 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.131126242 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.150874074 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.131261594 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.15038777 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.158917904 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.128859613 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.155213592 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.15481019 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.131506737 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.154699211 seconds)
  done (took 4.101787246 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.152634354 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.144091438 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.117959204 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.139112732 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.12416565 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.119374748 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.142442625 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.119313496 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.150872328 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.134425754 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110315216 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.11494667 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.138168967 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118911979 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.13488943 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.119114658 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.151037433 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.142823678 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.125143708 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.139140389 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110865774 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.139068383 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.120254817 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111858498 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.145515152 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.125081688 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.143112892 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.12312704 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.130985372 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.122504964 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.394435353 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.114617299 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.130244426 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109972993 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.131513581 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.12467584 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.142894148 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.11934716 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.139363183 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110776238 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.141932854 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.124210767 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.131211658 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.119763275 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.140588897 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.113733876 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.143477743 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.118935027 seconds)
  done (took 7.316716742 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.158184082 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.188650527 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.1472586 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.174767475 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138050796 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.154894348 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.145454321 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.154233928 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.144120422 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123691078 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.162952425 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.162023816 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12506786 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.149753541 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.147552632 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124591193 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.147613324 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.125070374 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.15084062 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123289701 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.150320582 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.146322448 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.137568122 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.157925879 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.148244689 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.124536996 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.144431775 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.128712038 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.157880691 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.151054753 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.129611873 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.151856462 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.159515536 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.128066774 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.144297051 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125945275 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.162090515 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.146210632 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125478596 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.142670866 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12691579 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149656671 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.127158489 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.162028635 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.146692746 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.127660926 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.145335102 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122160018 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.158754197 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.145824619 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.133709881 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.160582362 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.147374467 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.125830736 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.149254175 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.139796409 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.146044968 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.123035757 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.146011585 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.157716914 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.122195637 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.148191471 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.159756698 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.125215923 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.152537065 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.138879742 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.147244423 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.148800207 seconds)
  done (took 10.79291368 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.159811523 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.149922277 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.160546533 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.141088892 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.15106921 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12939334 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.148607026 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.148421178 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128951105 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.157593574 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128699467 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.321844908 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.146267273 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.136721087 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.152920354 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129838578 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.149362639 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.148974182 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128628089 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.149152137 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128789702 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.160563993 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.150317509 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.140655875 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.166709259 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.144352155 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130647759 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.150341953 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.159860063 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129804844 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.165347911 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.149229801 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13000033 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.16218948 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.165794617 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.131965315 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.141515203 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128877492 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.150671814 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129356115 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.144697451 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.161457892 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129570458 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.145473877 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128782577 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.148584467 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.162535124 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.165070223 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.138450497 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.157275586 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128732501 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.160631251 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.150264988 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12971908 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.161639758 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.171624199 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.163445226 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.140285507 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.149858093 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.162900953 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.14049524 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.170782262 seconds)
  done (took 10.160904051 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119036436 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.118323566 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.140774326 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118622837 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.140173063 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119300017 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.140094072 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118696449 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.139103932 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.118966106 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139992802 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.119586436 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138841958 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120857129 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.139645342 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119149858 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.138190897 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119414696 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.14036338 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119210341 seconds)
  done (took 3.43840589 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.129664254 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.164449124 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.12210191 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.152369935 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.122052532 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.151063833 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.121726513 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143541089 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.142463996 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122630259 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.155351878 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.134262255 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.144118326 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.1304756 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.153636646 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.152501167 seconds)
  done (took 3.113798759 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.14399408 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.165508128 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.258142114 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.146970715 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123567879 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.15326118 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.124461637 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.14703427 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.120467973 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.150138925 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126473346 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.146984892 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.123306602 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.144666231 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122283148 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.148397572 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.121355306 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.147412531 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.122823091 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.279927637 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.128304025 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.147694411 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124801205 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.150390353 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.125383123 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.150009579 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.151701274 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.123704558 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.146096651 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123755122 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.14619827 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131793645 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.142862999 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.128147301 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.146411635 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125508139 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.143383387 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.123276081 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.146235635 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.123292215 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.145041139 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124270761 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.143523838 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.146816854 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121238253 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.144198505 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.122677751 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.150057769 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124172214 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.146628701 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.124190234 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.149137611 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.129242761 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.153424049 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131757607 seconds)
  done (took 8.673537675 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.13571216 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.146809661 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136944021 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.141560809 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124083866 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.146331806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125565688 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.14692448 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.12635266 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.141996269 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125434945 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.146776836 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12542426 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.145657209 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.126350425 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.147054384 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120653052 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.146263781 seconds)
  done (took 3.333602967 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128135848 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.146011864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.128467245 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.144639273 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.123134234 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.144020619 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121355865 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.141840593 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122624113 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.143753686 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122667066 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.14343493 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121976056 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.143233019 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123337891 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.143324301 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123629478 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142971114 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.123676412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.142247837 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12374339 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.142272981 seconds)
  done (took 3.819719393 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.146278657 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.262053226 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.163393264 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.277834493 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.141462961 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.119049845 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.162509562 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.119111236 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.173479602 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118990271 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.139884269 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.139624948 seconds)
  done (took 2.839898077 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.156277484 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193245035 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124096996 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145368695 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161157994 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129980566 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151378817 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129593225 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164631969 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16811181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130920699 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16484275 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164261112 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162209385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136806154 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158155238 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15009297 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13042273 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146846467 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152277116 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.15087575 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164113258 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130714737 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151027795 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15062949 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141546631 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164892268 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169948707 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130721092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163189537 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.157605447 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132938623 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164024978 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170532021 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124772012 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164122407 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151206449 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151514798 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.159336184 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164208102 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124911625 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158787301 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163166279 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138196484 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163903105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.152143858 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137377316 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.15293523 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130694413 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181012474 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158839543 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163762375 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137051296 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163554458 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163431817 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.183237827 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167339226 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141602504 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158605085 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168535607 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161957467 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138209893 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164142382 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167905151 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136119684 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161752483 seconds)
  done (took 11.00030332 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173242701 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.148234981 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129976864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167147652 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164154813 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150962842 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130697765 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151519268 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131113322 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148773388 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208493482 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131378927 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163379784 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163537277 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13194513 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.152470017 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152349611 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141814193 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148258518 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183005744 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132140477 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163440756 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164040693 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163151962 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148567636 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.158893739 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.152258468 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131125543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153148666 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131271302 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.15812339 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152146722 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142617717 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.147834372 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164109626 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131634756 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1535777 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13777604 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.152507173 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.159937867 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142205095 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173652041 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.153307484 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130915111 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169452065 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153065484 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132635931 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148559604 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154909433 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12694219 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170096351 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168661392 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.149317731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163432026 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153228843 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132019931 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.154398126 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.153498779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132020559 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160895949 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142702365 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152360227 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186825853 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153082107 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132224706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16419602 seconds)
  done (took 10.914611767 seconds)
done (took 205.936562329 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.239200949 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.257859606 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.239467463 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.238218422 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.114927464 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.19135932 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.162247937 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.240169857 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.136680439 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115581388 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.137987659 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.118760773 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.251294316 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.115299788 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.136322224 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118648678 seconds)
  done (took 3.698141573 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.224363029 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.438934727 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.160603244 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119251129 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.145886638 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.121368925 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.142877527 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.122444481 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.142456104 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131058496 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.142108853 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.137644668 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131554369 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.13780663 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.120550456 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.141840454 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.131669258 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.144641857 seconds)
  done (took 3.734760126 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.154659542 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.274738498 seconds)
  done (took 1.321946178 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.158732825 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.258308127 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.387152095 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.206418079 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.142278987 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.17193192 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.209474193 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.163188839 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.236902262 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.14084277 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.165183785 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.139423107 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.151017039 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.153860837 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139880986 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.140237945 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.174624651 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138460973 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.158296387 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.124739187 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.171788675 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.14537072 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.131296235 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.161715187 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.225899397 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.140384682 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.147235762 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.147496969 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125002209 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.158025961 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.132182801 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.168603004 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.163151194 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.228249905 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.146588613 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.225606831 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.150665109 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.125183936 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.158608857 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123121942 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.150363954 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.126846786 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.157877898 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.140550136 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.124340532 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.152327402 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123979872 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.145709172 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.133836433 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.151271192 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.157363656 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131509321 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.244560569 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.13060774 seconds)
  done (took 9.705391307 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.118007744 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.195892019 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.143947006 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.31298603 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.167967868 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139365628 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.115702772 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.171223379 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.345651916 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.100462007 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.164443957 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128726844 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.363693805 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.354390248 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.639967065 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.494803424 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.948273031 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.161888674 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.183211497 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.200051696 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128753384 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164938084 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.164618489 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.583365873 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.122793338 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.142666675 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129022552 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.152207553 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.23006075 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.144487787 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128526191 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.270830949 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.368371145 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.299070085 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122453561 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.142238967 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120260893 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.257042394 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.386859111 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.315845471 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.211494143 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140666631 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120182741 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.149759268 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.163621505 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117368068 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.249853909 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.244523344 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.240755267 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.150157992 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129933073 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153311466 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14796288 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.226449257 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.117523744 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.491269107 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.510359243 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120710532 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.151722227 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13498595 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.376118499 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.145489031 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.338339743 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.17181298 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.288164018 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.14272227 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.123400608 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.236096434 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.142681273 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12617233 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.151981687 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130210623 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.148571546 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.226652775 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.55506828 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.149151509 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128051479 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143378987 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.296045817 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.143181545 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121049192 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.253222634 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122925339 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.150841738 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130711594 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148994855 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.240265889 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.343798607 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.150426602 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.150709249 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129122425 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.156883707 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122741098 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.322970819 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.332265227 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.224618927 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.315369922 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126757041 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.229029334 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.257240533 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126415866 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.260358248 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129104966 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.156238792 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125926768 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.325031696 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.190328463 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144960473 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128220844 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.152405624 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.193970756 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125702367 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.152523655 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.237153411 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.66973363 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.234822808 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.139548822 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126676584 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.154346513 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.230392427 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152979789 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.374301299 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131059892 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.256085987 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128417448 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.140870916 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129161118 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.248299452 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130503397 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.153408055 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126058628 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.15745871 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.35276099 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.316002475 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.152439217 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.34410088 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.214130721 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.149094588 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.241814689 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.152672836 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.237893729 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.158151676 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125546901 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145114682 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.096649511 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.156917511 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130622966 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.151892081 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.245390283 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122635986 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.144616155 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.121049332 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.140404377 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.111234327 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128333568 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.117872112 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.14587714 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.148800836 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129772927 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.15415836 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128017397 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.248457294 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.350024958 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131326686 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.15152276 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120651027 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.252076469 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124592799 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.144821559 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122193681 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.145421285 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130186039 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.15066895 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123472545 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.262385042 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.224726272 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.332814738 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.764455173 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.14452194 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12215038 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.343613388 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144904111 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.452665803 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131586426 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.336258892 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.25505492 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.118036099 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.492355837 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.256267365 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.245454607 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125672126 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.264605715 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119891782 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.15321655 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.225493549 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120895542 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.154243218 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.223657702 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.15288711 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.151371623 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.628575184 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123486164 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.340184251 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.118200995 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.239862694 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.147398702 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127252355 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.450900565 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.145085977 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.156663707 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.226156063 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128982184 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.145121737 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.943704085 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12203158 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.15775365 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12757146 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.330460948 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.255097872 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132280928 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.154270805 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.152629255 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.22695819 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.297491601 seconds)
  done (took 60.400688874 seconds)
done (took 79.751607451 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.328934846 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.233245024 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.511255307 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.216889173 seconds)
  done (took 2.29332082 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.351877288 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.201520878 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.300953983 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.143289939 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.31090001 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.141983558 seconds)
  done (took 2.376005078 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.249057719 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.204558205 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183202906 seconds)
  done (took 1.558595545 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.272727698 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252784659 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.399587615 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32063386 seconds)
  done (took 2.269970295 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.341958429 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.166142705 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.149013293 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.302863444 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.306013704 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.284615523 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150660359 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.212471782 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.177723997 seconds)
  done (took 3.063540343 seconds)
done (took 12.486938458 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.494548574 seconds)
    (2/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.440116162 seconds)
    (3/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.381589656 seconds)
    (4/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.41698452 seconds)
    (5/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.162542038 seconds)
    (6/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.227356984 seconds)
    (7/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.407519908 seconds)
    (8/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.486120336 seconds)
    (9/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.44509417 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.285956685 seconds)
    (11/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.131608706 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.163299746 seconds)
    (13/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.134698135 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.491859196 seconds)
    (15/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.281275642 seconds)
    (16/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.257035619 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.349146843 seconds)
    (18/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.213817972 seconds)
    (19/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.487688833 seconds)
    (20/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.299326751 seconds)
    (21/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.120868792 seconds)
    (22/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.397568503 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.177254593 seconds)
    (24/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213259661 seconds)
    (25/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.226535791 seconds)
    (26/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.254521333 seconds)
    (27/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.150231255 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.195696743 seconds)
    (29/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.230343956 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.141524841 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.164089092 seconds)
    (32/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.205933729 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.176545216 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.166869405 seconds)
    (35/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.162528769 seconds)
    (36/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.243925711 seconds)
    (37/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.317523478 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.135634287 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.157662856 seconds)
    (40/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.215923687 seconds)
    (41/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.197720884 seconds)
    (42/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090914564 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.170251468 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.1593292 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.154032158 seconds)
    (46/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.1409974 seconds)
    (47/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.121736291 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.14304326 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.149004773 seconds)
    (50/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.193509803 seconds)
    (51/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.207571508 seconds)
    (52/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.098630699 seconds)
    (53/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.159331924 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126620151 seconds)
    (55/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087516925 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.14384427 seconds)
    (57/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.097743994 seconds)
    (58/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.185292627 seconds)
    (59/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.228498051 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.263421347 seconds)
    (61/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.099003163 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.276157185 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.087973547 seconds)
    (64/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.116623141 seconds)
    (65/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.137030554 seconds)
    (66/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.189579136 seconds)
    (67/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184110005 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.094461244 seconds)
    (69/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.191462476 seconds)
    (70/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.098637264 seconds)
    (71/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.237850148 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.285762945 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.171609462 seconds)
    (74/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.234696256 seconds)
    (75/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.317337212 seconds)
    (76/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.163606071 seconds)
    (77/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.201679907 seconds)
    (78/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.091105719 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.159657384 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.096555993 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.169945005 seconds)
    (82/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.09176537 seconds)
    (83/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.118570944 seconds)
    (84/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.121772678 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123449707 seconds)
    (86/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.173973799 seconds)
    (87/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159185117 seconds)
    (88/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.098267245 seconds)
    (89/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.129443486 seconds)
    (90/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.139921634 seconds)
    (91/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.205721481 seconds)
    (92/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.088126988 seconds)
    (93/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.142960777 seconds)
    (94/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.121508818 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.124427764 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.151723833 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.125995282 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.169355614 seconds)
    (99/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.091969586 seconds)
    (100/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.190761759 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09753007 seconds)
    (102/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.121080551 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.149732728 seconds)
    (104/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.134975265 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.149059808 seconds)
    (106/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.156818964 seconds)
    (107/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.095307022 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.120646767 seconds)
    (109/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.16068852 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.124370703 seconds)
    (111/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.15749859 seconds)
    (112/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150476537 seconds)
    (113/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.182027896 seconds)
    (114/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.088634037 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.150270087 seconds)
    (116/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.097969581 seconds)
    (117/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09723953 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.149679998 seconds)
    (119/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.092680641 seconds)
    (120/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.189146259 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.136110814 seconds)
    (122/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.091876558 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.122785237 seconds)
    (124/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.137711087 seconds)
    (125/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.116611826 seconds)
    (126/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.095394463 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.088757376 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.097552 seconds)
    (129/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.113137571 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.124476932 seconds)
    (131/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.156937066 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.1249793 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.08929292 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.147863356 seconds)
    (135/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159921872 seconds)
    (136/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.115571471 seconds)
    (137/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.089418983 seconds)
    (138/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.089387484 seconds)
    (139/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.183499243 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.145616143 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.170412592 seconds)
    (142/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.098833448 seconds)
    (143/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.090020176 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.14727648 seconds)
    (145/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.097970629 seconds)
    (146/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.09208252 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.148133432 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.148754601 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133573899 seconds)
    (150/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.160308304 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124489923 seconds)
    (152/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.151411293 seconds)
    (153/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090249256 seconds)
    (154/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.127910609 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.116590594 seconds)
    (156/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.089470386 seconds)
    (157/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.099565943 seconds)
    (158/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.122550081 seconds)
    (159/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.099630058 seconds)
    (160/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.089831535 seconds)
    (161/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.182694043 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.124840386 seconds)
    (163/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.111366815 seconds)
    (164/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.135364909 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.148365305 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.122161135 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.160373606 seconds)
    (168/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.122253326 seconds)
    (169/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.099412293 seconds)
    (170/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.122912907 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.146975394 seconds)
    (172/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.160765346 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.099209892 seconds)
    (174/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.096147422 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.146547686 seconds)
    (176/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.121726932 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.123047142 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.092768082 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.135975322 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.169611862 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.08984676 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.150055534 seconds)
    (183/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092726596 seconds)
    (184/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.161399574 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.093150812 seconds)
    (186/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.090491396 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.149429267 seconds)
    (188/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.13627124 seconds)
    (189/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092863345 seconds)
    (190/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.115931991 seconds)
    (191/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.090579955 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.099352438 seconds)
  done (took 32.59050931 seconds)
done (took 33.520648611 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.313164125 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.116217362 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.16155567 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.134578846 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.279014182 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.171253132 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.173971774 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.138933728 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.168048255 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132984439 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.147680721 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.146222086 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.159146984 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.274727534 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.164287791 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126069104 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.148517211 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145122365 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.171814237 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.150257864 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.304714308 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125837511 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.169249176 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124041122 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.281457091 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.150503007 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.134105322 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.162050495 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147533006 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.158824806 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.159554089 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12458805 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.173109025 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.148444854 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145779362 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.134627664 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.146056702 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097800565 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.159054095 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.134945861 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.169519671 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135340325 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.161963962 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.126827511 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.159252933 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133651214 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146918683 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140485183 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.145844454 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.135658522 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.148870118 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.172594923 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.13331381 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.146713349 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.123178094 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.150189071 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144474797 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147089515 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.147327883 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146688486 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126316412 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147815375 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.135894376 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14765893 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133077327 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.15041375 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134377283 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.159914539 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.132449175 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.14870229 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124077649 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.157714818 seconds)
done (took 12.191708247 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.128349841 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.199554357 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.284926246 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.279896487 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.187400018 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.173540294 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.137699285 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.176558345 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.136443817 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.168436573 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.192764945 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160177771 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.307722721 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143095851 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.173389018 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.13554482 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.160298806 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.13658357 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.304601514 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.151221394 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.176852308 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.168185004 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155693611 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.167180408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12738226 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.193885689 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.15902546 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.136090421 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.151177884 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137114922 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.176534949 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.127766667 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.158143225 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.172835526 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.145896346 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.162292216 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.146869724 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.16049513 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.128357523 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.152217262 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.164216902 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.144467323 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.152885712 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146533159 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.16056127 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.144087038 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.158609695 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.164944998 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.131299308 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.159162419 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130793727 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.184840684 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14343479 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.171285189 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.169297646 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.141228434 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.167224897 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.141492923 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.159935212 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.140408358 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.153192316 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.128025987 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.155686418 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.180800017 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.135440967 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.167961583 seconds)
  done (took 11.805167612 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.153928862 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.190902768 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.164300712 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.139976041 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.164224375 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12062302 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.146469674 seconds)
  done (took 2.056447402 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.122960748 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.289970464 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.316557504 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.293193848 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.288930177 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.304778421 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.178005178 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.147644962 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164696852 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.164619398 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.293133226 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.324830133 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.159858597 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.168018572 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.297234446 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.122616151 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.324037156 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.123306043 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.168778935 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.295766382 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.168550554 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.159304894 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.16712223 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.124683244 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.309027216 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.125527066 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.377797344 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145254155 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.159952044 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.139588491 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.167076065 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.246374417 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.284490856 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.16721903 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13208223 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.315215852 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.287002628 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141178079 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.334839228 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.129906813 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.28619226 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.166474452 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.168456198 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141892345 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.16823522 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.2758246 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.147142803 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.168206655 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.166599468 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.299346237 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136792255 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.314525402 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136840446 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.165262077 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.137790357 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.169279488 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149017064 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.166833506 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.296823081 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.171608624 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.293668978 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.292194839 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.313792488 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.295552249 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.15328737 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.317128316 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.279773077 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.138614484 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.162674877 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.142178205 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.321277657 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.13945705 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.167333011 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.282004017 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.173344041 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.294820801 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.293002902 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.162306953 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.138358097 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.154964957 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.138907888 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.149081667 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.282494164 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.13918425 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.164975029 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.173147856 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140064948 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.166905232 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.129637156 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.177940226 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.163721238 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.139104281 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.174214333 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140910866 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.171288682 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.2985483 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.165572871 seconds)
  done (took 20.877885519 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.126890787 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.149444703 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.132752077 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.151460391 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.127133276 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.150098556 seconds)
  done (took 1.837615803 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.16886917 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.167297671 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151926931 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.167366185 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.224303803 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.296547976 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.304847775 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.164584337 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.189998742 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.175679044 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.323528641 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.303317133 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.29925244 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.172641298 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.304639647 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.1701759 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.309367553 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13752524 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.177954473 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138045697 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.167974364 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.172355227 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13755611 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.287810063 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.169304072 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.170678199 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13410588 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.177984784 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149520271 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.162596305 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.171019234 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14176258 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.159652495 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.137744192 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.334762333 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.135647836 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.164940388 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.144082149 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.171273177 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.166922693 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.307209248 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137869278 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.178685711 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.171404479 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.138279106 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.160323949 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144091368 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.161017892 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.307460047 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.171569792 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.144432194 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.170645164 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.166541848 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.145826226 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.161121676 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137900288 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.170309647 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.310694188 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.174568917 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.134161125 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.1711175 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.167830769 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138103805 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.172782796 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.142007583 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.171723652 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.13527649 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.191736673 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.163537765 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.144893915 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.171285679 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143741254 seconds)
  done (took 14.315449193 seconds)
done (took 51.864021816 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 10.178684874 seconds)
  done (took 11.182218913 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.372425921 seconds)
  done (took 2.376758176 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.462257317 seconds)
  done (took 20.503473732 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 1.798266386 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.603144226 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.460304973 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.20106656 seconds)
  done (took 5.063263492 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947294625 seconds)
  done (took 1.971496934 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.505638252 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.311744881 seconds)
  done (took 1.829042366 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.757514835 seconds)
  done (took 1.774969638 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.878023176 seconds)
  done (took 3.892583617 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.386609149 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.29611489 seconds)
  done (took 1.710826495 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.764992043 seconds)
  done (took 1.791029362 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 64.799189131 seconds)
  done (took 65.826410329 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.291317283 seconds)
  done (took 1.331618078 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.356323874 seconds)
  done (took 1.390733417 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.078900327 seconds)
  done (took 5.106175164 seconds)
done (took 126.767649646 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.141415539 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.169824598 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.143695299 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.166989601 seconds)
  done (took 1.641825123 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.156682774 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.172048764 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.153785548 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.169465126 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.157875942 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.172246694 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14187265 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.177373324 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.167567329 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148217312 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.173234529 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.147496899 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.175434809 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.142632244 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.168089322 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149534518 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.17453239 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.17111324 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145534708 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.171339805 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.143282327 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.173056644 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.150421503 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.171743418 seconds)
  done (took 4.903262768 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.137636637 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.157041409 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.134148693 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.155318145 seconds)
  done (took 1.616456115 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.160984578 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.19741903 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.167940211 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.184014462 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.171846295 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.193378501 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.164796864 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.137923195 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.166030121 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.160085162 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.204937513 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.193688178 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.169221519 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.177814511 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.162359334 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.16137939 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.151936151 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.20015129 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.15831259 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.185695192 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14361072 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.185247789 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.165978579 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.162273359 seconds)
  done (took 5.15744132 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.252798208 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.18500956 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.206275742 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.237084478 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.182093058 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.16706049 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.171248104 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.173673482 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.179419674 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.156353542 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.174929088 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.243740143 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14569653 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.173738504 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.147695527 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.178105121 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.19086254 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.147784925 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.22563414 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.177807527 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.144932746 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.183115814 seconds)
  done (took 5.084053356 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.143320599 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.156893206 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.130357499 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.154541021 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.140131298 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.159704248 seconds)
  done (took 1.921524728 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.130040489 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.125019529 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.152242125 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.124343536 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.156825739 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.124745612 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.149855579 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.125365732 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.150436658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.125413085 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.151384753 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.124299536 seconds)
  done (took 2.677650768 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283702697 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145747235 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.374660772 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.435581019 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222215269 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225964838 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.33968712 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228006788 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.254918381 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191951365 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260076578 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189943149 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214187922 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270681209 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194200673 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.212332239 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231175207 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286565421 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197292547 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294257182 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219634494 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256343003 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.264832211 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181387941 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190306183 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236218796 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.1683323 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154131751 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235542592 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232743983 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2535937 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207750161 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2008643 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269874263 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.371112835 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257093099 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.305021679 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194525435 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.218847383 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.262198146 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.323071251 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196410241 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27554314 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205097938 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18646631 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271042638 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217565027 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.254140278 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.157310576 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197733944 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26924171 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239644371 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.244202772 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198217455 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360586845 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189656869 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.19905122 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206635844 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284787611 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281222144 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261475779 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.14545886 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231268306 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288097041 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287172552 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.197278439 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.236357151 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150424367 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227471244 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285718876 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252523522 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219829002 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.342971477 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195465569 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237905742 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228722801 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198636502 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30290053 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249731897 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.141169767 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219393262 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190502228 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151123337 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.246872525 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14302524 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322324788 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15389024 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.425813157 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239923456 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217238449 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229335238 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224013054 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194570971 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20668117 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.1443106 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171739576 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.222428076 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223404667 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181149572 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189012793 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192392692 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.179031216 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213329712 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.143726797 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25104603 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.183409985 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201480719 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253118291 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.187810825 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261790622 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207475755 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.222160025 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237853431 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268055736 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154464335 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185280684 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297419735 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246095331 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.185734652 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236273901 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.276930537 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.204792523 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189262336 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229795423 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258950667 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16886023 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302678714 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176889882 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18932205 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.196724877 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253894717 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223712457 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.190435529 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17645519 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.242313356 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263903881 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.17948302 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165417614 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294618191 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152106214 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173197932 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161631308 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191322025 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.200961728 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.175561991 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.190295567 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216069585 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246591902 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242017718 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226138184 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174464225 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303301628 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155228399 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.244696689 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206295088 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.139677818 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.246661814 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300172879 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154977599 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242510168 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.230120884 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237975583 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240053012 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175451222 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247849465 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157638272 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.170910491 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229697366 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243625533 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232623576 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.267491767 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234169932 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.236612282 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.243923197 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210183432 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241942359 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.253549631 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222293911 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172136624 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23839051 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237296446 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.171388624 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14585074 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.180070105 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187762913 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156143529 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188647453 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260739163 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233761919 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234133265 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232172122 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189173079 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.265276541 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.147453877 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22561228 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.24591528 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189160228 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.2674023 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263582262 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262765119 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198510998 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232081188 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.14321046 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175467425 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.189058608 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198445068 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190390971 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194163866 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201368833 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.264159919 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243690696 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180619198 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279848995 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232602345 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276349877 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.145249127 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.216932195 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236036859 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24916709 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.217643179 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177556028 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.227311728 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268078433 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212742696 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265503735 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234284681 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252460107 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276268162 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.243673585 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183433383 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17865568 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218761129 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197941791 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223596241 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176266619 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19293026 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21588311 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.191549708 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172108129 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300102967 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173253108 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281699858 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.189259612 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278171896 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144609311 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201687309 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257893689 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205062878 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.116955864 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239794739 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272084809 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207906396 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221702494 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239162676 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155354532 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.377639363 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257857511 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2501617 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199296922 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195954807 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256715187 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191846254 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22816414 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248013033 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201079481 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280957516 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250388475 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.198700896 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192465816 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178154289 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211525013 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.197116058 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.217624811 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.235466047 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.17522759 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301185507 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162424007 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249893021 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246002442 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.199912154 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.171611907 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190490564 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.338791895 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223757783 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270128764 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.212338803 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.230704687 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246925115 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174800231 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14790568 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.180076391 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251813376 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150300118 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242672829 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.222213872 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239000505 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253449409 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222381281 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197155448 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.149029147 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229327696 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210891204 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245244664 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20427863 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.193497581 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265284293 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148829401 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184988888 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223594705 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344046544 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175699578 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238614771 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.147944582 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.339675178 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148632798 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186581478 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220816488 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237555348 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.16053885 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.239943641 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241464994 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195782509 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220941573 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1626952 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235660135 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244240067 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235328947 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24822982 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.205289723 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229371347 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228085918 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243423134 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201096243 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.176586143 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223195631 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271575736 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.24340302 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.186841218 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235533862 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236237164 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207692961 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282812221 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163399131 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246420303 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179046512 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234025989 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167683474 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176828562 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22605193 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.22210904 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154477326 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270971888 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227121549 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18152043 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179114467 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187889675 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249103744 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210549959 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.18295462 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268627107 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.147684003 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24516707 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305346302 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153333815 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244010848 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203836605 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159150895 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198668351 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199977385 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165710807 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.226620438 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252432799 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.184456487 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245851445 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234568447 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230587772 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222430171 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174455006 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.279603992 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.178823089 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263623398 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179045464 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.30124585 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178716931 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245954601 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233615183 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210630066 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235335932 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209516727 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.283104856 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231653201 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.213098747 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185511789 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200964942 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164504997 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.189597085 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213985731 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234425411 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176113806 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.189672304 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.242256085 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199918719 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.180030226 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196425886 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274235152 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212625922 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.804547352 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257319035 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201991538 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245245153 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25475139 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177123851 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.233973468 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238426199 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168866725 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225073314 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.185541052 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.162770559 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305217444 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.144749413 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224356044 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257515638 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233729862 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237350225 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.164010172 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242040066 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200396712 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259988228 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149774912 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.215488785 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249817242 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188831135 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.153048792 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255954895 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227750121 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.227344693 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201474992 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.199344344 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267198783 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.175691476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158373771 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.341242067 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222423257 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262291804 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.187208304 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190565015 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181980614 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222022437 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.238392186 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251522977 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.181654804 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153498081 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.20625926 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.200149544 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1617404 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247663128 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237666326 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22804094 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249640055 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.15628391 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.321428374 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19546501 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251640799 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.136827526 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.184452436 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192319009 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161434775 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211560003 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237077843 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277917814 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.239651425 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.208150492 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154814869 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.176307196 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177570974 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194285949 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213575833 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247488595 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210636632 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114527902 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199105487 seconds)
  done (took 109.487657337 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193697536 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.195586254 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.212734245 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.26987943 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241597064 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.341669356 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.272107228 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292579734 seconds)
  done (took 3.140244091 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.220139935 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.187583491 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.27673568 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.169975176 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.156352914 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.601306004 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.267585634 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.17508707 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.194314514 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.277841337 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.208869438 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.717443887 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.177219324 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.24791735 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.246880626 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130253924 seconds)
  done (took 5.377740144 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.404740436 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.65656331 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 31.848237057 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.793195 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.343558981 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.297797227 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 4.21920092 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.261087252 seconds)
  done (took 43.952362658 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.203365456 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.225489778 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.557151437 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.413399847 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.248105782 seconds)
  done (took 2.779792528 seconds)
done (took 188.763199082 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.145282371 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.17660486 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.148012747 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.177197324 seconds)
  done (took 1.767709986 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.222333022 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.132327721 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10481717 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.101282503 seconds)
  done (took 1.687813304 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.573878843 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.102586788 seconds)
  done (took 1.84469701 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.181352881 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.19565428 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167928477 seconds)
  done (took 1.690744472 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.158353657 seconds)
  done (took 1.297639874 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.141274459 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.177243769 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.328061061 seconds)
  done (took 1.785658568 seconds)
done (took 11.208974549 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142118562 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.012684644 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428899164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.181013521 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.770411098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.42086993 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.488494382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.215276817 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208601667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.161242921 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.151608106 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.742512299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.470046715 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.915381907 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.436905699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.915283501 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.746877868 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.135649652 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.167599664 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.134510611 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.449233523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.131063105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.161420667 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.134512008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.744668439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.475075217 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.132536826 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.952664651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.131293651 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.167318833 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424444477 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.160462584 seconds)
  done (took 22.036367125 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.135084356 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.238492758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142301406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162562083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.13694856 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.161159531 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1441082 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176750619 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.242407362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.163113759 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.152346817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.159600533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.140048256 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.160141035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.155053866 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.158949193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136066395 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.164592368 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.141015279 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.163150775 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.152246455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.159724921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135385163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.164396813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.13183101 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.186392348 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.161507549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.14787509 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.159467695 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.138186497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.166138585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.13378894 seconds)
  done (took 6.212043864 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.185936354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.249055344 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.172840485 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.171573843 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.221386952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.134774191 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.270682746 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.220429707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.243303286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133100725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.181852175 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.160372768 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.186432297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.161193543 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.15555819 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.160190133 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136995773 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.163561931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140659297 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.163515696 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.181017921 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132327931 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.162819448 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.135952764 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.160505327 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15977325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.160619098 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.148901687 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.16090859 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.138661767 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.167795709 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.132541925 seconds)
  done (took 6.605942698 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.150699681 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.186921396 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.159693771 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.188480672 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.143888758 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.180519394 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157150221 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.171681608 seconds)
  done (took 2.487765378 seconds)
done (took 38.4802668 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.159941707 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.180879845 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.156936019 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.177742575 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.302113838 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.138998332 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.180943959 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.139984701 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.176042987 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.156476253 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.160129302 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.141193234 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.182619871 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.143679584 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.299766053 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.179943344 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.310432912 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.303514225 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.170149081 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.150022569 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.17168978 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.311715128 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.146640435 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.170882554 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.290835028 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.136139449 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.327534877 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.14438987 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.143317317 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.162304299 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.305211019 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.176266689 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.141985444 seconds)
  done (took 7.576641904 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.330949418 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.303127862 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.140787387 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.170774929 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.310012258 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.140982803 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.335035133 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.170890167 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.141292688 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.170424325 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.140217342 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.367687539 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.349113319 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.329546586 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.338388632 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.326506744 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.335318339 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.309552283 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.33199983 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.33062277 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.306089902 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.170820395 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.355096901 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.309609343 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.140070396 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.171639844 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.339043394 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.351788032 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.339818841 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.30699693 seconds)
  done (took 9.325080724 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.149551979 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.186405059 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.164076172 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.235850033 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.198751671 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.153387383 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.18096149 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.165570077 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.193593403 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.134630179 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.182143903 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.174090364 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.181724785 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.175853368 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.13511816 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.187716399 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.166012242 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.164724858 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.142872568 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.188088304 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.156982323 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.188862424 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.149845731 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.176113945 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.13350734 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.177076638 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.170481036 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.145415349 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.171355519 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.147156073 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.165061423 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.140692193 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.166641302 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.171633488 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.165708503 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153116678 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.199324788 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.145918625 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.17672394 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.193586768 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.141027361 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.166746902 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.162231244 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.223723142 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.136550325 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.179326645 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.147574911 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.175875787 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.13257042 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.187593967 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.207971349 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.137342046 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.192640419 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.135178921 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.161941403 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.143651857 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.163652864 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.137391494 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.176475165 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.139116085 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.199017767 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.143606181 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.173452993 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.136661303 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.172880224 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.134919811 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.163150426 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.142779749 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.193401549 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.170706345 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.171668408 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.163464153 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.149860957 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.174902759 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.144205908 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.175735337 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.133592477 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.17202411 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.145578219 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.170834364 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.145056784 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.168756795 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.138668472 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.184407249 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.16266014 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.183754791 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.178701775 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.150055744 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.16788811 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.136578541 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180583369 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.136927957 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.168121449 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.145734873 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.166032077 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.138740129 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.179764549 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.147385852 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.161420667 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15674172 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.169880751 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.134276852 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.186432507 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.136934522 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.168518637 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.147018765 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.207646657 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.165471042 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.150618176 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.179944879 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.135148122 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.172043596 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.139418287 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.163657124 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.156178519 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.178038701 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.142068764 seconds)
  done (took 20.341947604 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.43870502 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.443475738 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.252384399 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.50557756 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.192197835 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.325233956 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.437179477 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.456656045 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.135227112 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.210853908 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.23891453 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.37592434 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.167828395 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.205273799 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.411840151 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.513934698 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.207101755 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.211496867 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.210703121 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.160994356 seconds)
  done (took 7.279314011 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.159242108 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.217104633 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.201099176 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.169149862 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.1766182 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.155019922 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.165228692 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.191328101 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.147918949 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.177221 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.138737405 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.19624821 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.144953698 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.181546061 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155429611 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.192477549 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.144371641 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.175741762 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.191179409 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.143444498 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.147465819 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.165755646 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.177452733 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.198609055 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.158212088 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.182403224 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.134025982 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.173453831 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.142850078 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.173658396 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.142626447 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.186822989 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.144500568 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.148664296 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.148312435 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.181541661 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.141216911 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.168589385 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.141975597 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.16795348 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.153855669 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.180302886 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.143572936 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.140331533 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.15506078 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.120296373 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.183623211 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.150054207 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.151298429 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.158415745 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.180844156 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.152100627 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.175424613 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.190839421 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.142197831 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.187026087 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.149830786 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.182121833 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.14343479 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.163294089 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.133017683 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.170620999 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.144567336 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.181319357 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.148178131 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.1907304 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.184906684 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.135778719 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.172162465 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.140138561 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.170539564 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.154574545 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.192157257 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.144745711 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.172329596 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.152917072 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.174920917 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10552522 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.176247063 seconds)
  done (took 14.092717726 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.171734129 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.175843939 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.158345276 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.20905745 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.154436398 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.172915215 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.145902352 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.189270577 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.153367688 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.187318583 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.182362156 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.153255313 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.196694007 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.145696531 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.175123457 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.154490386 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.181089579 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.187545986 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.188839238 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.205500853 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.155008748 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.170546408 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.151973655 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.17908227 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174135132 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.180510385 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.20179717 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.15302344 seconds)
  done (took 6.043670079 seconds)
done (took 65.80569324 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.339838328 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.608605257 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.301311849 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.300449659 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.338016099 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.328049887 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.324223423 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.29827543 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.775384356 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.259476851 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.299663595 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.298938783 seconds)
done (took 29.652634738 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.455362375 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.518896363 seconds)
    (2/2) benchmarking "String"...
    done (took 1.714989734 seconds)
  done (took 4.421816559 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.290471505 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.292239468 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.664741934 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.289934286 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.289194457 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.291882997 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.292500604 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.305149908 seconds)
  done (took 16.60426099 seconds)
done (took 26.94891166 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.332355043 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.6170087 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.554095811 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.264332077 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.293011562 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.292182406 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.313410037 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.351443853 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.301106866 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.265424186 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.812039017 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.561758796 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.315689237 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.68453663 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.264517436 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.310729039 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.312392868 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.621792966 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.294051429 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.262471436 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.285201072 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.269841297 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.318511593 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.286948012 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.306850962 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.298439766 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.36890152 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.291848077 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.58963364 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.315094329 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.262219658 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.311745439 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.36618665 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.294874439 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.332879621 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.308415406 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.583788972 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.308228931 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.285637021 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.301208625 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.584759417 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.313273567 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.296712173 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.30134698 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.268460605 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.351851307 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.286049923 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.480390628 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.313844449 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.322586552 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.392505639 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.703523472 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.306451051 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.295022014 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.295116579 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.628281921 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.299034256 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.358778306 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.321343377 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.295592966 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.29572748 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.294175049 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.39500903 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.300722948 seconds)
  done (took 150.593280616 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.294510845 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.299421177 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.300387291 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.314486989 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.299572104 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.299347424 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.296450966 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.300724136 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.305828696 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.301951037 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.297664459 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.29948557 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.299599271 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.311113515 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.30631074 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.318986304 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.297504103 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.296810649 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.314176614 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.298891989 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.300398046 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.299786586 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.300473266 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.301865762 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.30566827 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.396065938 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.339964181 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.303913996 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.307770353 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.298230942 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.311351604 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.318068799 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.071611342 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.261964458 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.31976238 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.325359321 seconds)
  done (took 83.998406852 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.299348682 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.296903887 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.298814605 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.3356174 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.298666401 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.2988431 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.948050098 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.923447947 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.337185825 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.885159699 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.835922571 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643975746 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.298716268 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398950035 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.312309198 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.299121907 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.395665678 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.324781175 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.300588783 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.298092585 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.950304365 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.317393853 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.540674063 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.487374127 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.316327237 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337263209 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.687501322 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.300535075 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33651898 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.644188203 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.355548845 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.299922637 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.7342961 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.995090577 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421397651 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.302492517 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338260892 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.300031659 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.589909583 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.29921284 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.300269539 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.302694149 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.024139732 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.300738453 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.949859476 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.303730104 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.312733624 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.301885805 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.300048351 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.300277081 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.725859553 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.074999622 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.317951746 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.302370434 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.304846168 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.300553513 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.30108298 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.337154536 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.697162748 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.245058118 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.302475616 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.306119794 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337886962 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.302550974 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.382030215 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.301632491 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.619705621 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.366500796 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.871614889 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.955574449 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.305955108 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.405044245 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.429616993 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.30217411 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.302652314 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.303524002 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.303500047 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.417484933 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.302596092 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 7.116919897 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.490236992 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.321337022 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.913537958 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.408952075 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.302178581 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.75288338 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.301586116 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.302730955 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.137201316 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.406939388 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.304077634 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.302534631 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304250492 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 7.120662482 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.929138894 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.642942305 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.307915692 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.302700923 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 23.383610095 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.30644721 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.30330079 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 6.512487586 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.924365661 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.050292638 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.304945552 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.422958744 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.491415284 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.324850528 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.303990821 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.914125672 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.309895972 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.364345774 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.305719464 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.709386647 seconds)
  done (took 400.197456474 seconds)
done (took 635.967841737 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.273500492 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.277389045 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.278309134 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.277486753 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.279699883 seconds)
  done (took 12.57569772 seconds)
done (took 13.765505237 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.59094065 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.593152383 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.405444575 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.598963388 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.372046543 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.606707529 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.577837097 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.367052123 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.500047597 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.434341336 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.502785375 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.448392285 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.372152074 seconds)
  done (took 20.559326714 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.699606144 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.321688254 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.456991772 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.670759669 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.384374438 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.707460355 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.732186265 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.321236381 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.561232682 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.380546297 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.361694808 seconds)
  done (took 19.789351636 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.73089909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.321096279 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.462134675 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.66974697 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.387742952 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.705092526 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.747517264 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.32154019 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.558849907 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.363368694 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.360997373 seconds)
  done (took 19.82148093 seconds)
done (took 61.361813819 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.37230328 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.446811358 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.36929738 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.350208431 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.349478379 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.34829904 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.351145561 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.348494595 seconds)
  done (took 12.128422407 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.349032863 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.348490406 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.348213833 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.349863834 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.349824443 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.349333668 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.348735827 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.349721427 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.34839598 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.348868735 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.348405688 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.348569885 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.349633008 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.350758012 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.349871796 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.348868177 seconds)
  done (took 22.78024936 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.35052586 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.349375713 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.350004913 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.347880342 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.350280716 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.350643192 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.349404069 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.350079713 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.351189701 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.348523719 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.350977104 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.350352374 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.352054057 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.349129174 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.35165191 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.352076964 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.349590615 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.350179446 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.35215365 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.352355212 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.349991364 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.350573561 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.350181681 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.35238734 seconds)
  done (took 33.606637339 seconds)
done (took 69.706980338 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.319904997 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.327786585 seconds)
  done (took 5.842194179 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.448303307 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.449471263 seconds)
  done (took 4.093893714 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.352861492 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.351919193 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.35155546 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.351707784 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.350633974 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.350260253 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.352062508 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.354942483 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.353185975 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.352392996 seconds)
  done (took 14.716949411 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.351751574 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.351842018 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.352150647 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.354369295 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.351976462 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.352117193 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.352771047 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.351820507 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.353427625 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.35356179 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.352655111 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.356305645 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.353439359 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.35223725 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.353339346 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.354417346 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.351329942 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.352894038 seconds)
  done (took 25.548248419 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.372403432 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.379395872 seconds)
  done (took 3.948268002 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.533035032 seconds)
    (2/7) benchmarking "second"...
    done (took 1.434513356 seconds)
    (3/7) benchmarking "month"...
    done (took 1.520777188 seconds)
    (4/7) benchmarking "year"...
    done (took 1.503019902 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.436330207 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.380792487 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.436147083 seconds)
  done (took 11.439857051 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.466736867 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.726862264 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.994381548 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.286101745 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.537477427 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.724762625 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.283931707 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.687153233 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.681099741 seconds)
  done (took 17.585622027 seconds)
done (took 84.370129122 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.315166056 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.377661712 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.344284004 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.336471628 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.75321373 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.315001021 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.317860462 seconds)
done (took 16.958503453 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.286242755 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.293149779 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.292985651 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.327946801 seconds)
  done (took 10.398161946 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.33089096 seconds)
    (2/2) benchmarking "read"...
    done (took 1.729265153 seconds)
  done (took 5.258331943 seconds)
done (took 16.855837185 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.355821505 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354555422 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.354889403 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.354770254 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.353618781 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.355380108 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.355765563 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.356129645 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.356914381 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.35686249 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.35831407 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.355775969 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355471391 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.357088287 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356570133 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356817023 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.355216121 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357235582 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.356374159 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.356882883 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.356537587 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356544502 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.357327702 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.359464426 seconds)
  done (took 33.750033787 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.358567734 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.357842851 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.355286591 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.35680501 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.355841759 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.358382166 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.357045823 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.356952795 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.356595067 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.357993709 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.356945321 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.35639588 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.357846483 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.358066273 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35732854 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.357339156 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.357850465 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357339924 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356987924 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.357694439 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.357925403 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357210368 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.357160013 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357347187 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.356998191 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.35757487 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.357946286 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.357085003 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359203709 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.357715461 seconds)
  done (took 41.923163135 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.366801044 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.365354211 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.358452077 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.359508287 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.36051428 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.358887607 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.358835157 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.360929068 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.360411684 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.360046902 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.359218934 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.358810223 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.35998656 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.360273118 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.359404572 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.35858722 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.360865721 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.359866991 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.359649087 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.359534757 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.361705703 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.359929429 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.360590826 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.362043665 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.36094555 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.361219049 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.360059404 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.362087316 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.363695342 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.360081963 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.360432008 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.360712071 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.36149611 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.360010306 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.361756757 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.361881633 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.367479621 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.367732517 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.361220027 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.360239385 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.361375074 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.36161917 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.363144573 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.361235112 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.362203532 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.361220306 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.36186983 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.361419354 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.361057995 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.361570281 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.362857735 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.362370662 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.364402136 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.364902967 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.365319989 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.3623583 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.363771119 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.363243887 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.364323844 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.363627316 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.364168167 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.363650853 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.362658269 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.363999501 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.36451451 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.363668453 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.363747652 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.363407944 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.364334249 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.363664612 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.364231932 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.367540943 seconds)
  done (took 99.269275516 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.368454886 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.363818542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.363419538 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.364968548 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363746605 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.36465105 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.363177748 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364185628 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364918612 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.3632779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363858141 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.363950332 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364392008 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.362091716 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364927062 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.3643515 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.365809857 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365520783 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.365639583 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.366557158 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.365315449 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.365634904 seconds)
  done (took 31.237353996 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365151184 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.367643539 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.363958154 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.369129483 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.3670406 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.366805234 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.367037456 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.367543317 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.365873342 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.366076091 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.366802091 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366942821 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.368770009 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366354409 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.366660034 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.368067965 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.367712124 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.369411851 seconds)
  done (took 25.814006517 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.367039621 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.366065126 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.368266384 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.366281983 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.365821031 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.367013641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.367663793 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.36781912 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.366651933 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.373308785 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.368118669 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366376408 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.369914638 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367573837 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.368383368 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.369421559 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.367802358 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367136911 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.369488256 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.367834066 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.368567679 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.369667679 seconds)
  done (took 31.30623189 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.37343869 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.3693286 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.369549648 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.369608035 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.368565444 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.369069489 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.369406892 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.368376873 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.370227107 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.368862619 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.368942308 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.368881336 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.3706618 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.371620092 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.371245743 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.370848207 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.370553616 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.369470727 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.368970384 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.37015112 seconds)
  done (took 28.608901943 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.370785698 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.369661463 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.370749451 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.37028766 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.370641756 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.370321603 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.371438924 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.371319216 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.36993601 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.37128241 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.371232124 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.372702352 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.372331705 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.370156638 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.371703692 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.370917908 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.371460994 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.372855026 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.372343368 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.369952003 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.37270326 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.372923191 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.371333464 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.372238257 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.372427248 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.371481527 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.371206353 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.371787782 seconds)
  done (took 39.609075499 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.372336943 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.371610664 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.372177286 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.371690632 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.372994918 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.371840651 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.372005826 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.372305584 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.372200822 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.371706416 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.373153667 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.37342975 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.372069939 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.373116302 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.374034785 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.372782182 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.373300683 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.372349655 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.373212962 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379323726 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.374409273 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.373245299 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.374986721 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.375751134 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378718969 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.375903319 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3745169 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.372638099 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372967261 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.379815828 seconds)
  done (took 42.424764002 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.37345629 seconds)
    (2/2) benchmarking "in"...
    done (took 2.346623827 seconds)
  done (took 5.934312387 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.374070474 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.374209178 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.374542321 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.373332601 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.374109375 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.375105312 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.376696017 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.375447604 seconds)
  done (took 12.210842035 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.367056174 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.375351782 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.375139954 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.375058029 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.378255503 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.366642015 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.382685256 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.401930092 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.368001545 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.368411094 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.374993426 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.374646106 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.371865724 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369413317 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.369938524 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.373139769 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.380221605 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.376211388 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.377017986 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.376275712 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.377339884 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.371261806 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.376558499 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.378518315 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.37000201 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.38879155 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.383834704 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.381906666 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.369921413 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.382542012 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.372224917 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.380082621 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.37714803 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.379658754 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.377218151 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.377322564 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.387751822 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.398022123 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.385049314 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.382554165 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.37906196 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.377300354 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.37649222 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.373863464 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.379114691 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.382597256 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.378854113 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.377793783 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.37002387 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.378158843 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.385313943 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.370858683 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.381248271 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.383235186 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.383026501 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.390930439 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.409734436 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.373272048 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.379360811 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.390369334 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.396785024 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.388552622 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.383193422 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.384014475 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38790694 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.398897025 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.394912929 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.408702741 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.381709224 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.379033185 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.388081823 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.398599082 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.392165652 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.384785803 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.384934215 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.38014464 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.375052303 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.383157802 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.391335449 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.410026512 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.38485739 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.381419732 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.39178334 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.392738141 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.375554461 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.386159302 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.381615078 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.379802208 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.374642544 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.394530897 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.409911973 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.383034114 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.373800258 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.375423998 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.377988011 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.383814311 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.372195584 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.377971459 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.386011796 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.381331593 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.384135929 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.38205864 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.389156959 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.3875988 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.383742443 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.390301867 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.390081797 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.375881737 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.393157118 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.390521448 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.382862444 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.378222258 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.385184387 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.385977715 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.380202609 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.387792889 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.388214242 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.383895047 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.387237162 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.383884571 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.393495151 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.406635718 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.389467893 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.382913567 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.387087212 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.39580592 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.384500012 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.386909327 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.391237531 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.390266807 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.386811689 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.385757435 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.3900892 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.378295662 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.38699593 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.378438766 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.388210539 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.384823447 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.385594844 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.386966597 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.383813402 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.382337796 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.388929556 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.392539862 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.390607423 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.387743093 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.39969112 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.385744025 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.391888451 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.387451854 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.39015548 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.385580177 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.380802824 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.39096529 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.37764984 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.388726597 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.37956824 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.389496038 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.385457117 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.385261701 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.388146356 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.378645077 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.384100241 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.388373759 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.394439335 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.385448178 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.389455321 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.387054108 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.387626318 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.379288316 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.389571048 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.378213668 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.386867632 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.39498298 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.38601012 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.388755721 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.393298548 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.393829341 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.387899397 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.387366159 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.384186913 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.392951646 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.392757208 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.397554675 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.395782383 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.388466579 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.38729052 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.381869091 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.383368932 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.389963347 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.386138978 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.397111532 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.403244924 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.401528575 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.385525212 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.393159773 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.380792138 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.392774529 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.395829107 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.395231754 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.388949042 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.388434242 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.383117085 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.391671105 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.385572984 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.393268166 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.380893618 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.392010325 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.392398363 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.390225321 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.391526325 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.382140704 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.386848216 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.393105157 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.390481429 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.390128311 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.3845804 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.393862306 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.382150063 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.386601396 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.396865272 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.391557824 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.399712492 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.398000053 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.394772058 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.401387355 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.390756534 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.386385867 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.392352128 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.395297824 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.390830846 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.406042976 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.415459536 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.387416375 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.406292169 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.418391473 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.387375168 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.398887875 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.400691945 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.399568898 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.386281454 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.401606587 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.393255246 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.393578541 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.392442503 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.385353193 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.397268745 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.403650562 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.402396003 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.386173689 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.396878821 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.387162571 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.395782173 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.396207088 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.395166033 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.39524698 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.402988257 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.402005102 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.393602567 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.387447315 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.398543418 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.395068465 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.392736884 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.386741638 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.399119958 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.401786987 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.392834103 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.39728397 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.391543506 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.396639964 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.387450388 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.394939887 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.3873304 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.413884754 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.416539911 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.405526569 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.398595799 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.398788212 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.404751121 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.397383844 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.391038413 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.390346636 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.389907474 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.389875556 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.391098547 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.398722142 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.389272546 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.396460751 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.400435348 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.397643722 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.401498682 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.399978796 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.391504953 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.399514003 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.394634261 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.395178745 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.386871263 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.397086808 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.395096122 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.406773585 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.397340333 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.391682001 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.410253357 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.424400966 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.392850586 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.392356877 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.39075367 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.388380114 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.396532268 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.405343794 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.394545494 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.405197337 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.395318986 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.399418739 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.392408211 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.411930107 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.407388048 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.397493075 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.403953464 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.399047952 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.389323251 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.391157283 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.401021387 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.408545318 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.430551609 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.393095309 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.401682504 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.40038625 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.399842047 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.398466313 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.396902498 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.39837524 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.398668294 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.409786747 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.425153087 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.395566504 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.407743331 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.40885709 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.400811025 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.398865875 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.394487735 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.408022557 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.410543198 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.398745958 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.398106491 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.397017386 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.399835621 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.401575368 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.399828637 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.400956783 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.399839672 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.410788131 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.426136941 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.403572898 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.398827393 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.412791599 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.410628265 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.412602957 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.434482276 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.396416821 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.405300283 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.400221983 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.395942389 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.395575374 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.398631208 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.403626257 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.394531106 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.406252429 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.400885615 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.404629178 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.40773516 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.407613007 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.393497455 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.409905687 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.423204724 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.394514484 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.405690906 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.400654092 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.394734414 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.405144955 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.402227336 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.391300737 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.398451088 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.404211876 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.410225141 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.395764503 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.406873947 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.396203735 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.406909706 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.401915914 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.401311578 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.402374701 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.403207 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.393543551 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.403653775 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.409409465 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.413177472 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.401578022 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.40526606 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.39977919 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.41944 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.415130165 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.402754079 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.407837338 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.404912454 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.39929938 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.403681152 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.409975668 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.398324257 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.408251496 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.399368454 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.405582372 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.403209514 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.413753662 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.407232302 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.408453547 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.396496301 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.400350352 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.406416417 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.40541601 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.405796156 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.411525167 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.4125973 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.398046497 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.400110586 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.409359667 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.401402791 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.411487871 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.40242834 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.406849293 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.403269787 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.408609573 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.405368448 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.408354722 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.398777736 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.401026136 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.419803384 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.417433879 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.411479351 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.407072575 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.412097516 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.402634791 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.409786258 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.410890519 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.404233877 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.404328302 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.412551205 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.404153279 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.40509914 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.404460931 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.411499744 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.420714534 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.412833993 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.402807228 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.42445216 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.446346005 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.417808997 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.402392511 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.407546029 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.405259496 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.411650951 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.40955662 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.402885101 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.424079417 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.440823097 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.414444951 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.417950705 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.41318236 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.402537641 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.414756792 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.410722062 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.412327992 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.417835397 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.414578697 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.419672432 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.410953446 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.410173598 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.403688067 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.403739679 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.411200893 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.410725065 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.411795802 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.419235155 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.414591199 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.411719884 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.416946317 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.414591549 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.411872697 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.412298799 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.408270423 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.413780062 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.405630842 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.420878801 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.416105917 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.406446937 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.416099002 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.41365777 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.414008164 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.415442215 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.423009448 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.410418462 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.405054092 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.411265008 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.424056648 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.423550089 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.413806952 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.406822684 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.413127675 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.415231923 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.416011003 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.414694914 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.410812925 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.43274239 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.44962219 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.407144093 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.411089287 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.425325525 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.424181943 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.414188843 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.413102602 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.416860482 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.414979028 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.422725334 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.417910057 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.425848915 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.444833802 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.410721992 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.416951695 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.412206678 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.414413383 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.422632724 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.425598605 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.41326624 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.417716527 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.435525425 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.425726694 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.42404261 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.446999789 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.446426044 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.417395606 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.422049899 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.406965509 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.41634645 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.418502101 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.42154795 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.413731593 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.413997129 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.416321936 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.406976055 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.424715251 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.429384561 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.426398637 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.416041733 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.408200652 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.411194399 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.417330234 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.416058495 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.415972311 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.416678825 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.416068273 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.415763625 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.411171002 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.43638161 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.437465477 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.422763747 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.416843091 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.419542527 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.424542953 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.428147881 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.420952622 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.425860579 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.416900082 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.416775415 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.421240578 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.425233893 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.418234889 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.410083084 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.412546595 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.41151511 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.41948854 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.433672256 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.43925069 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.426772427 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.422076369 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.419352069 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.418706038 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.412959497 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.421844845 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.41814598 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.414842767 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.415195955 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.422179594 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.418342026 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.419995797 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.414724526 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.425785011 seconds)
  done (took 835.293953393 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.418285873 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.417441701 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.416259078 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.417997079 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.417480602 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.419502997 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.418210583 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.41809779 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.418930438 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.419781663 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.418116368 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.418151359 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.419292216 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.418998184 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.419716781 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.419702324 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.419250381 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.419022419 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.419242908 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.421435296 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.420547124 seconds)
  done (took 31.048862359 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.41933028 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.421033079 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.420842273 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.420951366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.420642737 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.420295276 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.422262565 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.421505067 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.421120312 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.420929086 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.421668705 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.422256769 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.420460172 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.420835987 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.421941226 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.421068698 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.421552629 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.422138737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.421512959 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.421824451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.423598071 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.419750305 seconds)
  done (took 32.522424326 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.420510318 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.424643525 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.414688139 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.425768039 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.422569448 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.422552058 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.422938979 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.421528045 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.420518699 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.413736063 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.415432786 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.417555473 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.423429195 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.430419399 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.426250853 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.428035507 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.423309975 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.421724229 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.422894768 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.421869569 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.432704187 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.435170282 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.423522642 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.415020862 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.423653455 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.423636274 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.423716731 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.422227576 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.415182405 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.426440611 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.422756484 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.417969283 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.433401202 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.426057742 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.419804501 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.427913913 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.424253182 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.424299207 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.422561137 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.430939996 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.442840671 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.424609303 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.435584721 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.43774114 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.424445525 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.422782464 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.431654542 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.424801995 seconds)
  done (took 69.63413951 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.423820026 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.424124604 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.425265461 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.426222497 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.426698675 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.424365207 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.424902286 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.430428898 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.42549517 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.427015335 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.42427609 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.426664034 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.425480293 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.427539215 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.42748397 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.427016731 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.425486439 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.427011982 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.428203405 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.428584389 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.425418694 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.427635177 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.425873151 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.4265467 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.427193709 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.428428364 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.427949881 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.428806344 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.428484725 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.426720814 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.42740889 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.427548014 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.427245881 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.427698802 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.427293862 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.42729484 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.42945524 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.428256275 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.428968726 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.427574205 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.429858434 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.42915639 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.428921234 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.428888757 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.426499836 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.427593132 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.426719208 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.427817601 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.427799932 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.426239957 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.42977686 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.428592351 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.427515887 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.428723373 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.429527945 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.429198783 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.429570688 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.429515513 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.428769189 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.429014193 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.428996173 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.430470174 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.429363189 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.429582491 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.430895157 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.429431913 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.431658034 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.428896091 seconds)
  done (took 98.349853291 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.429320865 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.429405932 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.431194498 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.429884275 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.43155411 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.430030872 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.433758581 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.429538142 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.431679615 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.432295476 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.430782783 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.431331666 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.435830841 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.436367641 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.432221024 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.43301547 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.430574098 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.430909196 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.433147679 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.429888047 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.42975451 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.428635304 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.432459743 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.430054269 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.430971424 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.429449374 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.430030872 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.431432097 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.429562377 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.432600473 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.43241197 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.431027856 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.431530434 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.431682339 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.433937864 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.431930695 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.432112561 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.431927482 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.432790022 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.433464689 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.432388783 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.433309222 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.433923825 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.434020974 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.431990828 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.432574841 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.433193146 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.433975508 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.433384301 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.431169844 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.433641457 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.434136422 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.433206136 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.433884854 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.436191432 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.43333178 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.435756181 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.434571114 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.434199629 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.434468307 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.435182714 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.433289177 seconds)
  done (took 90.067703095 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.433410212 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.434226308 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.434209686 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.433546472 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.434980872 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.4328746 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.433346587 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.436551673 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.435225387 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.435254511 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.43587547 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.43428239 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.435575641 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.438829547 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.435416054 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.436199743 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.435081863 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.434628664 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.434325482 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.435771128 seconds)
  done (took 29.96559353 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.435294321 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.435785026 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.435094784 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.434825337 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.434913127 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.434482626 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.435078232 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.438077636 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.435436378 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.435242428 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.436884607 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.437289826 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.434889381 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.435785235 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.437344791 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.438426213 seconds)
  done (took 24.243118696 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.437675489 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.434617488 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.434146269 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.436402352 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.436794093 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.436098962 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.437888226 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.436813019 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.436237317 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.439568677 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.43778095 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.436564384 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.438790855 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.438001159 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.438869426 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.437168931 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.438873127 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.436764409 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.436877902 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.436549857 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.437796454 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.437646925 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.436639953 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.437948848 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.437756505 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.439645153 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.438915731 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.436929445 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.438273191 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.438193851 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.437446829 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.438179534 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.439133217 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.438297286 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.438966645 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.438146149 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.438297496 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.439803763 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.438036569 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.438683159 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.438699013 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.439465662 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.439498417 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.442249395 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.439986956 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.441321484 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.440073001 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.441936995 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.441337687 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.440255287 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.439667363 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.441771052 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.442114671 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.44089622 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.441377566 seconds)
  done (took 80.388663253 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.441322461 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.442885789 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.445682792 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.4414773 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.4416269 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.441093382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.443793097 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.445317034 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.439894137 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.441141503 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.44335149 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.443684983 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.440577674 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.442195198 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.44400283 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.440947135 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.448264336 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.444207465 seconds)
  done (took 27.242591045 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.444353363 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.44804699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.445293567 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.442249744 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.442833477 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.444644812 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.445688171 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.445447287 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.447492659 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.446560907 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.447309187 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.44801165 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.448583021 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.445112329 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.446179503 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.445186361 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.446831752 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.447934964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.444455123 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.444933675 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.442255262 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.44223382 seconds)
  done (took 33.076541229 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.432076383 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.431713977 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.434943298 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.460889754 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.460552701 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.437852467 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.437453324 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.436770765 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.466791692 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.512343854 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.51255666 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.457980795 seconds)
  done (took 18.756414626 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447132208 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447542037 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.448118856 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449984875 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448888717 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.464993768 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.449191269 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450129727 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.44905934 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.449047047 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452048407 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449986552 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448037352 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449636927 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447955777 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.454852045 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449007657 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.449196508 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.448635752 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.448397314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.451161981 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.44955172 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44852191 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446539466 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.448682546 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447782781 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446036679 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44890094 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449326692 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447365199 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.445968723 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.445752494 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449087904 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.447082272 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446805841 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447756939 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446651561 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447759453 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.445756335 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447209104 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.446540024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446710368 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447193669 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447082761 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44720205 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.446240964 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.445780849 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.446690812 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446497631 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445533751 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446729294 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447618793 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447716989 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.446163929 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447546089 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447851853 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448134292 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.447727326 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448026875 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449165358 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446269949 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.450302304 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.448070736 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447540431 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.448870488 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44883019 seconds)
  done (took 96.865433728 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448463663 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.448483917 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.452091289 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448780393 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.448085193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.447052171 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448624228 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449198602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448650419 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.446438056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449559123 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449143428 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.450127003 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.452624667 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448881663 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.451224698 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449399816 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448999624 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450180012 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44917332 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448214958 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44899271 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453238711 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.449651943 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.451148292 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.450192025 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.452940769 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.450705848 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.45270247 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.450818502 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452021238 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45036132 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44985979 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.451662114 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.450625949 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44839005 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.451626984 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450340089 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.451194527 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.450314666 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450714229 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45130299 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.452098762 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448912952 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.454042515 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449739454 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.450825276 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450257257 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451577327 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.450225689 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.451546736 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.449690145 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.450849092 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.452003289 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.452377848 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.451735727 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45286995 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.452395587 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.451218553 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.453087017 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.452338458 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.451784826 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.451802355 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.452300463 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.45116247 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.452573404 seconds)
  done (took 97.021073701 seconds)
done (took 1957.764569273 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.675765473 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.621062357 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.442583027 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.453353391 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.445139777 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.439268709 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.454900655 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.444754392 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.443111935 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.444193637 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.442324055 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.702115332 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.470538188 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.444653472 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.444341421 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.595590892 seconds)
  done (took 29.245263592 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.485412705 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.462230637 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.60767958 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.474015446 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.485298165 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.722953247 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.534277788 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.456378357 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.656908047 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.482565415 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.424799341 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.485579486 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.451524806 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.42607108 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.479776793 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.723246859 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.820274701 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.426169068 seconds)
  done (took 31.890000817 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.021451122 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.442709579 seconds)
  done (took 5.746358947 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.476498513 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.45209562 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.453343054 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.448379644 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.42161814 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.422152705 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.450372146 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.431838504 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.433175406 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.609085276 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.460267678 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.481666419 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.471004868 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.453016825 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.458732078 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.642108259 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.674131885 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.462266326 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.458681513 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.465169488 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.450563721 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.639226189 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.506842945 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.463099742 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.606945059 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.431741773 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.45886736 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.467982416 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.636158201 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.461708783 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.450763746 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.452692343 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.454011784 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.42082167 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.441472341 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.455005137 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.491017328 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.471470988 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.459514161 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.669780983 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.457759817 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.47070001 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.422208648 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.440588779 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.632486645 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.681384693 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.451047022 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.456956572 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.457427373 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.611869428 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.455862229 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.455759772 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.571515624 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.42797251 seconds)
  done (took 93.810277063 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.427287227 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.422791613 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.757688949 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.449338984 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.429004415 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.427361188 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.430110002 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824127636 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.429107151 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.42098873 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.926393363 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.209225699 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.461080211 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.475789694 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.730764087 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.561938219 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424501118 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.421875785 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.43041863 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.429668186 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.211578372 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.424417867 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.433190701 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.591933373 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.504667109 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.162747861 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.442770551 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.427518611 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.450039422 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.423804033 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.171400498 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.461646345 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.438447934 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.424370864 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.878159576 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.021703668 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976028655 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.429448326 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.441832931 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.431449279 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.456443309 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174573456 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.986180715 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.428105208 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.424198776 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.184823783 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.425335583 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.434918714 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.434422631 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.885272422 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.428229106 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.428123926 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.440102544 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.432243933 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.427348129 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.583472102 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.543042939 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.165821366 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.426919862 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.456891481 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.470083731 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.428018745 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.426630788 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.42993945 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.429945177 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.994715809 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.059521885 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.428841894 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.984490136 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.179142963 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.44540643 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.372346372 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.447735079 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.436691635 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.531977425 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.428431717 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.426934738 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.166503785 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.43405806 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.428843151 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977802764 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.42982037 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.917180041 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.447075358 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.42810004 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.211641229 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.446402716 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.51964988 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.428336941 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.431700777 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.430800174 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.428465798 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.90103504 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.509195059 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.432746441 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.429815971 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.47025086 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.428115056 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.43189333 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.434881419 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.369924765 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.461665132 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.429970669 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.452219448 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.429045482 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.436301502 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.432294219 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.428971519 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.896736938 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.431319304 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.455840299 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.430873437 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.434255501 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.439149 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.593067875 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.440354322 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.888253807 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.432326346 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428748307 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.439702423 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.429875545 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.453263784 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.4308763 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.441177611 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.432648593 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.911277964 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.451506997 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.430967584 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.434298803 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.430967583 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.431762237 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.43234632 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.477017923 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.434391413 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.434001349 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.495872695 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.434853133 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.432069958 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.447133745 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.431065082 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.460092656 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.434922415 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898003999 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.89878245 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.038371569 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.438526995 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.453307505 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.45474861 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.47146114 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.766112367 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.46045136 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.432708167 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.868387244 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.074762021 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.437611864 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.432960923 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.438660112 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918075616 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.438230379 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.935882978 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.21249001 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.459086312 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.440869471 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.44282356 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.414471771 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.436518638 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.429834479 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.906861481 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.452846134 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.431101329 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.433548149 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.43512314 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.45395221 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.436150155 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.433327241 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.434849362 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.43477107 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.840429987 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.768486691 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.456848877 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.438612201 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.185523732 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.447253942 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.450460635 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.437633794 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.433622529 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.434811717 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.568850271 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.435761489 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.46675719 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.435789705 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.448794641 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.214011014 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.43482366 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.457150452 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.771055383 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.457857595 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.455582375 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.436925673 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.436189616 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.763618963 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.208282352 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.464593577 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.893895795 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.439188671 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.516165219 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.435653305 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.452861149 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.226436895 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.440102125 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.455384794 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.437590423 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.435896492 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.105522986 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.43612201 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.437102302 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.354271517 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.455812293 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.437942912 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.436697223 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.437537274 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929355961 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.438853852 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.462082154 seconds)
  done (took 533.896969314 seconds)
done (took 695.870949599 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.435337273 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.439948125 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.439388835 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.441894881 seconds)
  done (took 11.057698399 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.477250075 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.466164448 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.47664916 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.467706822 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.477171364 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.467125184 seconds)
  done (took 10.134923932 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.435079069 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.442690233 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.441887897 seconds)
  done (took 8.621380554 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.805027161 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.464291304 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.930607447 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.465283888 seconds)
  done (took 9.96866522 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.476948501 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.478037745 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.479201021 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.478383389 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.480472133 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.481266298 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.480091009 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.478429275 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.478857053 seconds)
  done (took 14.611723181 seconds)
done (took 55.695706627 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.411695858 seconds)
    (2/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.406857953 seconds)
    (3/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.408342359 seconds)
    (4/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.404441445 seconds)
    (5/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.454807556 seconds)
    (6/192) benchmarking ("map", abs, Bool, false)...
    done (took 2.406852645 seconds)
    (7/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.409000753 seconds)
    (8/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.432944301 seconds)
    (9/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.594423355 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.579716457 seconds)
    (11/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.651078046 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.473104087 seconds)
    (13/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.450336387 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.138918364 seconds)
    (15/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.600906233 seconds)
    (16/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.706478247 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.707660101 seconds)
    (18/192) benchmarking ("map", identity, Int64, false)...
    done (took 2.411449668 seconds)
    (19/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.681535131 seconds)
    (20/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.851920625 seconds)
    (21/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.42131014 seconds)
    (22/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.415524977 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.597454466 seconds)
    (24/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.421094889 seconds)
    (25/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.412160862 seconds)
    (26/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.675499936 seconds)
    (27/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.601274226 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.650459532 seconds)
    (29/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.643281454 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.694022054 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.656638459 seconds)
    (32/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.615429099 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.605644964 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.442062709 seconds)
    (35/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.884423292 seconds)
    (36/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.441055668 seconds)
    (37/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.764219249 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.462140542 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.57683753 seconds)
    (40/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.40956975 seconds)
    (41/192) benchmarking ("map", abs, Int8, false)...
    done (took 2.437272575 seconds)
    (42/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.707028946 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.800770336 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.622729748 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.687923583 seconds)
    (46/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.508138849 seconds)
    (47/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.819297831 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.448131149 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.636683617 seconds)
    (50/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.40914791 seconds)
    (51/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.41410664 seconds)
    (52/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.410429986 seconds)
    (53/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.455920757 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.601698792 seconds)
    (55/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.41404057 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.63048241 seconds)
    (57/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.440883928 seconds)
    (58/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.416130292 seconds)
    (59/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.967792134 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.897545771 seconds)
    (61/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.854055254 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.424411023 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.41435758 seconds)
    (64/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.43430055 seconds)
    (65/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.47107862 seconds)
    (66/192) benchmarking ("map", identity, Bool, false)...
    done (took 2.415299599 seconds)
    (67/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.433461475 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.411926265 seconds)
    (69/192) benchmarking ("map", identity, Int8, false)...
    done (took 2.414517028 seconds)
    (70/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.411775966 seconds)
    (71/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.440639065 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.697159115 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.41222784 seconds)
    (74/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.691491216 seconds)
    (75/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.800412398 seconds)
    (76/192) benchmarking ("map", abs, Int64, false)...
    done (took 2.427436757 seconds)
    (77/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.412717986 seconds)
    (78/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.623288129 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.637178652 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.700623033 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.618477671 seconds)
    (82/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.693677946 seconds)
    (83/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.417371161 seconds)
    (84/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.811347868 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.634120443 seconds)
    (86/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.606795319 seconds)
    (87/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.74276254 seconds)
    (88/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.418856755 seconds)
    (89/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.416673586 seconds)
    (90/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.495110656 seconds)
    (91/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.417359359 seconds)
    (92/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.421982572 seconds)
    (93/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.632062988 seconds)
    (94/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.415437327 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.486981969 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.658704435 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.644397867 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.610512971 seconds)
    (99/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.618949728 seconds)
    (100/192) benchmarking ("map", abs, Float32, false)...
    done (took 2.417305162 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.877922954 seconds)
    (102/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.677282286 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.824196079 seconds)
    (104/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.465209508 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.492293119 seconds)
    (106/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.585042833 seconds)
    (107/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.432641679 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.674262209 seconds)
    (109/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.458388388 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.465085748 seconds)
    (111/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.46749248 seconds)
    (112/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.612913137 seconds)
    (113/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.696317947 seconds)
    (114/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.42002953 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.475733612 seconds)
    (116/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.962598457 seconds)
    (117/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.695674778 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.639426774 seconds)
    (119/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.726000702 seconds)
    (120/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.419558939 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.456879537 seconds)
    (122/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.770055815 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.429621183 seconds)
    (124/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.459137995 seconds)
    (125/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.858918861 seconds)
    (126/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.41883301 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.418559651 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.442664392 seconds)
    (129/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.450674628 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.663382613 seconds)
    (131/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.460613532 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.475508233 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 2.42593475 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.689892269 seconds)
    (135/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.770797739 seconds)
    (136/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.657731685 seconds)
    (137/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.419389016 seconds)
    (138/192) benchmarking ("map", abs, Float64, false)...
    done (took 2.452572915 seconds)
    (139/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.699459617 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.671318888 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.619015519 seconds)
    (142/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.417307327 seconds)
    (143/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.421049352 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.692597292 seconds)
    (145/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.956874754 seconds)
    (146/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.881156885 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.679097461 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.4533448 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.59581641 seconds)
    (150/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.461465246 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.637928678 seconds)
    (152/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.592887475 seconds)
    (153/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.41972139 seconds)
    (154/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.760596791 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.865936025 seconds)
    (156/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.421342687 seconds)
    (157/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.421210127 seconds)
    (158/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.138102268 seconds)
    (159/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.767811535 seconds)
    (160/192) benchmarking ("map", identity, BigInt, false)...
    done (took 2.421997309 seconds)
    (161/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.697576556 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.704768882 seconds)
    (163/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.418617549 seconds)
    (164/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.584176452 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.806168438 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.581455156 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.461735113 seconds)
    (168/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.605680652 seconds)
    (169/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.419216718 seconds)
    (170/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.421845334 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.640987516 seconds)
    (172/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.462507698 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.450667994 seconds)
    (174/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.425783195 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.654420021 seconds)
    (176/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.750166973 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.950619978 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.761673115 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.468075864 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.779101239 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.433303425 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.707698584 seconds)
    (183/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.867260494 seconds)
    (184/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.685627411 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.029855542 seconds)
    (186/192) benchmarking ("map", identity, Float64, false)...
    done (took 2.43924154 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.632934538 seconds)
    (188/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.58799237 seconds)
    (189/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.446525567 seconds)
    (190/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.613770788 seconds)
    (191/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.419878534 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.890903376 seconds)
  done (took 396.913322647 seconds)
done (took 398.216822904 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.512005263 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.626480784 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.484533752 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.484531448 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.485463829 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.459436357 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.512800545 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.486652388 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.508410043 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.506516646 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.463992173 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.493379151 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.507977027 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.498914841 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.530227203 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.488365315 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.485379112 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.497730752 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.507550506 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.512474666 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.486503067 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.489694883 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.52248837 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.484609181 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.502631864 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.501324715 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.500577134 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.45521969 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.500800207 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.510786811 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.455751391 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.507109808 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.511648584 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.498406816 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.487067525 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.496927438 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.486502019 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.627665362 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.516994374 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.499384733 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.493601317 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.512512939 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.499647197 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.503297311 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.499671222 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.523351329 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.503529115 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.510940463 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.473226379 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.478087193 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.515844438 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.506738462 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.497807088 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.472876194 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.455768362 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.538160614 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.499021837 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.516117866 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.497296688 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.499518968 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.531861978 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.515987752 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.507924646 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.505628893 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.497135844 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.510551935 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.498020943 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.516067162 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.497120199 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.491283423 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.488568902 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.498944524 seconds)
done (took 117.473292312 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.667974887 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.458784249 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.710296191 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.496773437 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.725352155 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.693384823 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.499033501 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.497974428 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.49661385 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.356999588 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.496377228 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.500434727 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.460620725 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.49724305 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.672745047 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.496170148 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.499365177 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.257577168 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.498832987 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.677780673 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.464467165 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.499475806 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.500827794 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.357203245 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.462131183 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.4616483 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.679623086 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.499909241 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.255014482 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.460881024 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.462309907 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.255760108 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.682613969 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.519361226 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.511275142 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.509843395 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.727861762 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.52150221 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.668746843 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.66709803 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.710298286 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.538976709 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.461863202 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.469841591 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.502916467 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.502444061 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.49959293 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.530552943 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.463945311 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.499071634 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.257441327 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.509400462 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.502378759 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.502375406 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.503740734 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.530819387 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.501240835 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.501683978 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.683034903 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.504871115 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.672214532 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.359118712 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.360625817 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.501944626 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.465261191 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.501914454 seconds)
  done (took 120.18817938 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.618593468 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.630070277 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.670060488 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.514976591 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.584824858 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.671357859 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.513568241 seconds)
  done (took 12.524612033 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.507648144 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.504058163 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.587424211 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.584308522 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.502551826 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.727952975 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.503604334 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.515570311 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.501959222 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.588285354 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.506622804 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.503274264 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.51309332 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.465997806 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.58560254 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.516120591 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.668464684 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.496819254 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.503929166 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.704938806 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.503344454 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.514228521 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.589977957 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.514400679 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.50593382 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.509425326 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.347275307 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.50418262 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.504334804 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.504778715 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.503752467 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.615031283 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.50538396 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.468888258 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.505016455 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.668550519 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.50471921 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.503991534 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.503785153 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.471952893 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.504356454 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.504220683 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.505056404 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.504187648 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.50552895 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.527019044 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.50552462 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.505257058 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.504622969 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.50493062 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.589728274 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.506275135 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.506846436 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.504401781 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.596867381 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.518380026 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.507443509 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.504245338 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.507077122 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.50720996 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.712217874 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.58873143 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.504570728 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.587326153 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.507360398 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.509018151 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.50538822 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.506821154 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.647398387 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.507250818 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.5885335 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.508218049 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.738011307 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.531129133 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.509409472 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.506671903 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.505114722 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.506532779 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.468982963 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.512983041 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.506020912 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.501369623 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.511726456 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.507197529 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.507407192 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.715782991 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.670211833 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.507986595 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.522776325 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.517241054 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.508863453 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.589366008 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.507320449 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.509323986 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.590314243 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.675677473 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.593247717 seconds)
  done (took 155.278367455 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.518621397 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.519510826 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.509391592 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.537030861 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.522176389 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.497034015 seconds)
  done (took 10.43426954 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.503490493 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.513343632 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.508835097 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.508999225 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.509802608 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.509164189 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.510294571 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.503115236 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.514262114 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.509914145 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.510207757 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.512825967 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.509888304 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.511366425 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.512167224 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.5104397 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.508880634 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.511078049 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.51176424 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.511311599 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.473374303 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.510081276 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.511563657 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.504247084 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.514596654 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.511016799 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.533400651 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.511360558 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.510357777 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.517342883 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.535633687 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.512555403 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.506187554 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.509528412 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.516092794 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.504751827 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.518156604 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.511406443 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.512624056 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.514893619 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.513945663 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.512580266 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.512117987 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.513755765 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.510552005 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.508415421 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.518931493 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.536869459 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.513372615 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.51482713 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.515260565 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.512440932 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.514097079 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.515935651 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.50695022 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.527057805 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.519892858 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.513906552 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.515567168 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.505768296 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.517486406 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.515040495 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.505395624 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.519906407 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.513848584 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.514411365 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.507680201 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.518696895 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.515971479 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.51326059 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.515836127 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.514314914 seconds)
  done (took 111.24890854 seconds)
done (took 410.993014206 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 12.057591333 seconds)
  done (took 13.391600217 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.706670101 seconds)
  done (took 4.043025164 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.304117235 seconds)
  done (took 27.647450281 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.804555802 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.557936523 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.517464686 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.48572769 seconds)
  done (took 11.697414106 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.911466604 seconds)
  done (took 4.24525123 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.492514166 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.491688852 seconds)
  done (took 6.320647269 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.82093526 seconds)
  done (took 4.155114488 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.053581325 seconds)
  done (took 4.397436015 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.495684961 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.503291445 seconds)
  done (took 6.339152695 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.442492443 seconds)
  done (took 3.777082127 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 68.376302952 seconds)
  done (took 69.713327305 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.511750761 seconds)
  done (took 3.851235202 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.538065071 seconds)
  done (took 3.87334367 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.884773964 seconds)
  done (took 7.218873015 seconds)
done (took 172.006393835 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.476019192 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.478979415 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.481613199 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.482021492 seconds)
  done (took 11.25340499 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.666573452 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.665104131 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.654749462 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.624094795 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.641083199 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.664936931 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.550767455 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.559570319 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.609242627 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.650018204 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.657317317 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.653775456 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.653660078 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.557441347 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.647934908 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.653537786 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.611134977 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.655642523 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.550182115 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.651856566 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.518856762 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.635007776 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.652388548 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.516163752 seconds)
  done (took 40.239543102 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.104585785 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.661163546 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.721259665 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.64249511 seconds)
  done (took 8.464736682 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.48992564 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.432811603 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.195256394 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.314214188 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.489931017 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.263286763 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.552364236 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.547412489 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.534868994 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.43145738 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.491355011 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.103534604 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.325316159 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.517985492 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.487877893 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.524211633 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.516608782 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.408022347 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.311823592 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.318547212 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.518706325 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.493101811 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.158922654 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.106827341 seconds)
  done (took 51.872441811 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.537069483 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.544796234 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.522276611 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.5453396 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.522687068 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.522887512 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.522032027 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.535671471 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.520355277 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.520000693 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.521045378 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.5439184 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.534395471 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.521199588 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.542377351 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.524074814 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.524194662 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.536528493 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.538497529 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.52242656 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.533702506 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.534683915 seconds)
  done (took 35.009506447 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.483377111 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.482571911 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.482052641 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.942881424 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.482913714 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.482205105 seconds)
  done (took 15.694107401 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.614160153 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.837195079 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.513817085 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.969207956 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.098113175 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.516648032 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.515568635 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.860389858 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.267539538 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.225432089 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.603038697 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.608569358 seconds)
  done (took 22.970429551 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658982193 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495692714 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.503352905 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579870457 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494453939 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495596542 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.572117236 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386944458 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.555014782 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859066366 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494244625 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669690049 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.834047053 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495747608 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495648085 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.455287366 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820303546 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.49580404 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503165591 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496902714 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563585565 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495812282 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.497851857 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.826225877 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.52495649 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495612605 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.843692134 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495171768 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925354963 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89194024 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889448652 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50271714 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85361679 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307877629 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718183856 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792189216 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523055272 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503916734 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.460996193 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.504324259 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.526444808 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525987627 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88206112 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505363776 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498645045 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50048648 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364891025 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.563841115 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.500535578 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498641901 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894060132 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673158088 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.52769378 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498172218 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495789443 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499101736 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.52667724 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716730388 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245130753 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500908461 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512864451 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.498563679 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.497812187 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506978995 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.505070791 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.535734537 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.527857558 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527631342 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498508155 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502335598 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553615233 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498666066 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.606925225 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499172067 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499309864 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512607643 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50597803 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.500928296 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541346145 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.501973749 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81853677 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499780105 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501254385 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.499146994 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502652327 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.501629572 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552905645 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.464773977 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613614692 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413483586 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.833972323 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580147797 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56197733 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8075668 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.458688636 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500096276 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.50960349 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507183212 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554442992 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385439866 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528569869 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.191380901 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839308477 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.468563984 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515487828 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.478668202 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132478369 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540343992 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.559172084 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.507165541 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806942908 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.529426612 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91443039 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514536451 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574097446 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50346961 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.516057035 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520498312 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.530659171 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.501914663 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.518754724 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.463340695 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532027082 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647041429 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504995852 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502925687 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503935592 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506466849 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504188626 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.791934645 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548794578 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895841643 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.513244177 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502678588 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.509886138 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546738101 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.509653916 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.809433938 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512754241 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880673164 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504487478 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505331509 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505451287 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.8107304 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.504411839 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.559584777 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939385798 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505206423 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511494583 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904299772 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583412039 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702640538 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570018227 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.51795141 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.846784287 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.852451488 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.535384703 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506113242 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.5119973 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51467767 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.537601394 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494766338 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534163457 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514085975 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.514318615 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.508568722 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.555317894 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653038979 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549574496 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.804929035 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.536081788 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506818221 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.54204344 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.51105151 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841482775 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900035403 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.513673282 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784406174 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.130628762 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.53126665 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55736124 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.509120678 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.508113497 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.50679629 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50788316 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506958881 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.508479605 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808228617 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941629938 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.530931692 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.514757498 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516407917 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.510146367 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.514306952 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903845035 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.558459773 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508069148 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.510164107 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515341022 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513710298 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.909025024 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809431074 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.555322293 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.509074373 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.115131959 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539821439 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.510207408 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.510392418 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562754175 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509191148 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522832966 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94415065 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510174933 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918370067 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.517299232 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.581498388 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.511143492 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510240164 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523393722 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.519846972 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565410518 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.817099716 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.54312577 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516915175 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235638554 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512164082 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.519688363 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515757835 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.536358988 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.516825987 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382741199 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537585122 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511671282 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89259549 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387364413 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538056481 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141143856 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.535428633 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.536939439 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93615019 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834038951 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512345181 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.535295445 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923404435 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4879807 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567689229 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.52267303 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516642165 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.47144822 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23213315 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.540444983 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.803185167 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382307695 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537311693 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.518917036 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.595633076 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.537742893 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0657196 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.53935937 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516210547 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.52112381 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.518942667 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522515817 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.522531531 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515633378 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.514836908 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.534763394 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.149108207 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537225928 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.816841513 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940405411 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.885994371 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.532359248 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.523184338 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.854612657 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919276886 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525009989 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.521424966 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.520994255 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.478802298 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.545629091 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518954889 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.516685047 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533253217 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959496106 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.523765976 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.520454521 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54694092 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.514755123 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515371822 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.515876216 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.52701639 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519229505 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.517122324 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.511278494 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53664394 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.540925909 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521626109 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.856175006 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.563387845 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.515635473 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836796984 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510733942 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589082312 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.545910971 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516528184 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.478381084 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.518445467 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517384229 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542806037 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.828487198 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.517993594 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.503634506 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.515626254 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.491061189 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519084375 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.533129877 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864031452 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.545754596 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.532591051 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523628877 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584455468 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520456058 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526824186 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.518069512 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634668418 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688623532 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820529552 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.94606423 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928198063 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085637566 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556580205 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519325886 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.563727203 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685038719 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521289754 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.522816973 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.130772565 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520593855 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520958706 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.521760414 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92658808 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.526113551 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530547356 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51888421 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833774672 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522682039 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879308954 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520941036 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.511881295 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574087878 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523199912 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546057707 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523963697 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892196976 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524411589 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52328456 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526200713 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.521628623 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933876577 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.495162619 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.521231436 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.524434846 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547347397 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.527695875 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400119177 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90509261 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528856987 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524828332 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523077342 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.546121892 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.531736543 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.558435539 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526661177 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825253895 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92254462 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348376563 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945718027 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 3.57715419 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.527314682 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526922453 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.865925338 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446947618 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.826030391 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.547797245 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.53814064 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882699609 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676358774 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825218346 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.550175759 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832588976 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.528117507 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.525848923 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527608155 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52414717 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.524949227 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92564669 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533497311 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873838636 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.555256363 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.527444446 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5822584 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.827727534 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.859905928 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.547346349 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.837649816 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938931061 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.536159521 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.526302262 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528395197 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93157852 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536844035 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.552713861 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86924727 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.553233062 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592599519 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.52378204 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.529594511 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.532583299 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.549571003 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588540274 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542542387 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.533184073 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531670683 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.549836959 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.527692383 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528496955 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539325567 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892893153 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.559888587 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.536220702 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899022564 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.5297402 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.536681864 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835990317 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.554939214 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.527902885 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.580696749 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5330798 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.529601355 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529496942 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615194851 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528784491 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531795 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.10340044 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.554087151 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533476918 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570146385 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.536230759 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527887799 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.533105642 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530463337 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.573523142 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.507220367 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.498604676 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.537509623 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755763146 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320502348 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.564420028 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.223278673 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.962879847 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.873036578 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.546792997 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.490637881 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.221901123 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531668727 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536326303 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527887311 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.523412579 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.539251744 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.550231702 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.93034212 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565438384 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.532265521 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532654257 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.53219533 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838961505 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.579810184 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585306064 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.492133323 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53302239 seconds)
  done (took 1090.671648636 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.581513543 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.549480698 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.554876776 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.590238256 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.560570377 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.564700511 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.617726947 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.561104384 seconds)
  done (took 21.953816754 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.543321047 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.691481647 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.542378678 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.693188569 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.527477342 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.283994145 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.553070052 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.69157719 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.70847885 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.581190248 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.529745717 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.453244509 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.692986098 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.539144888 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.602888957 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.560072967 seconds)
  done (took 36.580402788 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.045384333 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.870543454 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 33.347147288 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.557485418 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.553640585 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.552888325 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 5.541293485 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.557272542 seconds)
  done (took 58.402727751 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.571834729 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.569135642 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.570706722 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.571218379 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.573075738 seconds)
  done (took 9.233185519 seconds)
done (took 1403.682859357 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.568346924 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.572040342 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.570020042 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.579159334 seconds)
  done (took 7.663694385 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.495076713 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.498261336 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.501293636 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.538360011 seconds)
  done (took 10.412000995 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.507233706 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.259482858 seconds)
  done (took 6.145246124 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.22676501 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.214978734 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.214080715 seconds)
  done (took 8.034317842 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.941429074 seconds)
  done (took 3.318599942 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.529071469 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.5238787 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.533659134 seconds)
  done (took 8.962030577 seconds)
done (took 45.91105566 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.536948309 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.308185559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.684986059 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.531931051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.697565521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.692090803 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.797017903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.527630085 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.545888901 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.549572121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.525097361 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.692011883 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.791620359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.314378037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.786997914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.311926537 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.692866111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.532313432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.527624987 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.54564774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.802322628 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.539232119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.540866614 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.525722161 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.698696043 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.782857374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.527657183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.31524365 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.539683154 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.540237345 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.739320273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.544379212 seconds)
  done (took 88.068916727 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.529553794 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.536168251 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.528870186 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.544446609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.5281203 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.548326222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.54689273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.528999882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.547449226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.548462692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.546642907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.528160529 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.533855667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.526464713 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.528910415 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.528232745 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.539774995 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.529833298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.531172295 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.526795132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.532807629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.529038225 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.558792218 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.540082018 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.533096492 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.531449006 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.548472819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.550286318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.549592864 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.529907609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.555454852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.55330374 seconds)
  done (took 82.601718559 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.53157046 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.539555414 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.528228276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.551160801 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.528925221 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.553022769 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.555169341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.533376696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.551955734 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.540320037 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.527831926 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.549091962 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.533333813 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.544689307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.529363825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.550067784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.53293027 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.530116155 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.53104686 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.530359622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.533270397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.548697918 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.532049781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.539394849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.528692301 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.530970174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.549921258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.531730047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.531950956 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.531907444 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.533027908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.568765483 seconds)
  done (took 82.615489374 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.110610714 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.578578463 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.578206698 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.547546654 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.578398342 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.571960792 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.551164851 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.110982409 seconds)
  done (took 17.010497005 seconds)
done (took 271.672726825 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.541258354 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.221894139 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.623100396 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.548038337 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.598819654 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.604648259 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.323318629 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.607868291 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.85373531 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.558472205 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.595136295 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.54867913 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.54271252 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.202468624 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.557111278 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.561081056 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.538851623 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.532553896 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.300693615 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.551457417 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.603231668 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.542527929 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.545630349 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.558909621 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.503388735 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.650603264 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.672096361 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.563551552 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.757278003 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.669314094 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.239867514 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.565914702 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.54562078 seconds)
  done (took 74.216674552 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.568585712 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.708597232 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.577723746 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.575298786 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.691074613 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.573684335 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.56762323 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.585035289 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.58584936 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.576524012 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.580506083 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.578724152 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.576090088 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.575087865 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.699649585 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.549280394 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.563705343 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.699993275 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.565582397 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.552633963 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.574514888 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.578653682 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.576579536 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.585538916 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.575607484 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.580007415 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.700542087 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.580151708 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.562392606 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.695539845 seconds)
  done (took 49.348406737 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.577709567 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.317418577 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.529700251 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.608828819 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.571483707 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.573716183 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.976739989 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.578312298 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.576129618 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.576176481 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.228013283 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.602572296 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.619806401 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.567351547 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.57894066 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.580015587 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.578975651 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.570006214 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.323877778 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.58909684 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.003749779 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.574847123 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.986362092 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.590661982 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.599890601 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.57102876 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.583791976 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.560598523 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.57418391 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.29310047 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.582527219 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.984699032 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.492880625 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.562707101 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.564303533 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.586060071 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.583343733 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.250824982 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.596122873 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.573949034 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.993300475 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.578082939 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.550737981 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.396216097 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.594962809 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.581780197 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.549011435 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.233364732 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.924711655 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.590265843 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.568245795 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.576756513 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.580355505 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.572888215 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.900519333 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.581473175 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.572891427 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.547579829 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.587005652 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.991350017 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.585535773 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.57244556 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.408597351 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.574303408 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.396775666 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.58101348 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.591400555 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.597744588 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.564193812 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.579458184 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.450015746 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.60170794 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.583284718 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.263832433 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.428599126 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.547905987 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.575717834 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.422436051 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.528846441 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.983628504 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.591853126 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.528800764 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.017662092 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.582015422 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.583329905 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.584286521 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.584540464 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.751132947 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.983249058 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.387458768 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.417193974 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.572248608 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.023364284 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.600252239 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.574766596 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.561278847 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.58290087 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.58217068 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.549922515 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.41558532 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.600368804 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.590059462 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.426804275 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.602290696 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.997902806 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.591885532 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.565562702 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.580239359 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.701240151 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.583246794 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.590220656 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.605383478 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.996395072 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.583399467 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.585083899 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.388303778 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.26740663 seconds)
  done (took 225.673376627 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.546745504 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.54499214 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.545797898 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.545346584 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.546119168 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.578701384 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.546560285 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.546992324 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.576348501 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.545469923 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.547166159 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.582187721 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.576976165 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.547252832 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.561794136 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.546079708 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.548122565 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.569025991 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.546329041 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.548639949 seconds)
  done (took 48.492297101 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.585757378 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.390289855 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.361336941 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.613103315 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.586932668 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.578514977 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.655126046 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.609671733 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.585205353 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.028763574 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.822368543 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.617288902 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.587900598 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.585779798 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.338420409 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.554508713 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.023311205 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.398010878 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.614920235 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.391391951 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.557154649 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.586770496 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.577149999 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.39257122 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.063233949 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.99550704 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.662234003 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.414150919 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.614863733 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.587873988 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.391961924 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.61460127 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.580591499 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.369785222 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.614790051 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.993887072 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.614184667 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.659583736 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.682543919 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.028393485 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.395214154 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.026317034 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.05724897 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.519528496 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.593309945 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.550107315 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.402213228 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.617049486 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.553009569 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.592918415 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.603619008 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.349714723 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.610448717 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.35299419 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.615988458 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.592708891 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.400923959 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.376099293 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.37047232 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.847782529 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.607945326 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.999179574 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.597393495 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.40464133 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.618541436 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.595378086 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.590282395 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.824350428 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.424292013 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.020607648 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.035496134 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.037730426 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.595666181 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.673700545 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.615224255 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.030277384 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.677414356 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.52500091 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.009017348 seconds)
  done (took 150.637315126 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.958476982 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.737619497 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.157113206 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.555564992 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.563261431 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.582005016 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.714797251 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.415697695 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.562498555 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.772053415 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.56243933 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.575319529 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.555320618 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.704027726 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.745736871 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.255148019 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.587729417 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.557094935 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.578946946 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.470023178 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.586618452 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.766579256 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.580173289 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.907705861 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.570189826 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.554956255 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.55563602 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.587091417 seconds)
  done (took 66.121551073 seconds)
done (took 615.873436855 seconds)
SAVING RESULT...
DONE!
