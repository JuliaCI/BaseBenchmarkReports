cset: moving following pidspec: 12592
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.270948132 seconds)
loading group "string"... done (took 0.62442862 seconds)
loading group "linalg"... done (took 7.628349508 seconds)
loading group "parallel"... done (took 0.170165507 seconds)
loading group "find"... done (took 1.12260027 seconds)
loading group "tuple"... done (took 1.780363142 seconds)
loading group "dates"... done (took 1.236766259 seconds)
loading group "micro"... done (took 0.21665339 seconds)
loading group "io"... done (took 0.892211161 seconds)
loading group "scalar"... done (took 38.191235097 seconds)
loading group "sparse"... done (took 12.163286644 seconds)
loading group "broadcast"... done (took 0.939028297 seconds)
loading group "union"... done (took 12.545753503 seconds)
loading group "simd"... done (took 4.731853306 seconds)
loading group "random"... done (took 8.990877229 seconds)
loading group "problem"... done (took 1.823718572 seconds)
loading group "array"... done (took 20.60726466 seconds)
loading group "misc"... done (took 1.692404492 seconds)
loading group "sort"... done (took 3.272043876 seconds)
loading group "collection"... done (took 17.475310675 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.516340166 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12252151 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131976309 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118322327 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146928707 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117253535 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123961138 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08616038 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.830042906 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150056397 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114751932 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.394427525 seconds)
done (took 5.310119025 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173959256 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083341228 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084172012 seconds)
  done (took 1.301975892 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069064092 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125119321 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068839686 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069384381 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069516986 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070660372 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07108163 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070507605 seconds)
  done (took 1.680996733 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075711361 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071181629 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068653882 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070949901 seconds)
  done (took 1.423461059 seconds)
done (took 5.797193896 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.741795509 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211734555 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186059627 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.378153055 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13059712 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.170322146 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647551446 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313206106 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18912948 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077397154 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107539004 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.335803122 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120066119 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648307715 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075982983 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090817389 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140783513 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431589715 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069448732 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085001908 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091174303 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130994076 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086682563 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075865298 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145797172 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069534917 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131975775 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082640444 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068332687 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213821431 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175274877 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655619547 seconds)
  done (took 10.247187829 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099827219 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099871546 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071392977 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127705723 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098970063 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07166988 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077285773 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069898981 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091319127 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130068757 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092290089 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106259516 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068611046 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070967673 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085681315 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210521658 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085222888 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085671366 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07404044 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080130599 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109324737 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079781675 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081601807 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081539822 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130334972 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183244623 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102344674 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102842992 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07115603 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085983956 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116995886 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1321617 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068488012 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070406297 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127729142 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097109007 seconds)
  done (took 4.715632931 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.950525739 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140224847 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089280788 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131043134 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067357686 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107006958 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068228451 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082647665 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203393899 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.343244083 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.570149024 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.129821864 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112854214 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103370608 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069933749 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070776405 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06950035 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.418499292 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100181472 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106926058 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081996833 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074594577 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072346059 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.07046262 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070942002 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067975429 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072101579 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117783908 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078259799 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.31603499 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12061683 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06992323 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.897855362 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.163209524 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068451863 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.240807112 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.1726649 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071400271 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094104694 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138080365 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071783403 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068512525 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154767294 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067439984 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071912465 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092579717 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070647824 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086424821 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105996694 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119445305 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068105109 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068456013 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163951092 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067292011 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081187689 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.098861705 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157873343 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06804449 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.281702953 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091099409 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072226247 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068199213 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.173499481 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124389595 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071053654 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069551406 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070732108 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070754956 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361719764 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068903874 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.893912919 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075726865 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082122147 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072699389 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071406786 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067145974 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074385297 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074154402 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090167874 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069001963 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07545569 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068311677 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06860002 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068446902 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084923762 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.473854436 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068931256 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070623124 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067722945 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093296316 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099928801 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070438901 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068796939 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103349667 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067466365 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069402907 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06879978 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069280397 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084254171 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071668155 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11511957 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071066117 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.086261358 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100280844 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070631289 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102714135 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.0818438 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069762698 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.407016542 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067638984 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069615578 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067762563 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070098016 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068832203 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07992707 seconds)
  done (took 21.566245165 seconds)
done (took 38.615719891 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243752233 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078005027 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077264756 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075485552 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075423459 seconds)
  done (took 1.779229227 seconds)
done (took 2.997342936 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120069747 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097648232 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066824221 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096651399 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066528162 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10171293 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099454175 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078282305 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09836034 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067344994 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096593563 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0672011 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067351349 seconds)
  done (took 2.352824273 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084738917 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0874067 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07371846 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087154207 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068133188 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086981691 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086457145 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095333139 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085535007 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076093354 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068012571 seconds)
  done (took 2.107518877 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084793282 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087318481 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073810568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086409281 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067687364 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086591095 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085503667 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089517272 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085882414 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078235586 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068769624 seconds)
  done (took 2.097976914 seconds)
done (took 7.762887925 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078917213 seconds)
  done (took 1.272686404 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.52191256 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.588314611 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081900895 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106278011 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184613182 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112722868 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.243478401 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086676335 seconds)
  done (took 8.290094037 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103384188 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073140671 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07738865 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076165692 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074195598 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072788528 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075693985 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07506401 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072919769 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073825514 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074075269 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074856648 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075805266 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073830471 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070661538 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070702291 seconds)
  done (took 2.487810979 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093010933 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092836114 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076858423 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078449457 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076039398 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074797523 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076130075 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074732072 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072293647 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073677899 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076747053 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074785282 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073361923 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06618302 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07555587 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078826791 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075140618 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078329677 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077849046 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079809856 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079136537 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06829949 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075165686 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077983232 seconds)
  done (took 3.144307057 seconds)
done (took 16.40039212 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.104882148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069821396 seconds)
  done (took 1.375890666 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082070485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083089396 seconds)
  done (took 1.375119909 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081780715 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068238872 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08904056 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078499341 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069257986 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069363779 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090133902 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070054882 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069738546 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069636894 seconds)
  done (took 1.968194644 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069358314 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07733547 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073250532 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083030447 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077111704 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067743914 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075449083 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072100151 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07915758 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065408313 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072963801 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085463679 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074504168 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087023821 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075321966 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071798376 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07406123 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070601574 seconds)
  done (took 2.563905599 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067048238 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068380158 seconds)
  done (took 1.351553789 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068293005 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066024802 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069992206 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070299641 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066876101 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066020974 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067286927 seconds)
  done (took 1.686037197 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.360100348 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120199039 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.306883747 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07626229 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08349624 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250626898 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06844903 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074627531 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074238643 seconds)
  done (took 2.66636119 seconds)
done (took 14.209381039 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080717783 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086914919 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098824136 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.372784767 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093032772 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068853698 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115038168 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177573414 seconds)
done (took 2.322210187 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21384636 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.649868025 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404889101 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.201158103 seconds)
  done (took 2.475253526 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328098311 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090912972 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063342302 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071472497 seconds)
  done (took 1.782551716 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06801827 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071073443 seconds)
  done (took 1.36492513 seconds)
done (took 7.063499951 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068809743 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084636107 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069750618 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067768467 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069864054 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067704254 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.067020918 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067592342 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069722384 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06896189 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068309569 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069585051 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070092236 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066990873 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066507247 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068314239 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.178825172 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066063435 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068598854 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066084686 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068099116 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066653767 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067867447 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069676557 seconds)
  done (took 3.017781675 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083271337 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067347249 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073808566 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074241351 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072251298 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074389862 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074050425 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069774518 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074277447 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072132323 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07195533 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071877874 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071859436 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071065842 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070076734 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070050375 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072398237 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068988267 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071434344 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072101799 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074147934 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070068856 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071723938 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074349351 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072116886 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0722416 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072236406 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070013358 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073999467 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072149255 seconds)
  done (took 3.406648237 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071973769 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065072662 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067365132 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074612264 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066730983 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067609104 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067168982 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067769438 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068152167 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067030892 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0681147 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066876688 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067485851 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067817962 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067995717 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071242643 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082812513 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067693664 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067137348 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068427431 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07055817 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069685238 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067326643 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067368721 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067002186 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067143147 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067682486 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067466555 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.0679987 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067340672 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070996539 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071009895 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066886895 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074094739 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071389359 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067497113 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071487241 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067094032 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068118372 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067390882 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0675789 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067358497 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067163679 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074783884 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06749821 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068372275 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06747142 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069080873 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067558466 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070110854 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066709449 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067069641 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069107056 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068465194 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071646865 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066985632 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068378202 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067323168 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068177986 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06690893 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066990322 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067029116 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070866878 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068147719 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082155247 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074317892 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066971693 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068551473 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068035807 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070570728 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068991374 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08120742 seconds)
  done (took 6.214515206 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088830691 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087846194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069918004 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069375069 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065719428 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067874905 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073268021 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067995143 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069672643 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085434245 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067582191 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068693771 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067394078 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071588389 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067978846 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069650391 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076589315 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065871346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067828174 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071546561 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068104519 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072835197 seconds)
  done (took 2.834288037 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146443704 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071909769 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10501837 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076457585 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071523622 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076309912 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07242864 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074193326 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073734559 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071878857 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071738444 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073444187 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073733879 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071976499 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071622431 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071480911 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074014414 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071530801 seconds)
  done (took 2.663053417 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077777566 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068239954 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089898014 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069832714 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06977123 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072308208 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074019188 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077466901 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072020407 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070252301 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077552174 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071900519 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070778525 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067975011 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07059381 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070315088 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072082832 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070009797 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077548166 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073810276 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07277502 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076905581 seconds)
  done (took 2.858388087 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079934467 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069606954 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082831596 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069660355 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064284691 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066620547 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071612209 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06729508 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072196112 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069989766 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067811324 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066267896 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070316411 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067749667 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070204267 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067942761 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07035271 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067825218 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071200218 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065475074 seconds)
  done (took 2.644962646 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086400042 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069430277 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071873762 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078116497 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071025594 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071042198 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078452382 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071542603 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071911431 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09176551 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071854481 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071763652 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077957853 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078215314 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07139233 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07785185 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077835696 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077598884 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071757481 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071450508 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091850494 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071676619 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07811512 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071067693 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071917407 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071864421 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071763276 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075048524 seconds)
  done (took 3.359727634 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068599908 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068450003 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067692896 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067930914 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067387631 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067441141 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067250422 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067385743 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070457486 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067815063 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070505974 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070046724 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069969636 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07007855 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070517879 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070148666 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070001472 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068004248 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067599652 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067847314 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070056697 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070120819 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070143687 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067983961 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067608218 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070451405 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068226253 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06789982 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069759231 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067707043 seconds)
  done (took 3.317915691 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075863646 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075679369 seconds)
  done (took 1.404742886 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065102227 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081355877 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067059796 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073673078 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073673272 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070937002 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076339072 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073625128 seconds)
  done (took 1.828655668 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082225096 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078347481 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070063975 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080172485 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079668164 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086030302 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.123714015 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070410405 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076609184 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068253581 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083221575 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069449518 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076276527 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070899266 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076036279 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077251928 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067995626 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075213827 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071776492 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068495723 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070657057 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078517945 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073158578 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065878314 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07255452 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092381088 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081263925 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069292882 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073465316 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077894517 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075923531 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064346653 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070017183 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070105321 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067637685 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078342155 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085150664 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073666526 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078587421 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070703489 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0786019 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065058636 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074861291 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077283403 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080453274 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07037475 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070133501 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065122319 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068682737 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072630238 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.0653658 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070535756 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064835668 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077054448 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073996944 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080718124 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069208702 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071900515 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073440852 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073447125 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077363382 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072396566 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073354623 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068598243 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078024236 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075409375 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077692273 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063526593 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064394088 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067908094 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080479716 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091802974 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074864889 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068121703 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068881532 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06661548 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072749679 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069365766 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075133655 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076934542 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070025909 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074239488 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077063524 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069424958 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073082138 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075185579 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067392605 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069641911 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067573475 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085967212 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068446143 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.070308041 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068025773 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080678786 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073806087 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068739758 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068219236 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077017078 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06396394 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069052251 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069051296 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070086257 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079121343 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07238678 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072476666 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077868733 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075874736 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070514734 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07161513 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.191737641 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069275904 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06831828 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075924594 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064871232 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07404463 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.072946272 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071644783 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079710339 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068927615 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070072963 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078252066 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075896233 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068516995 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067097434 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073348317 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069991528 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072288671 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07947577 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068840435 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065533926 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065724764 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074528944 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069380253 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07410158 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074650644 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073390833 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065124573 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067852922 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074096484 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078932326 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071328656 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071360193 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076517614 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071552813 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069598995 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077407124 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073089539 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06973555 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074561566 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070285076 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065811194 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071773449 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07333009 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068957116 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073971621 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071938076 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072507944 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070408395 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069062968 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076085973 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070479635 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06984459 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070502133 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069241238 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081157258 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072354452 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065648909 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067446197 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077177983 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068595404 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069451101 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069860457 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071884857 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070344265 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067655018 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070412834 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072576273 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078058758 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073085177 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070694406 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075370198 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082709554 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069581119 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072926722 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069741287 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07050969 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070560021 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079432306 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076108333 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072958159 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071103233 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066971089 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075690813 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078044287 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06975443 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068542627 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070686426 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07401806 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076318552 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073978368 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070664975 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067872188 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071714509 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07218215 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072312608 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069829772 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06933156 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07462352 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06810725 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074893614 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069919307 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079508065 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072978156 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064268713 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071060522 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06752654 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075391016 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064920774 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067637346 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068825028 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069556451 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068089959 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071139652 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.193011272 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076190021 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076363964 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07245736 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07135935 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070722431 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078870124 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073295121 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074784249 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074292121 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076669699 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080967175 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070549356 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073748375 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082679636 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06797452 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063447081 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074058665 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066802576 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067268942 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067783157 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066539493 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071572244 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074622761 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074993908 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063532588 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070434457 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066926644 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06862863 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063629448 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073725696 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073041919 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071939997 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077314874 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071312957 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070424981 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074178276 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070125447 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070551465 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069232335 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072833266 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070061762 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072665145 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070564771 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074752591 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069613817 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067846064 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072023955 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069867776 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.07095451 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075496549 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069237576 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071442424 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073094844 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070276984 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071582046 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071214208 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070354378 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073663585 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07158664 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070981178 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073310888 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066108275 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077559447 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069491366 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077139848 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070531657 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06688666 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076356645 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073281661 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074450278 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070574989 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070941001 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072544399 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069434627 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073458215 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077415774 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068599651 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081350582 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078572363 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071384413 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072326239 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070052473 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071828971 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070276961 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072004934 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070848648 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070830347 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069769799 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074847664 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073097083 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071702001 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072365436 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070761561 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070187638 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070670397 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064384799 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069466725 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069762538 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069935327 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078983202 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069791571 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07014952 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06848416 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069768911 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068487503 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066321755 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075156404 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07523963 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069067803 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075891549 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068714315 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070856611 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079657302 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063308249 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.19933574 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066906345 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06792417 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078835533 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071023822 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080656108 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072242684 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071099409 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068196804 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071178731 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069177694 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066004306 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068182792 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073874361 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070226073 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069746423 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07043631 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073299528 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070956989 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079564914 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069595235 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07163857 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070240469 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067452807 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06989762 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070531765 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073511236 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070719113 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068929743 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06732595 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069430286 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071473317 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072569322 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070055573 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071780733 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077666258 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069969514 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072899552 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072424321 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065603042 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073074706 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069383233 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069313204 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070350991 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074034167 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076690685 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07046582 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079269024 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06970658 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071772787 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070462336 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068767444 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069581789 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069463641 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069968857 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070052814 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071060211 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077955212 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068133493 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074478217 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071235946 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071663238 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077291247 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070330706 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074508403 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07589676 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070924597 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071889258 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078740884 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073872938 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07373282 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070517932 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07264336 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076294556 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070290441 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076737149 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071145397 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070706363 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072301206 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069196429 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070288549 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069912094 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069557267 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075473606 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070180211 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070103877 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070552 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068879904 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072049595 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072690621 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078067382 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07357359 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07372961 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065995502 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067808229 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070462645 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068447101 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071522842 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073053826 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075920145 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07211725 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070979427 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068558195 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079011433 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075423265 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074245986 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068493087 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073414562 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069733946 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072191916 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07070232 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069630966 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070937175 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073099864 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070979427 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06923093 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.20779634 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072900402 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069425116 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072678367 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072511146 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072250567 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066371672 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070998319 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073864449 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076797056 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073150906 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070569499 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081245389 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068772986 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071226023 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072049993 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067279984 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072834624 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063792682 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070309665 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068448037 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069450107 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064100066 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068751095 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066453534 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071027974 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067604964 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063645598 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078892162 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077266951 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072997921 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067588816 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068439048 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06609786 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065871772 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069785088 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071305373 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072545353 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080707792 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0698573 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069766216 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.0655634 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070021691 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073311517 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073857058 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067902389 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065271546 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069739465 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073280216 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075746361 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068997511 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069949939 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073699562 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073131666 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068683611 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073367912 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067875732 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074863266 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083618647 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.07072801 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071965156 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07678533 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078081564 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070431335 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065610493 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070685741 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074954097 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071750553 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070860893 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071183215 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084352684 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071551225 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068525228 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067497199 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072328136 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073316942 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079161236 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070811738 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070720224 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075190526 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072436505 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077845952 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074219009 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078166447 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074262256 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07322794 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068399257 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071598463 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06927432 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.07026219 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070984356 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071456643 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074983319 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077415053 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070315844 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080906332 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079756963 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07007878 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0651405 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068715766 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069850157 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06505635 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070435771 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067794131 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067760545 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068290786 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068438209 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071069939 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075254934 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070560659 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070141099 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068763179 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063886438 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072225582 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07133427 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070593934 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.199362398 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068682278 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069446937 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073428783 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070869876 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067898004 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071493052 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070734908 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069361005 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06450558 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074981192 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067605295 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070529293 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06843925 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06796597 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068592077 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072361354 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072129548 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069661299 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071079973 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072806608 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070229947 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066354801 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065900266 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074842684 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068843069 seconds)
  done (took 44.800374466 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099485745 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06516054 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064241535 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06589124 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076145957 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067289714 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065591852 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067076642 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067084424 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068711989 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065988805 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068462068 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073764812 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07974528 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073751145 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069779044 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065813143 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066806128 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064395472 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065166478 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072406873 seconds)
  done (took 2.806868353 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073958586 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078345782 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075693316 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083636437 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074314458 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073640217 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078878649 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073889856 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081616149 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075977964 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081455966 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073464022 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076210995 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075866104 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075946286 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074578829 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081601212 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074380069 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07428254 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078362973 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073685332 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07793012 seconds)
  done (took 3.008040341 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069168872 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067599395 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069681489 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064437264 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06925456 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065724452 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072142356 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067599334 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072467068 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069296324 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069441299 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069235442 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071647061 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065362254 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070614075 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067957343 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109190153 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072458729 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06998186 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070741618 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06567465 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071826623 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065514982 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06578825 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069643019 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072411179 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070381997 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068043191 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069277412 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069727158 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070659904 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068039248 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071644511 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070515708 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069591842 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069606476 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069355397 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071967432 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065702731 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068272322 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071146319 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066454639 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070172788 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071364524 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069050163 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067938161 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071916047 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070149447 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065025479 seconds)
  done (took 4.75424167 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07807212 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108810126 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06975204 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09187551 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082211876 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076399664 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073787006 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092826953 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066898606 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068429968 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083662532 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081813002 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069255916 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073953316 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075993604 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069029662 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070876205 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068325278 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072785559 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06866865 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072799461 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075484641 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082391207 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080242316 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073574259 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068654637 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068971119 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073608401 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08043095 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073330905 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073099989 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074075582 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08288977 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073677121 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068762521 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071112818 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083849576 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069549533 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071264595 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067353233 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071065881 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073304959 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076162099 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084799635 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070055796 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074138682 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069699908 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066792361 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081018432 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071594891 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076327096 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081718209 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072854885 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069796492 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07350385 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082859807 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069288704 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067847066 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072061943 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08020436 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067554913 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072807227 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080486776 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071168089 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07587208 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081669741 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074211606 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073185279 seconds)
  done (took 6.571399211 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077148469 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096245388 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082472124 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08381015 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077105756 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076802736 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076766497 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079068045 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078336139 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080796526 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077316288 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115459068 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073183881 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.087087703 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07714791 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077063929 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077246005 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076826245 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077459836 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077328387 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.078537298 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085988648 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079511959 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086001886 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08258302 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075131935 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078815405 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079952417 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086210608 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07920376 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082577715 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079670371 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079484685 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086017994 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082012827 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079126907 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069325092 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079345547 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080088648 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079679445 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074867841 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086554994 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079966253 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075553496 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079618931 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082085243 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085916324 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082941488 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082180793 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083477492 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079521895 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084785531 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079558692 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079351482 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085917308 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08680013 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083934075 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083551443 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0767694 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082899636 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084144479 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086145976 seconds)
  done (took 6.390005449 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082707852 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074363138 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083045932 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064471043 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070412939 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075798526 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068298846 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068981846 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077484301 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076912175 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078352006 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07403678 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076466169 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077635967 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073558443 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076077508 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074083135 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07359813 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07487761 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073333682 seconds)
  done (took 2.843685984 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076237655 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084620432 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069106006 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073626006 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073320179 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074824915 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072853316 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07412077 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071259184 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073708464 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080120742 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080370653 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071313435 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075286277 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078822015 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074206576 seconds)
  done (took 2.538920509 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084283341 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074753186 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079652097 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069552437 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071174908 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066959544 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069821769 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065640078 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066671957 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082948572 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070293427 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080201379 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070400417 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068322034 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065034803 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073660943 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064820818 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065719606 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067702109 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078985019 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071498065 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066397801 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071173295 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067952562 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070364551 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071792173 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068524507 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068672209 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066985501 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.07023285 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072578608 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073653376 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.0671116 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067867078 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086491698 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066739964 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069432775 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069699382 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075336761 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069463165 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068087975 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071551042 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069657592 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070843701 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066136627 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069733011 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066418544 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071857417 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067082834 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071949635 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069334334 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.0722727 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.0705013 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076207404 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072287042 seconds)
  done (took 5.238425045 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080516573 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071375658 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064850136 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06802279 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072232735 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070894114 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073399047 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070750319 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071135373 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068158683 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071277136 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072523985 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071068444 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073057592 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070761681 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071934465 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063597528 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068490167 seconds)
  done (took 2.642302774 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073270274 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068315778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074632587 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068952554 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070113126 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072541735 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065519462 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068326921 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068623184 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070108685 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070125499 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071956185 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068126163 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071974557 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070554457 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069804364 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.0724422 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068480721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069882708 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065669164 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071317021 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066558703 seconds)
  done (took 2.89399267 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093011524 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083548731 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138103982 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081275136 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088417267 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075185065 seconds)
  done (took 1.917440301 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092058193 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100173542 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068041119 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071573445 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078755472 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073749783 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073852311 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073754287 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080841465 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078793444 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074170321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082956251 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078611573 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077937598 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076510478 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077001882 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071977028 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071650014 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06849036 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083636242 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071696458 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078826295 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071750782 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071212923 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073011422 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080332437 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080699242 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079080561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073520065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081380556 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078647507 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073661201 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081648971 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078999897 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072716168 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080825044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073793829 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0860319 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078698304 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080241321 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073029083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079106712 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080942536 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077757078 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081329036 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074387691 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078010931 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074148772 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07399946 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087365943 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079014537 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080184514 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07894518 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081347695 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081351146 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087854563 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078792455 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080559075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079625852 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079054881 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08086263 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078888318 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080430192 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079026785 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079453641 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080827081 seconds)
  done (took 6.529574387 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104238192 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068834631 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071829624 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078510809 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080495621 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074355001 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074182522 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073914209 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073791112 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070777717 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109727897 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074591833 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080566809 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080247672 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074365815 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073937274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074076033 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080280479 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070598964 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087531803 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073916131 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080298939 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080274126 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080310887 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079470689 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078977986 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07369352 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074568096 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073488203 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073960991 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078000271 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074260406 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080148766 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072401591 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080637217 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074091117 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073926886 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077797283 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07375257 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078653302 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08057579 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08602584 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074097599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073448402 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07888593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073949014 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073750297 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07104163 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07433089 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070919557 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078839967 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078516645 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078412445 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080051044 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073958136 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073759153 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074088048 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073776286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074765376 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07886726 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080399075 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074036604 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0874188 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073967967 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073729512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080309181 seconds)
  done (took 6.483217056 seconds)
done (took 134.19589686 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194038141 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173086295 seconds)
  done (took 1.71445414 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070009522 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097552728 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079765511 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132119939 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068005192 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10227183 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101187818 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078290913 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068409373 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069517869 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070414239 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072409026 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136016024 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068286491 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068050494 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070609642 seconds)
  done (took 2.718760354 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098380359 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156257435 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102425016 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068965516 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099833561 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075608723 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069701871 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08094024 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072446747 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067123827 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073710769 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072170219 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06791548 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072139793 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07267308 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073352747 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067528162 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073453033 seconds)
  done (took 2.834170774 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096501223 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091232564 seconds)
  done (took 1.560431934 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153822768 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134125314 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20152456 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.327121895 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153928912 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146701502 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142503649 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141160896 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114324797 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136990636 seconds)
  done (took 3.016849832 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099401085 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.146374397 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.263051074 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115057501 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074507542 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091649247 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117417663 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080029035 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080638353 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080519243 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08078221 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077242849 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099214555 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075317832 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076201552 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077417902 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102963062 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075128013 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077078718 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078013635 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101122906 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068565974 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07715331 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077450038 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080372708 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080535514 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07071216 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070343218 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07955634 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078167354 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080063927 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093346659 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078916808 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104442196 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073062268 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104471136 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078237812 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076903259 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079008269 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076987224 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081578943 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081478149 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077315921 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079196581 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069307408 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078694779 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06885105 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069728692 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081507383 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071023559 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078439318 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077295379 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102746476 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069030022 seconds)
  done (took 6.077556742 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10773174 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106101107 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071815137 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111764267 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103605398 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072306743 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108334896 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09829707 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107581607 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071884672 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069820641 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071419396 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080182352 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081622363 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11511369 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107553897 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07427025 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070650208 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107382973 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107108856 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070564638 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101223123 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096940901 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106460969 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069520137 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071622358 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069912007 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071775521 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07809351 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080531851 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070654527 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079402079 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083910556 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077727209 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06939456 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069747362 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072542549 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081638788 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081527881 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081962626 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077332719 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069735968 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071698014 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073255197 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072966975 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0716588 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080618399 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082360879 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080942447 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073314569 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07400456 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.072696413 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072888497 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081832596 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078020113 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080479517 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079047741 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070455053 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070636951 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072986676 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079968164 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078895823 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079346543 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070640827 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079475169 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072708176 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080177466 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083782202 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070547992 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071490105 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069846142 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070026992 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071146392 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077890862 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077495911 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071859665 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070474348 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070262893 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080235655 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077921696 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07181615 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078898689 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07119855 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072090003 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073344476 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072937763 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078876618 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081081555 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073633196 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07202379 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071403319 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071411958 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069904038 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078297656 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079789189 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078729858 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076576875 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07016543 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076884812 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075738907 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.202957863 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079228777 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070607716 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071593882 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071940669 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08142111 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079685621 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08156177 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072804805 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07284518 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081357412 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083330081 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073069675 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080654337 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081119501 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077778154 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069550743 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081661314 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070766009 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079734875 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070246892 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080003838 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070223376 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078076694 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069807254 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069245839 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070635788 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078219091 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071289992 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070440265 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071685026 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071951441 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080824465 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083697566 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072268427 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078586495 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077615888 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071741005 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077808136 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07049878 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078753587 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070429152 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071077736 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069075692 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080658753 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070733452 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070739055 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070597642 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08001287 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07051219 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079709618 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077329829 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07006626 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083694916 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080056783 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077128141 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079794823 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072198105 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07044193 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070695328 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07037909 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079831906 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081354937 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073656912 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072168916 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079530948 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083238804 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071560145 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080371665 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079116248 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078253763 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070406233 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070775166 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080144607 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079908003 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077977603 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078316919 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078317821 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070988802 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077494426 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07807154 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069770551 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083265323 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071728041 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084558272 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08092598 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078853473 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078537561 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080158732 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079095429 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080680103 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081532033 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068471695 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068685764 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07645186 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068747438 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068850778 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075393682 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070155633 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069874332 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08134875 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068946086 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.213966313 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070196293 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.0795633 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070218058 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071917025 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083437219 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070209898 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072159394 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07862135 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073083877 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078090754 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080398827 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07888336 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070149262 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071153611 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07938305 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07950632 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071079946 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070530604 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071220097 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077772615 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078182386 seconds)
  done (took 18.964009283 seconds)
done (took 38.271395239 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.189130793 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14289588 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.156116249 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110492244 seconds)
  done (took 2.057739495 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.109695932 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096551804 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.089773116 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066696548 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.095340974 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066896097 seconds)
  done (took 1.930989294 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263344857 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.182705944 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168207986 seconds)
  done (took 2.018559613 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.189559955 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.177857991 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.418652941 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253708859 seconds)
  done (took 2.547171635 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.135780198 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085562257 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068690786 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084017042 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125065354 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.151673843 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095846151 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.11998067 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080062526 seconds)
  done (took 2.402662929 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.139844884 seconds)
done (took 12.502090396 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.220122679 seconds)
    (2/309) benchmarking ("sort", Float64, false)...
    done (took 0.148735388 seconds)
    (3/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.229273238 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075261401 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.114169588 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123798312 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071760988 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110004511 seconds)
    (9/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075329067 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.216328469 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084386663 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077270454 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075743132 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.197786034 seconds)
    (15/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.090470486 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.152684074 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.198053346 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.189182944 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158448922 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101796343 seconds)
    (21/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.221191245 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066154821 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075834324 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171354065 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091549362 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112031353 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.106159647 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076332024 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094437208 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077904257 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081286492 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054755107 seconds)
    (33/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.213004028 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.406267557 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109304773 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09005948 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080569237 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.198323752 seconds)
    (39/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074308671 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176580299 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137510863 seconds)
    (42/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100475244 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.201398935 seconds)
    (44/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055389553 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11433786 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10985648 seconds)
    (47/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057184892 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109438699 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.115204401 seconds)
    (50/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080752799 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07468972 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087445294 seconds)
    (53/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.15462991 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066159053 seconds)
    (55/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.142107625 seconds)
    (56/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055237125 seconds)
    (57/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066690478 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.199173506 seconds)
    (59/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.189889526 seconds)
    (60/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075775725 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176884825 seconds)
    (62/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.158242003 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 0.150189669 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.121257929 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070367007 seconds)
    (66/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.0867581 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091349975 seconds)
    (68/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073925525 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 0.068575486 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08270055 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.073192866 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066966294 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075272455 seconds)
    (74/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05358051 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075178781 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.097217445 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066071641 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079583622 seconds)
    (79/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.15591437 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090014263 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086902412 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.237765515 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091565692 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.197232641 seconds)
    (85/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078290798 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074425451 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088825862 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.081514533 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078009389 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066056552 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141547332 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.056392798 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084692501 seconds)
    (94/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072880234 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076509605 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.157695479 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090112732 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070898699 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076852653 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074367837 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073433186 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098169299 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092213839 seconds)
    (104/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.175984441 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140695917 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095607421 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086562962 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07333405 seconds)
    (109/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108747601 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155830832 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088184196 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.12912822 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.188862026 seconds)
    (114/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081178404 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077005158 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15128906 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071390649 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07451605 seconds)
    (119/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089367228 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075798242 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073892054 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116099997 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066702979 seconds)
    (124/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.187776368 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17616356 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067667971 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077049576 seconds)
    (128/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055323919 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078334545 seconds)
    (130/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080052069 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158449078 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074225361 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087794212 seconds)
    (134/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075911096 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090934254 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074113221 seconds)
    (137/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075333731 seconds)
    (138/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091992233 seconds)
    (139/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174740595 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074947332 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068968196 seconds)
    (142/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054567671 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.152991692 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074317955 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074600957 seconds)
    (146/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066550203 seconds)
    (147/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075317871 seconds)
    (148/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071050463 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08950804 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076731034 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156605819 seconds)
    (152/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055702308 seconds)
    (153/309) benchmarking ("sort", Float32, false)...
    done (took 0.129078695 seconds)
    (154/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056537847 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068570988 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078395108 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055469456 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.200607792 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142853723 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090961043 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054448515 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054209929 seconds)
    (163/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075565583 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087251294 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054399738 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055693464 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.201281364 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.099311425 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077029441 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056139767 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068547756 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05603382 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075748327 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068079286 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076800561 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113010389 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09919672 seconds)
    (178/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074081887 seconds)
    (179/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100404056 seconds)
    (180/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080522336 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067305233 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053656493 seconds)
    (183/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.110774145 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075487448 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.154955762 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.289904134 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091076606 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167674611 seconds)
    (189/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07139526 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07426833 seconds)
    (191/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076256055 seconds)
    (192/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055261055 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069161149 seconds)
    (194/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.068203879 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.055890072 seconds)
    (196/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072270979 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.056341732 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069788063 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070862739 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076465183 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067640111 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069793899 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.057377392 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187580546 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06986392 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076010398 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074839815 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068157199 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136428715 seconds)
    (210/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119063885 seconds)
    (211/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05448171 seconds)
    (212/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104098823 seconds)
    (213/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066996859 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.067858827 seconds)
    (215/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075552329 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.056726293 seconds)
    (217/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072151907 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090209729 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058202766 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146186373 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092249431 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109940838 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079502025 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067821855 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070199902 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053728895 seconds)
    (227/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054127187 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079393778 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151854088 seconds)
    (230/309) benchmarking ("sort", Int8, false)...
    done (took 0.143803121 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054033824 seconds)
    (232/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.056733751 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074639096 seconds)
    (234/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.154813174 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067917311 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054323853 seconds)
    (237/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093827696 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054438126 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146189363 seconds)
    (240/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067014728 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056708817 seconds)
    (242/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.111590132 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169541636 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054338375 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100464401 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068275722 seconds)
    (247/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07635881 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076122698 seconds)
    (249/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076678699 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090426395 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05729223 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056023321 seconds)
    (253/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098796799 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066938747 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068930782 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068471866 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068164812 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069361237 seconds)
    (259/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068812737 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068973795 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07515826 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069242692 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057499173 seconds)
    (264/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073231091 seconds)
    (265/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068148826 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075326617 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053693414 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077918483 seconds)
    (269/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068177332 seconds)
    (270/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066405315 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.1488401 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074846612 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102224398 seconds)
    (274/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053726577 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155656954 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070921807 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067472184 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053733955 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05373153 seconds)
    (280/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065194208 seconds)
    (281/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054119878 seconds)
    (282/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069527865 seconds)
    (283/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076486039 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067283667 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072959123 seconds)
    (286/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06771551 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073652234 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066409384 seconds)
    (289/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065876677 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067181805 seconds)
    (291/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054498018 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106911086 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073180609 seconds)
    (294/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.055758716 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069065785 seconds)
    (296/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068044092 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056635054 seconds)
    (298/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056332525 seconds)
    (299/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056575993 seconds)
    (300/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.070164841 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092453248 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078648081 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05357846 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066764873 seconds)
    (305/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074480133 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053464014 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.237440287 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075775897 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055318461 seconds)
  done (took 31.295748061 seconds)
done (took 32.717012506 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084212234 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094217026 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077496162 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093810254 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083299836 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078247609 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075097005 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080119899 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082321831 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084074626 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080320137 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057749692 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076643528 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077333911 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077546243 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091885956 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081323393 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07588858 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07603803 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067750529 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075565064 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06812499 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069644417 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057322853 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080778096 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073867127 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07696589 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076857419 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067829486 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067994729 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071637468 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075968413 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068883299 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081110492 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075774456 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075392393 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077034287 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078456495 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069318122 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068260247 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076550031 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068252463 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075262607 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07620137 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074095931 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073887011 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076009311 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079942449 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091983293 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072603676 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07927262 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080139123 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082179135 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077867152 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074478308 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078227838 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074790666 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094676761 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078146164 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072816551 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079265272 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078544697 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075577539 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077993923 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078036896 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080565448 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080606154 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075768988 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079498016 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076520656 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068531355 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07568444 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071771448 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067607943 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078074431 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081966894 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066282934 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073778469 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075350597 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075255257 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06701247 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069710743 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069330943 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073998833 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069793539 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057182608 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071591289 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074545842 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066756911 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075798717 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074449705 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075039012 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069318868 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078746362 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067326815 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072929651 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067863195 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068449145 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070245366 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074098588 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070328745 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071498674 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079506732 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070796509 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075613894 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081387511 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068082272 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074039013 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066107194 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06644851 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080168157 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076639903 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068137757 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069524203 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066203222 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073912649 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0657447 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066967226 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066566066 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066274042 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073249108 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067022632 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068497812 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.212807124 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083047023 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068967034 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071969009 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070230992 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068398871 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074871546 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068021311 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068056136 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069558931 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065031288 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069886373 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067539735 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075365933 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069894973 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075498856 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068867642 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07637884 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072454894 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073636802 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073398294 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066487556 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061650605 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070381395 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069789545 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069180242 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06807015 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069456731 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06766547 seconds)
done (took 12.861759053 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068677266 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131408694 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094476887 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094026045 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085661158 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069534793 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076629167 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095714078 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06992203 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098298311 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088819981 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086049896 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110025197 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067305502 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069000225 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072436005 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070064265 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081701328 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097356897 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087584941 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111121165 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068419988 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091820444 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088975801 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087687065 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102596402 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070061012 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072310937 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072851322 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09142001 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088672639 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072473047 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069477525 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09648252 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093664398 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083111382 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069432598 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082975127 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069366164 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068823769 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069934034 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097481669 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081732644 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081233359 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072490839 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078021072 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069975455 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082760392 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088965164 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079851605 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085403787 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098791004 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071380113 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084093923 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067209186 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085407847 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077202667 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07087003 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06963249 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076344594 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068747497 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07235425 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081070489 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080666678 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072903549 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084636058 seconds)
  done (took 6.889510414 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085408242 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094917973 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084254622 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087193664 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068490989 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069193324 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069099578 seconds)
  done (took 2.080247941 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069246633 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088198986 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08981231 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089244824 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082740131 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091657479 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077302994 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069494594 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092652526 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070198572 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087908841 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098517956 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072689058 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081696729 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09060748 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068935434 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091112469 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069349271 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071582548 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090716866 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074954406 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097902756 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076167667 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070033457 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082254753 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069502461 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112403327 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073126797 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071151746 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072636097 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070495103 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10731682 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08197588 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076913572 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069555881 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083186968 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082682113 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072359298 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080186676 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078973119 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084578657 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070750843 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069922028 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071276614 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073370721 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078673762 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070363928 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073614184 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071879557 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089980051 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070155132 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082945498 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071597135 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074893552 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070947208 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075741412 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079235833 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070047881 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088028455 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07098331 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084282005 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083583567 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081622305 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083567468 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071007007 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081502912 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08195936 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071595856 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070795096 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072498374 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083359735 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06763696 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070507531 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078733977 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072084555 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089882285 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090513651 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070577986 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08156593 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069456177 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06964959 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069269218 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089960639 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074203014 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069772724 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072714431 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072994948 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072056628 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068504003 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073181518 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067990716 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075121823 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072222814 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072032258 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071980233 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084181168 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071765745 seconds)
  done (took 9.065616979 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072457077 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070702118 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07147057 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070408259 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070407477 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070648271 seconds)
  done (took 1.970331416 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090910457 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070740413 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080817654 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073157478 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10246744 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087663715 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087527315 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078897369 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084477903 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079818438 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086881011 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088490084 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091920233 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074354541 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087867907 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073597776 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087950504 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075886572 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079214799 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07454918 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086639992 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074411716 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074663445 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082664951 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077440675 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073680969 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079836962 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079779278 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079409366 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079112642 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074082464 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077643603 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072558026 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078487398 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088016201 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072912131 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07304472 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078316472 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073545514 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079585202 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087903836 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074451487 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075661258 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078912514 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078361503 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072150689 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078187693 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080124407 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087004302 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078672445 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078076262 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07281113 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076468244 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07819589 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072973504 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078399707 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078629057 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087842982 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073917488 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072748917 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070841574 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077269544 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07831912 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077288725 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078944843 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078946094 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072216233 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073979465 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074366428 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073113352 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078426169 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071035515 seconds)
  done (took 7.192798516 seconds)
done (took 28.711169601 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540560425 seconds)
  done (took 2.039640222 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596033461 seconds)
  done (took 2.122917539 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.92812532 seconds)
  done (took 8.451395322 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.359934879 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.461878521 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.693491422 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134050359 seconds)
  done (took 3.200217337 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710127032 seconds)
  done (took 2.239073759 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228485749 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220578107 seconds)
  done (took 1.990244373 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374090865 seconds)
  done (took 1.897351663 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.081909685 seconds)
  done (took 2.607174907 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.229794775 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174901171 seconds)
  done (took 1.929282335 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452621477 seconds)
  done (took 1.974293857 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.789702698 seconds)
  done (took 6.316054104 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213889954 seconds)
  done (took 1.78364517 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234467165 seconds)
  done (took 1.762903763 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.714987846 seconds)
  done (took 3.243651846 seconds)
done (took 43.096686767 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084886872 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086585948 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08665291 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083205514 seconds)
  done (took 1.850678729 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078131307 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074737753 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077627707 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074794787 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077762084 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075146272 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076419484 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076662508 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073926805 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07460168 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074228999 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074938975 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076855519 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076245838 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07314782 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076616321 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077548437 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074877363 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077130023 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074615679 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072625747 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076894575 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076576681 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073483974 seconds)
  done (took 3.346193632 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079612702 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075401155 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076706448 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074120256 seconds)
  done (took 1.839951082 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079333895 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090700168 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090033672 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080260294 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091574211 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086616778 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071354887 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071361835 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071722185 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079507348 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069961529 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095017297 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088517518 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079651023 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081203994 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068031289 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070298747 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087369101 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080141101 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080416193 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073023648 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079694779 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070778272 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089216981 seconds)
  done (took 3.457348606 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08621968 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100584314 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080980876 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090595499 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093267721 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067540724 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087354409 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092468009 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124216239 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067871828 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073119641 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067465963 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075362253 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067609448 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082244426 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109570317 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110977816 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070980459 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099070059 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067869918 seconds)
  done (took 3.256121249 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073526459 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071680565 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072643774 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068134272 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078367758 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074269109 seconds)
  done (took 1.981406225 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070551957 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069144904 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069311223 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06888991 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07350677 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069434989 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068541274 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069577861 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070238238 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069254296 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069310977 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070575373 seconds)
  done (took 2.375022512 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.18238273 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070546582 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070821191 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068928191 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071875173 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068515613 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082906766 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070059988 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092630521 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069040648 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.0686578 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070377451 seconds)
  done (took 2.526047823 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19127686 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077251492 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219889713 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147258051 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106469941 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110019856 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11013417 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10877972 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133539733 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097706103 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157263496 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158529652 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105255261 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132494111 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090921919 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100304382 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147375212 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157243123 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104068697 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157217396 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138431362 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122390494 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141281608 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099863269 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103722145 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116492117 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073331936 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080143069 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160880896 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126967936 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138365651 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109728344 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094096804 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167689972 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160201819 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135318923 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142477245 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084977746 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102736191 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128227813 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186661863 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087973948 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298941153 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109354225 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082273132 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128477062 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114664002 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117112724 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102755055 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090194521 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139432234 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172329381 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129249887 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086769925 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119273883 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109917897 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.10872664 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110003978 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167276942 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152112382 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124160231 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073056645 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108837789 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144386537 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127484917 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105116463 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119478116 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092798496 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127786047 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146831226 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11844018 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135988343 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113255967 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089000633 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116694115 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132848325 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123410165 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153824408 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120815605 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074697073 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118576989 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098821774 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081232307 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142979498 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076275256 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165716492 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09888616 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104090541 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119728784 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104820316 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105238422 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147429435 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28289686 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102559245 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068584383 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103949272 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.116183721 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137548878 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088049268 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104914227 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113066456 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078966064 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129700772 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077633183 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120706261 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077699684 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119826444 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125533294 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078780348 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118765307 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101779084 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099414655 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126502845 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151406995 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08779553 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081342875 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158007088 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118412108 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100302417 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136544464 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148672921 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099029866 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097804006 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141392516 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162763936 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089039512 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155506088 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104512737 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083697383 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087074846 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119304898 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108360984 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119954712 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081950486 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115678236 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156803665 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076266045 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094534237 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129203308 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079171566 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080861498 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104075012 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101930753 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095610328 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096510643 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099897356 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130081814 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268000083 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105975944 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120875189 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098310651 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159457703 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088922025 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102310293 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102471482 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07181218 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126976312 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146954814 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079464193 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152200376 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117893845 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112735779 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115727423 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084471648 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132654748 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080148744 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073005251 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137367141 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108461975 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106484772 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.142978111 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112779817 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119692087 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.114485247 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127170179 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125159916 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124568603 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105138034 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087878131 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109289622 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123523789 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074912217 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089953843 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080766699 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10304676 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094292002 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083545806 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135170288 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119530837 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110953686 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109970321 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095665968 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139576208 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077176463 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121278228 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115381301 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094601459 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14374182 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143376038 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126542455 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096769148 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280326656 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072734459 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07706896 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087808999 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119060129 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084454298 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083227726 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11188995 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140371278 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123281928 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130932918 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119597129 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11555474 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146849794 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071817307 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117330849 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138757465 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116771463 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103873793 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094294414 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101091012 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140132188 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107834038 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173224107 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115350522 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124461934 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152504767 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103676421 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083488761 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104412389 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13134864 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10578754 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138824772 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097344937 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088149133 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10651452 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078587587 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097222814 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122797704 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115075391 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13077234 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112143207 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128872573 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078524626 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110688882 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117733315 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116738235 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065922139 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114337503 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150700221 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093644498 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113184389 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29352515 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080038663 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132325946 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163548348 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137614893 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084469731 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104431328 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115902387 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121287251 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116204781 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131843752 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10347704 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132135046 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107361086 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085467786 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087070213 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09546434 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101595673 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09280504 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101542572 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110326128 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095065326 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126120704 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102407537 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107749374 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114716968 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098315157 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092189939 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095864383 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165890954 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115159485 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160923617 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098596728 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135856056 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153475844 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076214391 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079971909 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07951091 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133118707 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085411936 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126172686 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108754785 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114664601 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119761216 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133330324 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094762092 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070201292 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105774319 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128689833 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120000819 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097266473 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100700352 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151886929 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.095627725 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227021386 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110203261 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113005741 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101719202 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1598657 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063985849 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103391285 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078588993 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080686549 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121825519 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142267399 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081429406 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099949542 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1163534 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1100345 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121456951 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097052027 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109351308 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121234829 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141655102 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124705315 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089085809 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108184645 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122144021 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147626758 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101270019 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097285531 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164964239 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14410088 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151439716 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086484881 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110751362 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111196955 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10659824 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133783045 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084531745 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153663815 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082663792 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131821911 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10160099 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08832177 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124740404 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109457039 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087876325 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138606748 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113077657 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083050504 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078216139 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112732933 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115810005 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10169291 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075841554 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282144426 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075980945 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128197348 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152416502 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08181413 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103314434 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094529071 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081176168 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103484777 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101283189 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087426127 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099766697 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161496216 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085686506 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139992726 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128972602 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108867954 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128933941 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100708663 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638986717 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078809485 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142992255 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112465031 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16166891 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098321887 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114120413 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107554388 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117510286 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138169455 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102148891 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177894173 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127257894 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112899328 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080002728 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103420101 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102350991 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086774169 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105411869 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110676761 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112441078 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092407647 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113121946 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121047015 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082535793 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094728305 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147065125 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111747508 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136907587 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131927549 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084801647 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114007192 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284406232 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080975375 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114904546 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143256556 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103679348 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098461978 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08302975 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099693595 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150356108 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075561683 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150250088 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118970719 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10702205 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110582243 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107763015 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125634791 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102805644 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118085783 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090770881 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107445379 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112147991 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084170682 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079369593 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10642519 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11164697 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100818428 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09892666 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103251564 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148182437 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.0766507 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101583746 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116265762 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141035075 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164204593 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087178343 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083355895 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116886671 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112889395 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10955317 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117854636 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080063022 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082450554 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080959331 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082567317 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10635573 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110982799 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11202649 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107795845 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152639624 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083047684 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220679885 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093610396 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101101892 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070383502 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078219273 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094250896 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246720185 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104197696 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110169301 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151542984 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094872168 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089419558 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090798557 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076629514 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083482781 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12171458 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107648968 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113717039 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099549364 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06464861 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103943964 seconds)
  done (took 57.531643969 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108310034 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084313382 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097598895 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143932326 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121611756 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198638224 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156383891 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188803008 seconds)
  done (took 2.754840281 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070629883 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094680165 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103532453 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083831098 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068437419 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072483457 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.21950292 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082681898 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06876746 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094621989 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08012152 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071636671 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.410046898 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068631064 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069815288 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065029699 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069548251 seconds)
  done (took 3.435679879 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373443475 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621158994 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.329829367 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078368259 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.896574019 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094907408 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.134897213 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138417787 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079909682 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541408934 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.405911095 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130598138 seconds)
  done (took 18.479953369 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084524845 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078556914 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09106878 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090609891 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080189991 seconds)
  done (took 2.145837258 seconds)
done (took 106.566088108 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084366973 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.58516201 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057037193 seconds)
  done (took 2.324654625 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088740445 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086828644 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087017427 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084524059 seconds)
  done (took 2.004761217 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076210806 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078441626 seconds)
  done (took 1.808019627 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224188838 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166975523 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096783635 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084538557 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081732578 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081813043 seconds)
  done (took 1.908612457 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074579883 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07790542 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074379017 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078552096 seconds)
  done (took 1.96025249 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079173761 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055223257 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057555773 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060317737 seconds)
  done (took 1.908976134 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087782556 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083416887 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080358635 seconds)
  done (took 1.907565197 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100571688 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087906792 seconds)
  done (took 1.843867709 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083490894 seconds)
  done (took 1.74007992 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093504771 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.098987802 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127278868 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109028594 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134902455 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10697048 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085315308 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086632975 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078332356 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086739185 seconds)
  done (took 2.663024881 seconds)
done (took 22.292388024 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079748123 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369137882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362092762 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09188544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671256094 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359958159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96991661 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09457025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139503626 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069935332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086526188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650592955 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957142774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327757032 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.946054262 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327095105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651977886 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070666425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070565099 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07019404 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.954515047 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070332635 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070522675 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07169702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652624314 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374178871 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071289477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328372546 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07060745 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07259329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35881452 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088321089 seconds)
  done (took 16.186403225 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072900635 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119604453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075284261 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087163646 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07258726 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07379385 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075105072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071917262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122048081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072472299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088547611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070939632 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07447618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071182154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089925045 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070455628 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071384367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071801462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072950034 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07098499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089032407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070321573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071231021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072125768 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071091135 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082201117 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071525239 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071366103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071808559 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073057324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074338972 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071562717 seconds)
  done (took 4.155346495 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115621316 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125004714 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076355582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105273848 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112920358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072614837 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143304214 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095709631 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128149019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070315624 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087714037 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070921495 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103471736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071693804 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090520343 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071159192 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072101698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071701596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071212678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071317351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090108549 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07099152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071102474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072003707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071695012 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084120261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071798483 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071250419 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071393875 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07304765 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074907299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07196993 seconds)
  done (took 4.394802183 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074902015 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077283014 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085260432 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086086109 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071906357 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074056779 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075332018 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071768723 seconds)
  done (took 2.293817232 seconds)
done (took 28.698428479 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080695189 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071306873 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074613216 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090169132 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075484344 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.0795675 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069869452 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077280353 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075271244 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075187959 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077477106 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070183197 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073695327 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069813593 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076634215 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070644217 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081017949 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074269084 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081350074 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081288382 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073238717 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076415958 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077861557 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081289343 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081636443 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080682856 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079259676 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075755684 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071188007 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073677814 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079642042 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086690029 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071101172 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08091643 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070360638 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070691341 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074409626 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070545145 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08120074 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078622446 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072457308 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079170902 seconds)
  done (took 4.856666953 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087932517 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092565239 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085110723 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063843913 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06825567 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06707524 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089869981 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062206181 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062341993 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089260525 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059101882 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062287711 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065132876 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056983398 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062543604 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060630552 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064471841 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058329913 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062594465 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062246687 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089566955 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057186828 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079873578 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065877431 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059260219 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065002682 seconds)
  done (took 3.475348647 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076663228 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085241493 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090529319 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142571826 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.1115672 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079817427 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080332355 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094273869 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096304224 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069807435 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073677886 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095203395 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089752978 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076090253 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070316894 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086151371 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087043008 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071656166 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075215734 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092960551 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087791164 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086916679 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092823017 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085102351 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069798711 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07214319 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073804613 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083597403 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072521812 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078254374 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072815235 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072738382 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071968343 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080867862 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073066371 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071666288 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095083951 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079782818 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080332485 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070868362 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077752992 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071760694 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092991854 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127720453 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071587192 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078455112 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076416055 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081974715 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072158285 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097751153 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081708191 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069841215 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073170153 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069433752 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069595354 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072903031 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071878924 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072171784 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078149325 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075517226 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093503053 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074929733 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08593806 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069859569 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077992086 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069458815 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071192804 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069486186 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094681147 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072092143 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109428366 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070838628 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071183097 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078756529 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077876016 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076496028 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070227186 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085815584 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081749759 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073262373 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077778085 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073110651 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072308235 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097868029 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072885294 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07187469 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071206757 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075038314 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072503043 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07110329 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082496629 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069690356 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072607888 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.0863127 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06987845 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071389869 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075541258 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07485182 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069833051 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08036945 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074143633 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070840656 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07874849 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070110395 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07213198 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080959052 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076197601 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069145427 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073735004 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074907147 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070264111 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070674697 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071689766 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071381813 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077927486 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075653804 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073948181 seconds)
  done (took 10.912406207 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159294874 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149189432 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073304897 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143421421 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079293281 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080957365 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.143951696 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093654366 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070777663 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071157678 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070930908 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109236612 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104443174 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11610965 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080524302 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070457248 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091709138 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113393367 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146376837 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141977346 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092754647 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07810982 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073208298 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072044067 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073153307 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079400961 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087242506 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078909635 seconds)
  done (took 4.462488073 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081420698 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102663982 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076457851 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091168112 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091406314 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070342655 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072814251 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072165766 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086061729 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079807613 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07019376 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074922802 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076143355 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073416397 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071365956 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076758315 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07694058 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07189556 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07410168 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075244437 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080569691 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093273979 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073560448 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071985654 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07508709 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070198359 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066324891 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085827766 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070854256 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094580094 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068098137 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075943891 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083400409 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071223139 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070829974 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070174619 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070487844 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070434591 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071992791 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068742808 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069039059 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060937046 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069760375 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080383852 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083554609 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059687213 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074698991 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075111015 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075534365 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067696175 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072926047 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072772168 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072828214 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077233559 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074026832 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075206007 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071524546 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075736016 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078317909 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070312619 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068099694 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068820127 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076519276 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067571934 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085179354 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074901393 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068861439 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070160323 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07195917 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083035778 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070325421 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074751705 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067986102 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072059565 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074869593 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072076414 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071356426 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069270983 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070178979 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070587667 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058372814 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070151595 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056561723 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072759767 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068631516 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068743248 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07034944 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074635222 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080709098 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071392399 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07577316 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07122096 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069567067 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072922584 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062826996 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072734399 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080318397 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083791557 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070775244 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068498313 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081902272 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074952187 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069533426 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059738512 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074327923 seconds)
  done (took 9.455107889 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092391923 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072104295 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083379607 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090552175 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087727023 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076032883 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08020763 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07142226 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085645538 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075606885 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079466465 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070545473 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080409346 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079446108 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072100744 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07985238 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073982081 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084580666 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08484711 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070907714 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078567963 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081949455 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091286961 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082442846 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080919562 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082426162 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091259782 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079217015 seconds)
  done (took 3.984685293 seconds)
done (took 38.814744464 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.756166911 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.9239713 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.744949505 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.078961522 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.814656866 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.968893401 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.833510942 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.739986513 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.082229081 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.779402524 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.063293771 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.825410677 seconds)
done (took 65.416009234 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.773247233 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.874962745 seconds)
    (2/2) benchmarking "String"...
    done (took 1.97659676 seconds)
  done (took 5.519245214 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.965511708 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.310736321 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.982157916 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.733826764 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.741080466 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.05072916 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.539853465 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.261703504 seconds)
  done (took 30.289661099 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.885608728 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.96218274 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.425805186 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.463113743 seconds)
  done (took 15.462098728 seconds)
done (took 62.772222347 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.727116309 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.7364239 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.773090267 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.718885845 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.793131445 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.745511516 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.226181747 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.789044952 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.733392901 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.727077632 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.734525133 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.146784741 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.746560264 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.033557029 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.737042923 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.745152025 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.741887308 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.231234238 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.889088813 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.753521987 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.749793634 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.939604098 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.742288954 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.752430105 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.782600156 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.737546611 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.134527925 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.745134595 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.352615054 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.741316126 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.769758659 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.27436558 seconds)
  done (took 203.121088486 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.736099024 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.631629597 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.723121858 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.779807522 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.100028388 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.919381742 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.84634555 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.163336172 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.743060725 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.759217873 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.938783876 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.736946735 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.949467167 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.681757421 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.771589994 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.846260354 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.902214697 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.951023537 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.775798114 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.888907526 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.761384346 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.776786101 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.705432554 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.907317638 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.754920145 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.8358747 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.763784622 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.754123475 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.92917613 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.890521724 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.778351112 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.74399861 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.927294012 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.609801686 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.747702473 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.746676515 seconds)
  done (took 168.14902613 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.931667575 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.738415232 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.738266987 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.737687319 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.744597024 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.738135355 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.862399359 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86521266 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.352858444 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.19215464 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.79223215 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.738607571 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547461182 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.740143508 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.804902244 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.750110356 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.739197965 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.753286919 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.767932681 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73927163 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.73981362 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.867626848 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.753329472 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.738947823 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.746984481 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.741743394 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.744549187 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.110990615 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.739579558 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.962222713 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744266717 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.745184097 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.979440149 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.740504282 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.739332722 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.597578408 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.687957999 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.747196248 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820579419 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.742423756 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746281446 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.740351054 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.958584295 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.743802507 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742006493 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.743770601 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.741882901 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.74546794 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.891130836 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.743752398 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.868869898 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.742513367 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.224505001 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.744405761 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.74200993 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.496061354 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.610444352 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.746207543 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.747760057 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.743715827 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.742261852 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.75652349 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.502279512 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.824143618 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.744635075 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.749084396 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748937945 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.743413559 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.776624128 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.747338632 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.531461812 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.804704138 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.868913689 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.868751886 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748225518 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.743888207 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.80979778 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838651579 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.744603194 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.743124388 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.745055177 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.74475683 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.82565189 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.744843057 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.904449126 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.755225447 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.745402145 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.797658023 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.812795796 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.746453077 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.595708509 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.747827252 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.744467683 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.022673585 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.744795544 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.811884488 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.745430616 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.745905521 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.884239055 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.869133262 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.465389945 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.749466353 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.440178217 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.899126494 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.747656764 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.88972211 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.75048894 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828986181 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751336756 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.748189131 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.77913058 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.746761391 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.800258959 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.750098592 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.12076999 seconds)
  done (took 399.426927993 seconds)
done (took 774.356000869 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.343969327 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.318145455 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.421962493 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.330985205 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.306077439 seconds)
  done (took 13.400048105 seconds)
done (took 15.078081948 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.836962697 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.840585647 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.76985635 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.837623271 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.767697511 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.83713632 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.822389394 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.772272583 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.804766316 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.771497786 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.80634537 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771739077 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759577189 seconds)
  done (took 25.07847115 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.98233401 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996387968 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.818931602 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.983363484 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794720601 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.988896962 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.912861858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903249799 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.902336309 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.764494435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759155563 seconds)
  done (took 22.48589194 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.992407333 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996885923 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825268077 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.990874879 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.797254759 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.990027465 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.914040314 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.909838877 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.910788009 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.764318705 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759992709 seconds)
  done (took 22.532764442 seconds)
done (took 71.776104632 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.756670963 seconds)
  done (took 3.437333091 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.785264578 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.953018403 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.763819686 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.760152903 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.756528634 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.758975892 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.760896711 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.756253148 seconds)
  done (took 15.976421192 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.755735292 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.754446324 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.755612052 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.755784147 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.753300667 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.754855818 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.756315175 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.756591908 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.7533406 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.75369927 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.754800685 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.755339677 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.756054095 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.756721942 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.753893455 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.753549689 seconds)
  done (took 29.763717421 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.754930479 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.753873806 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.753748134 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.7545746 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.75352492 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.755260456 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.755481908 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.75369222 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.753717939 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.754256536 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.756067673 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.754873685 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.754766018 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.754581168 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.754554348 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.755539709 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.756471336 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.755184625 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.759071098 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.75454371 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.756522934 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.754794155 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.755515752 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.756236331 seconds)
  done (took 43.807912091 seconds)
done (took 94.666325335 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.514401829 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.381735761 seconds)
  done (took 9.578767205 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.759978386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.757721695 seconds)
  done (took 5.268068937 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.757840961 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.757328148 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.75697047 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.757959251 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.756619006 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.75859558 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.758242644 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.757875997 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.757403031 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.758116797 seconds)
  done (took 19.261582596 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.75813676 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.758455448 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.755433641 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.758187098 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.758154436 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.757172453 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.758825076 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.758595526 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.757904146 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.75520959 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.758685224 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.75672419 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.758540505 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.756472518 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.758414796 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.757443098 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.755807238 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.75682456 seconds)
  done (took 33.320041281 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.759489065 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.759371786 seconds)
  done (took 5.204762769 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.756819122 seconds)
    (2/7) benchmarking "second"...
    done (took 1.756070464 seconds)
    (3/7) benchmarking "month"...
    done (took 1.756004076 seconds)
    (4/7) benchmarking "year"...
    done (took 1.756489434 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.756716862 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.756213938 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.756569685 seconds)
  done (took 13.98049189 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.759658629 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.90452294 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.967851061 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.417549703 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.761312368 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.763285822 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.736902847 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.764201039 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.765355161 seconds)
  done (took 19.527128861 seconds)
done (took 107.825105848 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.613325006 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.757936573 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.998921606 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.813061933 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.817867487 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.098342196 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.765307432 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.035402456 seconds)
done (took 42.586712312 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.841213229 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.392053683 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.428370141 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.7900721 seconds)
  done (took 15.297739865 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.742552195 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.065638415 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.779522816 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.586872609 seconds)
  done (took 21.865983199 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.123787192 seconds)
    (2/2) benchmarking "read"...
    done (took 2.112283531 seconds)
  done (took 5.929038169 seconds)
done (took 51.621566506 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761591766 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.758740543 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.761691855 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.760120951 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.761743226 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.758858164 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.760498242 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.759737216 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.762150438 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.761246728 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.761622947 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.762935271 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763884737 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760270725 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759841813 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760872516 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.761099292 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760022494 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.763277121 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760052152 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762722149 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.760381322 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.759995611 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.763555296 seconds)
  done (took 43.955741138 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.762992126 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.7614368 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.762558801 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.762904611 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.761638793 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.76221284 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.763516023 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.760441676 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.763652321 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.763434582 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762742217 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.761290673 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.762509167 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.761952635 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764255059 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.762456579 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.765057581 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761103112 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763528934 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.760851372 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.764645536 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76123011 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.762059706 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765869948 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.762833357 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762956627 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.765225043 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.764873125 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765200033 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.762863754 seconds)
  done (took 54.577995502 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.769666506 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.772561278 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.764965993 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.765172625 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.764367302 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.765865028 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.765313765 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.767927138 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.76584246 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.765262733 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.766564038 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.766543108 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.766670899 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.765628975 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.766339302 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.766270497 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.76629269 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.766544241 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.766318437 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.765965878 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.766199573 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.76644509 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.766528587 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.767452057 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.767310447 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.766559189 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.766380939 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.766452403 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.767516611 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.76613822 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.76848849 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.766154947 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.767069216 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.76607281 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.76823492 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.767777105 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.771150518 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.774569955 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.766704537 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.768157082 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.767140368 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.768797485 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.76625324 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.766991532 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.76764512 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.767907678 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.768392735 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.768028123 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.768756858 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.768815948 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.768692142 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.768773561 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.769496283 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.769412723 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.76892322 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.768036077 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.769203687 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.770193294 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.769989047 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.768527941 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.768772672 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.768932492 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.768310609 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.768628176 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.768969782 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.769463157 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.769220122 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.768368996 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.768948554 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.7698175 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.768064228 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.76885581 seconds)
  done (took 128.970177304 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.769494669 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767661788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.766858218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.766552573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767453814 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.76969996 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.767944062 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769663561 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766568587 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.769770829 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769734559 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.767600492 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766942824 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.770892641 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769633703 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.766929002 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.77062805 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767429071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.769728284 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.771762133 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770638588 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.768266426 seconds)
  done (took 40.606468299 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770418654 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.770819104 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.769162494 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770358631 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.768415535 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.769703344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.770905335 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.772192881 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771237807 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768970986 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767894459 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771376378 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.768993646 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769078499 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768352026 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769696985 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771774445 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.768721098 seconds)
  done (took 33.554982694 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.767982212 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.769245099 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.771690237 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.769270628 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.76948902 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.773388802 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769294606 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.771767176 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.770775928 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.770076281 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.77170536 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772123979 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.771905822 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768549995 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771960128 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.770641483 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.772711636 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769797848 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77249468 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768908753 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.769819413 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773028524 seconds)
  done (took 40.653784426 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77238564 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.772800068 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.769613289 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.769487961 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.769724059 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.773020853 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.77245692 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.770359469 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.772529143 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.773264292 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770840303 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.774071469 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.770696854 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772288617 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.770995426 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770988347 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.773878048 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.771273818 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773050735 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.771468954 seconds)
  done (took 37.134727381 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.774238399 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776231714 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.775522181 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.774854069 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775891603 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.774840969 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.777556221 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.775163975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.7762654 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.776630909 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.776372154 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.776610816 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776933582 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.776233576 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775705346 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775029472 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775573328 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775172742 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.778049604 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775645019 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.776494418 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776286868 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776352952 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.77638287 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.776418499 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776497838 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77651063 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.776900931 seconds)
  done (took 51.430653446 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776107457 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.776080221 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.772492316 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.772208532 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.772316569 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.772489791 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.774475337 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.77314843 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.775045344 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.772177962 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.776217899 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.777120011 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775356744 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.775752444 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.775304995 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.776666552 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776119636 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.775370333 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77378006 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773337884 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.775947537 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775704151 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.777344598 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773410575 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773963578 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.77715016 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774444119 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.775087127 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777138784 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.775024152 seconds)
  done (took 54.94851198 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.795472671 seconds)
    (2/2) benchmarking "in"...
    done (took 1.794419831 seconds)
  done (took 5.292116524 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.774060355 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776968047 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.776870796 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.775077343 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.774431703 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.777504967 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.777790131 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775507196 seconds)
  done (took 15.911100725 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.776792275 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.777318457 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.77788885 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.777880628 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.778992363 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.777289676 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784608304 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.777667 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.779263957 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.777664681 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.78343156 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.784252612 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.781017729 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778324634 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.77725033 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778798015 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.77741035 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.778380973 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.778987796 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.778763386 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779337209 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781539399 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780053807 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.776161359 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.779413545 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.789556744 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.78291802 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.777856992 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778424772 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.782310293 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.778891929 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.776881278 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.78033168 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.780520239 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.779923353 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.780672808 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.788533639 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779914888 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.786173419 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.781730687 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780098678 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.777038575 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.781041311 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.781357231 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.781505952 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.780415424 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.779985613 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.776915324 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.779355104 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.781973892 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.784137897 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778534811 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.77736878 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783357627 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.780762171 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78717355 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.782890483 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.783041561 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.78872976 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.79013944 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.792978532 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.787935232 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782609091 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.782412008 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.790460859 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.802661438 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787795707 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.778436875 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.777583846 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.781495397 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.787880316 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794449054 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.789865906 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.782943291 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782423457 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.780930975 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781462331 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.781338848 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787809766 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.784864648 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.783327851 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783221297 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.791100646 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800853549 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.781798735 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.783087569 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.782971947 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.783341501 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.782537877 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792459877 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.783958937 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.782110669 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.781922488 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.781218555 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.784079473 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.783797271 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.781829444 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783687972 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.78047063 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.782581669 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78378982 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785450928 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.790881914 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.784806686 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.783902493 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.789789874 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.783295572 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782932327 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.791553612 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.783622026 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784296784 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.784306168 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.789271819 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.780079861 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787163013 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.791067018 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.785112452 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.784961571 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.785134772 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.784033264 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794180017 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.808622668 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.784285462 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.783727228 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.788025912 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.79513184 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78464575 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.787852305 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.784048641 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.78199554 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.781381148 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.785694901 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.784189194 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.785363727 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.785781108 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.785580209 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.784144718 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.785042077 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.786038909 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.785504105 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.785924035 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.785682081 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.786562575 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.786944977 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.786612548 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.786752505 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.792927894 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.784588092 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.787778993 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.786275344 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.783448893 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785909422 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.786512032 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.788560495 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.786707026 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.787269023 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.785918263 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.786949118 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78611567 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.786901566 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786431222 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.78830205 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789554545 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.787835426 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.789393963 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.786457909 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.782653098 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.785589213 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.785974133 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.786394619 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.786899134 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.785544711 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.789514549 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.793674079 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.786239937 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.788100034 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.790189302 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787116806 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.788076973 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.788404109 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.789563945 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.794142393 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.788368406 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.794633769 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.788428676 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.788538893 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.786650671 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.787764928 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.786602995 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.788624008 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.789535266 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.794081816 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800439346 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796545185 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.788552005 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.79086522 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.788646649 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.792524443 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.792582701 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.788881139 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.788358967 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789253344 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787883623 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.789102843 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.790219508 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.789441493 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.787769233 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.788573317 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.788473156 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.789781884 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.790133976 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.788870297 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.790078 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.787242986 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78957856 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.790018461 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.788550448 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.787050273 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.787238253 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.789672308 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.789774336 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.790988344 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.796311795 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.786395314 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790969932 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790262865 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.788833188 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.788462897 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.789855977 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791013233 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.789488054 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796050051 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.790759207 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.791163793 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796987724 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.789939565 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.7900122 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.793486418 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.790110182 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.7877286 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.792828468 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.796829356 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.790543252 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.792163402 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.79042983 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.791093702 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79026793 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.797110681 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.788306839 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.791318391 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.79111924 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.792422227 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.788066293 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.792741676 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.791963652 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.791750552 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793967432 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791922924 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.790632348 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791838338 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.793334017 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.792691177 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.79262874 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794917398 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.79993061 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.797467108 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.792692914 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.794213435 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.792710729 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.795100519 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.791441307 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.794955108 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.792234175 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804620459 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.801021884 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80083999 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.794719302 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.793009413 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799099897 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.794406319 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.796006049 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.791888914 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793732113 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.792047275 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.793475822 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.789921386 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793700359 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.792872067 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.793653347 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.794001683 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.796791217 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.793201262 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.792418507 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.794609091 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.794570525 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.793942034 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.79348788 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.794034128 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.796220922 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796773695 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.793314705 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.793570587 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799115118 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794924011 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.794912865 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.793524929 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.79327359 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.793279526 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.795131442 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.795139899 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.797225016 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.803082826 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.797332541 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.802832805 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.79560179 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804192569 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.79661864 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.796710049 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.804244544 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.792844186 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.79448702 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.795175556 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.795586423 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802078301 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.795799714 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.795363999 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.800264374 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795460147 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.797000404 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.794991508 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.796414082 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795806416 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.797254972 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803510702 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.79759991 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.799392663 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797882538 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.792333414 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.79675208 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.795336557 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.794770154 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798542022 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.797632104 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.79708297 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.79450927 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.795965236 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.796702699 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.797539305 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.795182996 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.794344049 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.795873307 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803650997 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.798054883 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801984126 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.797090451 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.804588023 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.799159924 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803069892 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.799644027 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.79736082 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.79896042 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.797031714 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.798189405 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.796659578 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.798058044 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.79821362 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.797426798 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.80048487 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.798564573 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.800411494 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.797616731 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.799360173 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.797659575 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806781681 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821908086 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.799043142 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80171164 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.795473308 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.799574874 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.803357557 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.798975737 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.797288236 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.800904702 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808708849 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.805403528 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.798989317 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.800146065 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798770566 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801012904 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.797994157 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.798791724 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.799703485 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.799026129 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.800143811 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.799854599 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802616452 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.798523884 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.799327942 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800899467 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.799527511 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.808904923 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.800334327 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.800093272 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801088662 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.799316528 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.800452349 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.798977802 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.800670221 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800016917 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.799604813 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.801252936 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806245684 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.805942689 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.802638701 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.799823959 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.800941322 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.799605383 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.80032295 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.801804591 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.801511896 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80104407 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.801441801 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.800880595 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.800826339 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.79904663 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.800075782 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.801412769 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800641501 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803355537 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.807311762 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801748966 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.798342812 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.801861169 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80128139 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.800217054 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.80060452 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.810189699 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803879103 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.810867465 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.810394172 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.805986459 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.800914518 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803893267 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.808225185 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.800539069 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.80184013 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.802792566 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.802108433 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.802716072 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.805087816 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803590383 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.808678858 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.801284124 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.801398605 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80995326 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.803842412 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.803256071 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.803604381 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.805189007 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.801812266 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.799503315 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.802240563 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.801903622 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809040413 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.804551116 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.8047675 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803428409 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.800255296 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.803525813 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807543204 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802457019 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.804460326 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.800658155 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.803363451 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804705846 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.803179659 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.800546302 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.802596074 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.801890161 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.806312199 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.810200251 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.80103241 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.806453796 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.802818015 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.804485631 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805038053 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804503756 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.804308432 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.801003621 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.80373611 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805437745 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.803992795 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.807916147 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.80433087 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.805047535 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.805696203 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805538899 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807785241 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.815356758 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.811724425 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.802185697 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.804450937 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.805450261 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.807818279 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.806132184 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.806688066 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804269566 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.805802082 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.804798321 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.805773166 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.805089192 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.80826559 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821108664 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.805675417 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805320587 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.80658035 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808481901 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.804794344 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.802653526 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.805686912 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.808015424 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.807997328 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.813649829 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.806827386 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812497365 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806339918 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.808128043 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.809049381 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.808684275 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.81311914 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.808358483 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807501349 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.807687166 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.810915991 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.821433539 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.806198061 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815726286 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834446548 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.808751229 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.807685924 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.808479143 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807066497 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.808158783 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.808629815 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.808106229 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.807521304 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.807492339 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.808360717 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.808280743 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813434956 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.809267196 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.807509923 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.807646719 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.807845368 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.810409091 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.80488181 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.808433976 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.808864139 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.809448206 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.809010645 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.808548595 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.807516573 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819918818 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.818583441 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.808533533 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.80994727 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.806396868 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.811182045 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.811480613 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817805011 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.815591546 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.809466951 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.808429784 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.809696323 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811435471 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.805966424 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.80991386 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.807867403 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808505724 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.805338652 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.822409902 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.818176343 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.81462794 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.808547899 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.810108612 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.809542697 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809910052 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810477883 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.810330157 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.81188418 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.810286506 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813958781 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.810060435 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.809568027 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.812523304 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.816638484 seconds)
  done (took 1071.87853623 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.808005574 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806872338 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808101873 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80783038 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807299098 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807559653 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807429043 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.807738006 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.807719614 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.807313105 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.808460275 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807805006 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.808624645 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808465822 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807865159 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806804063 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808256158 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808520314 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.808062952 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807929603 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.807451579 seconds)
  done (took 39.699171597 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.810778696 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.809022704 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.808486893 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.810909777 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80933242 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.812326548 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.809878686 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812135174 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.811944555 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808980624 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.812986707 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811670306 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.809436817 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.809555212 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808939491 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810684375 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.812241637 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809788932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.812756126 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.809693358 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812379081 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.810095658 seconds)
  done (took 41.568974188 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.81476436 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.814425374 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.812481411 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.810031605 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.812710883 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.809193892 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.814348651 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.813437393 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.813728427 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.813542439 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.812800665 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.813747655 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.820170937 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.817724788 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.816069239 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.813502843 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.957375048 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.814887229 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.814006597 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.814355232 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.811424087 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.818572161 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.811380234 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.810699849 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.812710607 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.81556822 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.814427052 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.813600788 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.815800145 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.814768628 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.819719291 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.813107597 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.814327507 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.816367179 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.813485015 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.814340857 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.817128187 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.816927192 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.81150755 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.814556997 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.823175172 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.833103627 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.816789532 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.821117428 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.815328349 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.814787232 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.817042956 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.823134734 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.811987951 seconds)
  done (took 90.827745563 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.815331875 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.815972268 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.812614529 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.815545612 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.814867191 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.81513854 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.815402552 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.814221684 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.812392861 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.81216844 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.814856453 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.814023053 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.81291613 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.815858235 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.815598535 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.813292781 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.813633141 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812786695 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.815031302 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.813927824 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.814234451 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.816164625 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.816404547 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.814705115 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.815769218 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.814168154 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.814182787 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.816578934 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.814160312 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.814013494 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.816314818 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.817187367 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.815920437 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.815023934 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.815554999 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.8160705 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.8170428 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.813892627 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.817275446 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.814243245 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.816583763 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.816675288 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.816915606 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.817107912 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.814393406 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.815157285 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814602511 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.813254757 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.815056636 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.817864186 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.817283271 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.815497664 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.81750895 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.815601652 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.817108275 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.817418765 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.816033386 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.814433961 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.818029241 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.815760109 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.814775278 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.816823252 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.815988114 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.817192499 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.818054949 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.816106693 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.816649127 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.817727111 seconds)
  done (took 125.191103866 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819899989 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.821106519 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820652477 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.821124834 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82179223 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.820428103 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.821027036 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.822399129 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.821988915 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.821144387 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.82138429 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.820334552 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.821405262 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.81950991 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.821684205 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.820990956 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.821052808 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.82202719 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.821342812 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822760945 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.822054228 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.821942698 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.821661634 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.821689073 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.822156776 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.820885414 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.821753633 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.821716088 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821993909 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.822638327 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.823860262 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.821020742 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.822251661 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.822477782 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.822035428 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.8222401 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822350756 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.823132799 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.822593714 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.822720587 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.821720742 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.822775131 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.822926012 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.822866956 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.821872566 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.823373341 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.823735183 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.822410768 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.822076312 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.823013977 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.822596773 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.823933816 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822842316 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823399059 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.823950724 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.821377143 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824243692 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823702339 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824476424 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.823172248 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824153512 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.823023627 seconds)
  done (took 114.719313278 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822669151 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.822312711 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.820165273 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.820083731 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.821730472 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.820529274 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.822345112 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.823300998 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.82252571 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.822626624 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823171314 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820675878 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82147567 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822449137 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.819941011 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820697344 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82025097 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.820460324 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82316763 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.820420436 seconds)
  done (took 38.177654371 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.821826882 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.823349578 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.819915229 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820306501 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.822632109 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.821665215 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.823840886 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823552255 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821456063 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822689754 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.823501236 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823405726 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820656259 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.821022278 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.823818678 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.821068508 seconds)
  done (took 30.901710353 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.820480895 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.823561184 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.824914867 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.824236953 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.822268802 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.822387982 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.824823542 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.821740355 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.822119714 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.825484243 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.82556168 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.825752009 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.824281395 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.825665468 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.822481596 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.826230952 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.822693651 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.823350325 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.825407153 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.826705167 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.823391247 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.822020081 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.825690468 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.825375744 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.822968367 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.824082827 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.823007359 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.823527299 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.82294444 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.825315029 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.823431671 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.823719582 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.823279895 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.82390702 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.827722255 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.823336644 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.825984036 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.825079303 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.826129931 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.827460758 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.826375904 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.824265512 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.825986579 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.825948641 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.82451095 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.826570944 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.824428386 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.824346587 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.824311116 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.823780997 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.826963816 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.828969734 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.827098443 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.826851813 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.827295895 seconds)
  done (took 102.105627027 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826222821 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.827044845 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.824612776 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.82795474 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.827636771 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.824885555 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.827323778 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.824571865 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825629347 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.827418218 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.825851871 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.828200227 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825741405 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.827529962 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.826212417 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.828130175 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.825275929 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.826246446 seconds)
  done (took 34.627420692 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.826712899 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.826857853 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.827581829 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.826464796 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.826136748 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828531535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.826432981 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.828221792 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829052796 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.827371271 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826093619 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.828323473 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828967715 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.828771862 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.826920085 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826030092 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.82825794 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828912949 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.825469578 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826479587 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828545724 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.829467235 seconds)
  done (took 41.957106942 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.828007438 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.828059583 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.844024822 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.848677806 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.850274963 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.862510998 seconds)
  done (took 12.814129851 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826616126 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830126795 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827334642 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830358546 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829866887 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827096902 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827464047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826786392 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830032825 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827643912 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826635203 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829898568 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831248595 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828185091 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829279723 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831275558 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827697691 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828020665 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827530939 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831334374 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828574169 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831388831 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828330224 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828443633 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828187937 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828708963 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831096877 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828545991 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829133655 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8311712 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831147074 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828446358 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832186223 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828423788 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831133366 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831236601 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828365507 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831698295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831276694 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829246572 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.832236204 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831774443 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831532121 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829079788 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831949465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829107089 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828942832 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828924338 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828586665 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832359297 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832158237 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82970992 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832318364 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832494657 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83187621 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832460822 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829929691 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829860178 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831750828 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830304441 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830752127 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833017287 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8311085 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829762902 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833194175 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830422386 seconds)
  done (took 122.531374589 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830729252 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831046101 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83050046 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830546626 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831940373 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831596169 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830472486 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831029399 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832116009 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831915049 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834360768 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831620541 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832236439 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831571044 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831545587 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832745197 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831481959 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831475945 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832566024 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834634737 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831900687 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832753927 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831658364 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832751007 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832432357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833586016 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831140931 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8318059 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832714163 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832287787 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832900802 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832454138 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832338485 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.832133628 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83283772 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832646878 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832788899 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832253477 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833164127 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835171503 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832558802 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833928448 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832853861 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832959159 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833233153 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832829641 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83271814 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833262297 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832629765 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833536185 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833444948 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8336951 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834164789 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834092247 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833730018 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834028238 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834274288 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834101471 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834033263 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836039385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834154462 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8336741 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836711596 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834309262 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834154872 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833893547 seconds)
  done (took 122.725686592 seconds)
done (took 2498.453202434 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.817212653 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.858961787 seconds)
  done (took 15.436601808 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.997492444 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.950560072 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.834782341 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.872830378 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.834561012 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.857648633 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.852910141 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.83471273 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.834948349 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.835885831 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.834964881 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.024471747 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.887740479 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.836483083 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.835739957 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.929203348 seconds)
  done (took 51.818651463 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.838805413 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.839478165 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.850835991 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.842646795 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.839112957 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.852562787 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.873160604 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.84150718 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.872908622 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.852306279 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.907507777 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.849010314 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.838242623 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.889421929 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.852674678 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.854426577 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.928612988 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.914405109 seconds)
  done (took 35.298608663 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.916547748 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.840932141 seconds)
  done (took 10.52611628 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.863970911 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.897257617 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.838558265 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.862328457 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.854670926 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.872202719 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.872197129 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.871160237 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.851118872 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.83813991 seconds)
  done (took 70.385922448 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.845935603 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.840695338 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.840947085 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.838310737 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.834139697 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.83621015 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.838986658 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.832985185 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.495212291 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.876538619 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.847106957 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.844422406 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.839118158 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.8408388 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.836999634 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.863460297 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.958234664 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.837190149 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.836484485 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.845459856 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.840250798 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.896122559 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.854800962 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.842391139 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.869140902 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.496303729 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.849891379 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.845176666 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.935759631 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.838019273 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.838697214 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.840266189 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.842457058 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.253820668 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.104459446 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.841692613 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.855589074 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.848076571 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.838327887 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.951688512 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.841885046 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.847347226 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.585612158 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.08546905 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.9400153 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.882307437 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.152862856 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.85668149 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.842320101 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.869310368 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.844137147 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.842155102 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.85458326 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.333129933 seconds)
  done (took 130.659167177 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.838560655 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.188064388 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.006674177 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.838496824 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124478741 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046759327 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.838485972 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886648922 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.840116475 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072377508 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.092877831 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945232286 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.83962762 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.837898328 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837426627 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.835651991 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.997956571 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911394521 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.841469813 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.837139231 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868775765 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083079911 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.962463057 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.839628772 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.868565554 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052377559 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961709689 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943662441 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.635689588 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.837752112 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903127322 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.839628344 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.838015476 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.8375994 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.997033312 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.934367324 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922939824 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.839560566 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838306539 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.83713608 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.510184016 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042654768 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935794209 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.981090375 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.038687462 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045219634 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.622249802 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.83827466 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.590517232 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004191213 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.069836078 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.075734123 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.963731379 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.840490168 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.101910383 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.838178492 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838170845 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.091752331 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984412307 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940946831 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841963405 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.840435482 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838594321 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.087971739 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.84237224 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.938782869 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842153101 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.839541019 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.939144105 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94183276 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.980443004 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05427476 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.873406699 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.774147814 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.376887953 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.090603133 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.908303795 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092365834 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.841476115 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839326958 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922242228 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.681548971 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.0966336 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092491522 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.095493622 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878431317 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.568324958 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.840799805 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.071113681 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.064145281 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.104006498 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.049490432 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.083745223 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.180104089 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.840697893 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.840263392 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.068654317 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.980087065 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.843025785 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.188419312 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076399155 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.395766592 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.864618165 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.150989416 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975330746 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.844678735 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.48452257 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.842458317 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.074560572 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.884650477 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.843752214 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840527092 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.064853916 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.837312369 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842707394 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.495256167 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.906547921 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.844524049 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078166389 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.844135737 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117231953 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845735584 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083474885 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.290960671 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877103581 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.019713552 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.050669713 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.84678279 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.088379604 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.090193063 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960767217 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.066059575 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.548746513 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.845183047 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.134306255 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.844437252 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.842202699 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.015960287 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.845289021 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.990358824 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.846050805 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139760943 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868332054 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085426151 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846419055 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.10293463 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.879569496 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897264282 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.846554466 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.978499865 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844696752 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.68714292 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008193415 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846268867 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.844874861 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.397813519 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.845555791 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99697131 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.080753819 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869949746 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.920646699 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.517077387 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.843890088 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926995845 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871161884 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.239577915 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.845007028 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.101075826 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.846694166 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.845197406 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.844416133 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089120747 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.032225045 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847092265 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.846062085 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.759328343 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.845175567 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845176864 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.02969623 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.176503028 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845121075 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051264592 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.84774904 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976710985 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.849176385 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.927197224 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.183505584 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846188891 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.84743974 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.847025379 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.845933084 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.844583283 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.056987369 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.875004964 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.367794389 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.986270426 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.124863621 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.160819464 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.096740299 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893462145 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.851406495 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.104523368 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.848964038 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.911850635 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.848362239 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871107911 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07955559 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850127767 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059056396 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.129636485 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.721368706 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898420142 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.849970817 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846920306 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.847370624 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.993656673 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933265928 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.848963502 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.846576864 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.965400508 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971497421 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.059860603 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.849615099 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.889969168 seconds)
  done (took 896.23417593 seconds)
done (took 1212.119638283 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.848702871 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.851650661 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.837919297 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.851638703 seconds)
  done (took 29.166830884 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.856481558 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.85136694 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.8549271 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.852146143 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.294120378 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.851027713 seconds)
  done (took 13.335808889 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.853968853 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.850603152 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.850967636 seconds)
  done (took 21.33208655 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.92015393 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.234531134 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.957643648 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.273261883 seconds)
  done (took 10.162865348 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.855888676 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.854101992 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.85541123 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.854665406 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.857518628 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.857247641 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.853835445 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.854867817 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.858433735 seconds)
  done (took 18.479901955 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.899027006 seconds)
done (took 98.153015972 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.325550103 seconds)
    (2/309) benchmarking ("sort", Float64, false)...
    done (took 5.655143099 seconds)
    (3/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.273343276 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.920031438 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.390700523 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.303104034 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.994928915 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.864651073 seconds)
    (9/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.92971435 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.980850076 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.696988841 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.87522279 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.930481567 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.019419743 seconds)
    (15/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.861870698 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.942657159 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.021267136 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.143578741 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.955849867 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.213496498 seconds)
    (21/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.422644528 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.175545336 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.022044602 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.902454202 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.559702688 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.100922669 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.87259437 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.883383809 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.668373931 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.997606167 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.851024529 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.313416337 seconds)
    (33/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.841641161 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.514820429 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.84003818 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.203567901 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.874696415 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.838042976 seconds)
    (39/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.028000265 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.855535956 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.853633844 seconds)
    (42/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.945407895 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.288282468 seconds)
    (44/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.140459245 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.930029244 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.305076463 seconds)
    (47/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.842495663 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.119579114 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.966409835 seconds)
    (50/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.991661211 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.025984287 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.163728417 seconds)
    (53/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.948587108 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.962351803 seconds)
    (55/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.975335752 seconds)
    (56/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.262206269 seconds)
    (57/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.963685095 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.837786614 seconds)
    (59/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.910266077 seconds)
    (60/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.866638557 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.851999824 seconds)
    (62/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.275735918 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 2.082409808 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.947699025 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.916360683 seconds)
    (66/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.099046063 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.858880614 seconds)
    (68/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.011422875 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 5.552814107 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.113075535 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.368255113 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.016343068 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.877177465 seconds)
    (74/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.08939527 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.879538618 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.78198447 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.960450907 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.55211554 seconds)
    (79/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.100576676 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.860083698 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.864197574 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.518001791 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.558707981 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.157258525 seconds)
    (85/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.862940633 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.196096493 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.989451437 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.873017958 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.874065686 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.012509049 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.861720121 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.416872531 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.997636345 seconds)
    (94/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.957934333 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.953232215 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.263742973 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.880428333 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.937458555 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.881068034 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.094472745 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.023607964 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.926668686 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.519866515 seconds)
    (104/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.045158122 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.990988942 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.851176508 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.795249671 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.881412365 seconds)
    (109/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.298050996 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.932776056 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.251122239 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.876053774 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.767845484 seconds)
    (114/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.441412923 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.960583483 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.089351605 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.87989204 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.070427581 seconds)
    (119/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.001802583 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.845903121 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.015901212 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.881829838 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.147064095 seconds)
    (124/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.845010998 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.93081145 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.953800656 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.894285855 seconds)
    (128/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.323364256 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.862801906 seconds)
    (130/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.817263527 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.000263934 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.119650374 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.26233825 seconds)
    (134/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.964426463 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.229927343 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.206307159 seconds)
    (137/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.882696592 seconds)
    (138/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.885004799 seconds)
    (139/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.860748271 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.884529201 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.865673858 seconds)
    (142/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.955352296 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.963395436 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.198850569 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.878677193 seconds)
    (146/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.87708661 seconds)
    (147/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.057664588 seconds)
    (148/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.943556638 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.792585047 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.891123667 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.953929346 seconds)
    (152/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.848286688 seconds)
    (153/309) benchmarking ("sort", Float32, false)...
    done (took 5.637452188 seconds)
    (154/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.261795802 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.163818706 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.184630171 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.143366177 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.266674109 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.862266659 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.674328173 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.963110898 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.208045448 seconds)
    (163/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.887466292 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.998796687 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.183282136 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.164994446 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.273417137 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.026813958 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.028847861 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.847205506 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.059631481 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.855239873 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.246578629 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.055883113 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.899068869 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.95738145 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.932812925 seconds)
    (178/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.941663034 seconds)
    (179/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.95443267 seconds)
    (180/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.773327814 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.209877582 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.033074174 seconds)
    (183/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.035863899 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.837875846 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.369628659 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.869261532 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.879706482 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.010699102 seconds)
    (189/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.000651278 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.2040322 seconds)
    (191/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.909129334 seconds)
    (192/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.31696645 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.195298299 seconds)
    (194/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.111846452 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.068622679 seconds)
    (196/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.958462971 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.290368152 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.219366675 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.866123692 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.173790072 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.989477501 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.196214347 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.823585278 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 6.864320909 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.132388452 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.807665751 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.067644452 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.135283609 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.709176133 seconds)
    (210/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.867875777 seconds)
    (211/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.943040214 seconds)
    (212/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.047985554 seconds)
    (213/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.249651953 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.788721534 seconds)
    (215/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.89482269 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.153535753 seconds)
    (217/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.005163218 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.793937119 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.1699705 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.86938469 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.736076316 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.942524149 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.861882994 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.336490516 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.044129446 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.224610671 seconds)
    (227/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.244498043 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.878333139 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.042376722 seconds)
    (230/309) benchmarking ("sort", Int8, false)...
    done (took 4.752953107 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.24047023 seconds)
    (232/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.14924053 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.009441097 seconds)
    (234/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.491365125 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.266421128 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.107682456 seconds)
    (237/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.905979882 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.954331796 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.868339125 seconds)
    (240/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.973231273 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.850042673 seconds)
    (242/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.177614613 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.869637351 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.911982236 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.944213727 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.865191354 seconds)
    (247/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.976221439 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.984730258 seconds)
    (249/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.979300603 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.948587188 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.881152539 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.345620623 seconds)
    (253/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.07527781 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.391272041 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.866681456 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.407494847 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.172283901 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.869351688 seconds)
    (259/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.935873778 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 3.357403554 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.22312618 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.975345681 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.323115191 seconds)
    (264/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.989916742 seconds)
    (265/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.86555094 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.25386726 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.081495651 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.876156217 seconds)
    (269/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.948638199 seconds)
    (270/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.108069199 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.00494162 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.899735535 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.205143677 seconds)
    (274/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.184172363 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.026046454 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.937940822 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.55400028 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.107121456 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.111926835 seconds)
    (280/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.005396685 seconds)
    (281/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.990330138 seconds)
    (282/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.94040607 seconds)
    (283/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.95894824 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.130344046 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.893452631 seconds)
    (286/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.864969519 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.025986263 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.11861699 seconds)
    (289/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.855385306 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.138017143 seconds)
    (291/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.858811235 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.46035142 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.98309039 seconds)
    (294/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.855613986 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.60914851 seconds)
    (296/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.858402054 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.916991691 seconds)
    (298/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.00691318 seconds)
    (299/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.255231494 seconds)
    (300/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.878341904 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.049333133 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.573426358 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.187324492 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.065983155 seconds)
    (305/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.90525202 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.97464663 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.095368657 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.031520719 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.975869156 seconds)
  done (took 1005.660707104 seconds)
done (took 1007.709428995 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.906625674 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897343072 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.882186645 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.903628693 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.994132869 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.909959609 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.894195705 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.884492009 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.93101876 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.932229306 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.879429645 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.908063765 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.884917676 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.882526152 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.883233489 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.896907105 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.197520008 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.916139057 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.900277744 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.893617497 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.89897325 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.880173715 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.931785208 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.908836822 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.887539786 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.885333056 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.885871478 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.902857898 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.995252844 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.88634003 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.88667961 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.89488313 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.196721299 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.917807998 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.879439493 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.902666802 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.894854826 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.89362507 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.887981028 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.915838518 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.280616297 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.92634584 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.885517431 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.886305557 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.885654647 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.890119833 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.886869658 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.892012703 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8975322 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898992722 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.274755841 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.942783309 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.887312516 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.886681858 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.896593478 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.886033233 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.888815459 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900336999 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.904906016 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900428565 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.180231615 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.92401665 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.888179529 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.901718978 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.893005103 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.310883874 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.923841685 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.889715018 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.282754381 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.934676354 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.310588111 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.937643093 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.885925438 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.897996181 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.915791682 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.199269209 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.914126179 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.883654443 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.891757736 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.880126537 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.895150075 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895933349 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.889862377 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.883844577 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898441361 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.911192948 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.894259357 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.883658557 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.892344332 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.901592582 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.890226095 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.895249388 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.88634948 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.878649172 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.892219974 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.886875502 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.885112298 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.884071837 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.88748191 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.893379359 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.277290067 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.942445656 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.878251137 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.879428473 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.881182494 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.89518785 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.277327302 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.925801681 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.903584106 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.928344322 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.883609728 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.176949126 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.91464217 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896142711 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.88958702 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.883486959 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.875367437 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.172332307 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.300760723 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.935557775 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.879741052 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.874172153 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893307377 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.876623596 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.872869589 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.187541915 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.910085408 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890185184 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.993126011 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.883168663 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.90320893 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.868858177 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.876949458 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.900052115 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.884384834 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.900581869 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.87305014 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887120257 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.88148401 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.863733034 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.877247301 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.877043994 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.869780501 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.870823145 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.858552004 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.894981619 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.877274751 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876260005 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.886944868 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.983014816 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.859543017 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.156096377 seconds)
done (took 295.593248507 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.92968232 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.849372453 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.9554292 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.853671087 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.935178762 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.942682941 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.850914088 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.852937372 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.849491543 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.222443857 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.84966597 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.851081574 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.850877778 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.849164868 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.934822493 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.850952528 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.84756731 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.183685889 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.851795488 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.922354382 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.846009968 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.848300354 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.850884125 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.221224602 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.852558033 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.844246004 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.923018067 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.850791419 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.186746166 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.85285894 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.848204103 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.184186788 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.940823355 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.866991479 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.858103563 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.855143247 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.929276731 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.852385815 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.929948534 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.927481265 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.946914263 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.88954646 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.850685957 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.84466214 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.85065159 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.847564387 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.842014321 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.873390247 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.83764151 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.841544663 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.178202055 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.852987464 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.842651632 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.841713757 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.840107886 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.875594101 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.841368943 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.847058024 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.934447927 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.844999313 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.905097536 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.213261444 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.214475711 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.841544766 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.843056819 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.838395566 seconds)
  done (took 182.866048936 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.906027873 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.919337515 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.906507028 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.845958208 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.892302488 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.909433208 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.845318196 seconds)
  done (took 14.989220016 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.84867729 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.841768762 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.893653872 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894223267 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.84380471 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.996059222 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.842744916 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.851667152 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.839006192 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.892070849 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.842455898 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.842943572 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.846850229 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.839552172 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.889520225 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.848140034 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.953567881 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.83871863 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.839441673 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.989441505 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.833214912 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.842269874 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.869847197 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.847006976 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.838844479 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.839405357 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.427596143 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.834813998 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.830784104 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.83245205 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.828553069 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.870629755 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.830845909 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.828957045 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.825723339 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.944846708 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.828797648 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.826190735 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.827420861 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.827791909 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.828361757 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.823502109 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.823960352 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.822029169 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.824721888 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.846361601 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.825229077 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.821678491 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.822098399 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.823379585 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.854448076 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.823266044 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.816616461 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.816881608 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.873971403 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.826414335 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.821535307 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.817118387 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.817813319 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.814427548 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.968307409 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.867760421 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.820060738 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.865655031 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81615866 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.816408894 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.815929695 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.816218447 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.91201437 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.814090756 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.864386838 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.811384151 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.973179588 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.83725616 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.813934042 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.81576318 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.815260078 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814563586 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.806407241 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.817162217 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.808483867 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.81312313 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.814555297 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.815712879 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.806168858 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.920466963 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.915725555 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.807902646 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.822371058 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.815990318 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.806770135 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.843795451 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.80927907 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.807755282 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.867240151 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.926034828 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.86438038 seconds)
  done (took 201.370066063 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.813865523 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.817803647 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.810413997 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.825768837 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.810015002 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.809396908 seconds)
  done (took 12.620183955 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.8110994 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.810394605 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.80971055 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.809567426 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.811345808 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.811252342 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.812168513 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.810681942 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.815640962 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.810429147 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.810134115 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.81347381 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.810928535 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.810807895 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.811759894 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.810609863 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.8116768 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.806761889 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.810529044 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.812528287 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.957540626 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.809543319 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.809077935 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.808919837 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.813321079 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.81029731 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.814897574 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.806549563 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.805586921 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.812982939 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.810384004 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.808120833 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.805294248 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.810994421 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.810760339 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.806758887 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.809326754 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.809313707 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.802277837 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.80620625 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.809006303 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.807094159 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.806036897 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.808724902 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.8076043 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.810340594 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.812822506 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.813404004 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.808748957 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.810152594 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.810196658 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.805719513 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.807801346 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.80937718 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.809598156 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.812444991 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.814899113 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.808648987 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.808086564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.808060475 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.808505477 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.807602655 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.808726405 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.812043319 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.814833504 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.809560465 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.807395839 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.812635821 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.808002683 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.806716289 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.809802222 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.804874563 seconds)
  done (took 133.1840803 seconds)
done (took 546.82898139 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.906931048 seconds)
  done (took 8.637013862 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.928373411 seconds)
  done (took 8.782920785 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.416437822 seconds)
  done (took 10.231336222 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.903590733 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.926942137 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.899027121 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.899382965 seconds)
  done (took 29.467575634 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.951347618 seconds)
  done (took 8.766024362 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.913004942 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.889621228 seconds)
  done (took 15.652114732 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.944717773 seconds)
  done (took 8.76052198 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.975815801 seconds)
  done (took 8.816796531 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.903943481 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.927027218 seconds)
  done (took 15.661442737 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.873745791 seconds)
  done (took 8.689413015 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.600783138 seconds)
  done (took 11.511368336 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.912173593 seconds)
  done (took 8.829521326 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.976557975 seconds)
  done (took 8.793105569 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.000444712 seconds)
  done (took 8.816001795 seconds)
done (took 163.145181327 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.893687874 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.894829665 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.894343725 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.892905274 seconds)
  done (took 29.391963809 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.928539979 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.929039369 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.931298463 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.939999387 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.931880544 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.92899844 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.921625965 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.921013028 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.940977179 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.932517241 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.931030269 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.932642951 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.929087284 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.922030475 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.932549299 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.931245683 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.941281341 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.931658031 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.922370886 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.935260583 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.89720929 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.941419803 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.932745242 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.897659453 seconds)
  done (took 48.10157824 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.090649869 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.966625373 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.050979083 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.949354614 seconds)
  done (took 9.875070966 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.949115592 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.951634192 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.962998699 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.001047647 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.024813314 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.966699927 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.923621076 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.918609653 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.905261825 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.951092588 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.026966938 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.946789206 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.036287269 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.897895896 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.077773391 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.898251789 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.898339657 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.949726493 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.001612898 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.01354468 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.899132414 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.949812604 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.952955691 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.94718994 seconds)
  done (took 48.869544708 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.896849539 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.905394629 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.903968692 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.897008359 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.897423734 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.898052183 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.903509999 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.898900824 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.919427 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.899297919 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.896203711 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.898861332 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.897943945 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.898101905 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.898089218 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.910475532 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.911668471 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.897224636 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.903315243 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.904675731 seconds)
  done (took 39.855848168 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.893182946 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.743640854 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.245047981 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.146231459 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.890749044 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.892241747 seconds)
  done (took 31.630693915 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.909789034 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.901476864 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.895787905 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.953524407 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.037153671 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.902893895 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.894554553 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.904751838 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.941740344 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.959312156 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.915756521 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.924693995 seconds)
  done (took 24.958284264 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.887690861 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.889175636 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.887490545 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.901028981 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.899618738 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.896093766 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.894924513 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.879712409 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.901144609 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.902670299 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.890424597 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.895284219 seconds)
  done (took 44.542003835 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966485887 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.764880048 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.527603566 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604228911 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416643996 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082571986 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39819551 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042842737 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.874015009 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144932573 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.473764022 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110158461 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12114023 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86982454 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.935770833 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.339883025 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163091385 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100344846 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897486887 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548550287 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029521838 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.509021943 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.683055863 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027362041 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110604841 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.029774599 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.157856054 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.847803853 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034684444 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938159065 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904456058 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895762776 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166250956 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123976248 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025386346 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901823818 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547267838 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.608282133 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.879229162 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.632919274 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.611509814 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.041558245 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915088481 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908083543 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839647662 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.497228144 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079883823 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.912204461 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.609522864 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.907404851 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918116957 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997587979 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.910032598 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.721958778 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860535497 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.186595586 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.905446405 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913005991 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.478135014 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001819852 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.607195677 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.842934568 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.001957155 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615257267 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388343606 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.067115291 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.911505864 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912211264 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841095265 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.658377251 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032957525 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052965795 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.927182199 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556333158 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206147115 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.590976157 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.990793443 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209837289 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.78608389 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.83905318 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133154044 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.862017475 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836323619 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.760948595 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833840653 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183375423 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945769951 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.571219352 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946418757 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.06980563 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911422147 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922041175 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909530061 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123583594 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.784211502 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903247483 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.469682319 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186536345 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922484144 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.073766055 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834597865 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.905877778 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155513152 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.111246208 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.081878294 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.490546702 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066733574 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902619429 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.989094352 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.771699119 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026006174 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.181911926 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968088237 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.008175697 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043943871 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.868847882 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225263224 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942790309 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.085462194 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.54512151 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176844986 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.253076635 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168039681 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996051108 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914284673 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.913513555 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.677660835 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.538948883 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.134846636 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.911819813 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341738222 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035973707 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.91347448 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845522753 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.56686419 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.558599675 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.020738482 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134862757 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.825766715 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30252361 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845927452 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057152778 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.023216236 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.134625126 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.567967068 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.99873456 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170957884 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34935484 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.217306434 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039107915 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932413622 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03197692 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934854928 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.294539409 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.280913453 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.916200334 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.916849828 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.67287601 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.986266956 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919547116 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.918282982 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.711028015 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20619974 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948410779 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.914981917 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.848847188 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.927570602 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996393089 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918977236 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.92345 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.438173719 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.667999314 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.927612129 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.555181808 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139313118 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923975612 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.679864366 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109718656 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.997552752 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194976026 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986877664 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.848048619 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.616738826 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.617206516 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916273923 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84882224 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.91617949 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924018451 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926172575 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.137011961 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.200924592 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974163128 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.615395047 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.033946312 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926044413 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.92017991 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91668808 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.415365764 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018795474 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483865545 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.040558816 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052344607 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.930451519 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849602754 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.919433168 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921668119 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.9184939 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.872597962 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969276416 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.636178531 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251070686 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17527078 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.56260927 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936327172 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.713945774 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.049378801 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.954162983 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.495649772 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965682238 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.028346916 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988698976 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.927070949 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.661900114 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.689223409 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.485529189 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230459985 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.246524433 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36914389 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.371331091 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.248118667 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.097325828 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147755556 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.442654383 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976942474 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092430652 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857816295 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999617211 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.570141598 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278981348 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934029672 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141910598 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30931895 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.552151063 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078447687 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124751046 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94949765 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.793163985 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.956750415 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.438466003 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069783912 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.515463966 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147075453 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086635931 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.490183516 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.025926315 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.915940521 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.40768057 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006447673 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.62499618 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.274923544 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.517662739 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.548602123 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28929711 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.917217312 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360037848 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278013948 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.325598916 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.003643888 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850336331 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927194288 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926348244 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.916169853 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.895827558 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.79400937 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.168107348 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926602731 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15060359 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.26455516 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187187012 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.831101507 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.923361443 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918956053 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231516383 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.723439195 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170076884 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.328338936 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.507851074 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929992045 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850720088 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85039414 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.620972841 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.918815431 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.891990136 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154084912 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.031247238 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87090033 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37072277 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242832106 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172101619 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.931878874 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201102949 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199935618 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.654580651 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948732103 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.018038918 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.486130951 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.671067586 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.140073071 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151875043 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716836533 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152981861 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.595404829 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.900790111 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.919791984 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133126045 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.140109269 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.548250622 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175312414 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.644626892 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.928180666 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296042104 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987044995 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.553773661 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.134862357 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.01313663 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930922863 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000226875 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929637045 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.930583715 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.931147418 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966365468 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.562721108 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.055444904 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.934022328 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010066042 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.025459772 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.510800094 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.931271353 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206058624 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291956915 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265881626 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988859303 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922277858 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924933818 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853758737 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060110134 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366280047 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194519474 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.051579187 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.062191674 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947336883 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.485717873 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269816203 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245706286 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19705573 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.814827257 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922964485 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.011565996 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.14531747 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931832672 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.131427681 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162687575 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258792237 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399705248 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.117012412 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208356065 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197522281 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.29040107 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924648354 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510617395 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.93985626 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.471514259 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.970820567 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.554322707 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215510878 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936739241 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148457288 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949492066 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.122948779 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.379609765 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.625021779 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29406275 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.92629097 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991251065 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214872622 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336730183 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245753791 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00851103 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938122715 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.658148427 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065934569 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.821324336 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.174041363 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935865345 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142918546 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.644658921 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.942450312 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218262947 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249474294 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.932729393 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.86738892 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977205811 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.943807737 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156787929 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222981402 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192935123 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943534172 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.936440957 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.750529692 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217933831 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001306129 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866798723 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.937867148 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035596069 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181677572 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954344529 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.45158389 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.637457624 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245386361 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.85566685 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956368549 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398562439 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398293156 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277142888 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.47151908 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177113693 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.500009563 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.863300549 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.320448672 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.940158334 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438518364 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.323416517 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.939397625 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.493619962 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058625542 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.214701295 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265990521 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.949806901 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739624754 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.981221526 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157546556 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527750799 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877945949 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.940393137 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.995989118 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.936249997 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.064128612 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946263411 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.89891033 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865002462 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.786082965 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425818113 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.939897413 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.944738216 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.515938894 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.549121328 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053934811 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090743405 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93971852 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.638328257 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.226286697 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.188904191 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.49731422 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.017706411 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.941705533 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938096355 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863998965 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.132274538 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.133044797 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250371781 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.358892182 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.058641308 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.941159279 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.151427066 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147374089 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.576111928 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09659487 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386184342 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059895979 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.864531111 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.650196493 seconds)
  done (took 1703.377169927 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.953051058 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.950883702 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.958817019 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.95630934 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.959417851 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.953966215 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.011073171 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.030855116 seconds)
  done (took 57.634339059 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.937683952 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.122819512 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.946714198 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.938501188 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.96112673 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.937204273 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.127817063 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.950535178 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.975268409 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.94779942 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.93868905 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.952693883 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.220567119 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.963887176 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.93900392 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.936330347 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.952511559 seconds)
  done (took 75.618562637 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.938392603 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.113715704 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.959826929 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.958739458 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.796127511 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.930817193 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.863744549 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.941879255 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.927467209 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.093649224 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.260193535 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.976767895 seconds)
  done (took 90.624803298 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.939577838 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.930366509 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.930025933 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.930554953 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.929433176 seconds)
  done (took 11.515148041 seconds)
done (took 2217.826567047 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.163188752 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.114618093 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.156433785 seconds)
  done (took 6.119554243 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.065454339 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.116628986 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.233881778 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.255502251 seconds)
  done (took 10.518056697 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.214851039 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.289071501 seconds)
  done (took 6.346891349 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.245417363 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.942524184 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.301700166 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.917104227 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.922952407 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.924066056 seconds)
  done (took 22.613631945 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.922953869 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.925096067 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.92356537 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.925311503 seconds)
  done (took 9.540860746 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.906411367 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.611370247 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.908704151 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.921816143 seconds)
  done (took 21.191811764 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.671897958 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.047423025 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.666170244 seconds)
  done (took 9.229530757 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.587651394 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.550931879 seconds)
  done (took 9.983469109 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.083012189 seconds)
  done (took 3.929128758 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.952622129 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.195526204 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.469162793 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.517806587 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.636058375 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.176647723 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.268014672 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.161369868 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.402419975 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.415930712 seconds)
  done (took 26.041815273 seconds)
done (took 141.016090993 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.467311068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.951091535 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.125883914 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.288583716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.158003812 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.126439148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.135458968 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.288948585 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.976634793 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.96473227 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.302901855 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.158666882 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.082489503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.944694973 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.087408134 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.946262623 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.152658527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.296474589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.97222833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.20940213 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.149456143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.93258478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.125952213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.949163207 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.156568694 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.078721259 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.476306129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.95205679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.11236152 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.488893599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.082068051 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.344069889 seconds)
  done (took 170.331258394 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.925590241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.926040874 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.92464461 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.925631914 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.480274809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.926767192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.925292261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.925762372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.36093403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.347047772 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.925215298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.471377969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.926994008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.926287222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.926848826 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.925824245 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.522231907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.926895218 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.925962972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.92447101 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.92686802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.310323518 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.926519332 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.318737826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.508821489 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.926531136 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.926703746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.927573598 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.925647707 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.926342311 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.926847041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.926817609 seconds)
  done (took 211.398077257 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.925844202 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.928063728 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.927866518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.927040526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.927968994 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.930013739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.925740848 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.92674408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.712071999 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.701109226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.928509013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.929519076 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.93064591 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928737783 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.931238879 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.927712964 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.93389853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.936167561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.940073023 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.942573757 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.945261411 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.708051174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.942639812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.702454518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.937221476 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.939529694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929732873 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.941440047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.943352066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.942409771 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.946987375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.928791171 seconds)
  done (took 222.819946133 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.187426599 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.933842897 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.934323417 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.843567551 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.934356078 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.934123075 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.940619881 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.181524798 seconds)
  done (took 19.762395068 seconds)
done (took 626.167077775 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.416095081 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.258106296 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.117178131 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.958615616 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.222542764 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.993808558 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.953749744 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.02597779 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.577158196 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.030528553 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.641823111 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.981635048 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.728815986 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.985255701 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.076333168 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.017418874 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.499963861 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.593362238 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.131417981 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.024754621 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.129312304 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.882508279 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.041051699 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.600430295 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.756075761 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.93472602 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.022997189 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.50734535 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.966248813 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.11609358 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.712892143 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.254169044 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.970924567 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.952412896 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.0111841 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.990144187 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.225355195 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.969673693 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.078094767 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.692135515 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.034458429 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.491691462 seconds)
  done (took 105.427388984 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.925683562 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.922807431 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.922895046 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.92452778 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.922617454 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.924043448 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.922888128 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.923001488 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.924349644 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.92303043 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.92389989 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.923445047 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.923828002 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.924782626 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.923435795 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.924101984 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.925626168 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.92509195 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.924747625 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.924336264 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.925247002 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.92438609 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.939222216 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.925419516 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.925671093 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.925662688 seconds)
  done (took 51.909456699 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.944446018 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.097890245 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.185543425 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.965779482 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.943849014 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.946190335 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.96142264 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.949900301 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.945461525 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.945239321 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.049574376 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.95164216 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.963888649 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.184527553 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.963058756 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.94580209 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.945835103 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.945022345 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.104772895 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.96148255 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.965244862 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.949992139 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.963617177 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.958534308 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.946643207 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.945181641 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.947870949 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.439540445 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.955008704 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.050089597 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.002968166 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.970082395 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.353383268 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.195799683 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.006805938 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.960247959 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.945536939 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.052914239 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.951185077 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.944942693 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.964149474 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.951214076 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.184567644 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.449986643 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.961729962 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.947702066 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.449952917 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.063439086 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.988779846 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.956586979 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.187319065 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.965851695 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.948525082 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.946603057 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.983235114 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.951818219 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.947233211 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.299559904 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.959682169 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.964838033 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.952574789 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.94829213 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10823652 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.957324428 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.102442366 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.956768758 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.954096499 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.94790069 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.184994047 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.966624586 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.447873383 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.963266813 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.947621333 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.051175969 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.105838794 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.47706916 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.961780782 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.108883729 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.369000894 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.972207414 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.955165345 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.429042816 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.976975671 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.9565187 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.950632961 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.950667187 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.949144298 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.993769984 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.96454492 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.386583408 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.460671309 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.316970219 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.976134126 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.962068495 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.948569259 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.297309275 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.958394183 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.948394569 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.181718944 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.463244273 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.965262907 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.95589961 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.438281754 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.966938719 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.966992604 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.957776058 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.189644441 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.967382552 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.994357225 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.949398725 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.955681283 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.951976568 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.967336598 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.957334205 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.94987127 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.434108325 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.074376173 seconds)
  done (took 241.498099144 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.945665453 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.948462529 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.944797031 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.949561674 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.94444602 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.950599755 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.944754946 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.943621145 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.949716961 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.944165963 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.943721726 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.945413169 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.94721885 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.94833545 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.969937327 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.950606739 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.553739215 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.945166241 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.94522979 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.943551931 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.599870584 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.951103023 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.944774143 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.945589486 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.945340865 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.947509966 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.954911021 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.965457112 seconds)
  done (took 169.683763497 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.950966004 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.064613642 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.975560875 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.979605022 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.96027734 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.950405493 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.974867293 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.967161517 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.957105983 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.948730166 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.950312877 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.011840801 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.963043137 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.051167221 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.985251716 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.98374402 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.055858205 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.959983915 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.949215818 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.949902295 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.980442473 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.947177206 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.012951169 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.077132651 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.974253317 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.066565948 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.961444186 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.95365187 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.953307093 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.068657051 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.971728026 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.012597618 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.981917338 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.97142276 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.072600431 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.070988977 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.058680541 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.983543306 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.957019997 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.95099908 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.950834375 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.941059429 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.069434662 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.975972986 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.955043779 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.057531708 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.976971387 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.955592448 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.962496107 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.950967574 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.965846172 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.970674046 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.019817289 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.08567427 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.991289932 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.978631558 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.976694592 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.240238766 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.963775548 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.051901143 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.947598041 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067519302 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.977396112 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.939799698 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.952782786 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.95804242 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.983336432 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.984459397 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.057257641 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.961545516 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.053528574 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.989300083 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.961187955 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.953489675 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.955347528 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.069539874 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.074858117 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.990527325 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.991524052 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.985437009 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.948708581 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.953456713 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.942603226 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.972139829 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.957434394 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.068863745 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.076654011 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.963770066 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.956593702 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.956676402 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.95770569 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.979919037 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.080799206 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.995384639 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.04899098 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.023603735 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.031006542 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.969832522 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.968344427 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.958342567 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.018859254 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.971874723 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.967072649 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.290159132 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.026635589 seconds)
  done (took 211.468936629 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.416393097 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.010481262 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.011787163 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.284218547 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.301383707 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.896669018 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.004342229 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.005962985 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.028337656 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.190394179 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.080553705 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.025837626 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.991302042 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.979007159 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.003935443 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.027136656 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.015744485 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.32015392 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.111162551 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.115765766 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.991692136 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.31564912 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.277535649 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.386404186 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.04271093 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.330547173 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.661789209 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.152829832 seconds)
  done (took 63.861220386 seconds)
done (took 845.701498083 seconds)
SAVING RESULT...
DONE!
