cset: moving following pidspec: 22807
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.643570268 seconds)
loading group "shootout"... done (took 1.130384199 seconds)
loading group "string"... done (took 0.417185214 seconds)
loading group "linalg"... done (took 7.741081147 seconds)
loading group "parallel"... done (took 0.160267953 seconds)
loading group "find"... done (took 1.298925166 seconds)
loading group "tuple"... done (took 1.901213492 seconds)
loading group "union"... done (took 12.380085167 seconds)
loading group "dates"... done (took 1.320477614 seconds)
loading group "micro"... done (took 0.203462006 seconds)
loading group "simd"... done (took 4.379868036 seconds)
loading group "io"... done (took 1.025185694 seconds)
loading group "random"... done (took 8.698880755 seconds)
loading group "problem"... done (took 1.444518124 seconds)
loading group "array"... done (took 19.273205454 seconds)
loading group "misc"... done (took 1.477610202 seconds)
loading group "scalar"... done (took 39.260709308 seconds)
loading group "sort"... done (took 3.15593352 seconds)
loading group "sparse"... done (took 11.757162976 seconds)
loading group "collection"... done (took 17.243273294 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.493361659 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120035988 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124546597 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115516531 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.195837673 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11943554 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122546502 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08292811 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.837405596 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.133794238 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.110868097 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407941115 seconds)
done (took 5.215093307 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.165754479 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084377433 seconds)
    (2/2) benchmarking "String"...
    done (took 0.075599251 seconds)
  done (took 1.288301203 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061460553 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129263165 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06316282 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064043207 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063813532 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06367599 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063065362 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063327228 seconds)
  done (took 1.640200116 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067791212 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064618639 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062747237 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065033011 seconds)
  done (took 1.39297023 seconds)
done (took 5.700354964 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229803109 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.095733369 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.277384643 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.378471193 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.445124568 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092503554 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072056222 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067749411 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.12659246 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320211351 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101944538 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.179155205 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088238521 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.170115169 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.960559853 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.114477637 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081962612 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117439377 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089615949 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129485604 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.380315587 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075621543 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071520037 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.067945923 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.065026528 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.626885162 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662216723 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126790615 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081394674 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.095756509 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112984259 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.637519407 seconds)
  done (took 10.306674793 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.087951464 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.085940629 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06656188 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121796856 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091294297 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067357253 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072273709 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064710831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085669309 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121893958 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089619929 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095979386 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064186461 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066188507 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.071363081 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194497203 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078783997 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078448993 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064862797 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078059974 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103756479 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075735854 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075270493 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075346633 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127231829 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168121164 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093521526 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093926352 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063786567 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.076792647 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.112615031 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123465578 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068822733 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062421722 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117232727 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093090079 seconds)
  done (took 4.461881741 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.930875433 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089671906 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098267198 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.602866458 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062198989 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.144391421 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231994465 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069547402 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.388774064 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.139090704 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.132421199 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.140829117 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.113895849 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070358046 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.162054662 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.111766218 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.456166436 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065572452 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064558052 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063306005 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065649534 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065115644 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061086217 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080555608 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066641388 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.091581413 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.084431696 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.145249324 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.901366623 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.232166448 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064774659 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.15905585 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083643992 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.352571568 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067879803 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061938287 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079960248 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.408204787 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.118195741 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06363807 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161123168 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.114601539 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062611081 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113612878 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075305598 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066662903 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066741023 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066194625 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068563979 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078952058 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098903927 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066488386 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062775951 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161269115 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062634212 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06395368 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064733183 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146891411 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062647282 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.136472459 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06182691 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066515594 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.099534641 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066170412 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085401113 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.094925703 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.334984346 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.058472943 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063897568 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.214545882 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073284567 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062178404 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066400407 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062705882 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064072636 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065169823 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071118795 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067547582 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066837334 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106680556 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064946093 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067780387 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064060701 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069044001 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094711053 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063986449 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.467436489 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.093255401 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065071016 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.073586838 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103293479 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065152077 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.06912496 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064893045 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064707018 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063730316 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06416423 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06710181 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061756272 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.061367732 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.092812729 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067684478 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110914337 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.156658972 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064957088 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064238045 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069042877 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066967449 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066793858 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064711465 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067395868 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06625606 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062660285 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.105196089 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064625492 seconds)
  done (took 21.440086416 seconds)
done (took 38.2705852 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.23971496 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074908112 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075040955 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074863564 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074565272 seconds)
  done (took 1.769006732 seconds)
done (took 2.989657799 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.103611868 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.061349988 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096363735 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095984009 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.061633687 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061739097 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.09775106 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.061308365 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094695683 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.09653403 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.098100615 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097556604 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061623197 seconds)
  done (took 2.315060806 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065940406 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077255863 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080165042 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059299971 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069525074 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078555216 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059347929 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080988647 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084083235 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079307606 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078667012 seconds)
  done (took 2.029057693 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06575236 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077423003 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079847313 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05980002 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070055788 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079039881 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059045029 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077894892 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081223524 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078348749 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078286093 seconds)
  done (took 2.015119091 seconds)
done (took 7.566010291 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.0624881 seconds)
  done (took 1.255137274 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.496126054 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.17959891 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064541217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084741801 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185690541 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.091056123 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.201879317 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069344215 seconds)
  done (took 7.736243234 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09318492 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064895406 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069315587 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06535708 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066034909 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065316185 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.0656901 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066805416 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065546446 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066835908 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.065077816 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065032091 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065676292 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066184616 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066344687 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.06588497 seconds)
  done (took 2.374596179 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094280311 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093768754 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069492856 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07014252 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068558289 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067874653 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070609877 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070008111 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066590995 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068255918 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.070034691 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068536702 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068766493 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059764773 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069794429 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070771161 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066961378 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.06990566 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07064479 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071130846 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070476823 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059793178 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068310242 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069381569 seconds)
  done (took 3.008473773 seconds)
done (took 15.583646743 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172271579 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071545678 seconds)
  done (took 1.443073862 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.064444577 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06503251 seconds)
  done (took 1.34726509 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.069555538 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057023071 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.075224711 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.067613331 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058804354 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058557406 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.075381847 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058963909 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058415534 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058847908 seconds)
  done (took 1.854290932 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.05941553 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066751704 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064649418 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066175965 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064764609 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060014674 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06241988 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059941462 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06663439 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058884762 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063702784 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078517542 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063057521 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080243141 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06299575 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.063547336 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065235 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062719465 seconds)
  done (took 2.388614371 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057429588 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058970064 seconds)
  done (took 1.343250938 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061147679 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058903413 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062148437 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062089839 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059520396 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.05866358 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059249835 seconds)
  done (took 1.640975164 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.394880393 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117371739 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.327223046 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065902957 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.073938386 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24543078 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060908224 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065964092 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065803298 seconds)
  done (took 2.679307914 seconds)
done (took 13.923231988 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076627025 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.169651131 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086604742 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.40481154 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088864301 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064225209 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109854459 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.165895827 seconds)
done (took 2.405907074 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.228357139 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.276092291 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.87013248 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.0653319 seconds)
  done (took 3.440264334 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.309043987 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.074795876 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075266805 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065416837 seconds)
  done (took 1.762194748 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061560767 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067757975 seconds)
  done (took 1.363953026 seconds)
done (took 8.034107647 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060424513 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088794113 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061141913 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.061170838 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061486515 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060913958 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.061030152 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060936434 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061224634 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061044609 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061420459 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060459004 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060475226 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060393979 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060780336 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06114074 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060478868 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060986679 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060864672 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060698965 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060694232 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060738687 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061066719 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061125493 seconds)
  done (took 2.751498611 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075070731 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063343909 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063923097 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064279518 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064951534 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064311621 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064290787 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062697521 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064498099 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062983084 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06440191 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064722116 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062650934 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06448941 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062469634 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064681628 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06425226 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063374451 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062471344 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06476791 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.0641225 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062783888 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064319257 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063864615 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064581776 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065060758 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06307732 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063357776 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06467671 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064648092 seconds)
  done (took 3.174242382 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060799786 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057010213 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058261302 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067260609 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05753706 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058503678 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058598919 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057385619 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057979188 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059162899 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058491337 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057673378 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058493261 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057546792 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057495051 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058258665 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061789773 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075245144 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057588042 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057152705 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061320382 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057744649 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057391092 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057737963 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057712493 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057366696 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.05731448 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057704658 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057498947 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058302744 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057507272 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061294364 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062551703 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.067393464 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066651129 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062364469 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057634395 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061434913 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058580492 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057691217 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057230211 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057183657 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057328644 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057595292 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06699403 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.05773871 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058518341 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058082849 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057925982 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057328514 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057398139 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059384582 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062387468 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059279039 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057231309 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058390951 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057259809 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058181644 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057637908 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056985166 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05705697 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060831779 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059237592 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058155232 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075449025 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058729207 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067053283 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06030478 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.058324711 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06125398 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057813669 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073248898 seconds)
  done (took 5.547787229 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077726397 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082014462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06240912 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062255418 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058926919 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058011475 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065754492 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057938785 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062157114 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077466996 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058316926 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062296312 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062264152 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061340039 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057864642 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062382062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065977175 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058094454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.05773571 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061860787 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058025315 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065030638 seconds)
  done (took 2.658374578 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.130616893 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062202432 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.099661457 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071994935 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065772748 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072964905 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063338028 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063365868 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063447065 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063627042 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064023223 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063545338 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066113559 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0637028 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063614548 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06376502 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063424069 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063750302 seconds)
  done (took 2.520671534 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.072791897 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063454539 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086121363 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063274207 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063358517 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062683303 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066504848 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067175195 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062789467 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063088876 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.066988324 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062606241 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06289028 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063090842 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062497337 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062980131 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062530576 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063014921 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067232409 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066436442 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066506061 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067034235 seconds)
  done (took 2.697974794 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070245838 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061740497 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075874379 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064026923 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058494448 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058389017 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063055199 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062652599 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063156522 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061709923 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062409499 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058025318 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064115198 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062368654 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063859289 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062543396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062420583 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062267631 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061719365 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058147472 seconds)
  done (took 2.511034117 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082071919 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059420269 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05963198 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078904451 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060887765 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060466518 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078845381 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060620763 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060852076 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081411319 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060530202 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060868364 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078986621 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079314829 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060694116 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079052698 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078473601 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079209897 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060399996 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060353495 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08130343 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060493936 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078606633 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060492001 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060694749 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060279153 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060392133 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079258628 seconds)
  done (took 3.178077883 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.05987945 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059670002 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061467068 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061061825 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061048555 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060791491 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061066727 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061400358 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061157933 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061292184 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061236595 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060953314 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061299713 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060640975 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060964472 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060819631 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061220956 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060851656 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061535289 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060969452 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061220317 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06068888 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061009285 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061361385 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061132947 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061006292 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061132981 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061080067 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061053884 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061179237 seconds)
  done (took 3.091158269 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069408724 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068068087 seconds)
  done (took 1.398203756 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058502004 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071878482 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056484275 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067315758 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066028175 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060957988 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066496033 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066252647 seconds)
  done (took 1.769680865 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.063216707 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084955682 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058883357 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060258669 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062761262 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116663929 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.071889327 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072636826 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07196888 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061495374 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.05982943 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071035345 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059090279 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071114258 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06148274 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06763041 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065888218 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070603146 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07097743 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058191475 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070500651 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060062076 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058403968 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060230637 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059447255 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066181216 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073659405 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0707894 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067722378 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057169832 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.0773629 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058684633 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059364749 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067146839 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062685959 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058206016 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09284045 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058964096 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.06381832 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058087163 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06991241 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078146206 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071504817 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.075265472 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059977346 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060389982 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.05809292 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060133345 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062112354 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067305322 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058379618 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065313959 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057882055 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059728754 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06793852 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058864471 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06395529 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067055125 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070921473 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06766218 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070460777 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072918665 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066956228 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066245771 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059259647 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076578728 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060202787 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07070896 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071947902 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059512661 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07084156 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057967202 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057344571 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058001614 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089990845 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060021262 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059668912 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058393452 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058240162 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059657513 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067331085 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064059626 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06557539 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061866799 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073829066 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067241671 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058458214 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065459628 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075455967 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061753077 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058609604 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074544474 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061954399 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058358136 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075139619 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067865829 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060045875 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059429457 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061475148 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071296531 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059840222 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057103546 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066253473 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059253798 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060443585 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.06263122 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065914712 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057998154 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067210394 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063195055 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059075038 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055829764 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061024764 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.05724725 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055191504 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065401558 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057885414 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070020997 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063308281 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070596734 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071175086 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067197011 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072393434 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057572321 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056338975 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07273785 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.065204115 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.057731768 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071739842 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.055299996 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.19925158 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058244415 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060124989 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067367996 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059109313 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06145552 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059282697 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064702614 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060671741 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060504082 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062521111 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067052454 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07036948 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060128975 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066806125 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059343348 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073463853 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068500933 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062811771 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062848906 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059290651 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070047331 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065100321 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067309149 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058449188 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.05936884 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058425749 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068224807 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067549718 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060421055 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.065940098 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062990275 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059406545 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058544355 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059442473 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061978825 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062292918 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.05944706 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066113342 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067099613 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075397771 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066406355 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067555024 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057899059 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058286073 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060512423 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058216637 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062764199 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067037104 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072947224 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069792024 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07822712 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058536186 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067272622 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059898127 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073984742 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070816257 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059378621 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063690216 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058104473 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060161144 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067314716 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06931515 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.0716405 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072298722 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062541861 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062659753 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058136133 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07212029 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058582488 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066483369 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.067614856 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063297515 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058890735 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060301732 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067359349 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063046405 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058387842 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073132793 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064684119 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.05848974 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072078235 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058947521 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068806807 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058348079 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061905178 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063377855 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060150597 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06752844 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072705205 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057657163 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059056293 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072902895 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060435048 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060542123 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066102419 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.072841711 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062520321 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066076613 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068422856 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067253418 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062324667 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067362339 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059302507 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067224148 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061304983 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069835728 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058172644 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074804635 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05718951 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071954042 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058433745 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068138223 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058181127 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066830311 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059149773 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073826448 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059705663 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059261722 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069148348 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057115571 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067087179 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057137031 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062146303 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063635301 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066113911 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059085173 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066184741 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059042228 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065096983 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061543636 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065008634 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065713008 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061313511 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.056948392 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.202022435 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070280269 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067753448 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061335757 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061000156 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060025766 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068328717 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060713646 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060165612 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066697915 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063653687 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064215627 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060925834 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060941929 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.06039387 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067023905 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067926349 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076072452 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067273909 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065721729 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067744615 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058685567 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073712036 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059049387 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065408094 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057694396 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063993343 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067334079 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058663232 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076802976 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059955149 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066501753 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070093597 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066718785 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062043784 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075699549 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061706184 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06644252 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066132891 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063333324 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065502479 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060696467 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066807183 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067939992 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068718007 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059681885 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065379797 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067805758 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060089282 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066659293 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060367874 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066458897 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060038189 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057692646 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062287537 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069294167 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062847761 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063117151 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058736577 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057459136 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058639222 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065234599 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063157303 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066569593 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073242113 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05781316 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059715645 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058298282 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064590871 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075759604 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067925388 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066316661 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062779474 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.058058008 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059735781 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060282037 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058788634 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062142159 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057824885 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058639932 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068509476 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.06044217 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062597196 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059440634 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059586392 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067785424 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063219085 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058967219 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064932284 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.05810066 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063057296 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057790044 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060225293 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062688973 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058355059 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062149255 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069219686 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.074113223 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065048665 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066566479 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059607447 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066137377 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07300636 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065877817 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060142954 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067249249 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057518526 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075653086 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067218148 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066471586 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067028245 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059026962 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073317325 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062503043 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06762185 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072606893 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059015328 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064904156 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057484118 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072518548 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.061971976 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057381284 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065588638 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065169884 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063237064 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.06869757 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.0581287 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065278717 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062551858 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060649715 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059182447 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059284687 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065606612 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.0720467 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058152466 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.203810013 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067133124 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067750991 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064103017 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071316645 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066594522 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060985586 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060700231 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062492099 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060120777 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069963394 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05916869 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062995849 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063281991 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.05828536 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064617466 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074483799 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067694444 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068120407 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058432024 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057882729 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075727658 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062948435 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062816307 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06591179 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067353403 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070507682 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067757003 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074497783 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059906589 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06418701 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070839161 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059904839 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058814609 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062394845 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059659703 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06719012 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067991644 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066302279 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061516554 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065465391 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07148209 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060400484 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062734371 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063458616 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060039002 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068833513 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066213645 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066650839 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060292014 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058214834 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06163695 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066515309 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065385495 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066652878 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059651841 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065556318 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071703524 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065485463 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061836799 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058393772 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061844647 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066858706 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063049957 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058496658 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062722655 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062079238 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065619935 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067213219 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062994344 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0583961 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074327636 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066730428 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06732593 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060257112 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060571973 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059458474 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058241563 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.06909043 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058403773 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060026185 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063021297 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060689252 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075527342 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066171924 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073561937 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059483913 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062678736 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059107176 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067877247 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063304391 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058979095 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068968758 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058373826 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072617778 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070527285 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067506166 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058421174 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063601809 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066130539 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072713068 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067800839 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067651278 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.06259633 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067920164 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060543684 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.069079476 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058077736 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057508543 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068217416 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066314359 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070046312 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.05826922 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067477683 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060186735 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065851155 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06586585 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.05983464 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059914367 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059707503 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066633303 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062421182 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067084115 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062844708 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073197796 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.058882222 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068039009 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065734077 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.06754777 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070307871 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068770797 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.064895524 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058134973 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064726077 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065753973 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.198850241 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064612384 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.06386079 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080648787 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061560139 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061258096 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072967504 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065816544 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.058885959 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065927323 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063376061 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068686214 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060091769 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068978558 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063273447 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060120672 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063323567 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063671831 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058159843 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058790487 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059104067 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068606563 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063423632 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058988759 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077144397 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.06051747 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06715678 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.06937876 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065087441 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060795578 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058443099 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059862899 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070699313 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073120509 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062002012 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066838566 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060791901 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067582215 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057958786 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067286671 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066466633 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084523894 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.05870197 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059428155 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07287804 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073565657 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063005914 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067867683 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069063109 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060151452 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079527527 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066541084 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059934735 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068868946 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061253727 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057850429 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057942717 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060483042 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069731987 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058268521 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061080128 seconds)
  done (took 40.288202836 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094112765 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058609661 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058693002 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059089508 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069522605 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059333791 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.05856741 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059146312 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059396443 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060861986 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058510326 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058578736 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069173981 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07187551 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068556608 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062471461 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058757003 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059379313 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058080541 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059271289 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068483767 seconds)
  done (took 2.701000748 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.06391059 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071941161 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069635363 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074948763 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066701518 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063351711 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069497198 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06241923 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070614181 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067877598 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069813653 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062553891 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067580451 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068039471 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067907364 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063197259 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070304218 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067014635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062700994 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069723046 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06290686 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069582618 seconds)
  done (took 2.833327924 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058927555 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.05761979 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065520324 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057294391 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.056334855 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061134207 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057966323 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062109001 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062537869 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062341105 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066909352 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059493212 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058045268 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063404001 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057876589 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059388484 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.098160303 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059221799 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.05898028 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.05834435 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064070001 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066750752 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058011241 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058287854 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062311017 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061574215 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057854935 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060773924 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058526059 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06264744 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059003153 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057795672 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066236121 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065948954 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062241033 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.062274997 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059586845 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058691638 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058114644 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.05802781 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066203181 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059995572 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058190626 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059202544 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066787684 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058574405 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058410867 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066557763 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058312786 seconds)
  done (took 4.367162559 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.068011015 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108110058 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064512601 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088838488 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071301454 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064746684 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063961912 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089947984 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059496904 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060333111 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072378978 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.072470756 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061437796 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062993308 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06565943 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061318383 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062083579 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060620646 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063601486 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060811117 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.064077003 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064933695 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.070691201 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071472711 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062021679 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060456598 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061121839 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062778504 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071184296 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064463143 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062549194 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063126289 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071506865 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064231426 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060741053 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060539205 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072542484 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061605164 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060857908 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059655368 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060559122 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062735536 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.065241632 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072444786 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061377223 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065649831 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061238397 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.05916294 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072401286 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060942495 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065013254 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072593858 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06240835 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.061815706 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062903343 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071427064 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061608008 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059691892 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06161858 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071724582 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060021754 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061851879 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072067192 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061050252 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064678822 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072287557 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065767873 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062449769 seconds)
  done (took 5.979603621 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06645622 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.08932638 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06963604 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069788829 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069139367 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069198276 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06883832 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068853081 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068718088 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069729672 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069295435 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105570183 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065012704 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073504393 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069072799 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068585554 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068847253 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068649033 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068499709 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068421649 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068806096 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069221071 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06920466 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069422501 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071111566 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064771164 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068547336 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068719161 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069830981 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068968406 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.071590547 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068777204 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068778216 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069562842 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071379267 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.06862756 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059151633 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068838628 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068972518 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069076714 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065664879 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069477308 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068738259 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065067993 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069085025 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068777164 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069239504 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.071759799 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076019974 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069625328 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069083733 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069516704 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069531968 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069514865 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069824161 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076281986 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070018574 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070314124 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069373152 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069457835 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069232532 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.075983915 seconds)
  done (took 5.739071992 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071391831 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064636743 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077205164 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061306917 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058632858 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067880428 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058585498 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058555686 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065967831 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065772956 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06826881 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067834664 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070027226 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067292399 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068058356 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06970075 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067764567 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067476796 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065923856 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068089446 seconds)
  done (took 2.712246385 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.06941403 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074044925 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064717752 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067593025 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06362154 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067557314 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063327052 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064085316 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064483375 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064214482 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068771185 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069169109 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064722203 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06818756 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06871272 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067954172 seconds)
  done (took 2.443392881 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064394955 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.064374021 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.063819106 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059324692 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063753365 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059400146 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059465073 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058305261 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059073838 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072195682 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059800465 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070993077 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059788402 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058854995 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058961308 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065034592 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058553461 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059644481 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059493717 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063958487 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065673175 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060299294 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062994465 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059376375 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064812809 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066599045 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061198262 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063241611 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059640092 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060010064 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065117961 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065947031 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059169068 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060315995 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058756328 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060082675 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059937193 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060073677 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065385584 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059763457 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058333211 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064610798 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059926276 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06044428 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059008516 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059948277 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.05887274 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065255487 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059845196 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064819024 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.05963815 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061652424 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060315778 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066560273 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062230516 seconds)
  done (took 4.773167733 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07188899 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06249934 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057073983 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058248186 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063624398 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064423255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063828314 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063785139 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063973459 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058617145 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064177182 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063253309 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064016671 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064048661 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06454913 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064272785 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057884235 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063628422 seconds)
  done (took 2.519763967 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068379417 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062925752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068485577 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063809251 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063636264 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063161195 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058955991 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058786033 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058886275 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063189791 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063803887 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06286219 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059079706 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062947325 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063412906 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063303929 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063045049 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058802697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063750671 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059234477 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062849103 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058941556 seconds)
  done (took 2.75194667 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084644463 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081984876 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.121686711 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077569558 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08573989 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069557693 seconds)
  done (took 1.901822515 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087644402 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097691258 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062535443 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063907623 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072434394 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066754045 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06707878 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067040418 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072449746 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070852558 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067024586 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072924685 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072486052 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068965283 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072893296 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075160377 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067043057 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067888045 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063842033 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074953469 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066653744 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07259935 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066926316 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066763738 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067271943 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0685458 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075439218 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070833184 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069496814 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07284402 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074747221 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066681051 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072499979 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070610749 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063885684 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072217229 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066940235 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074991496 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072469682 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068730751 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063822097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072741143 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072651763 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068571798 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075160643 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067708099 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068985197 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066887011 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067799967 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077379722 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072762679 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068860799 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072732412 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075182796 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075038997 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077307127 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071373409 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068498494 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072701354 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070873549 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068437354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072190513 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068407203 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070956644 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075056156 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0685433 seconds)
  done (took 6.064090936 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093757932 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064083934 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067910455 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072609706 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068657606 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067232775 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067131444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067155696 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067817803 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064211412 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09978562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067949279 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068899192 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068819486 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067370555 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067138465 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067662292 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069401887 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064546288 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077532954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067363085 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069041401 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068821568 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068637145 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070928987 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075310091 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066920726 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066846867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066809716 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067039836 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068548563 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067270272 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068475857 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063757031 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06850885 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066793776 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066600184 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068665127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067201795 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07263159 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068801875 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075318581 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067179894 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067159039 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070982359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067182891 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066910742 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06412572 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0669881 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063957564 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071231807 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070999378 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071389363 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069084194 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067148958 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067309948 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066995937 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067399591 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067372812 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075145565 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06873232 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066909617 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076856583 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066815909 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066396131 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068524595 seconds)
  done (took 5.975921903 seconds)
done (took 123.589845122 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205169361 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182106459 seconds)
  done (took 1.750935668 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071247738 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093809207 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073442301 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132532524 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068258995 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103868155 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100477245 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07178819 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068803199 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069775634 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069568968 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071933816 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135374001 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068124899 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067105921 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070681235 seconds)
  done (took 2.720892595 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101445654 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.178799323 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110099873 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067599589 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10382 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074476068 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067562187 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077665814 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071007696 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071106427 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074426162 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072356941 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070428435 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072458553 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071069743 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073964591 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070738565 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073777945 seconds)
  done (took 2.89292171 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.090057492 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.082044211 seconds)
  done (took 1.565998872 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.150080209 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101185428 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139089768 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.309651334 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.130678976 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.124490929 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127666014 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.121571912 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106323967 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.118081161 seconds)
  done (took 2.815744827 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098041759 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168039436 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301610771 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117363539 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073869988 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097932278 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119113613 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079936959 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077987398 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077452229 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079993843 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074873045 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095465493 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074281755 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074007147 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07424773 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099178211 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07351321 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072491967 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073824483 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098888749 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067930419 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074012798 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07290948 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075631563 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075863196 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069416383 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067680254 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073466552 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072530156 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07586151 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094652699 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075430083 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.097685089 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072143092 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098084202 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072656619 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071488263 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072754805 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071723198 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074820739 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074743023 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07683053 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074841117 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069100109 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072671953 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069280025 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067691945 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076693405 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068946664 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076975133 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07603316 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.096802333 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068525381 seconds)
  done (took 6.000464722 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102733698 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.100142194 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067202237 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110983179 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10191181 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068079288 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101256203 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097023618 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106186015 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068014085 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067304041 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067412331 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074686875 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080250803 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112841606 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102032947 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06746957 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065564879 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103068724 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101693735 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065253182 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097482501 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096115927 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103960744 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066484522 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067497883 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065639607 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066756318 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072267854 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073933367 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066577911 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07443292 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081759117 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071353089 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065743667 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066059696 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066137633 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074003222 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075371652 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07487287 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073024739 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065818621 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065828405 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066980561 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06723619 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065915964 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072933383 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.074368477 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073170859 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066741656 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06656261 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066294205 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066916867 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073507414 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072448304 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07364199 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072166031 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065734691 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066058645 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06769582 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074996359 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074781048 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074428631 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067171291 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074979278 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066004545 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07681413 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079482492 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066463435 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066763191 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066000383 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065752067 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066599865 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07232352 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072951519 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066864553 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065837352 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066443558 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075331395 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07288048 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066240715 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072329013 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065974704 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066471526 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066632774 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066505493 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072426077 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.073996634 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067177117 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066392886 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066316201 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06654442 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065729357 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072444728 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073340631 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073695682 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07253971 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066570596 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.072474724 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07286444 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066233187 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072075583 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066033239 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066012979 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065633566 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071651815 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.070953229 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.072929079 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066109046 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064705929 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071400047 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074344481 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065676463 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071143416 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.209370828 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072818967 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067438876 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080384604 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06816336 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076761337 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067520267 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076259227 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067419411 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07364449 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067027018 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065998732 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066934128 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074147305 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067278327 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066608349 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067545726 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06657202 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07366293 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077328277 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067098224 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074033699 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073457806 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067605903 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074342465 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067223377 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074562336 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066802156 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067436045 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066252252 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076262004 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06742845 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066531387 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066616084 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076098627 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066988241 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075156114 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073098047 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065800639 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079702817 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075130817 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073066387 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075633683 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06822648 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066516224 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066331682 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066330737 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072411988 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074175379 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067657476 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066487191 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072457339 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076309611 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065981085 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073230508 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073053682 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073015593 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066627573 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066218134 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076531193 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075556903 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073562063 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.072652849 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07383767 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066806398 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072913852 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073125929 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066457214 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080614747 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066999383 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077303886 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073186672 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072406305 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073707056 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074939396 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076095991 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076138433 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078016567 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066428906 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066189488 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073931721 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066532987 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066668818 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.072850888 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066773017 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067225376 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079610719 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064951678 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073582749 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06399729 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073238847 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064567191 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067114394 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078851355 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066787299 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067116763 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073101608 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066556565 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072518803 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076309917 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070706549 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06501841 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066839329 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073585918 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073990177 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066357823 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065806074 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066423366 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071048698 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07042947 seconds)
  done (took 17.767048396 seconds)
done (took 36.918463231 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.191174854 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152176329 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183523519 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.108228587 seconds)
  done (took 2.129839306 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.088954783 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.092217452 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.072766812 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063218058 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.079557094 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062916079 seconds)
  done (took 1.895403773 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.254371329 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178770638 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.164292151 seconds)
  done (took 2.029183176 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207502229 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191244222 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475334041 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287168454 seconds)
  done (took 2.691522645 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.124637161 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.074424723 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061260713 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071769408 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.103609806 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.130449637 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.085379379 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.106515637 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073231951 seconds)
  done (took 2.323035173 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.126037783 seconds)
done (took 12.657830656 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097796021 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.192617549 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069673134 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072556373 seconds)
    (5/309) benchmarking ("sort", Int8, false)...
    done (took 0.169284433 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066276425 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.183538957 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.118896696 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.15511163 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067064688 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074032613 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11797102 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089457449 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122157039 seconds)
    (15/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07305046 seconds)
    (16/309) benchmarking ("sort", Float64, false)...
    done (took 0.134786319 seconds)
    (17/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.120675724 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.237524244 seconds)
    (19/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102776148 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072094212 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.194017453 seconds)
    (22/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078684425 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.224378683 seconds)
    (24/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.451932428 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071513443 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072208726 seconds)
    (27/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.178229026 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148123585 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.23059677 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071236877 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179786088 seconds)
    (32/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077705089 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.184687451 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07444957 seconds)
    (35/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.174392268 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074435522 seconds)
    (37/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072409326 seconds)
    (38/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.145942876 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088699432 seconds)
    (40/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.139371423 seconds)
    (41/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077264705 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071286325 seconds)
    (43/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.246498424 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14685488 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071586908 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068601321 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06186934 seconds)
    (48/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.194378033 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086350794 seconds)
    (50/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.211625129 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063460813 seconds)
    (52/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064016557 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095510785 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.142022757 seconds)
    (55/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.082788266 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063069143 seconds)
    (57/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063609831 seconds)
    (58/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.192059226 seconds)
    (59/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070452879 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.064754366 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182981036 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120079183 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082363933 seconds)
    (64/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.08014567 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087086165 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084243235 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062655575 seconds)
    (68/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160461593 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072183259 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16337226 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072616854 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069819216 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.212184453 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062143521 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063745878 seconds)
    (76/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065164221 seconds)
    (77/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068245383 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076735451 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127838335 seconds)
    (80/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.191773251 seconds)
    (81/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.063825186 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073370953 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120790292 seconds)
    (84/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.301904908 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.216847034 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217412508 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.172768074 seconds)
    (88/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.174666642 seconds)
    (89/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093485576 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090777651 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127896647 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064780337 seconds)
    (93/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.144032691 seconds)
    (94/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091323628 seconds)
    (95/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24856482 seconds)
    (96/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.160017661 seconds)
    (97/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06332776 seconds)
    (98/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065251774 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150973738 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070986441 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.187102528 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177233646 seconds)
    (103/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.063298836 seconds)
    (104/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065086981 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063091541 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.170538884 seconds)
    (107/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.148759449 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.191808974 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064184816 seconds)
    (110/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071798981 seconds)
    (111/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076706345 seconds)
    (112/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.137711073 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127063275 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074530627 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070202997 seconds)
    (116/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.1438714 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062269901 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163521717 seconds)
    (119/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.154657502 seconds)
    (120/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.083528745 seconds)
    (121/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062092372 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142370178 seconds)
    (123/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073834518 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.152815736 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.184009404 seconds)
    (126/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.0740343 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.142370782 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.064832157 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063125482 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202551746 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075584271 seconds)
    (132/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.163695423 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063240593 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08465239 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063728112 seconds)
    (136/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064352974 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.09020542 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075730376 seconds)
    (139/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.070292592 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071208396 seconds)
    (141/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072431111 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.064951492 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07440288 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086004322 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068197857 seconds)
    (146/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.075270213 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086760775 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070386671 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065607678 seconds)
    (150/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070918567 seconds)
    (151/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069772396 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075004655 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062759236 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061808483 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073874112 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.062659985 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063347087 seconds)
    (158/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064458592 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062584948 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062937278 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076211985 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15080258 seconds)
    (163/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064521757 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.216487163 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146979185 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065614083 seconds)
    (167/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.062223605 seconds)
    (168/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071239795 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064307734 seconds)
    (170/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071004055 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115446798 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066093671 seconds)
    (173/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.064513377 seconds)
    (174/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071873724 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07202336 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.217247566 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06362743 seconds)
    (178/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066756551 seconds)
    (179/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063053166 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.062781328 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.060412513 seconds)
    (182/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070660527 seconds)
    (183/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069397723 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.061374186 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069912882 seconds)
    (186/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.060740663 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.061509291 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.081010074 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.060547578 seconds)
    (190/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.060631034 seconds)
    (191/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.060530234 seconds)
    (192/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06298694 seconds)
    (193/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.061524227 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.082107325 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.232336708 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064956218 seconds)
    (197/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.147055271 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067504881 seconds)
    (199/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.06386088 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063115102 seconds)
    (201/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075501206 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063337816 seconds)
    (203/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.064353921 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071055306 seconds)
    (205/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.065236632 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065313661 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078588963 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064788973 seconds)
    (209/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071676749 seconds)
    (210/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177785623 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091215146 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070504121 seconds)
    (213/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.145120697 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06905362 seconds)
    (215/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064959412 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06334294 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117338925 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074016172 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075885231 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093275375 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178244615 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114302698 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143990549 seconds)
    (224/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158087249 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085888377 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06413606 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.157199805 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.142328791 seconds)
    (229/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065078486 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064409912 seconds)
    (231/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.141629268 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063333973 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071314595 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074388391 seconds)
    (235/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124643496 seconds)
    (236/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.147487033 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145367565 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065408879 seconds)
    (239/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.063805038 seconds)
    (240/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065203529 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06710173 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087393441 seconds)
    (243/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.063357331 seconds)
    (244/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.064687436 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06295284 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066046435 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085331659 seconds)
    (248/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.075069991 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.08943044 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064135104 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.063927446 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062439449 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.062706083 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063644114 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06280878 seconds)
    (256/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139578707 seconds)
    (257/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063702602 seconds)
    (258/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064782731 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066124642 seconds)
    (260/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062811744 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064705597 seconds)
    (262/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.07398209 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063983977 seconds)
    (264/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064499111 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.065599362 seconds)
    (266/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064429483 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168562756 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.063238903 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11871483 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062668704 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112494269 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070863913 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.132796355 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084758244 seconds)
    (275/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071652044 seconds)
    (276/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.063499305 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063334654 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065850397 seconds)
    (279/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06368257 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062909147 seconds)
    (281/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064501953 seconds)
    (282/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064129774 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14343081 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064616485 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06368146 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.064257562 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063033413 seconds)
    (288/309) benchmarking ("sort", Float32, false)...
    done (took 0.1314673 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075202704 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.063194621 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.07709964 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.061814862 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.062751232 seconds)
    (294/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.068954814 seconds)
    (295/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070729487 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083563147 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087233194 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071086053 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.063803037 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062638521 seconds)
    (301/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.063404425 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085811402 seconds)
    (303/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.064428227 seconds)
    (304/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.065775289 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.063784458 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061320094 seconds)
    (307/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.068047747 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.061791581 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.061036278 seconds)
  done (took 32.271368292 seconds)
done (took 33.723055374 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083638998 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085728907 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071893465 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083697079 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079745286 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095381465 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07233294 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077238172 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079521519 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077849512 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077245117 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069429997 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07124315 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071085154 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069019402 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083518333 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076980521 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.070160675 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070628875 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060812948 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071137579 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062515602 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062238977 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070931657 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075868539 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070488012 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073056404 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071933319 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062580368 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062601892 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066186512 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07121751 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065114721 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074947382 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07161244 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072371344 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073588471 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076598261 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062178951 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062567629 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07260771 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06232399 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.06983005 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.06838607 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067005202 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070663088 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071944802 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075722333 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086567872 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068854431 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074573357 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075153039 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075135792 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069511589 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069184632 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072065558 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070107852 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086014459 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072748237 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068128063 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073996029 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073418063 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070948787 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072147281 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072105242 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075164779 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075591683 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07082727 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07442953 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070900446 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063473791 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072048052 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068379425 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063490503 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074784497 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076979428 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062329151 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067829113 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07194996 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072330594 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063156496 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068099936 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062816014 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068683885 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067931883 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070458404 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069190004 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070816907 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062724177 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072468579 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071040515 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07145577 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062532264 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076028913 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063178888 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069960692 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064328164 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063756317 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062723106 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069216368 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063557665 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06832264 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071875071 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062429766 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068617094 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077017033 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063460045 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071113177 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063140124 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063195224 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074243473 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074805056 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064128025 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068810357 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063076202 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.06899971 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063005634 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063383008 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063431917 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06384735 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068324636 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063670417 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068137144 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068868996 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075970623 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063284727 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067761022 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068033984 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063813727 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070325636 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063873081 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063632179 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063120598 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076565602 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067657061 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063898996 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068529478 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067626713 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071033439 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061101693 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069998167 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06664366 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.065257433 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.06749196 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.059696422 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07156947 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064798172 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.208446751 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06371724 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065357959 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064446392 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064323608 seconds)
done (took 12.342624489 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063159298 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.087233654 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071010624 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080083212 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076374116 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064773279 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067836522 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080386248 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067394055 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083447046 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08653563 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084621372 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090809922 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063303451 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064693772 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065468269 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063373149 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.071175753 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078462131 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086408833 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.09352049 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064434795 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.071867745 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079244351 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.07350703 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.078876769 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.0657056 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063335619 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065833045 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.078290361 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086334168 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062198398 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065258766 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077631492 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078094983 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.070767241 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064971125 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068200099 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065477804 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064503997 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06613945 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.077576505 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070921365 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068425119 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065093527 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065442534 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064424079 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067637724 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077197939 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067467054 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071670041 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075592305 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066045208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064263717 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06294412 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068336255 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064098895 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064900692 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064528206 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063879298 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064340365 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066582625 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065404923 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06492545 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067680389 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067111305 seconds)
  done (took 6.194070925 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080097877 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089950781 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078965013 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078982254 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062285781 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063260677 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063223936 seconds)
  done (took 2.069533177 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063290864 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074879578 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077593989 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077798634 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070965572 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079734605 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064126022 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09416987 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063900672 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077084584 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.108912071 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079700183 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066161234 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075542386 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064378083 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070642484 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064859893 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072146161 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072227534 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083945104 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067997727 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090314055 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077984486 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065038627 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084170238 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068738035 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06241459 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063288816 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064677328 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06561679 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065645156 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103243034 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068298682 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076384989 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0657903 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064083955 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070011468 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068031273 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067454209 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073438599 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069601016 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065549904 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063027703 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066153776 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066861505 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06810748 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063222704 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065236054 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065254977 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075025707 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062339005 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.067147641 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067067396 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069386017 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070277092 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068484761 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072555501 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06584961 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07554929 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072143364 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065803135 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072787356 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072115685 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102940766 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070570699 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.066846548 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066156921 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067399294 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.063584659 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064824662 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064224891 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070500542 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.062295689 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06510233 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065658669 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064921505 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067354078 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.079243735 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078530359 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074585122 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064779233 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06367892 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066388069 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.078255513 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067181082 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063282034 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065585332 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062014689 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067414596 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06365761 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068518761 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063617575 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.070153961 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064933962 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066491203 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070435837 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062924012 seconds)
  done (took 8.369169939 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065351505 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064593901 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067371702 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066236326 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065673113 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066200764 seconds)
  done (took 1.984584996 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.084738888 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065216722 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079987544 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065866683 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099784257 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.071540278 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071831666 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073124819 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077725184 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07730137 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.07188441 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073457331 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069463778 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064617547 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069514059 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.064086693 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.069184678 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065917782 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074748345 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065061535 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.075496463 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064800618 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067102215 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.075564587 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067864318 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066105237 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066350178 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077254577 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079266468 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073263784 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066782443 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067473453 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072773054 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.072593664 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071808819 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072021675 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06468964 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069439314 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065893333 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067236109 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073652818 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066671673 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067587045 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070415576 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072614206 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073004953 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070234357 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068553306 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071223089 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07022164 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.069332586 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065422612 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067808286 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070307097 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072984434 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072503962 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070117216 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070693079 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064474204 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070598692 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06320532 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065639759 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07010754 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065547653 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.066159677 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068245748 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070379376 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.065252255 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065639812 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065247476 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070574305 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065183571 seconds)
  done (took 6.614905416 seconds)
done (took 26.770822557 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.949476819 seconds)
  done (took 2.482871379 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.550762978 seconds)
  done (took 2.122466168 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.71056267 seconds)
  done (took 8.278723837 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.279786807 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.309706292 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.707802852 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.126314862 seconds)
  done (took 3.023511114 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709695135 seconds)
  done (took 2.290907616 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227877327 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223687357 seconds)
  done (took 2.042345821 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.33981099 seconds)
  done (took 1.91489634 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.091969767 seconds)
  done (took 2.66310181 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.212776057 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154161189 seconds)
  done (took 1.946974182 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.467547054 seconds)
  done (took 2.040363908 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.081962669 seconds)
  done (took 5.661254582 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225227685 seconds)
  done (took 1.842432554 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228846051 seconds)
  done (took 1.812153124 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.710387546 seconds)
  done (took 3.286128116 seconds)
done (took 42.988277835 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079460028 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08174179 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082348801 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077580796 seconds)
  done (took 1.875698982 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.06954093 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066615474 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.069829763 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070404702 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069568195 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070028605 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070847019 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067963755 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069506976 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068068632 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.0671329 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.0685116 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070754264 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.06839761 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069872782 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.070963144 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068060682 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067857981 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071145713 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067894615 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070782105 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068037709 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066861551 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06836188 seconds)
  done (took 3.235678965 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074949867 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.06915644 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071516753 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067575867 seconds)
  done (took 1.870851187 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071865681 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.07996043 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.081506834 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087908611 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074129124 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074383217 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081017977 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082476749 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064198833 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084216522 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066334996 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064848783 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064986124 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084069573 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.078993233 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059586211 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060626451 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072184579 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071369919 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075695159 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06676172 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063914745 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074568426 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.07386425 seconds)
  done (took 3.345338617 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075627547 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06279256 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.074939813 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089677472 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092879965 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064084832 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077767314 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092639629 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125463381 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064311701 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069893029 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064363885 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105740807 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064718768 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079199426 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106353509 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108688155 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068104445 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096346702 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064157067 seconds)
  done (took 3.240547074 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073505699 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066801015 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069133239 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064427801 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076028262 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072234388 seconds)
  done (took 2.01944648 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065063597 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065391911 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066587194 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06561904 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070490482 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065969019 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064700265 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066196327 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065720764 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065498995 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065110436 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064634994 seconds)
  done (took 2.381872886 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.155049289 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065901788 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067157858 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065537266 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070280538 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065064249 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078930995 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067146374 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083505119 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065609106 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064938079 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067582075 seconds)
  done (took 2.508734992 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090658354 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089516155 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125693035 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108072372 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089385459 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.087657668 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.139855081 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.131199545 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107937366 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068363851 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080981458 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100825198 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097971229 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135298655 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106928437 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071589253 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.096962075 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079015797 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100330733 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108089667 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103760702 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105758325 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084594897 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094474022 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098407415 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106566182 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067418477 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066831875 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128457849 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.092574749 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.084505632 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.087305874 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102520442 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.065141032 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081327448 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.094079809 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079194085 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096309299 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083531208 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092536713 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073234838 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.118011979 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094970009 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102630836 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113796807 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088085759 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099070199 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094270392 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078226403 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.110694684 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090358534 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087447323 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074242204 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.14818235 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087134522 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.100110162 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104155337 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.07859352 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084214308 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088485919 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.115057716 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.091256577 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100475291 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.248301482 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.083813812 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090894124 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.131778255 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084052593 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102275753 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123227198 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.08858803 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074851433 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.089493708 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068197817 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096366217 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09850617 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090688768 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105303786 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081219155 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117200395 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104739611 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07070745 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.108489391 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090476065 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149752366 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094998335 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098536189 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088402638 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.141841924 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082045881 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076090803 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090924503 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126737816 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087196023 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092445961 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119173505 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085534906 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078960242 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072012709 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080962196 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089374178 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10356364 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092785183 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084560719 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078696973 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084812265 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071238677 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07659344 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.092669229 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08349623 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112812141 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098948308 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107653505 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074552884 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103326627 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089153958 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124856941 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.113346661 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.081162519 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10535061 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127896669 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102757829 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081415377 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09605098 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10787326 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099062213 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.083764519 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126701411 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106460522 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080708086 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.238354182 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089587367 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.104624358 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149206777 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089099314 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.104807386 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131715344 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.10183916 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08860148 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079928675 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08736744 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103470956 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132559748 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.08975096 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.06946631 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092279153 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124200142 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075836382 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093805465 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087510656 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.08266825 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080651449 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067042604 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099612014 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.128626634 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.10939847 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094699255 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.089959959 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067591051 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097779865 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095021442 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141484284 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111595224 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094233795 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.087271693 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096376871 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076682786 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.124638447 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.124668121 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089410102 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087719869 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118903614 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085240624 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.096351221 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103284856 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101322798 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.09369674 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133099921 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117631028 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.111635346 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100598069 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119203411 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077053538 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103531041 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.070814424 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09882466 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.072277166 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0969306 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074703088 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.105990511 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075124584 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09433375 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.065010124 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.228457537 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.101247061 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085885814 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08331192 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.128279071 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.121813124 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079989471 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.090564627 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096104369 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093268053 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102414603 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.08322377 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087819363 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074400004 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.076878982 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087037267 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090889144 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100289762 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07420034 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07155 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134100945 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098921963 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087095613 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086991308 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.113331841 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080644868 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078958478 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100928894 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12947664 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.112773424 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076017299 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.087536679 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.066102741 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080005793 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.072156244 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105153806 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070339813 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106574162 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.065074926 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.124712302 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083150297 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097370093 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088633359 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118974333 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081590905 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118869383 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083342129 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10396591 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090842053 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086453624 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10220888 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.087964222 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093891887 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09982283 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082028382 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085902105 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118292988 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103676654 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11198213 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103683628 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131475495 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104424607 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071048166 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099433416 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089668258 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148117745 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097671942 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082249479 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083359535 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.254531111 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080851739 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136600238 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083488872 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.078901034 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109179018 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.086244423 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085865746 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073243063 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.097492677 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083226561 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105594576 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.093166493 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.089359335 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101918322 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102875991 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082118887 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082371337 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119012791 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.12382319 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.097317573 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082738765 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084212928 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096119464 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089110162 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.105274818 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07805068 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071920292 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.064768874 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068079272 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.11260432 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09994354 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090291424 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090197517 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098318488 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068140936 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084133121 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087332928 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079638511 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085993663 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.10954406 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09922415 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.124221866 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.097464309 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089117596 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13282438 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.123488367 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086090365 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089074399 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092931245 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072950418 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143160012 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110738019 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07640378 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081070181 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076646163 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084272655 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070415031 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105558688 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104885835 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075752133 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098841601 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093510815 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.114446957 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088414804 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073773635 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077069906 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070784963 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070633778 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.093728324 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.072423175 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072878948 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117952739 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.255281634 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101908239 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078454034 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07327374 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128441888 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068156821 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129680488 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081364764 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105822214 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.076927998 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075584703 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0861441 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099131359 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103375416 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108783377 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067506507 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099961588 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144892097 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075228126 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073412681 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072292109 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107403719 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083808527 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139590239 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086871622 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084716453 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07434296 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118974571 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099341397 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079839868 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119551372 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076396613 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067756544 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079036474 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103871275 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068972065 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.071660699 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108293429 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.619381707 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087156417 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073535982 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080783931 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116597328 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07894675 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104203938 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.114185027 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103418542 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.175260103 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070319942 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087356618 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.101114951 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094358052 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087479383 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076175821 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084395978 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085095378 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.076638918 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102479352 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.077106778 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083445821 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.076477972 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.09998602 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.125541991 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082892811 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099693936 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087245781 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084434845 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09606178 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101838503 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096918606 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.238421795 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08649886 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103545493 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080410287 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076005227 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095962622 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073500495 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074334444 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109571637 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.080377015 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.089473593 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099889051 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.08133673 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106397186 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11604154 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110958741 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094850863 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077174865 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08197262 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.084622278 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07029899 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075597444 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072577766 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.067143903 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103310654 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082155423 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077501576 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.096017007 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103354365 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096220738 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104438332 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086123397 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091917424 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097685822 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.122456845 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14688554 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095539229 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.114597248 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.127583782 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074328777 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.072028274 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.076921993 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127433058 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.079507601 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090565433 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.230281655 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073966135 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077378862 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087757112 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104018653 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080595422 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07994002 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096455764 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107234747 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080818092 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078407593 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09000334 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.101288466 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.126991637 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086441753 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073035373 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104786628 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09916634 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119162559 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.070604703 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078600349 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124680864 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083369648 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097492214 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075357213 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114693097 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12406238 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070315972 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.241909225 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069355908 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088581644 seconds)
  done (took 48.817071005 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150961187 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.145599146 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.07884278 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.094121574 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.188813996 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.204529119 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.115049061 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091042829 seconds)
  done (took 2.778937877 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064819049 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.078515402 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098267995 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08068173 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064897552 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066362801 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.193394336 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081308626 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065770427 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105158101 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073039787 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06513611 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.344696676 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062859572 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064259307 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070890786 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063703848 seconds)
  done (took 3.341993865 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.348185698 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611695418 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.314964074 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071644819 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.011893185 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085142039 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.222602895 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133422219 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077772738 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547204184 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367392399 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131731214 seconds)
  done (took 18.634275294 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071782813 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070745751 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074783516 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074455057 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070797206 seconds)
  done (took 2.067406716 seconds)
done (took 97.745062265 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078409594 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.163889185 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063895576 seconds)
  done (took 1.965023666 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078111126 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077156714 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077147233 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074521217 seconds)
  done (took 2.016966673 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071055221 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.071982222 seconds)
  done (took 1.846041499 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236696196 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163096633 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090291831 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.07841601 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07508232 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076121457 seconds)
  done (took 1.947468776 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068161164 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068068918 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067960426 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068981343 seconds)
  done (took 1.97795763 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064685832 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06283149 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064982814 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067591173 seconds)
  done (took 1.966327938 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.07920799 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079452344 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074056569 seconds)
  done (took 1.941020815 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107496951 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095113158 seconds)
  done (took 1.908110857 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075696089 seconds)
  done (took 1.785389005 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.083902065 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.089961847 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140264297 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.104641888 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139336317 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123172556 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.072958994 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074431796 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070094729 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068423944 seconds)
  done (took 2.674265199 seconds)
done (took 22.300426232 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074576205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.3627778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356413727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082905933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.665229276 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353343191 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98980043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088971145 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097283351 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067529936 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083696136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648047842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982010247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330308232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965876024 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325587688 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647510692 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065173189 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064103607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06483571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970123688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063704923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064205678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06472739 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.644699361 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368690665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065517521 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325291313 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064167522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066463062 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352175586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065841517 seconds)
  done (took 16.117489348 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066912399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116642405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.06901624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079676311 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067055132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06620359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067794397 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06527044 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104263504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065258802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08087669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064436377 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.06871623 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066340803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084314555 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065147586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066539949 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065970519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067962499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066081672 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082900087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065184108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06579353 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066013995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065363903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077689674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066252532 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065226847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065772001 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067460596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068464176 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067225517 seconds)
  done (took 4.013398863 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124618845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072342563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106946383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116650875 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069268121 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150240869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090118874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112972795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068321235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083399768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066833012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099523338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067091258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084661852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065777456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067310365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066219916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065344805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066309662 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083362341 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064873836 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066197832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066133015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066255961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07932467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066578386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065893445 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065208919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067566854 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069446058 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066707019 seconds)
  done (took 4.318052962 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066359362 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068177772 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075972472 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076635728 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063492508 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065338771 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066784081 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063445426 seconds)
  done (took 2.274477941 seconds)
done (took 28.447897538 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074364836 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064814395 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067411698 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083732937 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071705264 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068636433 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063754965 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072848363 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069970958 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070122851 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071727523 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065734079 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068732304 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063766358 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070792745 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063341962 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069364036 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066874484 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067967015 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068695515 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065298932 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068153452 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071152819 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067715842 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.068310678 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067542518 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071918061 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069053265 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063182899 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066096952 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064867075 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073122433 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069217984 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069615936 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063529491 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.063381135 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067342464 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065582069 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068950842 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071926131 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065142321 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071775797 seconds)
  done (took 4.572926965 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.081002232 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.086547137 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.07819186 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078681189 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096137869 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078647156 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082731929 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075311385 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07383736 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.082121545 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07015062 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075236398 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075038928 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069038464 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07449521 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07057818 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076246907 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070429291 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074756249 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074878255 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.083243053 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068618099 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075275518 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076313554 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070678322 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.07636449 seconds)
  done (took 3.733080188 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069028572 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083284702 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088480566 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153176534 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109314098 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080486842 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081263555 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094928493 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098830891 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067067078 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.06918091 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.08987717 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091537578 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071918235 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103292089 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08192969 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.075414156 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066207288 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071153196 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09729977 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086390433 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082904573 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095300935 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083335338 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063793221 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073649459 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070479234 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078802952 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071314886 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076556765 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068954487 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067591673 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065206392 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075546291 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067901063 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06245487 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.084796065 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076115581 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078189906 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105862391 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073084713 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065552105 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09231705 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125287127 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064124911 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.066861175 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067747627 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076352925 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065665632 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092559193 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08144422 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064002841 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.081808068 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065240299 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066124668 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079331594 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065392247 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066091592 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07616223 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070060463 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083323609 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068400383 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082977986 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064059764 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074835261 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065688199 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06579104 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063266911 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098114815 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073955843 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112883932 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065475365 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062183161 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075903938 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074757012 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070532576 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063909084 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081423355 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075574853 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068068017 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075057281 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066636438 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067320952 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097741172 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063043065 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062200816 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062391884 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066460462 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067389516 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06447393 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076798731 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063456584 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067782617 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078185048 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063919602 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064802961 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066226808 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065282575 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063323053 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074048096 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067403201 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065638875 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076539215 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065544398 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067261374 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078056812 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073208982 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063799895 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.065203002 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.066823044 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065488704 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068059258 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067512255 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066076802 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069632451 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070995492 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069341262 seconds)
  done (took 10.561540136 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.155239544 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.146553907 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066228146 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142809195 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072381069 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068890032 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.142727217 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.08441437 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065737435 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068011609 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.0664825 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.093220466 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089217109 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10332471 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071549523 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067493654 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088958952 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095695902 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14485123 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139635413 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087381166 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071783882 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067303766 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066091708 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066005191 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073370794 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.080854528 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072233461 seconds)
  done (took 4.335660591 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.072422092 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.08908016 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069150239 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075973468 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.083031876 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065113047 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066456587 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065806429 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078926038 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072004656 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064687937 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069254659 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067674224 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067459106 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065321026 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070537473 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.070891557 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063851869 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068477081 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069168158 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074229524 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.089150866 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069020029 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064411451 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068252644 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065905431 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071585234 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.073815791 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064837149 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.077998423 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06216597 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068859394 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.07814944 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06545563 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064620932 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065184301 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064619551 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064676842 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064754837 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062785081 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062529298 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069844483 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064960587 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072688756 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079253461 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071668718 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066075372 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066621156 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066976608 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061616771 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067488672 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067798573 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06713294 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072082996 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068334962 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067042798 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068222916 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.089301658 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070666068 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064288601 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064214538 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063079928 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065504638 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072482198 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080630355 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066040405 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06530542 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066953725 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071588609 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080961964 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066347744 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071888752 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063619677 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067182435 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069250986 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069034091 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068422288 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065403604 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.0668294 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066199647 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065910477 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065854067 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064634816 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067225843 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062489928 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063120315 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065533127 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065462123 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.070991045 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06372336 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.06704218 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065784831 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063650341 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067609391 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06981766 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067890002 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078944788 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075354852 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065667382 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063330393 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078650544 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066410835 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063878316 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071062631 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069213779 seconds)
  done (took 9.013837992 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086120232 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068784204 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085632106 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091508677 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077394217 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072555989 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080233473 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067856253 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082576724 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066561476 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076002325 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065424825 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080448786 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076518969 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067363417 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075138686 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067546563 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083528667 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078417296 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064670603 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073667604 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078260847 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079143498 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083212232 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083322247 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084220257 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079598658 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069745224 seconds)
  done (took 3.929704133 seconds)
done (took 37.868222433 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.815567959 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.978745539 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.799709301 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.996814199 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.022291544 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.913682837 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.843417655 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.797045503 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.923171996 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.836803903 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.140222474 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.210514089 seconds)
done (took 67.076596178 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.841916958 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.970045783 seconds)
    (2/2) benchmarking "String"...
    done (took 2.026174229 seconds)
  done (took 5.730855199 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.988538945 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.446707151 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.062832784 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.798440056 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.804650137 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.226093582 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.583596542 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.237703803 seconds)
  done (took 30.894899487 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.907380853 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.020315854 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.473942099 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.509298787 seconds)
  done (took 15.689200286 seconds)
done (took 63.976492691 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.832490701 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.801354268 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.843899112 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.834391572 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.810393207 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.801511068 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.80333284 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.803045266 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.80780645 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.839209053 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.798677588 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.805359535 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.801782774 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.837485069 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.513396534 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.860319673 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.80777546 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.809740995 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.80762867 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.825756075 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.805086498 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.803964322 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.278368421 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.987148108 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.409492668 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.047209972 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.238311075 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214795184 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.809475258 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.806203176 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.87599094 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.029770292 seconds)
  done (took 205.087761309 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.799656973 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.943274907 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.991605233 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.816613234 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.42121113 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.975981566 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.914617539 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.442648518 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.804255301 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.811414168 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.141113379 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.80339763 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.164605491 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.760390338 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.836542061 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.846645404 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.06711447 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.152032958 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.840513277 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.951178848 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.81938977 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.004185131 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.974175365 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.106454199 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.824114387 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.804840236 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.808726155 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.807040558 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.991294184 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.053919595 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.805198181 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.838472231 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.970298453 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.671440259 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.806139067 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.830017638 seconds)
  done (took 172.340722863 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.993683787 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.808643691 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.802014536 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.856945333 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.923799096 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.805797876 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.449656084 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.811071853 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.420972236 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.803956429 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.802517357 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.803015677 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.803685386 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.816092373 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.882421689 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.80658516 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.818957611 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.805745812 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.82921916 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.806373072 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.802727601 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.803024212 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.802977769 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.802359476 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.802934917 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.803287385 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.803929172 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.015467485 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.044721552 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.805559789 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.803912165 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.551917429 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.819995267 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.00452481 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.80856731 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.803777915 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.896720463 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.859849284 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.929040976 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.808617403 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.021828248 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.877461857 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.805454857 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.80364239 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.868753599 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.817414241 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.804068752 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.805363996 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.810117617 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.869253368 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.044824021 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.805370753 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.925359469 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.301246616 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.808552713 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.804323912 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.804512994 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.406470848 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.808763899 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.805123872 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.810193046 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.810241516 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.805375654 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.804868007 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.191999336 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.875330981 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.080129019 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.215453203 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.808100602 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.372697196 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.004846886 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.805712128 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.805556482 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.806450391 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.8078277 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.806296484 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.808847168 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.92584567 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.815640194 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.931586702 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.889960031 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.932361711 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.809170507 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.815610564 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.628720032 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.877513632 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.842266002 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.637731596 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.810853995 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.180058508 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.588411931 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.811282619 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.807228865 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.819558144 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.808445673 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.807772527 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.808936339 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.889308368 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.806940334 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.807920653 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.807723978 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.932153722 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.525826186 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.201632833 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.80746458 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.807781188 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.814030013 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.88895724 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.928680348 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.810626133 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.873191383 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.813308394 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.809371527 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.887316314 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.807872207 seconds)
  done (took 404.779189038 seconds)
done (took 785.998169614 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.40190209 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.376814196 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.467629241 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.392746234 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.36636538 seconds)
  done (took 13.749379638 seconds)
done (took 15.494673929 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.821788615 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.814333247 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.864688498 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.892713857 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.825734131 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.826771467 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.887176353 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.828841309 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.859557923 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.8637015 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.891189237 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.89199874 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.833131007 seconds)
  done (took 25.846579575 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.818178886 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.952058803 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.024463793 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.847758747 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.818865447 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.030202735 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.872916371 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.943367661 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.949647541 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.030738176 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.03771492 seconds)
  done (took 23.073538169 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.818077923 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.950750864 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.028328763 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.851705283 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.818386405 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.032143601 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.879974258 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.947001591 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.950720564 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.037309989 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.048780023 seconds)
  done (took 23.117357934 seconds)
done (took 73.783085081 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.813690673 seconds)
  done (took 3.559854438 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.827862585 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.956860338 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.81231852 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.812459087 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.812278142 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.813168355 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.813368591 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.812746596 seconds)
  done (took 16.407456197 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.813979145 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.814101878 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.813958876 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.814065164 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.813756551 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.813824837 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.81403976 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.814114901 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.814301769 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.813719863 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.814830123 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.814618929 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.815364949 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.814428303 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.8149447 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.815177667 seconds)
  done (took 30.776641292 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.816531176 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.815782807 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.815991392 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.814389513 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.814684336 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.815899492 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.816649907 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.814680368 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.815840598 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.814925983 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.815423834 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.815289945 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.815154075 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.815544504 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.815320053 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.815702834 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.816028683 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.816085036 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.821145673 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.815350581 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.815844173 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.816628534 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.815694785 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.816755421 seconds)
  done (took 45.331712863 seconds)
done (took 97.830387491 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.491127046 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.783253672 seconds)
  done (took 10.023726543 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.815997622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.815321823 seconds)
  done (took 5.385320508 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.815957153 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.81664752 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.816527119 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.816521861 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.816379807 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.817264296 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.81724989 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.81695956 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.817088801 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.817219707 seconds)
  done (took 19.917776197 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.816595105 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.817745501 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.817910866 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.817876449 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.817434888 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.818925895 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.81821906 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.818230475 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.817801897 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.81914184 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.81708769 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.817713071 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.818713284 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.818302131 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.81823669 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.817745147 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.818112172 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.818499836 seconds)
  done (took 34.475140498 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.818251417 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.817951953 seconds)
  done (took 5.386978833 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.81847687 seconds)
    (2/7) benchmarking "second"...
    done (took 1.817913263 seconds)
    (3/7) benchmarking "month"...
    done (took 1.818531322 seconds)
    (4/7) benchmarking "year"...
    done (took 1.818317722 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.818987114 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.819177641 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.817700091 seconds)
  done (took 14.480337676 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.818838923 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.971709909 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.026036897 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.640766494 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.819780626 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.821204449 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.094523224 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.821936946 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.823235664 seconds)
  done (took 20.589607048 seconds)
done (took 112.009653106 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.626344975 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.817701885 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.057598266 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.912139035 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.838197863 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.156147169 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.851116791 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.466740248 seconds)
done (took 42.479223365 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.885437543 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.817323595 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.862989672 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.861108728 seconds)
  done (took 22.294120734 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.82703409 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.121851002 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.857366862 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.705489276 seconds)
  done (took 22.281140293 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.196830425 seconds)
    (2/2) benchmarking "read"...
    done (took 2.167544278 seconds)
  done (took 6.121199742 seconds)
done (took 59.336825703 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820546858 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.820634206 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.820031167 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.819626822 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.820106256 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.818966236 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.82104294 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.820758716 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.82101822 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.820296119 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.82055615 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.82099397 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.821208211 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820558635 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820718109 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821154676 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820614338 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.821660125 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821243811 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821633995 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.821164396 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822339297 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.821572268 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.821053626 seconds)
  done (took 45.45297203 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.822457288 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.821239484 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.822978828 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.821684486 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.821850821 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.822165513 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.822812765 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.821279691 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.821799417 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.822600193 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822675357 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.82240519 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.822161589 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.822129043 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822191527 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.822579742 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.823311395 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822650282 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821964564 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.822820991 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.822818941 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822240546 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.822855768 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824241416 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.822761661 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.82291707 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.822768877 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.82282962 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823382503 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.82292147 seconds)
  done (took 56.431452473 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.823150701 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.823489223 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.823270143 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.823504101 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.824023285 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.823038696 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.823485992 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.823226775 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.823780752 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.823679145 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.823920365 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.824435437 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.823035268 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.824704747 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.824620423 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.824484446 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.824113055 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.825305791 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.825274031 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.824924712 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.824894022 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.824983562 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.824722418 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.824949268 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.8255993 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.825520238 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.825390455 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.824885923 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.825800974 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.826502208 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.825766272 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.825338494 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.825471813 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.825891723 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.825878817 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.825955236 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.826901667 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.825091286 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.825785543 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.826512237 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.826731128 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.826697765 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.82717111 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.82682387 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.826438978 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.826897007 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.82594796 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.826633951 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.826714175 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.826510753 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.826482627 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.827010961 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.826023252 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.827261671 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.826864149 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.827788847 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.827706275 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.827243417 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.829053885 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.82621377 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.826608866 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.827302829 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.827650085 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.827531177 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.827036573 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.827140299 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.827027096 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.827692076 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.827623277 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.827710082 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.828101971 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.828571573 seconds)
  done (took 133.219701297 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.828249917 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.828382227 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.827808044 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.828142761 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.827959616 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.828064331 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.828107803 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827945728 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827974114 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.829244147 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82866732 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.82886516 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828332582 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828428925 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828330428 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.828164757 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.82766865 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829021838 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.829685765 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.829362653 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.828629748 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.828278739 seconds)
  done (took 41.987151876 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829078134 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.82858085 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.828909737 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.829339379 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829032791 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.82892908 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.829557788 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.828990197 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828304145 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829152323 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82903847 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8291752 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.829849821 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829743076 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829786387 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.830011883 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830049626 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.829877515 seconds)
  done (took 34.688814842 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.829963174 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.830358785 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.82946546 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.829519218 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.829967089 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.830528612 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82942825 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.830114585 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.831205329 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.830771502 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.831680633 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830699315 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.830678725 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829834157 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831218878 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.830036011 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.830901352 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830721664 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83119202 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83160552 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.830111907 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831438597 seconds)
  done (took 42.034721934 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830593949 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83129394 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831013754 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831820098 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.831258888 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.830607488 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.831116884 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.831189713 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.831406318 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.83102516 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830958157 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.831700456 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.831079509 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831936928 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.832077913 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830825925 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831457853 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.834396948 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832029122 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.832021234 seconds)
  done (took 38.393647166 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831674311 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832276119 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.831118224 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831907125 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83102279 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.832231239 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832294224 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.832746671 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.832142397 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.833266042 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.833106087 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.831307984 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834313801 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.831943938 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.832167278 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83276462 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.832269977 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831957776 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831559738 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831953456 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.833161859 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.833122563 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833587667 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.832205787 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.831967276 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.832880148 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83271201 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.832747224 seconds)
  done (took 53.071967706 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834643436 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.834266444 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.83427061 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.834914595 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.833996656 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.83318916 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.835120438 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.834564668 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.833939758 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.833760677 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.834471692 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.833983196 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.83418742 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.834347072 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.834718692 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.834410505 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834880879 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.834314663 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834920763 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834925079 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.835175692 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834692575 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.835007706 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834723396 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835526019 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.834413347 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835856618 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.834592675 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834786898 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.835257979 seconds)
  done (took 56.805308425 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.855964258 seconds)
    (2/2) benchmarking "in"...
    done (took 1.856421211 seconds)
  done (took 5.479939071 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.835830866 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834977723 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.836304115 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.835926196 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.836115562 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.835055567 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.835560975 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835434088 seconds)
  done (took 16.45251484 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.836954907 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.83856029 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.836771639 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.835323629 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.836228047 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.843456608 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.837186332 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.837301575 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.837826101 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.837097009 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.840157159 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.8389874 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.844350693 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.841110654 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.837301717 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.837671706 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837201502 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840665947 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.83859133 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.837568281 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839171847 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.83725349 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.836775652 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.836402032 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.836470765 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.838338136 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.845831958 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.837598116 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83868642 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.837612828 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.844142905 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.838440927 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.836553544 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.83866929 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.837570331 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.83785641 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.844814198 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.838238276 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.837523298 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.838200067 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.838852847 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.84099168 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.840842113 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.846228413 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.838513063 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.839072144 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.838781013 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.838568376 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.83833248 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.841631115 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.846961275 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.838148295 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.839276374 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.839733659 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.839874441 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.838306474 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.839214327 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.840823124 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.846953224 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.84643781 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.84181511 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.859532624 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.848902896 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.840030221 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.840077839 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.848518982 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.86226025 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.841652005 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.840833324 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.840434934 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.84819372 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.841019608 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.840694673 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.840254369 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.852037721 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.848682817 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.840371692 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.839550931 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.840639374 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.840299084 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841433851 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.840592304 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.840401044 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.841107904 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.849378649 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.864185762 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.840988832 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.840539531 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.841712717 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.842782228 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.844837238 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.84368235 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.840479136 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.84165397 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.842047986 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.844441847 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.841451369 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.841287689 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.840616551 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.851132677 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.843198737 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.842175349 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.844863116 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.849558645 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.842174662 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.841729946 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841219205 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.842245836 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.849309863 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.841877925 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.84139127 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.842495776 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.844205163 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.846730861 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.842906164 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.846094279 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.850624868 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.850609288 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.846186242 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.846609118 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.847106015 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.845533588 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.852162651 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.866582481 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.844288652 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.847566786 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.849073132 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.855562637 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.847386035 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.843445893 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.845771696 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.844890573 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.84421138 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.845331856 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.844387762 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.842907292 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.84492929 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.843389441 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.844753751 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.843606194 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.846692741 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.844677374 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.846204065 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.844996181 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.847539267 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.843687415 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.84641144 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.851873857 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.845516549 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.843900227 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.844530117 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.846114338 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.846612122 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.844688986 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.845036533 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.845240906 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.844094751 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.846335546 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.846439178 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.844016907 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.845182724 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.846653663 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.849662162 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.845421634 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.845452129 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.846398663 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844810248 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.845634854 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.847458574 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.847936173 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.84784205 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.846034263 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.850537787 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.847087212 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.851433838 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.84666914 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.846378553 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.84630709 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.849314272 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.857666259 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.84926372 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.855212077 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.846826823 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.853811743 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.847551532 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.850464211 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.846984921 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.846409437 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.846318936 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.847397682 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.847892334 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.850821795 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.86687301 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.85773429 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.848348013 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.849740019 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.85262951 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.852185989 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.852250689 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.848300314 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847132018 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.849743485 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.849624293 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.847311849 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.848596424 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.851132981 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.847681939 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.84787229 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.851115999 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.847829094 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.849116162 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.848320195 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.849059199 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.849380376 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.849670654 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.848103956 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.848564396 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.848904092 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.85763812 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.851249595 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.848757682 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.848669404 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85075405 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.849445656 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.849180789 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.848874075 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.85170791 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.849712923 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.850127281 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.856543639 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.850571116 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.849870343 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.849686752 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.850131866 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.853535084 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.849942521 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.851613466 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.858992698 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.852263651 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.850394693 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.855170477 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.850280707 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.850816526 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.850247215 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.85040381 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.850201778 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.851988044 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.849634059 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.850206421 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.856792564 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.852762533 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.850683136 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.851488512 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.853706129 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.851893127 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.851506246 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.850700758 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.85344991 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.857681903 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.856893883 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.852218134 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.85475803 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.852095814 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.851867707 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.855101766 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.850399693 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.863785189 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.860799065 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.8509895 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.85179549 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.850325643 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.852836235 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.852246754 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.852595904 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.859537613 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.853181636 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.853651047 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.856059117 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.851921551 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.851525116 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.858604494 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.853423252 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.854527088 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.854415471 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.85360404 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.853398845 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.853735741 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855081629 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.85339961 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.856660339 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.857283249 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.853102018 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.853113473 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.853526961 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.861354757 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.853982543 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.852754992 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86058112 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.854057016 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.853564466 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.853624115 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.852950367 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.852869996 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.853707978 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.853499465 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.85555232 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.853299751 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.856315379 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.863370734 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.856869292 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.864285578 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.854942529 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.863659388 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.853397706 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.854837224 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.855160474 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.857433086 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.860977952 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.853582728 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.854488455 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.86126086 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.857527291 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.855681309 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.858794897 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.854552535 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.853646743 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.853673621 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.856215028 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.859182237 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.858097818 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.855892664 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.855369943 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.854779252 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.855402592 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.85697613 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.85633853 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.855096189 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.855772139 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.855487496 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.856101023 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.854301545 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.855752149 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.854915695 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.856674429 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.856560553 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863082583 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.856686339 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.85775404 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.859710448 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.855999545 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.863442108 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.85614242 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.855335199 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.857223552 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.857404845 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.858814222 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.856202273 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.855625748 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.856836565 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.858233713 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.85786684 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.867985069 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.863875344 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.860522941 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.858505677 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.856365253 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.856472608 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.865710069 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.880867745 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.856842968 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.859214467 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.862200157 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.863548617 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.859100231 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.862626117 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.860660469 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.865404933 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.858337992 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.856336699 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.860029206 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.870351399 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.857785629 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.858215694 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.858367501 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.861886988 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.861066869 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.859503205 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.859284167 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.860897763 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.859708215 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.868855541 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.859623217 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.86054202 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.859116464 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.860185204 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.858726665 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.861540772 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.859663992 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.859921248 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.859307027 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.858535315 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.859819857 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.863181271 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.85982832 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.861603372 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.86740389 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.858517336 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.859517535 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.861249189 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.858534546 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.861278195 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.859093233 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.86019052 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.861417789 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.86080723 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.861404973 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.862580219 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.867782026 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.860427858 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.860751668 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.860345233 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.862996515 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.859933967 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.859937491 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.860891179 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.867613488 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.863101549 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.871464196 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.870411885 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.860935533 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.863191009 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.867609078 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.868150675 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.861351174 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.860922582 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.861841259 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.862768331 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.862657891 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.861328425 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.861262189 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.861956222 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.866496299 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.862778726 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.862058761 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.863527252 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.862425578 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.863174897 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.86186036 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.866420696 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.862491855 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.862640505 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.861137461 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.861281837 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.86222641 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.862840006 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.862278423 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.862746221 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.863660737 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.86391755 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.866962021 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.863859538 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.864142026 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.862932847 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.862479127 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.861872224 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.862521945 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.863123573 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.863084044 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.865254705 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.870862979 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.862799453 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.863292041 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.864742301 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.865994069 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.862641214 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.861679654 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.863221149 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.866633111 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.870863925 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.863999367 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.864062976 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.863365737 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.864357302 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.868730126 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.863893065 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.866974608 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.862983998 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.864072021 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.864863304 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.866781615 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.872834409 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.867881507 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.866922079 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.875714788 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.868374287 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.865758986 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.865062354 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.865301795 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.864889925 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.865995137 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.867764296 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.864857485 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.866405652 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.864955586 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.866163479 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.864978774 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.866876493 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.8658699 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.865482707 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.873110995 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.87473595 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.874199474 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.866479769 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.865817491 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.865537595 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.868404087 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.878200085 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.865827584 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.86563077 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.865816002 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.865680978 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.86722375 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.87247974 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.874101278 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.869265076 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.868843444 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.870349402 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.883778919 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.868008319 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.875471692 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.897254027 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.868179423 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.8661357 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.866955205 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.867486186 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.867091296 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.870858669 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.865865969 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.872659907 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.867542664 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.866976604 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.87784336 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.866456844 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.867871736 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.867599572 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.869403326 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.872154645 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.866647561 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.874012299 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.868243357 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.869092687 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.868472966 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.871023063 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.868494802 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.868312371 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.868447238 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.869376338 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.869340151 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.867860449 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.876446583 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.867969714 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.868546969 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.880273839 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.880390814 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.868011057 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.869542235 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.86718871 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.873249122 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.870613687 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.868728164 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.871624542 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.876429947 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.871436046 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.880434194 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.869279684 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.869107654 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.869305905 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.870075326 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.868797166 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.88099795 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.881083372 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.869445336 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.870647912 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.8750339 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.870411864 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.876041034 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.875811117 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.870392617 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.870633724 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.872286505 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.871777327 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.871022318 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.871052227 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.87314725 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.87889699 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.869655748 seconds)
  done (took 1107.697996437 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.871377392 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.870225806 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.869970404 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.871549493 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.870579306 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871133385 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.870283799 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.872468217 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.872132169 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.871852726 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.871587826 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.870860872 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.870751316 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.871101661 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871748056 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.872193793 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.870482804 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.870825802 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.871364621 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.870915848 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.870140221 seconds)
  done (took 41.095605387 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.869686411 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.870013326 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.870051346 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.869347842 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.870626913 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.868733854 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.869564854 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869384162 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.869392139 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.869395552 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.869294251 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868941091 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.86997194 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.86966287 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.870139419 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.869659654 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.869004025 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.868181896 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.871193655 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.870749111 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.870148924 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.868764534 seconds)
  done (took 42.934671641 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.86771216 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.868548285 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.869274247 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.867067394 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.867266214 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.866437684 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.866601227 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.869197769 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.867337752 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.868340821 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.874039371 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.877081227 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.869950821 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.870021199 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.86270607 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.860796488 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.01061328 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.861444808 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.861915555 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.862624284 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.861754002 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.869106966 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.862657905 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.861428922 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.862245077 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.861640322 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.862460268 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.862070864 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.862767887 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.863887932 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.866245379 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.862143608 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.861469778 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.864513471 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.862941876 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.862854191 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.866538826 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.861856784 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.86324127 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.86310684 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.872750301 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.886622894 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.862602481 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.861458075 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.871399568 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.863404728 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.862290374 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.864228697 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.870951603 seconds)
  done (took 93.371097728 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.86208767 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.863078135 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.864992833 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.862525652 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.86249198 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.864211519 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.863972661 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.862138211 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.862337249 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.861087413 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.862907908 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.863665585 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.858790582 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.859294039 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.859391198 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.859072442 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.858638324 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.858190097 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.855133398 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.855114135 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.854549352 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.854616377 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.855502521 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.854170346 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.854439328 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.853070678 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.855035549 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.854190406 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.853613781 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.854127856 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.854031686 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.853854349 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.8539527 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.855450734 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.853964917 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.854746278 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.855242914 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.85486855 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.854512594 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.853809523 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.853746448 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.853606202 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.856752437 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.85398601 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.854657136 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.853993837 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.854440236 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.854702197 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.855187288 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.854820061 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.855061071 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.855272335 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.855748943 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.855757633 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.854993173 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.85471417 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.854767723 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.854802421 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.856090201 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.855784864 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.85604624 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.854987218 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.854751129 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.855290798 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.854900753 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.855362856 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.854499071 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.855293683 seconds)
  done (took 128.044061733 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.854979541 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.855972106 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857952385 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856379241 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855505423 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.855549321 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.858051925 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.857101356 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.855802163 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.854954621 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.856474418 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.855666507 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.857128274 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.855792257 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.855168688 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.856076829 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.855855992 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855469441 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.857003132 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855775075 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.855283213 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.855237884 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.856918116 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.856348044 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855907962 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.855259107 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.855643787 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.856435098 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856074 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.859232605 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856045652 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.855671151 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.85579225 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.855943408 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.855236529 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.853832446 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855394335 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854612671 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.856358222 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.85595437 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.854128718 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853365849 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852625864 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.854047912 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.853088123 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.854731127 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.852230214 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.852701106 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.854272741 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.853638963 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.855219911 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852868245 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852591216 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.853817476 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.854349153 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.853152058 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853532036 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852543239 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852895114 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.853139177 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852368552 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.855113901 seconds)
  done (took 116.805255303 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851312137 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.852061519 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.852970137 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.852604306 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.850560802 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.850915707 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.850467924 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.850566571 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.853005163 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.850885315 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850488721 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85033041 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851457789 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850598669 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.851970503 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852081832 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849688795 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850519744 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85048327 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.850805741 seconds)
  done (took 38.807744565 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.84984002 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.850254759 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.850631295 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853236196 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.851701505 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.850048804 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.850342656 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851831639 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85023082 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851438375 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.850410046 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.850785799 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850390928 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.852543099 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.851719587 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.85222992 seconds)
  done (took 31.400480839 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.851787787 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.850983894 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.852333554 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.851941909 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.85078251 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.851628731 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.850115659 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.85092179 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.849513748 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.851561695 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.850764911 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.850403324 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.851122227 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.850253154 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.851777566 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.849750168 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.851033758 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.850002519 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.851037542 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.850999212 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.850406041 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.85149352 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.849991168 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.850047138 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.850468352 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.851520731 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.850022019 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.850905247 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.850147149 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.850937144 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.850642898 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.85078234 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.849555608 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.852228729 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.84953348 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.850822057 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.852092811 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.849468367 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.850272148 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.849160472 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.851828617 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.852209003 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.849766637 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.84954424 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.850117729 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.850200444 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.851091403 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.850203669 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.849449103 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.850421929 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.849304619 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.850494077 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.851436526 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.85122076 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.849431649 seconds)
  done (took 103.570060157 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849259092 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.85114169 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.849755885 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.850470154 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.849683171 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.850722814 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.850077404 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.850826893 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850365801 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.850198754 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.851514078 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.850981795 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.851181183 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.850144436 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849752161 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.850042784 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.850286243 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.85109429 seconds)
  done (took 35.088180868 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.850832524 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84975458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.849470675 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.849840107 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.851628028 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849364016 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849845814 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.850987899 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851789576 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.850626882 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8517993 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.850082118 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849310568 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.849414704 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.84919099 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852238508 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.850439846 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849154289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850126156 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849879669 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.849828919 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849915977 seconds)
  done (took 42.489707965 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.849145298 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.848453865 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.86505073 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.867179237 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.867922634 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.87797322 seconds)
  done (took 12.955499492 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850514366 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851112325 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849736722 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850478688 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850745436 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849191864 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850762345 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84915706 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849453701 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849909283 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849852767 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85035855 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851125994 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850057737 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849519064 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850788667 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850293193 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850132089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849157043 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849444083 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850585833 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849877392 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850673551 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851177055 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849911524 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848220171 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850328146 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85190875 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850663491 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849292878 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848950801 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849823311 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849167214 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84965973 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848941718 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848668145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849165396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849986265 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850292099 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850772108 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848512605 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849778646 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849540913 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850257843 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850432614 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848297988 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849551044 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850011883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849938086 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850223817 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85082149 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849568529 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849390608 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850407485 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850865405 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851396344 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850236826 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850374051 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849030144 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851133352 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854592553 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850389689 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850023487 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851065345 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850685793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851352613 seconds)
  done (took 123.890548849 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851387732 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.851410157 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85212141 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852215053 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852053872 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851038097 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85153062 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852380561 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851263456 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853914502 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850971985 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852709042 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852869015 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851855127 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851622644 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852770411 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85156474 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852173129 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851585575 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852035307 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851511811 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853032538 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852675676 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853673601 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851337196 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854893825 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852687447 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85292263 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85295592 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851805366 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853514539 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853958274 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852033533 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.852256197 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852516491 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85290279 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85209523 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853931569 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852470961 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852583167 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853006887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853579081 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855065982 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853336403 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852512717 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853480023 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853512388 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853114843 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852966171 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853291722 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855401908 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853340372 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8543773 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854281646 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855361027 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854562566 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855364032 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85376385 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858065698 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853602929 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854051892 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853572955 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854209768 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855344288 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854318407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854761962 seconds)
  done (took 124.090313196 seconds)
done (took 2568.024276312 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.881991847 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.861387982 seconds)
  done (took 15.528254412 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.016992566 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.969611121 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.855374994 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.86381262 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.854705862 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.878455532 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.871899977 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.856160771 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.854693423 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.855127999 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.85435925 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.039752564 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.909134928 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.856428082 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.857155526 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.948679221 seconds)
  done (took 52.130860551 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.860302386 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.859816011 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.874715742 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.861495877 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.861549724 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.87245736 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.888866528 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.863847296 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.895861441 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.873026301 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.929474522 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.87096494 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.86401511 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.912925229 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.872791992 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.875496935 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.953653295 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.937349054 seconds)
  done (took 35.715967624 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.937567579 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.867101605 seconds)
  done (took 10.60028023 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.864826476 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.876613335 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.857961938 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.855986947 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.868463582 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.864969517 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.889059871 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.897170577 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.860480125 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.862794527 seconds)
  done (took 70.488868271 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.8630128 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.862640808 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.86131345 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.859025893 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.858291737 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.861096308 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.858317494 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.858170358 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.556308581 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.899559149 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.872557852 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.868295477 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.859630661 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.86034423 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.858623875 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.883452552 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.969170212 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.861253383 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.858327306 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.865218306 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.859701073 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.917779376 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.875344643 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.863232239 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.892868544 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.551513159 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.87060522 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.870557704 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.967959349 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.85936748 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.860112832 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.071852506 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.864636961 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.317097185 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.174032966 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.865319515 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.871962099 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.869079619 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.85862734 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.976659499 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.863095144 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.865574058 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.757147237 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.147829113 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.957820929 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.905768089 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.199113625 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.866199706 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.861906346 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.896423579 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.864919743 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.862862821 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.880652675 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.378092073 seconds)
  done (took 132.451943194 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.860803789 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.231463778 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026364601 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.862957228 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144798177 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06593406 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.861962484 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906754039 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.862102989 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.091345394 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.115221865 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96404302 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.866191343 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.860267442 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.863227064 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.86025116 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006310515 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.928577044 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.863892439 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.860855538 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88780251 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097828196 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.981917034 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.863720144 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.887772866 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066194525 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.981077858 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.9621739 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.637902818 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.860856729 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.922365845 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.864141603 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.858774659 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.860959372 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.015767841 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.954596628 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943679909 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.863405113 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862103918 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.861413863 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.603470844 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061184533 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.957558876 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.985516593 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.111415467 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065107596 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.640221522 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.861365565 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.597027822 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.023532298 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.087030291 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.094015285 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.981136606 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.866719463 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.195463567 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.862448639 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.862044488 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106877319 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081469877 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.959883053 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.864216451 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.863324927 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.862157556 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150093777 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.865058226 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.957027976 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.865040209 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.864444979 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.959467754 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.958814845 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.092762798 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075582341 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.892618362 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.201085796 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.375004926 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.106061191 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.927853419 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112470298 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.866821345 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.864506647 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942862778 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.700228633 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.115456949 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.142371384 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.106939853 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897765156 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.577228035 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.864277096 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.085988978 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.082233667 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.11289298 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.110776828 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.102038109 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.184301372 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.863498221 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.86311087 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.103285405 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98334203 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.867166204 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.209922376 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093750076 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.415433385 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.890683472 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.167856915 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993424416 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.867741233 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.49018329 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.863459339 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.086016271 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902079167 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.865971336 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.863873753 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.08234883 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.832735576 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866548014 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.753898196 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.925973782 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.868441453 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095588165 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.866975931 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125447176 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.869379212 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096057048 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.363381092 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895292815 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.038691046 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.110998542 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.868743289 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.10659115 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.101788657 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981434267 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.136915142 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.763564604 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.866142415 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.149699743 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.86842706 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.865841735 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.032748076 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.86686633 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.008229032 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.868724004 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145336103 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885656121 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09809233 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872772767 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.122991414 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.898924197 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.91639295 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.868974644 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996298584 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871432462 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.701399559 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.023798907 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873997531 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.869376577 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.434276068 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.869616487 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.013755453 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.090206759 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889770296 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.939904783 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.530341303 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.867438579 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944989176 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890707308 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.258254978 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.869157149 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.119690459 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.870147041 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.869442526 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.867811301 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.153133854 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.104215078 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.871241671 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.8698747 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.772123791 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.868992916 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870093518 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.048578391 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.84657527 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.871681038 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068135247 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871994154 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.997454247 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.870481786 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.935529329 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.203659843 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.869084376 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.868313121 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.871745297 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.871457771 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.87393641 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.075990939 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.894410052 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.384762671 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.005744755 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.134173578 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.179377126 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.108833738 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.911183543 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.871925662 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.122941781 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.870944523 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.931591585 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.87248725 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.889962431 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097936938 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.874563666 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.075099479 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.137764597 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.723485682 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917712055 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.874128073 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872738779 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.870536116 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.010473382 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955403028 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.873202862 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.872596634 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.98577508 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.991011836 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.081145527 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.87190137 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.993451252 seconds)
  done (took 902.951758815 seconds)
done (took 1221.656270266 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.87055954 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.874316662 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.875018311 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.878442815 seconds)
  done (took 29.301138993 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.871200843 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.872856342 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.874286435 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.873326324 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.872475768 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.87299982 seconds)
  done (took 13.04005549 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.945298456 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.876229864 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.874839994 seconds)
  done (took 21.500289054 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.946262766 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.288063449 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.012279743 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.30091968 seconds)
  done (took 10.351219731 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.873656643 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.874835782 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.873123802 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.874087274 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.875053521 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.873397817 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.875207582 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.874876471 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.875081826 seconds)
  done (took 18.674870307 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.515214978 seconds)
done (took 99.186933524 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.956761462 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.968233394 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.94329324 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.895736754 seconds)
    (5/309) benchmarking ("sort", Int8, false)...
    done (took 4.812400854 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.011900575 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.872896172 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.470158461 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.988909985 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.933961349 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.889756142 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.215536126 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.52771402 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.638079488 seconds)
    (15/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.435992574 seconds)
    (16/309) benchmarking ("sort", Float64, false)...
    done (took 5.657640026 seconds)
    (17/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.911569093 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.187381396 seconds)
    (19/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.522871013 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.038356463 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.119101341 seconds)
    (22/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.878267426 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.254951962 seconds)
    (24/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.253327092 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.055946673 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.901623994 seconds)
    (27/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.029617185 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.907484586 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.262351039 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.0790716 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.878571506 seconds)
    (32/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.415620305 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.193972423 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.967587583 seconds)
    (35/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.956574677 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.173616289 seconds)
    (37/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.903855321 seconds)
    (38/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.112916451 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.623955485 seconds)
    (40/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.963191664 seconds)
    (41/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.344857018 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.9069502 seconds)
    (43/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.197025729 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.877041596 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.028418236 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.953619503 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.969229719 seconds)
    (48/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.165314484 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.189461361 seconds)
    (50/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.859260984 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.312557961 seconds)
    (52/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.958028991 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.881125057 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 2.107500109 seconds)
    (55/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.301567312 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.100139073 seconds)
    (57/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.038391374 seconds)
    (58/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.631813777 seconds)
    (59/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.964611442 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.533455155 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.059134651 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.885522952 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.189562914 seconds)
    (64/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.752642737 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.88101471 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.556529088 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.041745602 seconds)
    (68/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.975654719 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.314109631 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.876788708 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.378233869 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.976005591 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.175843616 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.963358824 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.070751429 seconds)
    (76/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.943566706 seconds)
    (77/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.01323683 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.181887845 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.016006024 seconds)
    (80/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.1886269 seconds)
    (81/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.642204702 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.896207069 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.003970919 seconds)
    (84/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.34508502 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.879412257 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.261816391 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.018974763 seconds)
    (88/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.884532613 seconds)
    (89/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.908341417 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.261526645 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.008520768 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.531338075 seconds)
    (93/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.221627433 seconds)
    (94/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.49757881 seconds)
    (95/309) benchmarking ("sort", BigInt, false)...
    done (took 6.966918401 seconds)
    (96/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.330146375 seconds)
    (97/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.065867814 seconds)
    (98/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.194582825 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.882966532 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.899256789 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.878390397 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.906304092 seconds)
    (103/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.25079953 seconds)
    (104/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.028560863 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.17708029 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.087860485 seconds)
    (107/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.131064514 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.058026253 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.019840035 seconds)
    (110/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.994840216 seconds)
    (111/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.879613657 seconds)
    (112/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.42528109 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.014483375 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.202417309 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.902794841 seconds)
    (116/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.149562737 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.198265511 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.221480041 seconds)
    (119/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.037524226 seconds)
    (120/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.579802463 seconds)
    (121/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.27903237 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.881138618 seconds)
    (123/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.886263731 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.983837867 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.271830235 seconds)
    (126/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.913249497 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.008651903 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.123978475 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.12863227 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.883338512 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 4.138405747 seconds)
    (132/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.406421109 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.25796481 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.974655035 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.211656726 seconds)
    (136/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.987175709 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.856598088 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.205929306 seconds)
    (139/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.272493881 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.906236092 seconds)
    (141/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.992738219 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.881920669 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.430744723 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.389974329 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.901773186 seconds)
    (146/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.010708399 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.635918315 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.199871819 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.978875812 seconds)
    (150/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.979570596 seconds)
    (151/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.962447468 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.886138264 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.143777027 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.901622543 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.882348707 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.063707301 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.195994541 seconds)
    (158/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.1118933 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.275769501 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.087839111 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.954288919 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.037333049 seconds)
    (163/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.658507018 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.885159311 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.902037186 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.886759156 seconds)
    (167/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 3.826390362 seconds)
    (168/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.908016147 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.884303145 seconds)
    (170/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.974651929 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.00827746 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.882515048 seconds)
    (173/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.087883258 seconds)
    (174/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.011395832 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.90481628 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.903838218 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.364921238 seconds)
    (178/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.965915118 seconds)
    (179/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.964757744 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.884190729 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.013173097 seconds)
    (182/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.895635069 seconds)
    (183/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.907981233 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.884858377 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.5630579 seconds)
    (186/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.132233944 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.884550089 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.756186972 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.044995667 seconds)
    (190/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.20287425 seconds)
    (191/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.145629692 seconds)
    (192/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.283318085 seconds)
    (193/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.331031901 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.772699239 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.916813436 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.041784268 seconds)
    (197/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.978730988 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.8888102 seconds)
    (199/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 4.349885801 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.985564502 seconds)
    (201/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.534193589 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.064328779 seconds)
    (203/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.000105155 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.956153482 seconds)
    (205/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.353271921 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.213099454 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.707307537 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.18634975 seconds)
    (209/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.913726682 seconds)
    (210/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.885535726 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.765514307 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.917785089 seconds)
    (213/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.139873599 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.116354332 seconds)
    (215/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.970698094 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.888850592 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.863109785 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.582169153 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.193284111 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.887051031 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.966341199 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.018009433 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.886105357 seconds)
    (224/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.969320441 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.767882461 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.281452118 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.153180148 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.059571002 seconds)
    (229/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.296543488 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.887774732 seconds)
    (231/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.988757201 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.074466784 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.914650139 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.888237427 seconds)
    (235/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.946402198 seconds)
    (236/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.104054107 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.935600195 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.886089308 seconds)
    (239/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.294290459 seconds)
    (240/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.18588097 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.956397856 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.487083563 seconds)
    (243/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.978651532 seconds)
    (244/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.990124458 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.898959385 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.889126434 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.906617281 seconds)
    (248/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.376314628 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.226455583 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.148134734 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.891273507 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.080550326 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.999586993 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.204373665 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.077141938 seconds)
    (256/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.317881482 seconds)
    (257/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.204638804 seconds)
    (258/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.104504079 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.519552693 seconds)
    (260/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.122555188 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.110153612 seconds)
    (262/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.025249031 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.636367827 seconds)
    (264/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.099224261 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.997279227 seconds)
    (266/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.193558017 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.895988437 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.276819511 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.891457063 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.077082565 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.019449873 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.907283848 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.015983645 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.99480873 seconds)
    (275/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.915261307 seconds)
    (276/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.019358505 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.889337494 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.969123137 seconds)
    (279/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.520528311 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.194776292 seconds)
    (281/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.007063957 seconds)
    (282/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.156376495 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.894796002 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.890257867 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.953128668 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.107515024 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.155457986 seconds)
    (288/309) benchmarking ("sort", Float32, false)...
    done (took 5.55249783 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.876342979 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.198699689 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.714229316 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.031651972 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.22714107 seconds)
    (294/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.899243514 seconds)
    (295/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.041275477 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.76679534 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.917166922 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.921016758 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.33257146 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.250244532 seconds)
    (301/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.587724019 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.903117781 seconds)
    (303/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.890891337 seconds)
    (304/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 3.947978932 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.910076295 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.820843231 seconds)
    (307/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.906525847 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.685956713 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.303509862 seconds)
  done (took 1016.228076747 seconds)
done (took 1018.09856449 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.921296283 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912303317 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.894801753 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.91632551 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.006298497 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.935798779 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.908052115 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.897480787 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.943095374 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.946002786 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.894675539 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.934926255 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.894976506 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.89408013 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.894053506 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910182169 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.201029252 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.924092036 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.912695533 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.907053223 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.911643486 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.892022747 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.945710857 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.935918291 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.898514072 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.9009089 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.899558174 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.915173683 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.006857022 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.900163588 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.901081476 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.906495971 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.201838296 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.923103719 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.895139809 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.915969834 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.90877834 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.90766698 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.902717303 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.928360774 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.343346169 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.901929729 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.897593468 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.898246562 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.899271961 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.904537077 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.896732666 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.907105265 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912481977 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.910821652 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.340090558 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.919509278 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.901685534 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.898180483 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.911124845 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.896645431 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.902009234 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.913797858 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.917178352 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91412207 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.192458256 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.934795743 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.902874597 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.91554837 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.9061515 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.373628114 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.902985136 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.905588795 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.343013946 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.913472392 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.374836322 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.915416182 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.900968726 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.913107042 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.929282297 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.20421729 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.923426936 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.899058694 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.909560072 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.896995092 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.910726483 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.913305028 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.905113242 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.902110319 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914776671 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.942113379 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.914378381 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.900032293 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.913103301 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.920027491 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.907486169 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.912753446 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.90510765 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.899625465 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.913602447 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.905817947 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.903024832 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.90273165 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.904906506 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.914286566 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.342833397 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91948035 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.899241981 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.899780033 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.902813744 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.915086212 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.34217032 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.906603882 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.924678806 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.952010572 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.902832931 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.194920247 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.932223727 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91739255 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.914411951 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.904373401 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.898949281 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.196767492 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.369633363 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.920312946 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.90383865 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.89816679 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918694268 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.903846538 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.898951887 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.208117089 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.931765826 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917171123 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.021702662 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.915614427 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.934923977 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.900725455 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.908544023 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.946442253 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919211534 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.93533516 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.906419834 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919060922 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.919401351 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.901769692 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.914234422 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.916249615 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.902781735 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.910643758 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.899145597 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.948526619 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917859365 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918027208 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.927745663 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.026192965 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.901109734 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.197866849 seconds)
done (took 298.678992682 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.978730828 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.899479483 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.018409371 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.903107482 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.990243142 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.975490633 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.903112114 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.903753171 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.901663263 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.404669085 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.902136725 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.907691071 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.900533693 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.902826042 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.9697893 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.905433651 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.902850444 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.188287372 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.902507532 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.981983712 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.900587745 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.903732734 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.905062659 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.410578569 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.903449002 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.90381555 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.982405317 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.904458161 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.197254497 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.902923243 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.903168558 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.203246061 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.981512755 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.916546485 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.91056225 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.911056594 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.991886648 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.914604213 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.970026725 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.971307365 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.020249308 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.937542159 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.90273635 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.904809925 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.908638785 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.905436744 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.904984739 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.937550759 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.900545608 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.91261068 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.189463926 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.910670854 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.91129269 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.903685421 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.906841361 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.918375669 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.906492156 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.905633564 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.985185608 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.906074328 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.974173369 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.412858301 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.406199195 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.906640055 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.904766826 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.906282072 seconds)
  done (took 186.954957113 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.971356158 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.978094439 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.969558554 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.911113165 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.95458154 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.97359691 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.91542927 seconds)
  done (took 15.507475579 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.912966489 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.907122965 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.957374804 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.955574139 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.905535144 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.084400705 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.917654919 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.911890938 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.931813844 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.904305994 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.540373606 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.95752371 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.914044708 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.909292767 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.918531004 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.964539732 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.908320844 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.905823196 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.016179445 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.056144491 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.911971011 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.915102784 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.933689963 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.91947606 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.908235381 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.90762424 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.907265204 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.915685583 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908771397 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.908751525 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.908301181 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.957821784 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.909814828 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.907280225 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908957822 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.908443067 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.907162777 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.91081259 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.909195997 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.911276985 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.909141519 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.907575445 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.909626503 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.906617011 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.908254312 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.93233438 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.907760795 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.908828648 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.909251685 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.909120811 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.934288099 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.908524488 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.910335237 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.915323364 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.952585558 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.917372015 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.908271041 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.907436884 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.909684424 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.908841214 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.908266245 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.057232277 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.960299485 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.911093646 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.959458816 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.060358627 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.909566049 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.908427304 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.913418361 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.001989406 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.910365018 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.96081607 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.911516546 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.023133251 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.909971178 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.087680107 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.932335739 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.91339064 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.914476617 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.909056949 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.916396783 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.912043828 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.911820861 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.916499703 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914784501 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.910088941 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.910237023 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.910154122 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.915926649 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.911129517 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.96155091 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.910065598 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.909301258 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.049840895 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.911435268 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.019980659 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.940735184 seconds)
  done (took 209.770662307 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.916060948 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.918599174 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.913198076 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.926242584 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.910992814 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.912859856 seconds)
  done (took 13.337981777 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.914301631 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.915289849 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.913128627 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.90911927 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.908664168 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.912639043 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.911208069 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.914416326 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.913501124 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.913405631 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.911190827 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.913397976 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.912462106 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.911541396 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.912459403 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.912842856 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.91284647 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.912778854 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.911980072 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.912103554 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.047468875 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.911182045 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.91357213 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.915149196 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.914982659 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.909908228 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.923968012 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.914113936 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.912264624 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.921031004 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.915388086 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.91011962 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.91475274 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.918624362 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.915777606 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.915901371 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.916481635 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.913400513 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.913298601 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.911793959 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.911769898 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912563432 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.915104905 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.91465782 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.91583449 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.918920454 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.916807567 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.924559222 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.913570633 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.915009941 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.914831313 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.913726263 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.912446191 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.91241146 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.91954213 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.919128483 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.918036341 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.914736623 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.915370532 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.916179328 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.915953204 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.912585097 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.915601095 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.918281385 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.923042826 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.913930201 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.916698397 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.917756027 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.91401659 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.913097506 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.915797823 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.913451591 seconds)
  done (took 140.825936908 seconds)
done (took 568.246946976 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.517243935 seconds)
  done (took 9.360183652 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.997915599 seconds)
  done (took 8.844968146 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.716735295 seconds)
  done (took 10.562099858 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.936393282 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.936229227 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.916799271 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.918615251 seconds)
  done (took 29.559829452 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.072167884 seconds)
  done (took 8.915227059 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.923664107 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.913009971 seconds)
  done (took 15.746810742 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.068229922 seconds)
  done (took 8.912760217 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.305472401 seconds)
  done (took 9.168187232 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.923418202 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.926184627 seconds)
  done (took 15.714819599 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.916773171 seconds)
  done (took 8.76140933 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.623294228 seconds)
  done (took 9.550337148 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.918391683 seconds)
  done (took 8.780041598 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.914830527 seconds)
  done (took 8.761321484 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.917308003 seconds)
  done (took 8.758083902 seconds)
done (took 163.24033041 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.921861137 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.917010319 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.912864965 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.912785963 seconds)
  done (took 29.505082532 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.952874307 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.952720648 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.95988023 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.950206202 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.941703174 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.941906247 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.951393583 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.951332484 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.940671381 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.945743432 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.949139586 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.958111754 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.949563753 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.959666793 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.958228064 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.946543641 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.951726745 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.949687474 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.941302378 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.960499504 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.950337927 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.950916386 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.916283597 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.91754468 seconds)
  done (took 48.593974198 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.100836216 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.981912797 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.070657835 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.960219101 seconds)
  done (took 9.956553069 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.916705658 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.980178926 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.966193969 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.969627677 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.002707905 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.019980963 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.968573731 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.124880206 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.030624305 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.042370192 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.923857176 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.936793551 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.939622042 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.965130438 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.018356608 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.91621537 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.916425406 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.032796509 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.978772192 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.130404019 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.919157284 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.970803886 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.012601856 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.970398468 seconds)
  done (took 49.496371726 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.91891386 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.926553295 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.924726814 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.915485452 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.918471664 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.918689763 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.92588024 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.921819915 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.941409249 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.920106628 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.917729404 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.922467205 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.924153899 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.920285242 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.917806388 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.930955249 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.932278247 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.917454327 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.921830363 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.925655847 seconds)
  done (took 40.309626807 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.915990876 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.766197744 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.261561841 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.167076868 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.919006907 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.916498163 seconds)
  done (took 31.792361672 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.930625843 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.923311606 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.919172256 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.977169542 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.057111494 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.926930343 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.919729872 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.929450602 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.96471023 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.984017483 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.938289614 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.946665261 seconds)
  done (took 25.263013247 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.927436371 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.920069574 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.925439608 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.933363671 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.929602346 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.93046698 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.92695756 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.91972566 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.935196095 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.942891221 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.930258872 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.930703554 seconds)
  done (took 45.004011483 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.136358304 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.143807169 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.195438719 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.414297537 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.913818741 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.818241256 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.560904234 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.638839448 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.221848107 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.901510728 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.8885263 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.825338884 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.163563228 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.922892849 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.180844566 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.850504753 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.923963885 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194283169 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.92543843 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.922160863 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.205998907 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.981246719 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.136481767 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.970861491 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.138953681 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.3003648 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.166635181 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.182322715 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.266134505 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.982606352 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.026786134 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.967823998 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.931529178 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.934295025 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.924875921 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.93519369 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195955142 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.922947886 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.928731373 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.921127711 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.850148104 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.206917916 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.031990664 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.339855994 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.054993344 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.165447929 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.927539583 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.006871057 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.986308133 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.136736577 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.024268726 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.136602718 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.849233072 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.221859929 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.040816148 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.925808512 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.928100204 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.623627362 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.164062345 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.005714118 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.208650618 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.030571207 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.926809811 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.012389788 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.925563072 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.037164003 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.114676533 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.930717839 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.92424397 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.930257874 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.02179266 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.137469431 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.92901878 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92678174 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.942572129 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93031342 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.271291797 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.380734243 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.919706361 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.484713904 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.30366835 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.894733153 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.297038908 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.970628765 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.203882104 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.140982982 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.005884066 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.169310466 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.791460851 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.935765839 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.732462336 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.006649222 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.988346945 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.925012753 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.004681124 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.188035878 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.036286779 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.930409548 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.852588621 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.939674029 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.129806416 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.29710328 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.980656698 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.925849153 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.930003648 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.929264165 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.928163096 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.945263228 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.945388312 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.849539174 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.21105914 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.04542878 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.181867303 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.921209436 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.621735197 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.194097872 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.060262356 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.545207113 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.063889436 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.914533891 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077361384 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.93484569 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.937828101 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.120063459 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.34544099 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.019746587 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.172942172 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.963154669 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.959711131 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.938048762 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.012543168 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.159718 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.929981348 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.183228496 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.180354861 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.60810384 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.957366166 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.004102297 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.94089378 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.146123526 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.01348643 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.467207586 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.161548353 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.403252529 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.916390116 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.705839464 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.148682931 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309014684 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.947279404 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.022194359 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.966135837 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.633228155 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.85824031 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.938057412 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.264130446 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.972049476 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.032732185 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.933772919 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.935432105 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.941979743 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.015848713 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.007688019 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.007720585 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.858459619 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.937265058 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934270329 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.934761487 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.475874758 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.574440604 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.222377808 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.934792479 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.006028632 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.93428289 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.524940141 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.937958829 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.118764391 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.945626562 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.652713588 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.961658374 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.155384391 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.320562497 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.052809277 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.934609952 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.933901333 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.635879404 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.94204344 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.633646432 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.215443611 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.935013789 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.396475351 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.996389023 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.014477685 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.949185421 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.937548399 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.938293168 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.937205135 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.137724801 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.45006671 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.220752654 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.272825367 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.017015972 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.202564833 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.127395835 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.308521193 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.615997832 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.450613809 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.161956301 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.938357999 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939126776 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.514915061 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.940686144 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.152509061 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.13902894 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.20984445 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.237902021 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.352910638 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.940712567 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.951504289 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.178338156 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.936958541 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.371124181 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.955506655 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.248923426 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.740463986 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.197106052 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.004598068 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.947910413 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.581079276 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.069267311 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.890964896 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.063642566 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.862939137 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.63449853 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229340284 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.212976369 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.921796128 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.271464687 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.234725034 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.155109505 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.560177644 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.932604129 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.994101719 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.021065797 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.937026342 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.388124524 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979802318 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.995681658 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.942752724 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.937855764 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.939521996 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.618271463 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.016693 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.072059877 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.646656597 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.347761268 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.848282162 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.206119681 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.997279906 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.389015058 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.988847143 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.151793523 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.944083593 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.407050615 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.98798472 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.211670026 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.900264147 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.152416611 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.154976585 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.966187416 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.944939951 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.865650898 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.804717755 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.944232713 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.03244426 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.847307608 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.941661839 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.227326063 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.461069423 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.97800611 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.942249227 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.225125079 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.306706516 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.114585999 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.95137618 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.153307661 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.070719885 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.858711938 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.429494462 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.52383055 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.640665387 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.951789281 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.142459091 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.234338402 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.133475725 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.978757658 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.013249233 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.203608871 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.921686868 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.941199459 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.460496711 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.038735763 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.182836839 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.269174802 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.401379203 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.280338377 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.175386967 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.930677678 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.157534893 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.307339364 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.189024858 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.881016896 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.031868037 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.156842399 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.219501908 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.824265505 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.65160624 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.183750457 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.946565017 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.870039112 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.15151087 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.444185795 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.305992978 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.483278428 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.044817127 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.972301983 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.42973008 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.961061943 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.877708774 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.944828303 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.896957992 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.155287854 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.038001376 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.984938883 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.500743439 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.167532729 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.32834261 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.09504205 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.984933209 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.868072584 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.639894224 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.893239995 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.96422515 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983488579 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.014398021 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.945907572 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.146910896 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.382739121 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.999609263 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.482737609 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.148003864 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249357428 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.210277412 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.249309516 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.90353797 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217977686 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.890006048 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.407623869 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.032698162 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.020284468 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.945734957 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.947083658 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214755461 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.235074547 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.435469652 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.983478431 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.235359718 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.037364884 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.946603117 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.950012336 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.330293042 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.186695246 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.160756392 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.022855454 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.148047397 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.017270198 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.458847792 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.950500451 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.947380053 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.082623045 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.943413765 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.678586341 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.235544208 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.691599487 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.147458409 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.465983472 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.830443201 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.047834569 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.996881656 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.946590682 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.953601432 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.959504144 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.186070912 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.208636536 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.708200959 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.951154797 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.946734903 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.829741689 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.572337507 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.180865247 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.958187378 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.009147059 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.949893003 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.063781053 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.954149063 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.208278979 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.991458409 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.947143469 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.954631499 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.160119776 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.461070716 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.962664365 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.645693487 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.149954209 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.953261816 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.43720411 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.395662556 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.102032582 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.993264055 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.053214817 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.194887698 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.466104439 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.049200086 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.948956157 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.176209629 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.953247036 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219235164 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222177639 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.947828533 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.163457143 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.333389325 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238877284 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.959652 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.806430246 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.955251807 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.208974814 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.992452598 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.94842911 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.957217399 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.947935434 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.564160687 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.412651706 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.103605855 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.203287324 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.716355481 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.70443712 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.95175323 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.951726101 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.627099255 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.706533152 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.162684063 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.234154619 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.898627607 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.152535798 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.653789794 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.951119 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.223196509 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.876427158 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.955491106 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.35709493 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.223525425 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.886050929 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.955526147 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.506072567 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.948119107 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.034065495 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.951761724 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.076955316 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.210430419 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.244488673 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.048970343 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.591035613 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.576972137 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.886904573 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.003463639 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.758015352 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.514219998 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.630952339 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971123523 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.967788766 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.876460248 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.953360438 seconds)
  done (took 1667.242749787 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.95093075 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.95921411 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.978452929 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.972860215 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.028341648 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.003813394 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.000460215 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.972995632 seconds)
  done (took 57.745047465 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.949642588 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.966597957 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.955247078 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.950127722 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.961566363 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.950490838 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.108953129 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.96090333 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.955098487 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.955743426 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.951530021 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.952212109 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.247471155 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.971604523 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.952644566 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.951133855 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.956122603 seconds)
  done (took 75.581079668 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.954094462 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.173245037 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.009439665 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.95360582 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.914060901 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.959221981 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.922552008 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.965634603 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.959018655 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.184458771 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.255528798 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.97451931 seconds)
  done (took 91.10639041 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.959962872 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.954598282 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.954429702 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.953919668 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.954317856 seconds)
  done (took 11.662068518 seconds)
done (took 2185.166437372 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.196409218 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.01106746 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.051932705 seconds)
  done (took 5.941507569 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.099164615 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.145660371 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.258853585 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.021629608 seconds)
  done (took 10.410470043 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.210184043 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.334310097 seconds)
  done (took 6.425519065 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.308964091 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.959477282 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.315914657 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.959082051 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.96194598 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.960128229 seconds)
  done (took 22.766305866 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.957095858 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.957015866 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.955376944 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.955652011 seconds)
  done (took 9.707262306 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.952767304 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.669447838 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.959226997 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.967530288 seconds)
  done (took 21.429941997 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.095788208 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.06711535 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.095406619 seconds)
  done (took 8.140253935 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.175002737 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.170619978 seconds)
  done (took 7.226984614 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.101296407 seconds)
  done (took 3.98317162 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.984771571 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.22756963 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.444074482 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.931006974 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.625781022 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.043279182 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.339870322 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.219975033 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.386883473 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.439209618 seconds)
  done (took 26.526240021 seconds)
done (took 138.222433473 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.510763706 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.002774731 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.183255993 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.362910956 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.203145534 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.186242641 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.169225004 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.36048655 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.052208969 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.050168188 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.358798788 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.205878463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.120591984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.001959033 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.12214488 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.000435273 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.198180533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.356993434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.025119437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.268882415 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.179005161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.993506925 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.191430458 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.010188481 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.199904781 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.13777132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.540677204 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.001860248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.172527929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.549800173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.138932071 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.40843656 seconds)
  done (took 172.161184316 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.972420437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.975067328 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.973307533 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.973577647 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.251001358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.973469308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.975464235 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.971998243 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.187320621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.17811861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.97550968 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.235207979 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.974710983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974772346 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.97682399 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.976577381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.351459963 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.974755924 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.973146833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.973978553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.973139594 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.083274834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.973743729 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.108527893 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.344239346 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.972719392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.975694695 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.97396676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.974663607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.978959974 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.973817463 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.974547998 seconds)
  done (took 211.026699369 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.972180511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.977146031 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.976567305 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.97708588 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.975870131 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.977306062 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.975644046 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.975232541 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.701336369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.693260298 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.976567693 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.975274497 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.974200398 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.975609433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.977410463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.974922288 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.975932729 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.976430217 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.9759891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.97949402 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.976994824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.757222672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.973087727 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.778141433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.978830974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.979492689 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.976648375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.977636351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.976158631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.976414403 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.977243578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.975779768 seconds)
  done (took 224.170150808 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.216682581 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.976512597 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.977900218 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.998548578 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.980072797 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.978154223 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.977667666 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.225529964 seconds)
  done (took 20.232844675 seconds)
done (took 629.50459354 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.317876954 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.715554537 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.120804316 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.000853731 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.188098702 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.045716217 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.996008591 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.061248652 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.83754026 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.071635717 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.406374298 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.004385608 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.762388366 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.024722652 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.123302821 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.052190091 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.352952823 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.697947202 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.144732931 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.642457916 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.16170712 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.948349383 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.07638273 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.880034338 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.420473906 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.975034323 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.0330691 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.359860085 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.005893014 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.157584739 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.728545369 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.27626432 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.014033011 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.998206422 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.050426494 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.028944485 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.217196737 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.011552506 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.11840456 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.740019455 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.624180948 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.717951006 seconds)
  done (took 105.015150073 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.98916298 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.984872662 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.983876959 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.98499926 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.994876402 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.984940853 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.985410126 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.984942098 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.986848199 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.984549996 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.986321726 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.993942324 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.98647056 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.995374855 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.985431927 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.986173815 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.984839309 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.995579885 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.983961527 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.984584182 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.985588144 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.985906439 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.981260081 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.985819825 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.984881039 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.985929829 seconds)
  done (took 53.575044252 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.983516961 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.172188889 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.225514499 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.999616517 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.981760678 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.985730294 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.010064934 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.989112929 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.982522056 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.984894961 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.098346854 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.990081583 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.992939184 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.223138723 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.999306478 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.982999621 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.981685757 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.982323942 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.180422354 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.997419328 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.01319617 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.990350184 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.010535148 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.998404047 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.9848665 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.985653292 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.986389664 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.417887937 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.995758026 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.099324476 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.058789239 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.01727959 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.306103276 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.236146878 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.038087567 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.990859485 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.985862091 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.103931084 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.989740516 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.983583189 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.014643758 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.990950806 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.227268054 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.513450551 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.996966319 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.983779884 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.414399234 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.114916947 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.025889351 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.995198869 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.237525043 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.999898836 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.983634431 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.985875456 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.021744336 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.997191829 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.98372745 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.242471698 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.000670827 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.010968077 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.991763638 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.98518025 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.189031205 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.995640685 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.175687921 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.994769893 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.99037107 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.986760619 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.231125794 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.003527942 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.523861957 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.001516705 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.986594119 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.100974211 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.179146636 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.444822505 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.998133119 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.188300431 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.327503555 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.023831094 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.997846023 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.405639871 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.025970324 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.999239902 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.986008305 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.986736622 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.985649942 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.030474606 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.011683555 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.443364517 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.523462789 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.260872641 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.026716045 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.001093903 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.987657925 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.243221189 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.998387557 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.984810865 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.22060756 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.53714096 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.000929488 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.995054963 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.503182372 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.003482365 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.015595686 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.998967744 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.243495015 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.003628153 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.032839492 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.985763252 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.991636331 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.987703899 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.017397323 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.997631482 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.987865314 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.496285627 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.124950001 seconds)
  done (took 245.950255794 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.985727141 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.986143446 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.988572194 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.985936253 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.986565879 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.986958341 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.987199387 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.98528485 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.988302749 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.984140568 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.984326823 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.98925705 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.987758005 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.986785144 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.029367679 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.987598284 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.478577729 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.986625718 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.986722078 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.990208726 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.544188739 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.991979413 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.988037358 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.993382711 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.987716374 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.987003037 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.997893582 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.025281942 seconds)
  done (took 170.703289511 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.988801404 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.042765536 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.001780181 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.03772071 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.003017195 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.989541658 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.084288632 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.005551515 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.995035022 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.989609679 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.991200825 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.020601117 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.000014073 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.085509847 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.020361386 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.094410113 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.0908717 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.997576455 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.991842558 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.991312603 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.038601181 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.004329169 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.020774679 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.052427107 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.004063438 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.046300306 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.003801867 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.991338388 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.992431674 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.102798461 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.007782544 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.021899407 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.025460875 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.009887391 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.108434696 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.10144167 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.091875469 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.092004928 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.996100668 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.991405063 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.991728691 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.99355998 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.046191249 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.007971726 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.991743367 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.105949757 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.007688714 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.99276359 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.9913017 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.992323772 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.004138518 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.009057721 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.02625775 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.115986807 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.037012764 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.019017507 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.086370126 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.107464051 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.995003015 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.085489418 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.999632018 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.106110399 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.011592163 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.993806009 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.994991225 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.997182178 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.042433849 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.101260237 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.094085714 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.999419085 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.087293045 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.047321296 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.007824032 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.99482088 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.994749086 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.047335685 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.099873086 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.046982984 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.053560107 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.027128741 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.00366302 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.992358823 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.994832498 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.019499617 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.001221127 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.107329689 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.106777206 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.003504447 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.995492258 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.99480761 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.994714173 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.018528037 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.056215831 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.033756607 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.100451913 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.030977997 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.033206679 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.003006333 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.010640248 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.001447437 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.027741901 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.00253465 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.0061215 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.266310869 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.024950178 seconds)
  done (took 215.2295596 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.386039582 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.039632457 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.06776279 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.250801261 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.381349257 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.924512065 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.035100247 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.044985265 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.06513771 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.184920057 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.111776564 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.084253441 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.031326437 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.015548155 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.036747931 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.066202302 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.068513806 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.329406305 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.247692509 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.551043139 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.030126517 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.304162382 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.385321225 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.404339206 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.087826257 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.410427985 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.636533645 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.138543295 seconds)
  done (took 66.243817959 seconds)
done (took 858.622148277 seconds)
SAVING RESULT...
DONE!
