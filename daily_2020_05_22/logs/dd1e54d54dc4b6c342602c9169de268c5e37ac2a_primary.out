cset: moving following pidspec: 20812
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.21741869 seconds)
loading group "string"... done (took 0.589588297 seconds)
loading group "linalg"... done (took 8.112119316 seconds)
loading group "parallel"... done (took 0.169002382 seconds)
loading group "find"... done (took 1.335704713 seconds)
loading group "tuple"... done (took 1.99419777 seconds)
loading group "dates"... done (took 1.337693919 seconds)
loading group "micro"... done (took 0.203944976 seconds)
loading group "io"... done (took 1.00936125 seconds)
loading group "scalar"... done (took 40.871873958 seconds)
loading group "sparse"... done (took 12.817857943 seconds)
loading group "broadcast"... done (took 1.022705147 seconds)
loading group "union"... done (took 14.423171878 seconds)
loading group "simd"... done (took 4.918821072 seconds)
loading group "random"... done (took 9.914211119 seconds)
loading group "problem"... done (took 1.716707622 seconds)
loading group "array"... done (took 22.026631912 seconds)
loading group "misc"... done (took 1.642493584 seconds)
loading group "sort"... done (took 3.381569778 seconds)
loading group "collection"... done (took 18.235823866 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.549800262 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127389352 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141279369 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124425308 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154766801 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120592846 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128635119 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086634064 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.87422866 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148788016 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117110741 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419313058 seconds)
done (took 5.391788078 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174932313 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091457852 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081567505 seconds)
  done (took 1.232808579 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067222305 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131141726 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068923939 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069247693 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072758891 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069273876 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068583443 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069287039 seconds)
  done (took 1.608364221 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075261855 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070950462 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068109986 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069998864 seconds)
  done (took 1.34661895 seconds)
done (took 5.50225346 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.80445354 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21493079 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189973563 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.420094582 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138416402 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182519296 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653048446 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316472968 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193878896 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095896571 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113214857 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.399280728 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127494844 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637542235 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078370546 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095651837 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.146909505 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433320748 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071588125 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086947106 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095066502 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134005764 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083590494 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078912666 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151578496 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070895541 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144041815 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084952272 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069290458 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.259389184 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177882279 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660677597 seconds)
  done (took 10.508186885 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105031296 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101111139 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069171401 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125820317 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098889508 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070715024 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076199456 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06848242 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090641299 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129135471 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092249945 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109319703 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067876811 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072371767 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085749462 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201432846 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081365856 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084371424 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073638051 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081492864 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111128238 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081452704 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08789247 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082931092 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132191577 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17111651 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096902936 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099560827 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069473621 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084585703 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11800717 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131494711 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069467469 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068713465 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128477261 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097361668 seconds)
  done (took 4.622441796 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.020118395 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155744958 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093938025 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13854263 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067515797 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113949331 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068337535 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08668584 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242864386 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.377883213 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093547888 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.633604359 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.124278712 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117423491 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104754072 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070935604 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072708252 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066098416 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069629901 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.278911265 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101515094 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110600704 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085813631 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072483891 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071951819 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066493835 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073754765 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065519189 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071097053 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090269497 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077562039 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332466373 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127272033 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070758441 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.962800275 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169761065 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070002849 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107392478 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164680187 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098262436 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144175006 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070119726 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065957196 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.305522796 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06793754 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075126056 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069236282 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088119032 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112159513 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122679542 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067025178 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068284702 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173380146 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067778242 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084304021 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.22023736 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152966426 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066369536 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302974935 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09648955 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074542039 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097019954 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067714957 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.19199063 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120509379 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069552402 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068764876 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069967408 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066800815 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070956929 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386094298 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068586766 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.882205418 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071615082 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07959342 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072398095 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072163846 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079457994 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079614021 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091425411 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06729368 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074452697 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069650038 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068076015 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069135175 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095996523 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392815375 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067874021 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072738477 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065726949 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094755836 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103701951 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069005995 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067087663 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104425599 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07094048 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066068577 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068487526 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118893401 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07029142 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112534086 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.175054713 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.077591267 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098396797 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070085033 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101601301 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080913573 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071694204 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.46624426 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066031556 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07295563 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067731227 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069788045 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069193518 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081291663 seconds)
  done (took 22.005185342 seconds)
done (took 39.21420435 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248650721 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086630001 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086580446 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085384651 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084486935 seconds)
  done (took 1.741035204 seconds)
done (took 2.874177798 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128239116 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102150028 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066551883 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101310509 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066679144 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107982771 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100688606 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.0841685 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101615186 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067021049 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100589655 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066648413 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067179626 seconds)
  done (took 2.312198605 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08484199 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085421304 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071502872 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0839698 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064927207 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08434033 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082817584 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090691977 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083420505 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074117028 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065331326 seconds)
  done (took 1.997517442 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084672106 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086125797 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070858405 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08346759 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064367659 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083945919 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083513167 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087415461 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083843326 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075494853 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06484628 seconds)
  done (took 1.989615264 seconds)
done (took 7.421870424 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07887159 seconds)
  done (took 1.186725052 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.538733577 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.591333507 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078808607 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100578606 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192605576 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.110121405 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.236795643 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082816693 seconds)
  done (took 8.217439391 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09727682 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071285331 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072046833 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083476902 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071844925 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071015342 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070719967 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072496058 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071517132 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070910585 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072935367 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071709046 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072121756 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072452447 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072698404 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072375096 seconds)
  done (took 2.384138061 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099778503 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097832391 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075795063 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077402361 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075624779 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074430729 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076693928 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076072909 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073501168 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075196005 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078285181 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075884307 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075900284 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066673981 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076730895 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078988725 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07370583 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076127359 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076844411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077850593 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077666329 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066332563 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075935722 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076921174 seconds)
  done (took 3.083330356 seconds)
done (took 15.990931625 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108981568 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069928378 seconds)
  done (took 1.294595424 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08172496 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082724263 seconds)
  done (took 1.290767599 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080023904 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064508153 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085848339 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07449378 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063982283 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063265791 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082872929 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063806226 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06466973 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064305095 seconds)
  done (took 1.834266201 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067888217 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075109545 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070714027 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081338954 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073421171 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066666239 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070866824 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066662996 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073960387 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063963717 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068817628 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085087279 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070623306 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08742284 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071287025 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070241578 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072230143 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068434685 seconds)
  done (took 2.435879135 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065951526 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066161851 seconds)
  done (took 1.267035443 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068874499 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065324824 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068186522 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067925717 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06602204 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064284994 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065622125 seconds)
  done (took 1.597658848 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401165629 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122388284 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33020565 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070497408 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080338736 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256617838 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065147413 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072119327 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07191687 seconds)
  done (took 2.644444262 seconds)
done (took 13.500632646 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083016282 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087987088 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099909959 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41819275 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096464652 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070412251 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116276953 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185051811 seconds)
done (took 2.304496108 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211078028 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.813208259 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.483693635 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207107826 seconds)
  done (took 2.643059737 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347105141 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.195327811 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077169703 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066871304 seconds)
  done (took 1.833647548 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069966748 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072465412 seconds)
  done (took 1.2826757 seconds)
done (took 7.116396791 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067379934 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066173559 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091323046 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066589874 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065968791 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066218168 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0666833 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066458683 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066629213 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066182907 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066145793 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066554923 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06645535 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066596124 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067109941 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067053727 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066990046 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06639154 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066851578 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06654297 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06666806 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066841682 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066568164 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06661261 seconds)
  done (took 2.797554446 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083509256 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068784567 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070966806 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070544686 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071194683 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07060478 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070737443 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069145555 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070545512 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068592547 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071140681 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071793204 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068573541 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071165162 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068528304 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071271354 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070745115 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069417348 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068721492 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071187172 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070461948 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068757692 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070942939 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070551865 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071121126 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070840157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068817959 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067830422 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069071789 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069390293 seconds)
  done (took 3.267043602 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067815596 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062543587 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063569805 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071534451 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06316128 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064074178 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063304745 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063478343 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064307543 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062987889 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063900275 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06285529 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06269017 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063516097 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063433365 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067362277 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081095008 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062877981 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062760648 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063763644 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067161041 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062683147 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06302011 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063090707 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065730959 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062757641 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062909132 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061279269 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062420787 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061171393 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065063257 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066191315 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06144463 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069870564 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065748396 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061085127 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065040395 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061085817 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063172258 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062227276 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061345458 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061107739 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061552753 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070447538 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061573825 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063512886 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061688425 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062760164 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061882195 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063452948 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062659223 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063263529 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065249422 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063913347 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068107992 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062650775 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063670899 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062787009 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063750535 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062715071 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062353509 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06273891 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066094817 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063390341 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080868668 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071889431 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062635187 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064187209 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063685375 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066073684 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064396102 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078796586 seconds)
  done (took 5.803852831 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087496836 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088629538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068547044 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068158135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063484959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063745268 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072506412 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063802998 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068269628 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083210531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06367976 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068156802 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068268065 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068069816 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063816231 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068896178 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072625877 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064327764 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064096543 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068073729 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063777377 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071752995 seconds)
  done (took 2.702277947 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148701604 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069851016 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108804111 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073784301 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071635682 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073432231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068029709 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06919749 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069989964 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070429356 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070253945 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069770051 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072741182 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070240116 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070411871 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070365848 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069788033 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070713542 seconds)
  done (took 2.545394442 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080927492 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068845065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088554611 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068947927 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070208439 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068649135 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073465122 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074193178 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06858773 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0682049 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.0743771 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069223383 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069647138 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06972295 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069118387 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069485755 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069122095 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06938573 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073979835 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073916388 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073794766 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074463208 seconds)
  done (took 2.744538583 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090015629 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067547322 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082559278 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070322 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063607994 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063764487 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069892139 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068546487 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069794397 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068333642 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068554257 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063917497 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07087505 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068931842 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071047779 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068312767 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068009896 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068411864 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067820489 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063999394 seconds)
  done (took 2.553561911 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085960389 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066711121 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066330796 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073109614 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06724696 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067079559 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073140452 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067123539 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06677293 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087832529 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067349369 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067151773 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073683464 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071124133 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066920882 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073448016 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075978625 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073158861 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067179492 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067281443 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087942752 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067139493 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073285934 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067317753 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06713602 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066714402 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066790496 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070799266 seconds)
  done (took 3.151155126 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06695008 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06585899 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066292866 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066816639 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066753963 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066466291 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066637811 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06693067 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066481298 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065964512 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065300174 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06519021 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066513335 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066146597 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066400289 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066258116 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066545116 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06666762 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066617953 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066904192 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065999032 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065971099 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066245787 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067121401 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066779316 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065909412 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06616021 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065977235 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066186195 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066581643 seconds)
  done (took 3.155931321 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077284115 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07452722 seconds)
  done (took 1.31717472 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065555632 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081482436 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062452218 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074122746 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072256122 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066866598 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073345772 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072761278 seconds)
  done (took 1.727103118 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088444438 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077284393 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066211235 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078708096 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076588461 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086726219 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128053196 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06604462 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076567254 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066650219 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084194055 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067551331 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075815825 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0706607 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077095342 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079765381 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063454379 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07037327 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067041538 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064010448 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066525548 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078400361 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074981978 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063700091 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071079542 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093374274 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081997814 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064764554 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072943301 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078018799 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075890925 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062834397 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065408675 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06592457 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063454199 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07657892 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085031957 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073048229 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078746709 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066441123 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074330997 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063728406 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074223707 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07656139 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081447777 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065292752 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065717035 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063372891 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066243077 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071183911 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063179668 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069922222 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062915626 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077482063 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073414732 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080713473 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064042205 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071252427 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071890031 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072756027 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077017178 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072219226 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075049844 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064819641 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080942786 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07472289 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077239844 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063140148 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062932843 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063318903 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079645989 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094592808 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075262781 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065607875 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065893733 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063019775 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072375515 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065643058 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074539351 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077360628 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064756695 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06991592 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077358579 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070251055 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071397401 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072202607 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063399494 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068822236 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066369805 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085664382 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064385297 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063629818 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065916303 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080807255 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074816533 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064929226 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066549977 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076930822 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062600446 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066136799 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066742644 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071373126 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079573428 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069639962 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069517212 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078325077 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073929536 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070038609 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071664602 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062330612 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065507969 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066772993 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076279015 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061921465 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071200839 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068469494 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064949427 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076396771 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062849878 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063781264 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076884738 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075538622 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062998969 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061649008 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071552219 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063982251 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066592549 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077823949 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062946119 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062559914 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062464938 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072189942 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06430371 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072251741 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067847501 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071659605 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061710895 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.191006755 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070072945 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076924238 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068106288 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070997874 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074900497 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070654413 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063444402 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076077396 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070911342 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066396219 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074167403 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068168369 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061904086 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066078291 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070734975 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06244425 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071307082 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068565392 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072207082 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066017742 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063362136 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069959317 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064557454 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066496175 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068828564 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063657959 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079124294 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070290999 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061773578 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06136175 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07110392 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066053597 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065001375 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067479308 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072082422 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065442715 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063630228 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065259783 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071489455 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074284252 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068606265 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066243521 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075729238 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082996672 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065317709 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072115975 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065271834 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066576764 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066788127 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080327521 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077290496 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070357233 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072702565 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063017877 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075233266 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078270384 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068151856 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063735633 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067778084 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069485894 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077229425 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069500674 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066161013 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064218878 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071401193 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068204554 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07241262 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065229021 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067709354 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070956647 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064395216 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071942015 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06585091 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080186882 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07286276 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063404659 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067923426 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064460569 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076911697 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063393303 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066527759 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067840554 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066213691 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064722122 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072038721 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062746996 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078017899 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079123959 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070919156 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067997896 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065256813 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077880566 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071432319 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073419393 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072324148 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075249051 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080892496 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067989618 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072427897 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080999473 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065126958 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062783158 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074716639 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066827305 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064728974 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064287912 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064045938 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072402853 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072612576 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075377221 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062047371 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071952106 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063738047 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067293342 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062827001 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073325863 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072099045 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069390524 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077004733 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065292308 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064615986 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072181421 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06430887 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06434777 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063815243 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069508461 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064680927 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070354385 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065467047 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068503597 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06599803 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063399154 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070394665 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064564749 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069654073 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07253425 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064527717 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069786843 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070692164 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062817107 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069560156 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066369844 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.198386862 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073984851 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071374137 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071534554 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073570473 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064881749 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078918762 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066110716 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078968109 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071500265 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063032304 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071621381 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072801186 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070405311 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066007737 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06582304 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069492335 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063273628 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070658052 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077597541 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066976219 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081569296 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077754251 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072103914 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072453011 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070954175 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071246559 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067451416 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070119425 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065935987 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0714478 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065220212 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073741925 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070855021 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068521297 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070023188 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063970236 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069539226 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066655189 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062730368 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068024674 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067920467 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065494728 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078677503 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066104175 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068802102 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065235534 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066354165 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064845336 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063007905 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072988738 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074050843 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06687873 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07654716 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068321379 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071974919 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08191921 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063374113 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064558591 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063817251 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066998466 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078387138 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066573533 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079969545 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071430308 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068183667 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063415597 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066334008 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064223012 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062860702 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063563607 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074616591 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068246358 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064695941 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065408072 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07282219 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066188747 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078777736 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065134826 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070027635 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065893041 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062984741 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067905016 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068160661 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073030022 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06622674 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067535024 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063320134 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065186736 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069837734 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07130725 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065030367 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071581664 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077748166 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065343544 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072417662 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068015763 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063278989 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072170298 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065164736 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065268984 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068051357 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073562124 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072905982 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06628739 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079851011 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065088492 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074505842 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065436899 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063572112 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064579946 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06489745 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065377341 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067848681 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066464347 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078108463 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063396538 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07101151 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069893782 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06830585 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075170102 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06576073 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070772597 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070172593 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06607336 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071216757 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077927134 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068049362 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07195012 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06501686 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07106855 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073973321 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066459567 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076238863 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069635411 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064833494 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070289956 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06611823 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064292044 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064418757 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063792846 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07410826 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064962994 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066752926 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066571531 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.198732985 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071194784 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067988413 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079906326 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072851235 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073807991 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064194967 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063776479 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066419133 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066625863 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07142925 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073027065 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075510093 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072967528 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069056439 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064372371 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079936802 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075754293 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073268492 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067054044 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073052382 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066241731 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072786212 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070230591 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070798495 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066299136 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073229663 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07140811 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068207004 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076216875 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073835787 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066650325 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071241634 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071142152 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071091325 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064155264 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066149292 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072170913 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074222219 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072663111 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065412151 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080961763 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06723214 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070600323 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068220049 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065009297 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074369054 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063827557 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072308142 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066212252 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066830766 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064212123 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06862509 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066799497 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07270314 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068058252 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064300436 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081613298 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080823008 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072890041 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065218604 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064653998 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063949993 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064080885 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068655666 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066675582 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071762546 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080868653 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068405293 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068295577 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063664567 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065710425 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073098537 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073996047 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063311417 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063872372 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068922245 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071978021 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077546274 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064657478 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06524152 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073286095 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072295726 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063722636 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06852897 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063306597 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073736085 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082409294 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065914773 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07185877 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07563042 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078769369 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06603752 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064202976 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065928551 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072127321 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071426726 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06616354 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066433342 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084960563 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072928169 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067814951 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064525577 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072514836 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06832822 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080019843 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06658476 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066378667 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074242779 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075091894 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073356162 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076254777 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076844377 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071506637 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072206281 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064589275 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070735444 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064186964 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068059347 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066410115 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06565634 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069796787 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074650592 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068070114 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081204412 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07786648 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065771082 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060963906 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066212605 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067416238 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063461207 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066026812 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063827702 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063289397 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063131852 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063621355 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070238366 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072907881 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068997003 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063999941 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062928459 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060967641 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073830024 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071029415 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070505923 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061908235 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.202237677 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067139195 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07344089 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069303751 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068432182 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073097876 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072089954 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071743865 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063978556 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077370563 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064902827 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072074277 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068148563 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066063735 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066052594 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073001966 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070209338 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067127438 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072784908 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07254347 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067442927 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063383038 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063134529 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075641728 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064039875 seconds)
  done (took 43.324136234 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101376791 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06384666 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062262622 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063858337 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074398263 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065332735 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064064522 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065805322 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065164215 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067295265 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064192611 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064051298 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071625846 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079857995 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072766508 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066756909 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062189478 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063425538 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062400923 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064503615 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0706338 seconds)
  done (took 2.692492843 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071784222 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07994616 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076380002 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081887677 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073271089 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068929992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075806465 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067295209 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075896038 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073040004 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076388496 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06859101 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073201396 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072730809 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073304363 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068353293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076347417 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072128662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067531489 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074951803 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067984038 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075339708 seconds)
  done (took 2.855382475 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066309598 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064408722 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070710131 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06388659 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065316605 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06327303 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068211729 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063938789 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068627876 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067333861 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067421688 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067641392 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072091198 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063669244 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068594889 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063408236 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111025519 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068977864 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06538599 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066481728 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063711434 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07284071 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063713619 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063774538 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067622342 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067929571 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066338243 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063600135 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064942086 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067496121 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065773182 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063792826 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071903006 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07124714 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067943814 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067394589 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065004723 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06537237 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063533029 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063503023 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071519084 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064293081 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068106609 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072107253 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063592392 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063041383 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072282201 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065415543 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063483635 seconds)
  done (took 4.555702605 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076100406 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111929908 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070447538 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093412027 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07915671 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07149832 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070583741 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09507693 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065901568 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066577317 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080530254 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080582138 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068074801 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069204113 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072375444 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066795815 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06696378 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066454084 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070593952 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066072129 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069385707 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070217254 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076754674 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077274389 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066583978 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065898122 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066665701 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069102134 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079422977 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071519338 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069283843 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069527439 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079745943 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071820292 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065725102 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065370489 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078834006 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083414072 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06570479 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063493776 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065312915 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06855387 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071508313 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080444619 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067073057 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072142655 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067011749 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064867699 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078951697 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0672161 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071447507 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079050049 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06767562 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067420885 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068306641 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078030714 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06743786 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065925367 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067196591 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07855141 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0655047 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067774677 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079957904 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066459133 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070897924 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080144357 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072104816 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068135283 seconds)
  done (took 6.310131193 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074932079 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093929123 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081505483 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081749862 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074514422 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074220147 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074034398 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074262721 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075058115 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079072225 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07574344 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117067244 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071219911 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076800351 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075353763 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075275005 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075648454 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075420819 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075348972 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075634234 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075421565 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081407503 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075316827 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082055379 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077812922 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070302768 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07452599 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073887057 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081887955 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075371416 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078664596 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074901298 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075123369 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081762206 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078327233 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075246929 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064586039 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073917244 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075049805 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074813631 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070917643 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080562346 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073999349 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070113634 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075144853 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074938926 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081725327 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078403917 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077284362 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078056608 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073749274 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079690965 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072827226 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074082154 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080741286 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083986502 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081443484 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081527273 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075570567 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081771553 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081664524 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084206942 seconds)
  done (took 6.105423898 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080203145 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072122692 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083504424 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063604952 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063282834 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0738958 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063787636 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063568957 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072493409 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075418718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074633491 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074263907 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076749661 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074464123 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074581536 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076904498 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074639288 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074414654 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072657834 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074272245 seconds)
  done (took 2.75321221 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078411395 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083387175 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069506299 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073527301 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069194031 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073965059 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06875493 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069261628 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069571347 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069492235 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075838251 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075383445 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069805448 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073945725 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07564787 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073993852 seconds)
  done (took 2.447801129 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085058421 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070196928 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07738442 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065620256 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068432279 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063752999 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064338845 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062403148 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063942189 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077365764 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063499151 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074391779 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063608961 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063964294 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064369995 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071167043 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064670726 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065156663 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065168673 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078698835 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072169202 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066248716 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068917121 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064807133 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070505313 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072680915 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06664922 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068577712 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065276751 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065468779 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07096835 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07208182 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064814287 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065298563 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064466947 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064844146 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064682681 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06534565 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071209376 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08319288 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06317771 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07034243 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064995558 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066048329 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064090475 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065428067 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063929965 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070785294 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065213001 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070659096 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064867117 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067700806 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065741897 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072649176 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067800805 seconds)
  done (took 5.023529714 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080031805 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068962049 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063301855 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062922558 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068977001 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069804779 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068731018 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068963594 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069955735 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063644343 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070293819 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068838693 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069956137 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069086639 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069915417 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069226742 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063963601 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06941417 seconds)
  done (took 2.529916099 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074171598 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067499651 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073153701 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068105855 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06790971 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067994496 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06444986 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063731988 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06429587 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068678253 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068794695 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067870865 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063579546 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067705973 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068831206 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068258279 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06813971 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063546585 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068531641 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063946448 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068306177 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063769094 seconds)
  done (took 2.763728129 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097411343 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085215557 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142511976 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081433786 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088638812 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073643444 seconds)
  done (took 1.854374875 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094567056 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099040627 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068520001 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06885504 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075032252 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072298835 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072222852 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07147532 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07467531 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075340411 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070739507 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075484328 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074841565 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076930507 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073307203 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07290253 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07072475 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073456068 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067459922 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080190817 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071391261 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075182538 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071681665 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072453287 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072520565 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079158162 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077190197 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078072928 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072046268 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077361957 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075130537 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072513067 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077486213 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077688372 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069602317 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077176136 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072885357 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082476559 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075447621 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079495298 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069055462 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07496623 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077371006 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076304687 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077287008 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072758721 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076437341 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072311706 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072636323 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083992282 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075191514 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078999499 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075101963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077321463 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076943108 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083934862 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077309514 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079053466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074340981 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076450953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078637885 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074391313 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078503047 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077268152 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074892278 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078943515 seconds)
  done (took 6.292173176 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105510126 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069239956 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07194906 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077232396 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078940265 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072906375 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072804432 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072966701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073232513 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069627748 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108419977 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073328511 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079656091 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079794337 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073789026 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072770133 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072999109 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079428712 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070553232 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084437482 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073480158 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07911518 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079253926 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079331334 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077650291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075494346 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072780952 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072624886 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072390508 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072429121 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07657044 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072774751 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078945424 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069264622 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07917668 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07264056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072431692 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077023256 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072685456 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075047257 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079181485 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082313348 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072819604 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072821806 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077543172 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072897394 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072501879 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069480018 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07246092 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06939741 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077113532 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077339639 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077279283 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078617474 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072966797 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072447751 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072230509 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072289808 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07265074 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075342429 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080517608 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072658128 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082991254 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072149119 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072431453 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079308814 seconds)
  done (took 6.319290403 seconds)
done (took 128.734703583 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212481595 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185179199 seconds)
  done (took 1.667339432 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076638387 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106564238 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084728751 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136644331 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071241061 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106466658 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103870125 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083369281 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072257394 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071446046 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073125966 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075800919 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139426589 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071683191 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07135676 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073700838 seconds)
  done (took 2.707583621 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105631633 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167799187 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109130085 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070569684 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.1071229 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079278447 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070586219 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084869011 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078379123 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073053066 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080182302 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077665498 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07277561 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080292193 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078162596 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079790512 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072663451 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079391754 seconds)
  done (took 2.858516887 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105370441 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097504929 seconds)
  done (took 1.497695874 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.176230403 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.132954264 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201045169 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345157092 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157776996 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.431401781 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14278241 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141421024 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112848773 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136330146 seconds)
  done (took 3.265708068 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105359454 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172636187 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297202373 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124144385 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078088825 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093736256 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124939099 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08425628 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086715886 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08595203 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086100555 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080845124 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10632006 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078852897 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078137053 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080683672 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10898582 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077470795 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078187209 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081031046 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108636766 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072100929 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079405571 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076925612 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083747674 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083524601 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072827952 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071582652 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080456897 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077934402 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082572509 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090679409 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083387298 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108940623 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076536559 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110408627 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080785542 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078672924 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078044932 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078901325 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082466317 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.083089186 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.0809284 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080908646 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072618949 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081109454 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072702217 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071384098 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082573243 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072810277 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082560859 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082252114 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108223194 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071994166 seconds)
  done (took 6.230718615 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10938644 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106396258 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070563134 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112633742 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103798892 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070317603 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105150894 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099142452 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10771994 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071168095 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069241558 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071161351 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079827335 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081110578 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114900809 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108226994 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073004447 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070290869 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108215099 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108122091 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069748489 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103150416 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099810171 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109866321 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068619015 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07162907 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07071229 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071528452 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076724391 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077703558 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070279365 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079353702 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084145019 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077569459 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068403605 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069114377 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071082002 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08007584 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078575169 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078404244 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076487617 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068232847 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070798811 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071951376 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071831146 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070194661 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079209463 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081546606 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079489867 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070673007 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07211789 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070804216 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071719642 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080311776 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078897314 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081923823 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081254562 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07135791 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070971631 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073645716 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082162042 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078828715 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077762679 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069818557 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078573051 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069258172 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079320363 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082526674 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06952579 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072868157 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068767583 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069123788 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069930129 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076540785 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076345108 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070216228 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068979842 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068753624 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078440269 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076531422 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068839158 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077862287 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069989372 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070430356 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072024809 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072228598 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078235637 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080149812 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07051481 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070758017 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070905125 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070688616 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069963577 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078727898 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080103929 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078989526 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078077505 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071553933 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078952548 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078595758 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072182294 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078932751 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071048441 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071660941 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071458728 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078497231 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077307296 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079867492 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069265509 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069246697 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076460997 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078473183 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06890477 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075047332 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077081923 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075354861 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0671275 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077858393 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068795366 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076449805 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068176968 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07678 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.204790885 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081211086 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072459767 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071153187 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071842454 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080643935 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073104429 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071660066 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072262193 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071534028 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079749242 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083387746 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072436772 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079905394 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079614148 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072837899 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080088842 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071259206 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080283641 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071194033 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072348856 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069897625 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083099494 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071779354 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071328838 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070900096 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081387432 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070705062 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081362717 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079706796 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070534354 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084990326 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079056052 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075807488 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078800471 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070512516 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070672385 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071114537 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071109957 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078854451 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080661371 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072317595 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071581162 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079049455 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081385847 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069089142 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079626013 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07972306 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080327204 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071801041 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071712361 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082612025 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082555328 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07981934 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08034541 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080597538 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071923727 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079134583 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080071661 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071522318 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087659761 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071781513 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084303095 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080366297 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077829017 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079089902 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081103889 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079776391 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080378237 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081498562 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06878765 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069063756 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077660939 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069523441 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069486766 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077034876 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070330488 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070647978 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081537127 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069935582 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079169784 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068359043 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078112965 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068239424 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071555846 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084872066 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071058982 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072817695 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079947698 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071157285 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079007143 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080708249 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076725541 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068904506 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072926895 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079260607 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078224449 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069020076 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069173836 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07027565 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076652473 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075813308 seconds)
  done (took 18.69226434 seconds)
done (took 38.225499682 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207885251 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154152284 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184324305 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115828428 seconds)
  done (took 2.056617015 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.109800806 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098630118 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088445733 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06628127 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094490179 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066486362 seconds)
  done (took 1.860771006 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.289717225 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19641096 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17963135 seconds)
  done (took 1.988491982 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21120041 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196139591 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464840192 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284143638 seconds)
  done (took 2.583824107 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14329361 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085000285 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065983852 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085847978 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127611308 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.152961142 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095099918 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.119080513 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078296791 seconds)
  done (took 2.335785794 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148635549 seconds)
done (took 12.333075651 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.269703107 seconds)
    (2/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.19526001 seconds)
    (3/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.126090519 seconds)
    (4/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.218159872 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.101503977 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.122216945 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08840473 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072002765 seconds)
    (9/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.112292285 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098105197 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088757321 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.209406981 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091905613 seconds)
    (14/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.487067248 seconds)
    (15/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.140331203 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079841362 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070407841 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.181564642 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.200397802 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 0.163911059 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077732447 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077719914 seconds)
    (23/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.092151421 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.240500189 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.236439253 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083497349 seconds)
    (27/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070052464 seconds)
    (28/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075492327 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07300857 seconds)
    (30/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.17429882 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.141211695 seconds)
    (32/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078041996 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088065424 seconds)
    (34/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078531171 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087509003 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069936204 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.145323941 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.211064165 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092612132 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067933427 seconds)
    (41/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.175700685 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139693667 seconds)
    (43/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074446361 seconds)
    (44/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075416852 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091553134 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074458472 seconds)
    (47/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066959755 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113819704 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065515009 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.210978367 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085738007 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132553767 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138463572 seconds)
    (54/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.126835508 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.157750628 seconds)
    (56/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077404025 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067350051 seconds)
    (58/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.128882558 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.194943186 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118823253 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076763844 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.068100941 seconds)
    (63/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068961521 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086982742 seconds)
    (65/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.132444376 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176784105 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068316925 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077010431 seconds)
    (69/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.075497079 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066888043 seconds)
    (71/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.126868905 seconds)
    (72/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.18587523 seconds)
    (73/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076844125 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108044745 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068824118 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.167484182 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094428379 seconds)
    (78/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077479104 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07893105 seconds)
    (80/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079381885 seconds)
    (81/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.233163057 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089288291 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.230741342 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103950738 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183516354 seconds)
    (86/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071921152 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089013868 seconds)
    (88/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.080914321 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.205792908 seconds)
    (90/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076005273 seconds)
    (91/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095046257 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.235350881 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.112737006 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07624986 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083477221 seconds)
    (96/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078791777 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07121099 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102179165 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.184344262 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069096411 seconds)
    (101/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.130214128 seconds)
    (102/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175824182 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087811019 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12068417 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.0933746 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075667494 seconds)
    (107/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081854425 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124970939 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068078223 seconds)
    (110/309) benchmarking ("sort", Float32, false)...
    done (took 0.134613567 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136249818 seconds)
    (112/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170426159 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.178690504 seconds)
    (114/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080481367 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079519514 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066603408 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068169768 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075519034 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07570944 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066108565 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067220841 seconds)
    (122/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.142764694 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078712508 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084534982 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.238531714 seconds)
    (126/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076797887 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077466941 seconds)
    (128/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081512931 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.179288281 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.209004802 seconds)
    (131/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.187139235 seconds)
    (132/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138187959 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.069399515 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069428567 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.177541819 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091504602 seconds)
    (137/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067657632 seconds)
    (138/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067332679 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079064477 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076990405 seconds)
    (141/309) benchmarking ("sort", Float64, false)...
    done (took 0.134785929 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074658195 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068022243 seconds)
    (144/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071026461 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067308034 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073968221 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.219257721 seconds)
    (148/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075648616 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075031286 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.203597206 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066998686 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067521684 seconds)
    (153/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121489256 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087739351 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076866435 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144924078 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065470039 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07962823 seconds)
    (159/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.068979545 seconds)
    (160/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074776594 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072100044 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171401575 seconds)
    (163/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079070777 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067740235 seconds)
    (165/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.069268529 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067856508 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.223105582 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068121154 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068438115 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143909876 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068300592 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068581916 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068114743 seconds)
    (174/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075950248 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116668013 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068212766 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068749392 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077674815 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082744668 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128295065 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177727117 seconds)
    (182/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.080363231 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184551588 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06817377 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074460351 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124975261 seconds)
    (187/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089755519 seconds)
    (188/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09585084 seconds)
    (189/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.143330252 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068835021 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068675188 seconds)
    (192/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075727117 seconds)
    (193/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.218109911 seconds)
    (194/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069313323 seconds)
    (195/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.13178531 seconds)
    (196/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069855906 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094107892 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090305022 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069426326 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134093377 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07134689 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074997676 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075803209 seconds)
    (204/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068413071 seconds)
    (205/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191002773 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073184435 seconds)
    (207/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066337541 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065571001 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089154564 seconds)
    (210/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06823381 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.23257555 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075517485 seconds)
    (213/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082251514 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091568233 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068888705 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077628718 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077625198 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138121802 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139527868 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06863496 seconds)
    (221/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071269273 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128764214 seconds)
    (223/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073690271 seconds)
    (224/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076624348 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091724857 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076084246 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07699795 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068041128 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.069399306 seconds)
    (230/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068424936 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090204284 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131123944 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.078799686 seconds)
    (234/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.171520455 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067528017 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066977686 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18155943 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.172932853 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067073632 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086432827 seconds)
    (241/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075014845 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068704798 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074792876 seconds)
    (244/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.068953597 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066535294 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067206621 seconds)
    (247/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.139088554 seconds)
    (248/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069358076 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065465602 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.169565945 seconds)
    (251/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066942296 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17556672 seconds)
    (253/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068243033 seconds)
    (254/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067828696 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073233918 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069111434 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.069136115 seconds)
    (258/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184588974 seconds)
    (259/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.143802337 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068997935 seconds)
    (261/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.070026064 seconds)
    (262/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.069021965 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.069049812 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06910887 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077731121 seconds)
    (266/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.082660201 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06857562 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068028791 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075607008 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.086818194 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077724189 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072460907 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070467783 seconds)
    (274/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.069443323 seconds)
    (275/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.069856785 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068424331 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068975846 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147100181 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084843822 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072317515 seconds)
    (281/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070024789 seconds)
    (282/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.069302573 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068517456 seconds)
    (284/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070131242 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067725659 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091043996 seconds)
    (287/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07957881 seconds)
    (288/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082139795 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069085031 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077153355 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067888893 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068901285 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070951326 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074993806 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126337638 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074812006 seconds)
    (297/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.081192013 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069794964 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070182388 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.080779361 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067628861 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070585316 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068151298 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125278649 seconds)
    (305/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067776605 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093318319 seconds)
    (307/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071296528 seconds)
    (308/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070340786 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068730749 seconds)
  done (took 33.63134999 seconds)
done (took 34.969809964 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089386858 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101750881 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07573929 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095664929 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084735605 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100712267 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077886201 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081620222 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082539407 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081946056 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082875994 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075704603 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078732786 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078048831 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076110979 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101415469 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082835629 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077235931 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077121256 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068251211 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077447844 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068777678 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068164032 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075259665 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080204926 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07607456 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076678891 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07623987 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068689933 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068711096 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074102259 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077970386 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068924889 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081624547 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078390688 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077292214 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078660649 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081310863 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068630468 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069294126 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07886196 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068648407 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076913956 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075119455 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073578337 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075211686 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077008186 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081025859 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10085947 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073624623 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078575655 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079267987 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080582755 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074176879 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073631576 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077402643 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074486499 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101013594 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076875357 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073551301 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078660499 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077817024 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075203891 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076805192 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076603787 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079556465 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081044527 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07486015 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079111311 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075207401 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068441159 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077193302 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073308664 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068389004 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079857842 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08149167 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067692186 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072717051 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076675849 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07778617 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068822531 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076122224 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06754911 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073201555 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073741396 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075161753 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073380191 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075474538 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067923153 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076784194 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075681671 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07654183 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067935473 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081285055 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068480993 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074476458 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068473747 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06860753 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067481073 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073422486 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068470166 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073374741 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076944372 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06746308 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073230074 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08168905 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068202172 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075423242 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067401797 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067915886 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079501987 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078549538 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067896239 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073078238 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06777268 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073254645 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067410047 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067601329 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067157569 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067739362 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072007299 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067976222 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073171607 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073707959 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080683328 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067903521 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072475202 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073118233 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067878978 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074338128 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06799492 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067564183 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066943449 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081386552 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072951663 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067636221 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072898853 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072871267 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075353868 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066710754 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076481439 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073335097 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071285586 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073441726 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066785802 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078133298 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071882634 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072361142 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066448597 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06687446 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06650826 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067040893 seconds)
done (took 12.887879284 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073890756 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.119372288 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094701832 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096176805 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086187262 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06954812 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077130484 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.094085479 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070081399 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099564205 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091357536 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091091917 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113243634 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068606854 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068877728 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070082647 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070316365 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081760687 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097599262 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092491477 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109639119 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069092128 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089555003 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089973035 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086618198 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091523431 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070385585 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070029789 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071860477 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09256336 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095190767 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071645591 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07081338 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.094212624 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088472495 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083333133 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070718608 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078675546 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070295326 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069115467 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071239972 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091175943 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078296089 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078370293 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070764439 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077476121 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070426014 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085535186 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089481626 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077446774 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08550952 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.093989144 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073221496 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086343931 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068859586 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085384718 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078104837 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06869288 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069892393 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074119706 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070030793 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072084802 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080852668 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079181602 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073429306 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.083054499 seconds)
  done (took 6.785075918 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086558842 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09523233 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08352957 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084249031 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066824082 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069846226 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070420079 seconds)
  done (took 1.995942409 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069164857 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090983247 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091131699 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091337613 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082798187 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094390578 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077492131 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068912921 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095684582 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066401028 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087014456 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097666763 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071490533 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.080681925 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094958643 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069668543 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094413537 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0694432 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070740803 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094549506 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074184539 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095608171 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078706995 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067837305 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081149495 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070090141 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102956714 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077727512 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071074179 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070818154 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070784125 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.096061829 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081765522 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084386617 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070814158 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085092464 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083406564 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073056893 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080986919 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079468328 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082575919 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070910706 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068720387 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070828504 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072598972 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081315644 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068721158 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070751709 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070605891 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08971814 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068524364 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082469675 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073349025 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076383562 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075333084 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075363066 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077790239 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070918107 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089744603 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07096368 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087099364 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086540088 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083038465 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086668958 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069629041 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082562 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083444877 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070648018 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071759165 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07133052 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086782479 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073024312 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.0711295 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081428987 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069770808 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09297857 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091736355 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067594343 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080805926 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068748066 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071184972 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081717255 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094056204 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075846361 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070508744 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074434926 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071381163 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073061707 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068305878 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073450064 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070810648 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074611128 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071065559 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072961737 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07225465 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086176436 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068786309 seconds)
  done (took 9.036814174 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071782845 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06840544 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069216598 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068070556 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068182376 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068392919 seconds)
  done (took 1.882065187 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093143889 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068535164 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080931076 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068356941 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103754989 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083698757 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083851268 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077671249 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081571126 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079964733 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083696389 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087081457 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091169651 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073321942 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086801141 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071910853 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087018025 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074306034 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079595657 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07200758 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081454309 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070738086 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071158656 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087493301 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072523099 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070061475 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07756983 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082340324 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082010349 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080919938 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073092058 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074554309 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078068061 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080690421 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087442205 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078004598 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070478894 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077250533 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073826661 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074358642 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089348195 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07321139 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073309381 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077360596 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.0803725 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.080958321 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077293748 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080110892 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085101761 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077314519 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077406935 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071772947 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07461782 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077593322 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077835561 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080639399 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077523153 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086948925 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073138917 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078261386 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070453274 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074170806 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08032701 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072071604 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075567781 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074532974 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075227061 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070591089 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070583214 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068007401 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074520574 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068807362 seconds)
  done (took 7.053113887 seconds)
done (took 28.211627149 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516580303 seconds)
  done (took 1.933463098 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.629955928 seconds)
  done (took 2.080544982 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.56739244 seconds)
  done (took 8.012725656 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.383735627 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.455810143 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.752644157 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13366226 seconds)
  done (took 3.206301699 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710030537 seconds)
  done (took 2.169665296 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238764751 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228177145 seconds)
  done (took 1.936111926 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.350096935 seconds)
  done (took 1.800141096 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.079338042 seconds)
  done (took 2.529797853 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.237869054 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160389436 seconds)
  done (took 1.853164719 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445410977 seconds)
  done (took 1.896564822 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.211363743 seconds)
  done (took 5.664176696 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226773871 seconds)
  done (took 1.711928847 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235567157 seconds)
  done (took 1.687568417 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.746001042 seconds)
  done (took 3.201691233 seconds)
done (took 41.14352337 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084533033 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084996045 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085030682 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081130631 seconds)
  done (took 1.767702157 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076576712 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071932032 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075813238 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07177723 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07699112 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071536121 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072989143 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073031249 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070657177 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070847532 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070850362 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070775575 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07355194 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072347327 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069661598 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073793849 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074673896 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07078074 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073828058 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071968208 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069051002 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073495435 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074039304 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0700488 seconds)
  done (took 3.196089169 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081004374 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074520364 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076181036 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073672068 seconds)
  done (took 1.775089972 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.0788471 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087985395 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085995436 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077256519 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088752975 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083504833 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067489367 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067349506 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.06859142 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076498354 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06626111 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092497592 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085960532 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076893098 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079245092 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063700664 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067656187 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086992221 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080388928 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080051645 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070784254 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078272374 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066520049 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087079726 seconds)
  done (took 3.330405688 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083191223 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066036082 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080926901 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091805935 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093291521 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066211885 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080526032 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093715702 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136129484 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066544 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074009511 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068776751 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107698942 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068896445 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08385647 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111772036 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115477045 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072092885 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101592095 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068592183 seconds)
  done (took 3.207963686 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085939592 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074528875 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073077244 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068016016 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078221172 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075634988 seconds)
  done (took 1.937080825 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071191951 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070333804 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070146499 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069021276 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074544052 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06954979 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068780947 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070565523 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070342011 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070312485 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069841437 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068808552 seconds)
  done (took 2.319660858 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192256433 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068707298 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068768217 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066257642 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072972044 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06930948 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085046926 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070277357 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.095662737 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067261775 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067560353 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070297979 seconds)
  done (took 2.471555678 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192522052 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073837037 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221074064 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14406156 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10216228 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108766897 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110638505 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107187337 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1330746 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097648366 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153121275 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160014214 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103157548 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128593827 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086970066 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119322587 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143631873 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155108046 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099412604 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153733424 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13480484 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121812849 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142201467 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096915537 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102205208 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114549561 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074501948 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078714775 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158340945 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122446526 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135168098 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104804177 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089648693 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164903718 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164195572 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133817651 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142303532 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081377804 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117595027 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128307374 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19337103 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088398408 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151241674 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102870971 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077364727 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122771067 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108464945 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114022388 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099447523 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086489278 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277803874 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174107361 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127503363 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08353902 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115678246 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104518349 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108578397 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113339316 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167928878 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148577194 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120779833 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069479712 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10611449 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142989077 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125510781 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104151436 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117127908 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090129509 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123709682 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148689732 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121544261 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139338573 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113824063 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085265381 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11878707 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133673734 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123911653 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16576381 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120610346 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073631943 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119021994 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098672201 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08057524 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142687255 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073866934 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165107478 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096587808 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121414344 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125264621 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10437202 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104829138 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149240367 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136317185 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102717219 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084051169 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102257098 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118167072 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139700602 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083982259 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10298786 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108927458 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076727251 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125833032 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072302326 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114165974 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092163628 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112273332 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118618796 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075907729 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114397119 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246494948 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101460266 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124413544 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148687739 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08541812 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079257014 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157666049 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119027287 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102951349 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139432294 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152456077 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121299798 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097581332 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139637714 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165939456 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089081866 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151798964 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099351045 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083075647 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103274699 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119243347 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109988337 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122299807 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081474161 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11950131 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158096553 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075552422 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097095827 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1302975 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082170828 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081480204 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10487319 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103466737 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096722204 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100339296 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101616857 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129682636 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116983461 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101619623 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118252056 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094091121 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155550181 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08531401 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102497094 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100535408 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071046693 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125963256 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14642228 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078317759 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15149048 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.11551759 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110449483 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112894604 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080673137 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128834559 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076326776 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.0709791 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13119187 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11156799 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106092924 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14185587 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260813078 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120956149 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115824564 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124504005 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122138575 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122350951 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105761373 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089232015 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113336604 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126689453 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074192204 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092352968 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082340651 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102621697 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094451637 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084377129 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135426982 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1188771 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109410081 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113583553 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096279055 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144879477 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078701651 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121047425 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12076226 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09536487 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.147558001 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144584511 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129233201 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101082842 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133207414 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073812384 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075406698 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089637341 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11949656 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084151726 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084355854 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113045811 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142935985 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119323288 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128939502 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117772462 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111782022 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149609554 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070970947 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116450476 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135799958 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115602541 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101231961 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089157185 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094599697 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134826269 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099534499 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168716963 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108748829 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117385175 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146381537 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097522944 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076146232 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098787606 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123364499 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095810516 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13152902 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092636032 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081913884 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100022306 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075210642 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092728604 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116030855 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108606276 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127909879 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.104955695 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121233964 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074477383 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104515381 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114265702 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112082408 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080244701 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104771775 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144141044 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089041128 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104228072 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131385594 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073568082 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.128608505 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147417696 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126185048 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078543294 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093756171 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109183193 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11272354 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104804009 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122038604 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09320489 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122728826 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101141832 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.079116706 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079296174 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087481298 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09440606 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103539399 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093861055 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104501664 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.089209807 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114339809 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09364769 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101233575 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106832047 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094237878 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089331085 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088091092 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153566411 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105889173 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144700609 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.092446898 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.124418586 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138615795 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070080539 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073654659 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.0744966 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121655667 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078326359 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115486041 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.102904991 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.374609597 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124573865 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13716136 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098691032 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07395223 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108023252 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128241222 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120327016 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095747796 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102003985 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150679401 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.116458142 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079866195 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109396731 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113863545 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10243261 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16448214 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081285108 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10963574 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078562042 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082742829 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123976819 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146601446 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08225315 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105369457 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119894908 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111862177 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123489304 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099123079 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110649023 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126916375 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14328974 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124641357 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091083115 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111330195 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127015341 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149296786 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103561949 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098677396 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168899564 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146852083 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155729698 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088795308 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11500962 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112851269 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109445249 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134256233 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085192463 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155805888 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082474523 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131037052 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100793565 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090449663 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124591551 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111554395 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088025718 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13971522 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115623438 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083430786 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0807628 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266265138 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116128739 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101275841 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073666349 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132294978 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072420455 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129418 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160025105 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078042122 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101578716 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092185712 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079965366 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099656841 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098072924 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08359384 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096442885 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160291255 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085676111 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139170008 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12620545 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106593949 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12994615 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100288645 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640095515 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077856909 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143018591 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111473753 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166603551 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095428377 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113453067 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106565401 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115364202 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137129011 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10292078 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178012798 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124061322 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114600062 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077415682 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102017867 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104332765 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089987173 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106155736 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112580691 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111601633 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092344505 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113297431 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116255395 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080506713 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093106601 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145668321 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110446227 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134159603 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131006006 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081636594 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11182902 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128614712 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078744596 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115772965 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144938598 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259227782 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100221716 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083483294 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100146494 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163904406 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073809367 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152628485 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115693675 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10947524 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114456458 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109205456 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128162788 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103518607 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119716378 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094219319 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109358776 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150451167 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08437889 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080168266 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103821187 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110013513 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098412382 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098055491 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099699909 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147156886 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073531089 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098751228 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114707789 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140186392 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16524958 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106508162 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08454524 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117838971 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117536352 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113448801 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119873029 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082155846 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08160942 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082898152 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.101051304 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.122512084 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109577063 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117481766 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109025566 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15524843 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084890262 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227499104 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095225424 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102637746 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086560493 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078141938 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095123815 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095100786 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103912417 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110977951 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167706017 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095329728 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090341591 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092956787 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075178187 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083786966 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123172135 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108308798 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115017379 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103076711 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082358927 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103116706 seconds)
  done (took 56.85336594 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126664867 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10085064 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099096279 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146873166 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122225695 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200567354 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151709839 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189590337 seconds)
  done (took 2.798157111 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071814521 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096444051 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10418788 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083020516 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067378583 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068848658 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225627036 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081657373 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067317517 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091893044 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07814587 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069418457 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.451047394 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.07222886 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070463735 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079010171 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068084129 seconds)
  done (took 3.43778996 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388233336 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61400436 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350146963 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076627087 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.045996947 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090180632 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.233066726 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138684517 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082509402 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537648121 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369975792 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133816765 seconds)
  done (took 18.658559158 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085812674 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076776964 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091001982 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091148413 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078946657 seconds)
  done (took 2.025539974 seconds)
done (took 105.252702877 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085409894 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.43430654 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07027833 seconds)
  done (took 2.132851798 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.095345045 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090888768 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092417858 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090828559 seconds)
  done (took 1.978396321 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078429511 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080235091 seconds)
  done (took 1.760333992 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230135136 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176967996 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098958559 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087036919 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083767107 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082727633 seconds)
  done (took 1.856093927 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076173254 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075218284 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074340252 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073843704 seconds)
  done (took 1.896402404 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07148942 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069505157 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070959491 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072167624 seconds)
  done (took 1.882906834 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088133229 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086852773 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080350261 seconds)
  done (took 1.854497021 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104391405 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091401402 seconds)
  done (took 1.79459474 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085109289 seconds)
  done (took 1.681994155 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09277267 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101486842 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132400153 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.1153364 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139671137 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114886474 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084978587 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08580193 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079588086 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086747975 seconds)
  done (took 2.630961707 seconds)
done (took 21.658806786 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082268306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374313541 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360877417 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091305724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669722839 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358062665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984597482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093611772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141437848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069045419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086251286 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650486197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972838475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324762447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959916737 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331596863 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650238669 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070014525 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06936738 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069444886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965303152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069000353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068770898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069919894 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649400776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37398086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070090037 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330723903 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070746183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075609218 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359111783 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07051634 seconds)
  done (took 16.158352268 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074544267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123979375 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073434197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085144518 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07143197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071384796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072456402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070418132 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121252124 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068987392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086112984 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069543049 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072945137 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070422485 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088950231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069883598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070861416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070718094 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07037448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070326278 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090093832 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070062588 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071644828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072841082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071152588 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082698059 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075053869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07155706 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070323025 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072454221 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073036696 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070921718 seconds)
  done (took 4.079843479 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119165347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12672049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074032633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10755834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113649615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071604594 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146831852 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094376308 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128548876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069298378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086613053 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069649629 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104244459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07037791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090776441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070398985 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072542568 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070858619 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070051838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073175403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091398963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070224948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07048265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070674084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07060568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084074994 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070837538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070495657 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070453886 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071998765 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074055557 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070966992 seconds)
  done (took 4.331201274 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074283172 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076144181 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.0831296 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084566766 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070342905 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073437206 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074441808 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070774113 seconds)
  done (took 2.225177317 seconds)
done (took 28.399514935 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082459872 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071264516 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074331709 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090162852 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07704371 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082311464 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068480745 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077818134 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074890098 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075123592 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077094813 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070269218 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073735417 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068422968 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075604488 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070196405 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084634107 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07392623 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08388561 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08476196 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073236255 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076154405 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078339914 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084668557 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084590803 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.0849866 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079939564 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076310505 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071821212 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074069322 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07526184 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084267481 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.085163905 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.085018676 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07055482 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070592708 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075544451 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072369374 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086294516 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079734462 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072976475 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079970328 seconds)
  done (took 4.84321147 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089284859 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092764077 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084100606 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079982768 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093492849 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086506766 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090906325 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081566963 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.081369601 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091008537 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07705416 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.085036482 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082089584 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076982464 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.081489526 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078952235 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083420156 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077310853 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.082394277 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.082495371 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092746932 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076139044 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.091381457 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08345681 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078429506 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084762559 seconds)
  done (took 3.815434577 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077151843 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088752097 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096067611 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148339183 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115082873 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08349673 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085387253 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095432032 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099871175 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071627969 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076081176 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096438326 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096537597 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078239785 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071867902 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088315464 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08779788 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074176583 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078973952 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100863707 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092748847 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089092657 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097545209 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087930224 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070886393 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073867107 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075908984 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087725496 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073567096 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082994578 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073984438 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0780342 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072286118 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081725989 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073601322 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070746541 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096823282 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082843704 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084191022 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07183096 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08100048 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072469265 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096982371 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132417435 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070253674 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075407514 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074874545 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082638373 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070692918 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099786512 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083834208 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070669436 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07207529 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070474779 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070400026 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073615911 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072853194 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074093555 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081315724 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077843091 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093596887 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07657746 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089388931 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07064659 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081412304 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070743976 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072376445 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070004341 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099988754 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072714071 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116840048 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07209561 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069868498 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082527498 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081461486 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077557071 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070977123 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089343701 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08277265 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075328479 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079607855 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074563312 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074814739 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101780617 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071572301 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070699777 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06975577 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07519361 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074632225 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071865078 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083633261 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070470571 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07481479 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089750816 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070881338 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072218526 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075425817 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073802679 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070412796 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082694382 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075087215 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072408198 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082045574 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071714463 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074753976 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084516534 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078828364 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070017069 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073942658 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074954851 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072857851 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072489429 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074626379 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072960357 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078151095 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077869576 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077035163 seconds)
  done (took 11.093621301 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168155191 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159952821 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074240423 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154554268 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080941953 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084621809 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156959444 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100288275 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071733683 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073635089 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072898023 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114965839 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109758463 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12357489 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085412045 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072846467 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094887618 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119161589 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159405604 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152818141 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095158474 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080070594 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074557982 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07367779 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074091313 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08175796 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09111823 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.08013629 seconds)
  done (took 4.54485828 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081344932 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105807758 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07618749 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094311848 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092030981 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072483378 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073470869 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073884398 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088564803 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081310725 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072179648 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075878176 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07449098 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073286421 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070643447 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07701911 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077108705 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070864646 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075568732 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077628301 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081894828 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097307432 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075983229 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072006054 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074726064 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071679058 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080196328 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084599543 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07227074 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.109102658 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069551895 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077030305 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.089133502 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072425139 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071126515 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071765058 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071833793 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071697632 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073545371 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070808111 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070397432 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075418229 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070508236 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079935036 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084976611 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073509111 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073810282 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074578505 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074908611 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069736713 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074571072 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074821654 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074941764 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079526624 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07622355 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075366058 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072469995 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10069224 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078047749 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071463765 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.07072146 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070353159 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074222694 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081560497 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087430299 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074233115 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070515726 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071878385 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085077697 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084901212 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071447502 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076722153 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06954754 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073887045 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074609882 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074399282 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072867554 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070674116 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074904694 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072041767 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072861717 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071656946 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071188486 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074732924 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069816739 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070336807 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072119001 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073892807 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081299497 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071291284 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075768466 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072947585 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070582738 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074675524 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077908503 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07480103 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083040497 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083311677 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072305693 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070353778 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086072861 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074689877 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.0712354 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077935131 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076680004 seconds)
  done (took 9.696870037 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095938207 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071889888 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086828814 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092799568 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079033478 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075067906 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079666826 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068884698 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085700264 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074699934 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078804339 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070919064 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082755454 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081677421 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072371491 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082289531 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075511828 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089892002 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086230171 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070566355 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080550364 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084878686 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083897738 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.0863688 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08560699 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087263272 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084199321 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082118209 seconds)
  done (took 3.950456747 seconds)
done (took 39.556278833 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.720626222 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.865696728 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.686602428 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.889386238 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.822504711 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.697753873 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.767027234 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.68495334 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.979333607 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.730130509 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.008998123 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.933158422 seconds)
done (took 64.552542718 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.718674284 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.844192873 seconds)
    (2/2) benchmarking "String"...
    done (took 1.944992803 seconds)
  done (took 5.490710752 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.902927738 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.558828741 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.924162652 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.690329774 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.692361757 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.962342336 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.464328933 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.135102028 seconds)
  done (took 30.051900155 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.886769541 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.912871678 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.399909043 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.435488252 seconds)
  done (took 15.305235877 seconds)
done (took 62.183705907 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.704651233 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.706928525 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.731571155 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.684194452 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.778462657 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.694893394 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.798080117 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.922385677 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.686329384 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.693829094 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.687536171 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.179019651 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.692406919 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.797393106 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.685834135 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.68823673 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.710986595 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.178711514 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.843057129 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.702743101 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.693020154 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.725583018 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.693492793 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.695634239 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.70121946 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.688847927 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.073212971 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.691291294 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.301138326 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.690825996 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.719119972 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.994914019 seconds)
  done (took 201.858598144 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.69033269 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.7778973 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.801151364 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.715155634 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.28175186 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.878093964 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.793881699 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.244978136 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.694227709 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.710928168 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.792805296 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.68815634 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.814919395 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.661136323 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.728467594 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.785423751 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.836890641 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.818588007 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.727571205 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.855661979 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.71869671 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.647478998 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.625241456 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.777036925 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.688011293 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.766155888 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.714253492 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.85806411 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.882593912 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.82242083 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.699366654 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.733446807 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.907741392 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.562208794 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.701302517 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.706292663 seconds)
  done (took 166.734145648 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.870274766 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.69560408 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.692819954 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.696039453 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.705400413 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.692647805 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.813884707 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814786409 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.351440586 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.087172117 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.693041751 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.74511066 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.694391782 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.45729563 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.688402965 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759566992 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.702038476 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.694117285 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.693867577 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.708978008 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.720875681 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.694389417 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.69349288 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.814910395 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.707595474 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.689371604 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.701415557 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.693535366 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.700264528 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.08203512 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.689135338 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.839232136 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.695670815 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.700079501 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.951398837 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.690092033 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.695657703 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.520281422 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.226207207 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.775801987 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.6910152 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.699972861 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.694594655 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.91236063 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.691443203 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.694482026 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.696290958 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.696564026 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.807930662 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.695963482 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.81707866 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.695160458 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.179229884 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.695187359 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.696618612 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.901655775 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.271589221 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.696361832 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.699389401 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.696982011 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.695888284 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.697182136 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.701946347 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.028435719 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.761785917 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.69859454 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.696843413 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.701853473 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.69706056 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.696963224 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.901987493 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.693108255 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.71025865 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.710930599 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.812491709 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.818136825 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.696637777 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761856125 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783884305 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.693117521 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.696440772 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.69735747 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.696580483 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.778762664 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.691915799 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.780771635 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.701528112 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.698941897 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750477196 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.768272066 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.692555666 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.517482626 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.697807724 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.697615787 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956388199 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.757723041 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.693464619 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.698305119 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.777935501 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815910169 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.423563131 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.698386533 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.08730234 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.777103016 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.694473037 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.81202613 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.699559092 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.778798707 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.699118178 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.700448517 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.731018811 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.699967064 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.711705867 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.697860702 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.073910808 seconds)
  done (took 390.757152687 seconds)
done (took 762.9038653 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.314355781 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.277172325 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.375527616 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.295861096 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.266839361 seconds)
  done (took 13.159392469 seconds)
done (took 14.78923716 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.775109724 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.779907851 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.717702347 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.778039197 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.714142222 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.777266485 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.762704546 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.719776144 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.747582195 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.718420743 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.750051266 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.718528155 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.704898662 seconds)
  done (took 24.292870375 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.926002468 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.926492363 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.756662803 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.92457404 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.732846357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.921433203 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.844298257 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.840445921 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.830677406 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.70409575 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.705457153 seconds)
  done (took 21.745071836 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.926616985 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.924758645 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.763881169 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.922877565 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.736115603 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.92932194 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.846268791 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.850770848 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.835824309 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.70399032 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.706024182 seconds)
  done (took 21.778178216 seconds)
done (took 69.446630331 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.701206085 seconds)
  done (took 3.335547934 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.719621378 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.874438833 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.700339555 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.701576609 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.701722952 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.702510538 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.701603413 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.699389069 seconds)
  done (took 15.43314978 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.701487489 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.700149364 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.699577558 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.701046243 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.700279605 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.700286681 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.701568725 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.700595282 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.699144492 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.698864913 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.700807872 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.700313501 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.701468065 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.701055277 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.700401815 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.700790522 seconds)
  done (took 28.839438652 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.70242479 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.705882764 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.699934662 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.701220432 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.699987017 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.701330851 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.702073205 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.699774479 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.701457569 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.700576005 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.700599266 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.696536866 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.699505169 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.699166088 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.698613559 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.698995343 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.697694338 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.697705501 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.702749514 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.697082206 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.697577326 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.697558969 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.697519073 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.697839665 seconds)
  done (took 42.427448448 seconds)
done (took 91.666424998 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.472410498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.318892357 seconds)
  done (took 9.418407537 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.699405712 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.698997711 seconds)
  done (took 5.099116086 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.697220606 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.698049854 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.692830369 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.693436454 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.695624439 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.697560277 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.692255258 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.698817811 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.690163345 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.690387018 seconds)
  done (took 18.574275432 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.69367476 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.692762691 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.694756487 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.691742862 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.69321236 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.692710814 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.693770773 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.690410933 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.694601556 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.692766646 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.695552639 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.69487122 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.693027148 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.69672969 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.694314787 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.692652534 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.691554001 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.694125371 seconds)
  done (took 32.105097948 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.693674776 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.692689737 seconds)
  done (took 5.007514706 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.697030286 seconds)
    (2/7) benchmarking "second"...
    done (took 1.692157857 seconds)
    (3/7) benchmarking "month"...
    done (took 1.694724497 seconds)
    (4/7) benchmarking "year"...
    done (took 1.693287348 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.697613579 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.695564599 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.696424921 seconds)
  done (took 13.490296195 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.694757659 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.853069905 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.923044152 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.344070894 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.695275838 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.700569085 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.608943358 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.699245606 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.697880479 seconds)
  done (took 18.840982347 seconds)
done (took 104.163143692 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.524015217 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.692997446 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.95161566 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.750050504 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.704603781 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.993221761 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.729595705 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.957603307 seconds)
done (took 41.925736597 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.711063839 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.421816414 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.453008911 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.721638792 seconds)
  done (took 15.223999227 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.692240765 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.994143661 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.710239276 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.542265378 seconds)
  done (took 21.57073957 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.063123504 seconds)
    (2/2) benchmarking "read"...
    done (took 2.053280809 seconds)
  done (took 5.755838212 seconds)
done (took 50.886394071 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.703848505 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.699902141 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.699582318 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.702282106 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.699927613 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.700649912 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.699682922 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.697815434 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.699419734 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.694157076 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.699333 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.699872662 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698235652 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.700526537 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.698619527 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695749131 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.698885507 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701197907 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.698594485 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700812189 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69995167 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.698083891 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.698737846 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.699746283 seconds)
  done (took 42.419149008 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.696067238 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.694884135 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.696888467 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.697729072 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.696241294 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.695753149 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.696037364 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.694372022 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.696186245 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.695434859 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.699021923 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.697647414 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.6970218 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.697002059 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69726418 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.697584713 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.698363059 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696441687 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697093418 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.697634567 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.695346817 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699045991 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.698915849 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.700138725 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.700995541 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.698524005 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.699727051 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.699205417 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.69733464 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.696631054 seconds)
  done (took 52.550106012 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.69608557 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.696319059 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.696974852 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.69788711 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.697417639 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.69780258 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.697622773 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.697170609 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.698495263 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.697978657 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.696241159 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.696177056 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.697710447 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.698425947 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.698333831 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.698295469 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.697767781 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.696838509 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.697197292 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.697255439 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.697949322 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.698151183 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.696744069 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.697718991 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.69638439 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.695809552 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.698274698 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.696943866 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.694614829 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.698412911 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.695781543 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.696132192 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.699927773 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.691977657 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.695225994 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.694100054 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.696074302 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.696475771 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.696589577 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.692051424 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.695195506 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.693766594 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.693567384 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.694495807 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.697127944 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.693255164 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.694444151 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.693839446 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.693128131 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.693707948 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.694354362 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.692602352 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.692323979 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.69318446 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.692725402 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.69374183 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.694502576 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.69312333 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.691583964 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.69272218 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.692145276 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.692347731 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.694713428 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.689496591 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.690559996 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.689851629 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.688210293 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.689191811 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.689585698 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.689399352 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.690533083 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.690177718 seconds)
  done (took 123.66126977 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.691893709 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.690587004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.689523122 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.690831823 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690527568 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.690656938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.690057344 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690963915 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690781026 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.691031643 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68835445 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.692420074 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.688186809 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.693434419 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.689810154 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.690225366 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.689826878 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.691247108 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.689737258 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.692769569 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.688514943 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.689432615 seconds)
  done (took 38.812144891 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.689836264 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.6895419 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.690274924 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.68970267 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.689264029 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.688456152 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.688622758 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.690029552 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688312421 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.689622272 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690191172 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.689911793 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.689130152 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69262234 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687735891 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.690189312 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.688862709 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.686319365 seconds)
  done (took 32.02851159 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.689919823 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.687035645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.688645027 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.688596435 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.690204826 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.688730852 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.689016947 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.68953232 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.687269161 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.688714998 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.689611605 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689857819 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.6913514 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.687909119 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687893331 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.689080794 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.68834576 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689572987 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.689771946 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.689261922 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.689730056 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.689142851 seconds)
  done (took 38.778231272 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.688978619 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.687186462 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.688818198 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.686995101 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.68845001 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.687738776 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.687036068 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.690295412 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.687092006 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.687583203 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.686988082 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.686531984 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.688336384 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.690385406 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.688869864 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.68765086 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.68761847 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.688994959 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.687333161 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.68842149 seconds)
  done (took 35.382306107 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.685024438 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.685390717 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.685493425 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.686441679 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.688435737 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.686404195 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.686418045 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.685303386 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.686653723 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.687159232 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.687942362 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.685948836 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.685519493 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.687136338 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.686514417 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.686412076 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.689069287 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.68515658 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.685882986 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.684809186 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.686283039 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.687545045 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.68721254 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.686715575 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.684424955 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.683944514 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.685619928 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.688089506 seconds)
  done (took 48.834299777 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.686155512 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.687504594 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.685845558 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.68713186 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.685822735 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.686881239 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.686455938 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.687533986 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.686353013 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.686379871 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.689923485 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.684590197 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.687406995 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.685592899 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.688463574 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.688369321 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.68863647 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.687355999 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684650857 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685442173 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.684517485 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68504529 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.68701116 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.685598539 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.68462601 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.686260791 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.683995151 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.687529883 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.68907624 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.685076766 seconds)
  done (took 52.214805339 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.706963285 seconds)
    (2/2) benchmarking "in"...
    done (took 1.708318795 seconds)
  done (took 5.03116003 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.688391255 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.687136624 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.686347435 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.68647155 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.685797134 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.687156251 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.689739238 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.686361283 seconds)
  done (took 15.114732303 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.686828996 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.686415395 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.686317653 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.687494989 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.686094316 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.686688181 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.694240578 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.687052632 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.689793988 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.68960238 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.692262324 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.694542647 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.689931225 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.688348007 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.689705798 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.691181944 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.686179615 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.686584567 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.687227074 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.686848998 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.687262857 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.6897689 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.688446941 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.685792579 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.688054297 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.696988541 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.692867164 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.687096644 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.686896271 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.689832124 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.686956675 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.684747622 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.685965925 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.689582519 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.685427916 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.685662714 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.693770144 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.685745597 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.691130885 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.687754642 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.684487582 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.684531686 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.688316126 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.68805822 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.68858716 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.686565212 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.68527162 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.684258868 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.686397514 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.688733514 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.691443597 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.686595775 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.685149302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.690455491 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.68815755 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.69240152 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.687330177 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.688191671 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.694477251 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.694997724 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.697513596 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.694205953 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.687949642 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.686425209 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.694193279 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.707785246 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.692632967 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.685872569 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.687120344 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.685288141 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.693126973 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.6966124 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.695256579 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.687087719 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.687031522 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.685873783 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.688257021 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.686790995 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.69394157 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.691354193 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.68817419 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.686565023 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.693628796 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.707610094 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.688208984 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.686901204 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.690414369 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.688248384 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.688477171 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.697949974 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.688157414 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.687568138 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.688075021 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.689228387 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.689029157 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.688565063 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.687054149 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.691060706 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.688607086 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.687060301 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.687954503 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.691119836 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.697777247 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.688143091 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.689698507 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.694374176 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.688065808 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.689236791 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.694350229 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.688282223 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.688727413 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.688658762 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.695247674 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.688025994 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.691978009 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.696514817 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.690025904 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.690371029 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.688203667 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.687821364 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.697474553 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.714279606 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.68903785 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.688087423 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.69323899 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.699353511 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.688814595 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.693339461 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.689285844 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.689469948 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.688131134 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.69264464 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.688391703 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.692697608 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.689338715 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.692392737 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.688446005 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.68893327 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.691028467 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.692681598 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.691423312 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.691062226 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.692151617 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.692849906 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.689873154 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.693443784 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.696404718 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.690222209 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.692788616 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.692343157 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.690064342 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.690808323 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.691666882 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.690949149 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.691435491 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.692138627 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.691440209 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.690425268 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.692407355 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.689630841 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.6906944 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.692114233 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.695169549 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.691398019 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.694996887 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.690890427 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.690361014 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.689941978 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.69120159 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.690798098 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.690201747 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.690031368 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.694222113 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.69798928 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.690344679 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.692344976 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.694591883 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.692188678 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.690586083 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.691572346 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.694799088 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.700867081 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.692248376 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.698294859 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.691065287 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.69178221 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.693517973 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.693314397 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.692500529 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.690742917 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.695280844 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.697865472 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.704593541 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.69879862 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.692428775 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.694294829 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.69258428 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.69558297 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.69746596 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.692338688 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.692045178 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.692052093 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.693662289 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.691284532 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.697341677 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.692336193 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.692065967 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.692404001 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.692313975 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.692635249 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.693348086 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.694903718 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.694898623 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.693235719 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.692804154 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.691774007 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.694107839 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.692714877 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.693362515 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.693121981 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.693461684 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.692099003 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.700826271 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.691889087 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.695500292 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.694966629 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.694495155 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.692932564 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.692879607 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.695375324 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.694303711 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.700862458 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.694896068 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.695907785 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.700391913 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.693715429 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.692570135 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.697097492 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.694591721 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.693889944 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.696832941 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.699509142 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.693317438 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.694408969 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.694354841 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.695166523 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.693332861 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.700586133 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.69424693 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.694322428 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.693579359 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.696160661 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.694516787 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.696229442 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.696226564 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.696870479 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.699307914 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.696961123 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.694834664 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.69639592 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.695731954 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.6952512 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.695764238 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.700527737 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.701463714 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.700458839 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.6977678 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.698317366 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.696619743 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.701075701 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.696662817 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.696338172 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.695250336 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.706707559 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.702466986 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.705619797 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.698941373 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.694452586 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.70185241 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.697078566 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.700791751 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.699033918 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.697478587 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.696992537 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.697289573 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.696356647 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.699194171 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.697736681 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.699401135 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.698351647 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.70017607 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.696500067 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.698217072 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.696179156 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.69685178 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.696971445 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.697835825 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.695723943 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.700191662 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.699562926 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.698604723 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.698366015 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.703459471 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.699073509 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.699530201 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.698810727 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.698373485 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.696842771 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.699610994 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.697289922 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.700959432 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.703471288 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.700709144 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.707557599 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.699373317 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.706883924 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.699654527 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.702556109 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.70676884 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.697810838 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.698295095 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.699899431 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.701007466 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.704017558 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.699672336 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.699643067 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.702285237 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.697621277 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.701085838 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.698631273 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.697998058 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.699599657 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.699753913 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.707930326 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.703623476 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.703236232 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.701273621 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.698489623 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.698616817 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.698553176 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.702180024 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.704128644 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.699562234 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.701462958 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.700499019 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.700643599 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.701343542 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.69872957 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.699061249 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.698715778 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.69862273 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.710399687 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.698721426 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.702384657 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.698614855 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.706151183 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.699096656 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.709760606 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.698534203 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.701074903 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.698910347 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.697924376 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.701171708 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.703365246 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.70105279 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.698978432 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.700607055 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.702334036 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.69896865 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.70305546 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.700460123 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.699927938 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.700627492 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.707330506 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.718957488 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.705230147 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.702403536 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.7003204 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.702252679 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.704932018 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.700266552 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.703483995 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.702330243 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.709888157 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.704808645 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.699382635 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.700251485 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.707013335 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.699931891 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.699077135 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.699578185 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.698249509 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.698350615 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.702870314 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.699309546 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.703893688 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.70024123 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.700058533 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.703409621 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.697761264 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.709854451 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.699343987 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.701568668 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.698198018 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.699414906 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.702592011 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.698887936 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.699349833 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.700347396 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.70064226 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.702914721 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.704747408 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.705539526 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.70406552 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.700598802 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.702159109 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.705865453 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.701770491 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.701669013 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.700278748 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.700246749 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.701585676 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.700088825 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.703145194 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.699197645 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.699581706 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.699784296 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.699990391 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.701552946 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.707558686 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.7017053 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.701262756 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.70062891 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.702806077 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.700209571 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.701582879 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.710188068 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.702874952 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.71083226 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.70877692 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.704038168 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.702602118 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.70330359 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.707931663 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.699667371 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.707363938 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.70022825 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.703927345 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.703158479 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.706001734 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.703088279 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.712237854 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.703335594 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.70288243 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.710886347 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.704157634 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.702378861 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.709001635 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.705503746 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.702910187 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.703929223 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.703362485 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.702582463 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.71116505 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.704412058 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.704035894 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.706727216 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.703480148 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.70487145 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.709202868 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.703868556 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.708006122 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.70349992 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.705714578 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.705503937 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.703222987 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.703197283 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.703032587 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.703272322 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.706795923 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.70962904 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.704266283 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.70481799 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.706183194 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.704575933 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.703145019 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.703984278 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.705061097 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.703420188 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.704100771 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.704912561 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.70610474 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.707818792 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.706493062 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.707107172 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.707487031 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.703686274 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.707768374 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.713501331 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.711098861 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.705048743 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.704992225 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.706433371 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.710103706 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.70479419 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.705634939 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.706117615 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.707154894 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.705132294 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.705215363 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.707898165 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.708665188 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.7201563 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.704106387 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.706758209 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.705535475 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.711803138 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.705425697 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.7053142 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.705812164 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.706964208 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.708453189 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.715394262 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.706933581 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.714703793 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.707867081 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.706582505 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.709306734 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.71006237 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.712297269 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.711290768 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7066336 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.706867503 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.710112986 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.722472881 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.705158492 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.716125937 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.734325892 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.708564865 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.708829268 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.707199206 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.707291028 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.707357312 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.709491048 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.707084499 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.707586343 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707531325 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.706620257 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.708569953 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.713267669 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.711014555 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.708549074 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.707767932 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.707811627 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.710265914 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.706681486 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.706646734 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.707040534 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.70769829 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.708950877 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.707948669 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.710126052 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.721091304 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.718212073 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.707744367 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.707766741 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.708020579 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.712895108 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.713500022 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.718808319 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.714892506 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.708638481 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.708935278 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.709938588 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.70827655 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.707901049 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.709267246 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.707742847 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.709120573 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.709001075 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.718963094 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.716229692 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.712467488 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.710394173 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.708553359 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.708898389 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.710939178 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.710786427 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.70981467 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.712564339 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.709098244 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.712941099 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.709794262 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.710306485 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.712884349 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.716467951 seconds)
  done (took 1014.122988039 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.709588573 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.70922006 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.708656169 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.70908601 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.709443975 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.709101815 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.708869136 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.709629298 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.709480336 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.70974929 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.709387775 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.711174914 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.710029984 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.710885936 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.710424777 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.70954632 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.710369676 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.711159183 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.71005094 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.708422445 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.709324122 seconds)
  done (took 37.543320693 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.710045249 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.70993894 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.710284259 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.711346411 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.709797566 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.710961175 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.710956368 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709079711 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.71020317 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710429843 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.710435233 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711047075 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.71047412 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.711754315 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709301851 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.709901075 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.710430777 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.710393123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.711449078 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.710589927 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.709942717 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.711578859 seconds)
  done (took 39.270716973 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.712005011 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.712124858 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.712974224 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.712948712 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.709564094 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.711394268 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.711434015 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.710847454 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.713941175 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.712141669 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.711989992 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.713610779 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.718802618 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.719459698 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.718143693 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.711033104 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.858078849 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.713812555 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.712920099 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.711510657 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.714218292 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.718170782 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.711960264 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.713890087 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.71205111 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.713661264 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.713855012 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.711653728 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.711833492 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.713300437 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.717227988 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.713003773 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.717185313 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.717051074 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.715618584 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.713946945 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.715814152 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.713413516 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.716239834 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.712140729 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.721579825 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.732696665 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.714043077 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.718048684 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.713531942 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.713184513 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.715143695 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.719470161 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.712328391 seconds)
  done (took 85.7985085 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.712398729 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.716113781 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.710924262 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.713610995 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.712161274 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.713505109 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.713600521 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.714380378 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.714303906 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.715594784 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.714088545 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.713008305 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.71359587 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.712749554 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.712568608 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.712128213 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.715948302 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.715049347 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.713814475 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.713545174 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.71404894 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.713309745 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.714495676 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.713717621 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.713117153 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.712845982 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.713931379 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.715496637 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.715818731 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.713833091 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.713658196 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.713680945 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.715137998 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.713894991 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.715504706 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.714370049 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.713020819 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.714866943 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.713854338 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.714380083 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.715911866 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.71396665 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.716601192 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.715937834 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.716436028 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.715183448 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.716755783 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.716073788 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.71701354 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.716283949 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.714883647 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.714535951 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.714882607 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.716158377 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.713366696 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.715990924 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.712829154 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.714369931 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.714745576 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.717248379 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.715542579 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.715235813 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.715986138 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.716333711 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.716009931 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.715456487 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.714750749 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.715810697 seconds)
  done (took 118.234762352 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.719233706 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.71578798 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.716283825 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71808823 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.7169691 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.717348437 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.718195867 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.718052821 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.71557229 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.716914003 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.716867545 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.717400815 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.717521707 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.716664297 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.717305092 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.715713355 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.718967996 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.717709383 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.717029429 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.719342863 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.715132708 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.717428087 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.717679233 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.717741898 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.718190307 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.716947465 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.716446304 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.71626668 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.717062333 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.719195941 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.717117036 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.717867059 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.716361025 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.718011259 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.717217668 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.718164504 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.717388788 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718189281 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.717953937 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.717642479 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.717812795 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.720047145 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.718475691 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.717459827 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.718185347 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.71951097 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.719217793 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.717968627 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.718559016 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.722679878 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.721150477 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.719626547 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.719931481 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.719232659 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.71866732 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.717724586 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718739309 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.716381425 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.718742435 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.716605457 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.717363515 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.717919907 seconds)
  done (took 108.154251162 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.715832807 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.716102815 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.717492184 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.719460642 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.717785036 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.71717366 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.717609518 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.720947393 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.720354185 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.717302489 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71981167 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.719169094 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.722175724 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721123934 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.720059401 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71998507 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.719603259 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.722256614 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.719690463 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.720713904 seconds)
  done (took 36.033496689 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.720192668 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.718576757 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.718053563 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.71978497 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.720686733 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.71975895 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.72046423 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718841305 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718836696 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721960886 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.720027059 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.71880305 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7193819 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.720204992 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.719565687 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.721217675 seconds)
  done (took 29.164978194 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.721447679 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.72148796 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.720788935 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.719984427 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.720902759 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.720849255 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.71999241 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.720679551 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.720706422 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.721015748 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.721722003 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.720507518 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.719594234 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.719076311 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.720149448 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.720421258 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.722945344 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.722060308 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.72074801 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.720652851 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.719737985 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.719865627 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.721507853 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.720211784 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.719834227 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.721171853 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.717794106 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.722748673 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.719356824 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.720179201 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.721601156 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.720829268 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.719750799 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.723311942 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.719381686 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.72009357 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.72071 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.720014624 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.721443431 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.725524418 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.722265085 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.723722756 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.719671089 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.721503964 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.721487132 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.72367574 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.720895205 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.723195352 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.720940361 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.721687894 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.722380053 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.721356398 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.720208655 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.72352988 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.721597031 seconds)
  done (took 96.31096337 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725568263 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.720153082 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.721483906 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.722874779 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.722048791 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.721843006 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.723146879 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.721579551 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722186865 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.723947934 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.723663095 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.722434116 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724342212 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.722740888 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.722881309 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.72343301 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.722774765 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.722150516 seconds)
  done (took 32.661141863 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.723809051 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.724676697 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.723686 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.723306758 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.724598957 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.728754242 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.724280484 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.724901784 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724064673 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.727821031 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723223098 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.726953203 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723676595 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.726110183 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.724588878 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723656313 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.725514622 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723110515 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.722954527 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.723465339 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.724613778 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.723573266 seconds)
  done (took 39.593802642 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.723123187 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.722524081 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.738111913 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.741634575 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.742613799 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.754174627 seconds)
  done (took 12.076323578 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724111442 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723577251 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.724996739 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725362074 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729792111 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725816296 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726596932 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725190858 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724322052 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725617018 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72548831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724229838 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725739541 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725485101 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72421625 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726843021 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724423299 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724051085 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724097027 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723477057 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724662668 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724387076 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723289935 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724336103 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724409781 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723416576 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724413474 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72687268 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726243958 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724564898 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724579543 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72518373 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723777686 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728823864 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723962283 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724626875 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725249842 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725360179 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725180254 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726296626 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.724408228 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724183771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725525908 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723892002 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726838973 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725817643 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72574525 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724954948 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726164757 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726429305 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726810612 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724493906 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725933914 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726534121 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725538199 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7268606 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726111198 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.726661177 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726692266 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727235125 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726472927 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727928722 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730207312 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728115528 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725629371 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726657998 seconds)
  done (took 115.540824608 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726114188 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.729559596 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.726203939 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727656505 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725386385 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.726077226 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.727181738 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726815668 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.727310227 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727066127 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.727238313 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.726742206 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.727881893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.727623308 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72643814 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726972413 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.728179781 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728144329 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.727173533 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728510919 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728299914 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727479973 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.727609121 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72745835 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.727846568 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726690939 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727088299 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.727899935 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728158947 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729641507 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728012657 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728230559 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727787752 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.727398855 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728828006 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729293672 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.727696528 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728697674 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728711909 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728219263 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729339887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728933981 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728258083 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.727750582 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729284351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73039667 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729298021 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731462065 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72918906 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729492589 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729492435 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729287171 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730470054 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731496831 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729164158 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728558025 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727937063 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729904164 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733501194 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729086274 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729782494 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729922794 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729825816 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729483837 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731094908 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7282632 seconds)
  done (took 115.732574454 seconds)
done (took 2366.700832865 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.819438611 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.983885021 seconds)
  done (took 15.463048163 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.905517859 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.858205775 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.743080074 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.751896483 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.742145732 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.761975269 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.759853551 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.743295959 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.745074079 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.743116027 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.745100869 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.93049274 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.760416172 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.742475023 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.744310893 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.835613472 seconds)
  done (took 50.190384375 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.744955838 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.747166984 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.75734325 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.74862567 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.748118558 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.766930532 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.778067658 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.75523351 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.808321485 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.757192353 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.86715613 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.757135318 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.745792675 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.80728086 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.758430832 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.760274369 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.838313 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.824193681 seconds)
  done (took 33.648527892 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.824772138 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.755995792 seconds)
  done (took 10.263548302 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.754873185 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.764840608 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.776717446 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.75737725 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.750330871 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.779616099 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.756685534 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.819317713 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.748716126 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.761445232 seconds)
  done (took 69.348018384 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.754394414 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.749403862 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.747761806 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.745251474 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.74753507 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.749328073 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.747640035 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.751393824 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.408160054 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.780019774 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.755133408 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.753160513 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.748922157 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.749799967 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.748171238 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.769621087 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.868232997 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.747625464 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.746320578 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.754406814 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.748348057 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.799118642 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.759786825 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.747176053 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.777705605 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.405152594 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.754246229 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.756200696 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.855853952 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.748688939 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.750537241 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.935580454 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.749617098 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.205795554 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.00274178 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.753085598 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.759092005 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.753911763 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.747483935 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.858744531 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.75143713 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.752093083 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.710790209 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.984278629 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.854709979 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.791512016 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.042298998 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.765523479 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.749667277 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.780102117 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.749937144 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.749073069 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.756737504 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.262516198 seconds)
  done (took 126.069650205 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.745738587 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.089920105 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.915610947 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.746516479 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029907577 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953656156 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.74556437 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793286339 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.750296638 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.974514088 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.002257579 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.851160054 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.746017779 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.74714433 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.747142424 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.743553953 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.900103902 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.817255659 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.747406625 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.744165446 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.775434697 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987017979 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.86743101 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.749377246 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.773721457 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.958782714 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.868455762 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.849655902 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.527390655 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.745670015 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808727926 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.751314798 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.750855811 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.744426001 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.901532987 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.83899553 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.831434311 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.754035911 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.746745782 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.747471918 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.492693842 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.956494943 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.847060821 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.877924962 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.997987157 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.951383574 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.531344168 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.745162163 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.483302689 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.912263351 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.976048148 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.98355727 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.871894478 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.750272031 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.275567776 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.748220445 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.74780944 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.995889069 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970521764 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.844595098 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.753683575 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.748524443 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.745999505 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.040227497 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.754626187 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.842460365 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.750753855 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.747813115 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.847707798 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.852549626 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.982199235 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.961388585 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.781325842 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.085527648 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.256872608 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.998006742 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.818776315 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00064254 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.753207472 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.746806411 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.828088288 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.589578521 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.002091843 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.033561523 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.000175067 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782851197 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.467996962 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.751009931 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.979363231 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.975679077 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.011180077 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.998901992 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.988284221 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.080583187 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.749073565 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.74981216 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.987137498 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.87457489 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.755239672 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.094730788 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980012969 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.276451138 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.779465799 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.054683695 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.885719317 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.75182701 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.387629174 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.755303 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.977520511 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.79030742 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.750843257 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.753254057 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.970009919 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.736707319 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.752964109 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.644897447 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.810811944 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.758339748 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984654519 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.756832057 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017818555 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.75600445 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988388969 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.207884306 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.779872833 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.98552606 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.999229066 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.756357159 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.991291634 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.999326433 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.86627956 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.028011502 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.655586126 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.749018773 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036026812 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.753765818 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.754848421 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.921746748 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.754550202 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.893899905 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.755088973 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.045715513 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.771841064 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987289231 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.757184284 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.011762468 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.784222883 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.803500368 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.754346292 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.881700618 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.7558604 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.019885585 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.910647213 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.760533699 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.751701624 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.56830072 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.756554419 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.89871637 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.983099382 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.774928994 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.83005174 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.409700316 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.754821979 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.840702715 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.775505638 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.142244231 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.75841747 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.001639873 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.755778604 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.75581831 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.755899938 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.043040359 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.987712051 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.758583563 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.752735548 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.658998824 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.756186424 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.75701345 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.936955068 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.142809428 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.752212177 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.958107415 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.758098747 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.883653916 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.760232903 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.832610298 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.095371818 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.755190894 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.755234687 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.757943874 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.757518976 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.75668651 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.0207247 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.778989391 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.247568976 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.893167967 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025822541 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.063120651 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.002034484 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.796512342 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.759566856 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006900221 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.757461011 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.815190641 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.758331663 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.776087033 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.983841446 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.759157744 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.960816433 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.029411082 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.75710552 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.804092999 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.756941822 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.753769894 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.754382319 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.905402428 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.838792381 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.756827261 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.759479251 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.873207137 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.878206203 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964804529 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.756564598 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.844005216 seconds)
  done (took 878.009563091 seconds)
done (took 1184.651496687 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.757760213 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.756054252 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.760844787 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.759430388 seconds)
  done (took 28.720788413 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.766905218 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.759486721 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.758670221 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.759156827 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.761232452 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.760375281 seconds)
  done (took 12.253344518 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.785313216 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.75550317 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.759918904 seconds)
  done (took 20.987666467 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.828736476 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.145619267 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.890383129 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.181589026 seconds)
  done (took 9.734330232 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.761443838 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.759688926 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.759230881 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.763777014 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.768977717 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.768810439 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.764201016 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.766050828 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.769269489 seconds)
  done (took 17.570811939 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.769765918 seconds)
done (took 94.722774353 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.081168076 seconds)
    (2/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.043574399 seconds)
    (3/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.761232659 seconds)
    (4/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.088463229 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.823676235 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.428374228 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.07986078 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.859567526 seconds)
    (9/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.561279978 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.76204386 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.15383167 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.116575471 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.151379228 seconds)
    (14/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.758694695 seconds)
    (15/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.941415608 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.784306145 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.760369039 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.058988766 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.976065441 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 4.652018282 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.924689132 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.784732266 seconds)
    (23/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.764790459 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.146757987 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.761929939 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.534141127 seconds)
    (27/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.150886748 seconds)
    (28/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.841858683 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.777355981 seconds)
    (30/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.760266891 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.225096283 seconds)
    (32/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.787167007 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.848558926 seconds)
    (34/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.762741368 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.914877774 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.976892313 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.893107938 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.49842452 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.72846119 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.018978076 seconds)
    (41/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.860552658 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.787816092 seconds)
    (43/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.762533709 seconds)
    (44/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.360236327 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.781469819 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.616981144 seconds)
    (47/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.857406319 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.894593326 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.865256993 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.016155564 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.899890859 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.800120734 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.895223834 seconds)
    (54/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.856769357 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 1.979764675 seconds)
    (56/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.768855154 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.093227775 seconds)
    (58/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.877519851 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.94931628 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.763188931 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.242802776 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.824423539 seconds)
    (63/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.498579608 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.996952288 seconds)
    (65/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.848442874 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.879239055 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.924284007 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.785250265 seconds)
    (69/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.918240193 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.854765274 seconds)
    (71/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.83422609 seconds)
    (72/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.268893554 seconds)
    (73/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.785314251 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.761802347 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.036209828 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.761591888 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.632082739 seconds)
    (78/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.777119164 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.776970711 seconds)
    (80/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.762879962 seconds)
    (81/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.226940762 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.437700642 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.054345607 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.66010504 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.763879108 seconds)
    (86/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.898491481 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.074739039 seconds)
    (88/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.943775613 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.092744174 seconds)
    (90/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.857336425 seconds)
    (91/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.794916976 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.764551741 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.831820663 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.780014764 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.919509657 seconds)
    (96/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.787998662 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.079074971 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.166714761 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.761215946 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.799550322 seconds)
    (101/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.840741394 seconds)
    (102/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.956096859 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.890703301 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.76948626 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.199828014 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.786488581 seconds)
    (107/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.014121007 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.767871745 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.089762421 seconds)
    (110/309) benchmarking ("sort", Float32, false)...
    done (took 5.467547721 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.769273717 seconds)
    (112/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.951096941 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.247415913 seconds)
    (114/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.254819313 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.769944066 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.058011557 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.763906954 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.92905099 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.785286709 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.890192291 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.764361088 seconds)
    (122/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.751111066 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.027019838 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.966267768 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.765214522 seconds)
    (126/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.4360145 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.899678315 seconds)
    (128/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.931385015 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.865020236 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.078358456 seconds)
    (131/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.984468337 seconds)
    (132/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.661231443 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.867709319 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.164805507 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.765951375 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.777770083 seconds)
    (137/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.076658969 seconds)
    (138/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.767723432 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.897890077 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.000096668 seconds)
    (141/309) benchmarking ("sort", Float64, false)...
    done (took 5.496547372 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.016985517 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.762514071 seconds)
    (144/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.516614201 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.069937264 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.03391717 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.204125318 seconds)
    (148/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.857505489 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.790034474 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.550314827 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.081048284 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.976129316 seconds)
    (153/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.767688906 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.667207349 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.901464987 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.767658861 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.786251701 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.432365187 seconds)
    (159/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.853684716 seconds)
    (160/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.776310509 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.827866074 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.91177744 seconds)
    (163/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.771897194 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.190128162 seconds)
    (165/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.86757279 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.771089654 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.245033134 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.004995717 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.767494792 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.872460444 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.163106094 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.939068653 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.960104442 seconds)
    (174/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.852882863 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.897165966 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.008150575 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.768321749 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.84933423 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.255654214 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.901368845 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.878382589 seconds)
    (182/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.911845448 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.772604216 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.104565048 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.782174041 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.765800909 seconds)
    (187/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.420187218 seconds)
    (188/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.80624079 seconds)
    (189/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.008136804 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.771734926 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.357790196 seconds)
    (192/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.797343134 seconds)
    (193/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.765984958 seconds)
    (194/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.891879685 seconds)
    (195/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.095655446 seconds)
    (196/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.211022987 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.396023075 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.686651756 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.772681993 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.986372956 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.831705717 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.835610918 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.792478151 seconds)
    (204/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.69944343 seconds)
    (205/309) benchmarking ("sort", BigInt, false)...
    done (took 6.773281578 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.913355697 seconds)
    (207/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.900420489 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.439492079 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.560540417 seconds)
    (210/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.877902223 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.001501213 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.771097466 seconds)
    (213/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.821003148 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.787858226 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.144457245 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.425331481 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.971451474 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.771357329 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.772361204 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.77475447 seconds)
    (221/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.023021722 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.866743137 seconds)
    (223/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.791132048 seconds)
    (224/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.770884351 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.217123659 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.946905368 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.796034125 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.859721866 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.015275104 seconds)
    (230/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.778421399 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.770122114 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.877960664 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.119867302 seconds)
    (234/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.024065117 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.776795392 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.023526735 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.778945937 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.632407793 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.145792111 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.749982299 seconds)
    (241/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.86599686 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.770993504 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.454776043 seconds)
    (244/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.951935873 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.904969716 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.127293445 seconds)
    (247/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.976670212 seconds)
    (248/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.942935221 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.879531269 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.881753371 seconds)
    (251/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.963295149 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.775597524 seconds)
    (253/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.067120401 seconds)
    (254/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.128030007 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.906524255 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.886190696 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.954778768 seconds)
    (258/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.774439306 seconds)
    (259/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.943259356 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.101877328 seconds)
    (261/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.883702547 seconds)
    (262/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.024122713 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.893455885 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.124185093 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.125669683 seconds)
    (266/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.772445175 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.438369593 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.930689318 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.790166248 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.771507923 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.894604862 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.097543595 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.013167263 seconds)
    (274/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.880429063 seconds)
    (275/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.810181438 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.39540187 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.777433562 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 8.159766552 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.60163808 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.084592061 seconds)
    (281/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.555522745 seconds)
    (282/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.852226959 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.074926689 seconds)
    (284/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.120814362 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.867812105 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.904247549 seconds)
    (287/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.235152539 seconds)
    (288/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.348061177 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.787002672 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.972712837 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.924602735 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.676075512 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.778887682 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.06068219 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.903437376 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.777575937 seconds)
    (297/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.012800136 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.087086141 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.779752083 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.026238652 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.862274214 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.771989515 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.082962686 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.903076637 seconds)
    (305/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.148417202 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.403015003 seconds)
    (307/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.8476416 seconds)
    (308/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.854036746 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.150193972 seconds)
  done (took 975.504456266 seconds)
done (took 977.254487804 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.802584183 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.794816151 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.776126715 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.79806936 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.890013259 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.823509886 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.791257828 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.781869842 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.827510063 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.8337378 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.776252101 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.821603764 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.779576437 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.779384928 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.778427607 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.794437416 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.085667219 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.809648188 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.795792161 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.789353381 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.796195832 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.777526393 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.828488572 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.822580238 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.783528428 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.783059047 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.782762414 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.797182376 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.892241924 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.780947662 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.784219907 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.791236021 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.087414656 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.805577327 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.7771841 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.798274518 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.790903776 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.791436514 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.784955607 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.811923744 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.172605281 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.816507019 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.781196561 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.779720692 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.779455286 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.786571671 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.780600797 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.788189689 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.796231668 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.795147187 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.168711971 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.834157372 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.783628325 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.782171585 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.79499506 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.78097636 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.784962623 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.797258613 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.80087199 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.796598706 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.07479783 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.821258796 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.785498564 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.799816991 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.791057767 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.203565591 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.817356247 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.787353872 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.175195291 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.827640141 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.204895947 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.828727179 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.784217613 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.796446599 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.813243807 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.089347512 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.810027569 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.780589218 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.789752964 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.780743212 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.793238217 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.797151926 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.785090572 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.782883317 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.796629241 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.828264393 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.794743653 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.781879588 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.792929966 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.801301976 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.790302159 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.793786964 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.785928042 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.779412792 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.795971377 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.786439838 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.786220912 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.786371693 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.788433133 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.79801774 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.175499003 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.83704738 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.780824429 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.779988358 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.782305024 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.796073202 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.172540538 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.821719342 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.804643605 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.831377503 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.786479131 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.075758359 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.814647612 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.800096942 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.793760042 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.785394752 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.78037052 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.075647057 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.201949451 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.837298891 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.78370291 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.782265426 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.800532174 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.785560172 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.781442461 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.091094358 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.816309945 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.798882119 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.907780242 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.796740873 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.817991959 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.782642211 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.787288337 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.832974994 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.801401612 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.815855623 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.786043258 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.800321837 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.801397432 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.780941586 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.79789231 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.797692849 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.784171247 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.792248707 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.782199795 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.833760223 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.800294514 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.799502557 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.805657347 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.907199073 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.782552207 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.077086095 seconds)
done (took 280.568753071 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.86389074 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.781724372 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.882349214 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.784444212 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.874165931 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.860642798 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.784806731 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.783973371 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.783838705 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.269255945 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.783419677 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.791504964 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.785335844 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.785734407 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.856761449 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.78592541 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.784541808 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.221856822 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.785629773 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.865242492 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.787089601 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.785749717 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.786550535 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.272219313 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.786365907 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.784032282 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.870077639 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.785482007 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.230908066 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.783091309 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.783526124 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.220885586 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.870485669 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.811755668 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.793761443 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.791389105 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.876216476 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.796594428 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.85278382 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.854158169 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.882844221 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.818376349 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.785750706 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.785784564 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.78994163 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.786988301 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.785359314 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.818175433 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.784724463 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.794347898 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.220244662 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.791688707 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.795627505 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.787859475 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.787625657 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.813671317 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.787833842 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.788794211 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.866823569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.786997455 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.870347673 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.282644145 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.275524033 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.786812482 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.786288419 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.787242276 seconds)
  done (took 179.604351622 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.852236584 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.863708087 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.851303216 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.791980433 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.837627122 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.854293272 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.79375168 seconds)
  done (took 14.563444591 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.795074736 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.78868194 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.845818395 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.845521745 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.788054611 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.981109742 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.788140227 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.800827105 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.793313433 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.816132194 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.787979328 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.788001725 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.796559174 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.789368826 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.845858978 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.80057409 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.903739729 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.78951932 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.789824447 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.936607394 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.793843907 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.796648723 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.814001109 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.801594273 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.787240401 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.796634971 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.358629498 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.788813024 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.78830262 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.789699149 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.789508002 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.830453907 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.788219074 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.788892392 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.789797934 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.917369748 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.790422043 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.789842155 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.790215295 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.788136404 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.788538154 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.790548487 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.790525548 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.790909093 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.790159532 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.814004888 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.788920962 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.789754738 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.790617228 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.790916553 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.816644877 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.791985853 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.791091791 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.796448012 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.832698151 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.794416372 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.791753818 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.790670286 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.791290966 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.791421888 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.939400588 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.850212789 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.791793802 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.8487711 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.791174279 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.791649211 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.791157349 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.791150455 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879258925 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.792026991 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.849622362 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.7922239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.988499915 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.815538497 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.79399937 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.795733698 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.794867959 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.791474416 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.791707738 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.799334073 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.791195809 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.794207745 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.798695698 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.796746908 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.791908802 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.905244603 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.933791096 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.792517224 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.79501613 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.799738758 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.792068616 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.835349068 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.792062916 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.792447403 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861512375 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.908136912 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.819499558 seconds)
  done (took 198.163338038 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.800458004 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.79999693 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.794681852 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.807351579 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.793729726 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.79402527 seconds)
  done (took 12.513913488 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.794720819 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.796848492 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.793490668 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.792608151 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.794521294 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.793520949 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.792802477 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.795714061 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.79742946 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.792961769 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.793097264 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.795825015 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.792220421 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.793989935 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.793297647 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.79291791 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.795186816 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.795388721 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.793445522 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.794623283 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.044338968 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.794769511 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.794556 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.798723357 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.79854147 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.795086214 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.806959793 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.793045578 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.795766078 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.802037273 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.80019267 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.794011193 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.798018569 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.802735567 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.799192208 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.7986232 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.798423669 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.796462662 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.794071578 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.794651499 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.796004358 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.795500669 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.794554172 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.795757898 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.79676526 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.803710349 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.801156081 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.809287402 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.794245746 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.796358938 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.79797846 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.79476433 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.796450454 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.796785467 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.800675628 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.802805739 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.801434196 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.795266257 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.795328599 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.798637842 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.799435606 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.796476017 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.797971007 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.798616239 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.801643214 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.79828841 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.801226144 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.801664096 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.794425052 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.794924196 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.798277483 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.796137617 seconds)
  done (took 132.353463989 seconds)
done (took 538.931621899 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.012961943 seconds)
  done (took 8.740159997 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.943058393 seconds)
  done (took 8.725058895 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.263318357 seconds)
  done (took 9.991441727 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.860976611 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.810804724 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.807274197 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.803098121 seconds)
  done (took 29.037384953 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.041484982 seconds)
  done (took 8.768373347 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.817847464 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.793390077 seconds)
  done (took 15.404237751 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.853906064 seconds)
  done (took 8.581255698 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.823990505 seconds)
  done (took 8.559862509 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.80650985 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.806933198 seconds)
  done (took 15.365760848 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.798719547 seconds)
  done (took 8.527649944 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.950052153 seconds)
  done (took 9.78161605 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.821781915 seconds)
  done (took 8.619828984 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.82798091 seconds)
  done (took 8.556177171 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.811948326 seconds)
  done (took 8.541021668 seconds)
done (took 158.92735906 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.799853909 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.796891058 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.795223338 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.797413363 seconds)
  done (took 28.917842217 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.830691638 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.832428683 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.834558785 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.844783953 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.834642661 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.832584864 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.825144861 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.82444815 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.841382173 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.834804773 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.835643994 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.835395397 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.832075682 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.826819211 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.834162718 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.834487458 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.843252992 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.8339227 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.824876628 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.834005843 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.801165964 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.845143433 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.835937521 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.80005267 seconds)
  done (took 45.681564384 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.99041691 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.872226562 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.952697025 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.850855726 seconds)
  done (took 9.395779824 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.851619381 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.852645922 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.864639541 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.901791239 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.926100717 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.863588684 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.82317583 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.821732376 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.807665317 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.853183659 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.927764814 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.847197051 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.937238415 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.80207466 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.987209723 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.800701283 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.800242355 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.852236391 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.902690214 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.915684575 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.801681304 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.850972326 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.856026201 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.850066758 seconds)
  done (took 46.42956365 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.804272574 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.808996655 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.809237386 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.803245823 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.801376062 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.801564175 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.808935735 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.802899145 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.823556601 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.803670752 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.801191339 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.804203069 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.809177817 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.80369685 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.8010899 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.813505855 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.817577228 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.80339233 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.807003703 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.809205351 seconds)
  done (took 37.870295754 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.79994785 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.645134946 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.14455897 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.0526875 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.799838575 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.803184209 seconds)
  done (took 30.977010198 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.813072262 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.807515497 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.801527267 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.859022708 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.944525372 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.808901774 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.80197219 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.812361241 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.849698257 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.866586912 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.821930751 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.832536676 seconds)
  done (took 23.752261291 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.801586204 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.804619716 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.804114016 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.815560005 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.81167608 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.813680293 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.810085229 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.800666105 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.816515023 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.820005157 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.811074905 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.813619846 seconds)
  done (took 43.459603323 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880608457 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.675221371 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240393154 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27114791 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.326476564 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004038891 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.802135558 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.886466449 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.802046105 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071876015 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.130866697 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00385537 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.04520053 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.523979136 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.806912237 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.274538177 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088736559 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012728384 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829049843 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469042313 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907081205 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.28535534 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.423091809 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.910741602 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005250164 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.924213203 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.066354025 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.751953658 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849828043 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806180081 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808534451 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.804073418 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075146877 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922019768 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873628701 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807595592 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.216497741 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.505588528 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.830021679 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.418012988 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.283698235 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919372061 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806169443 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803805139 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.728947752 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336403633 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892371048 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.807107532 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.503952105 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.803606893 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807641356 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879402522 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.806658678 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.613120299 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487860127 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.07153481 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.804844308 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806546324 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36582887 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816347145 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39739816 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.738836068 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.888235762 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.419811111 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255626195 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.956883909 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.803775682 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.805590486 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729925274 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.433119542 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916456894 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.940157604 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.821003546 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.444430612 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096250713 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.213419741 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.856653748 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074044434 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.577872726 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.737836146 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021318667 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.754729196 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731908406 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.649725126 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.732185598 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018358907 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837488247 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.403472988 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84053882 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887758475 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.811524691 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820562863 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808813475 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.018539701 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.6988633 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806354812 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.097921584 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06304011 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822758109 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.890791127 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731997269 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.808260769 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050789289 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.008812447 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.028279092 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.276150805 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891543637 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.740221728 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.820571226 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.699325899 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.815854981 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.074034968 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864652491 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805686346 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923491936 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.754602593 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048915542 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758184033 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.905751257 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.174499351 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044331877 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.142042349 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.050540828 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869230888 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.814495307 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.809657276 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.491829729 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41710606 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.024298621 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.81889793 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280627808 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.814074472 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.809203667 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741672429 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.468449193 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.17082469 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.885425604 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021715475 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.748272191 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083833166 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734606573 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945366734 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.807349952 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.021673251 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.450161476 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.892456644 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056561238 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.032118318 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.027301448 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818795745 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821005564 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899788433 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824272525 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.212412795 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054222237 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.809985597 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.810391445 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.501395475 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.85966412 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809860812 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.811896726 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.358345171 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079238357 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.831953561 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.810899786 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.683752648 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.818505268 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871489629 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812380301 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.81250505 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.329673805 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.313613834 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.814121123 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.470101721 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029337727 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81233764 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.433360436 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983805175 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.821862347 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076052283 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873578072 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.73637761 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.509239095 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.51034772 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809039089 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.736231071 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.810484405 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813440711 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813786917 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.996889557 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.079228305 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860567956 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.482730492 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.914374198 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815366163 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.811841479 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810905656 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.301392424 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.823096484 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286794945 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937711052 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939419197 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.820748346 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.737301671 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.812578837 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812689288 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.811759076 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.756925065 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85799812 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.48791422 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011276995 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058212093 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.215808484 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819137604 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.487892239 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.925408751 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.825384922 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.108562908 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315825277 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.908859663 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878903588 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.817032401 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.489678632 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.5429954 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37399651 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102743511 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121399607 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153842043 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.161148243 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.131513977 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.897151026 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038727395 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331897292 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867730713 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.897476928 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751438803 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827901573 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.457189532 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163683092 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820429474 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028921459 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093403888 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.171238692 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946154114 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016969097 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843020873 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.602922125 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834844591 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.347353408 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828412463 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.191856895 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013673783 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898132305 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.110055386 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.886277011 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.812189127 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148398604 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853572618 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.51809372 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.16523886 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.182739574 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.277392929 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035125833 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.815557219 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.252540574 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160913956 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.970980229 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.929650801 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741539 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.81846546 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.819541061 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.82550184 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.784748734 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.653349374 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.057205601 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820022865 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039970281 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.91071491 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171713366 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.71507583 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.81670403 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814346969 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058118348 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470969374 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964251354 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.092469416 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.385910507 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823630455 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.741102898 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741064821 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.515517139 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.819058719 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.778198304 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022809842 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.916948327 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.496807311 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.169345575 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122607483 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057880029 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.826600472 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.080929775 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088613539 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.306823212 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834768496 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.912355554 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.118385797 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.527196152 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.029760489 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.042080272 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346572237 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034791848 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257704277 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.784650376 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.814083042 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021774212 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.029458845 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.182946176 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986900109 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.526328381 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.82586476 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175296366 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8732398 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.181413675 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000830859 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.903752043 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822840487 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893671505 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819497543 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.821636014 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823066223 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826387141 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.187253579 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.932921451 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.828988787 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89241216 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831737687 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.945859013 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.826885122 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080226427 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168997944 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.137420406 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877769002 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.817125659 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816820022 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74452626 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947212256 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.256465309 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087836796 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.936934682 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.9578988 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837216488 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.149782783 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412296602 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131332328 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090076726 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.699699975 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486605134 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941627923 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.034858554 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823922958 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.020330501 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027837645 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11241891 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374728097 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.987764092 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012306179 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089296149 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178034351 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818669347 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399570355 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.827787516 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217710525 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.848260744 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.165630734 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069513433 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821377214 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93850475 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.821203799 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.015576472 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.268706444 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.444324243 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159342597 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668528658 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.822153587 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084828631 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.136721429 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119473765 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896641899 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825082172 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.507845013 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951760448 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.66959741 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.03791482 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820387705 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02373476 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.530308234 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.823449982 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083969558 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118796082 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.819064009 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.689212753 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824986281 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.823275357 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034238633 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026677301 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06160568 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823861808 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.820897017 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.626316545 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086987216 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876650491 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.746473514 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.821424003 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864348661 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.048359467 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838486978 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.333494096 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.519828877 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093128647 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.723378513 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837979908 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.260671276 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195390129 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140945729 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.348300437 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038421226 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370715671 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.692967004 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200288556 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.822646953 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.247043832 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203744501 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.822486793 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.350159637 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9339339 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.082661728 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19543098 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.830770207 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50959032 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.845025739 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035707484 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179897372 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75122586 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.827001104 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.868188998 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.822067322 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.83193642 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832679965 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.710384693 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279343941 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.66454124 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379481469 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.824824143 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.852005142 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.145855285 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.498631419 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933003126 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839263156 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822993584 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.533919301 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.106669463 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.066040233 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356823424 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.916383886 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.823469034 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822072972 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.741980521 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005256963 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.010288901 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09733324 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.210003868 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.934339698 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824949737 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.030425571 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026117081 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.16249634 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946158489 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.986811811 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941086125 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.761241607 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.527697725 seconds)
  done (took 1633.393634835 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.831818927 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.868987369 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.863321326 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.904574033 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.894935421 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.861082526 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.941571663 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.870899799 seconds)
  done (took 56.791354777 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.828441989 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.987246124 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.834221043 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.828115457 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.833453778 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.830526828 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.991625588 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.847807677 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.832560473 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.83471749 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.832777019 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.850106076 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.12442766 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.850859846 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.829210167 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.829837396 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.832376603 seconds)
  done (took 73.627494975 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.831846199 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.092350003 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.861850807 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.834545674 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.821755644 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.834213832 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.916892052 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.891968147 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.833023433 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.083222576 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.129767329 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.855258985 seconds)
  done (took 89.747091057 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.843376111 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.833554754 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.831612521 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.831291723 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.831573109 seconds)
  done (took 10.939418976 seconds)
done (took 2132.729586325 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.06641125 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.022825603 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.080100718 seconds)
  done (took 5.862646916 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.971423022 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.025053398 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.138127203 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.116756777 seconds)
  done (took 10.017390251 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.135372915 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.206893103 seconds)
  done (took 6.103867127 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.150017769 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.866286788 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.203516455 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.836509242 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.833986738 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.837307656 seconds)
  done (took 22.275473609 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.83259325 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.832949399 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.834025645 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.834998928 seconds)
  done (took 9.099338806 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.828917222 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.525684158 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.831541345 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.842900524 seconds)
  done (took 20.790780256 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.980323806 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.947979423 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.975491466 seconds)
  done (took 7.664392063 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.053235768 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.6293803 seconds)
  done (took 6.445236314 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.991095928 seconds)
  done (took 3.752572114 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.860167151 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.104611775 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.321613821 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.350662167 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.417890651 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.651011673 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.149261574 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.055392715 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.273405915 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.28897856 seconds)
  done (took 24.235651479 seconds)
done (took 131.294066741 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.175330849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.870199059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.048851968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.189897197 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.076190832 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.04865739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.032165361 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.179274794 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.882089163 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.85699988 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.197783772 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.077436806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.991902323 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.858738368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.992563053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.856193136 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.069119734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.199042304 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.877723121 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.094100805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.061260403 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.836450633 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.029878598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.854334433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.069477418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.996079089 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.380324176 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.863158994 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.019001725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.395388035 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.02231324 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.265262141 seconds)
  done (took 167.131962099 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.835736154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.834374621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.836928974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.835052554 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.306722422 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.835113654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.834891119 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.836743432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.250741246 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.236063531 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.837595083 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.295018676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.839175661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.8354747 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.837686006 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.836731253 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.399806926 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.838460653 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.835433086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.835655419 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.835343609 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.128563313 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.837749224 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.144298624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.390629982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.837052298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.83644486 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.836222244 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.833461502 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.838415608 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.838851389 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.836892075 seconds)
  done (took 207.994997018 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.833483818 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.836771249 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.838575951 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.837078035 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.839014834 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.841193324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.842348087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.836399618 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.484029628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.480422965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.838190773 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.840407919 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.836775886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.836634435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.840176081 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.838219077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.836868982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.836965243 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.838368188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.838759641 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.839603661 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.566174094 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.841492829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.578866183 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.842447381 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.846081831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.837367802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.839089225 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.840294658 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.83870055 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.83835552 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.838842807 seconds)
  done (took 219.366472225 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.084792369 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.839382865 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.839654277 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.758854846 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.839743383 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.837913426 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.813977312 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.086383319 seconds)
  done (took 18.873591482 seconds)
done (took 615.138717188 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.203235946 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.049560775 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.015217269 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.864379623 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.126588479 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.909314001 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.857800488 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.918748368 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.675343116 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.932178241 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.529775232 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.883006464 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.623296646 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.884645964 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.979156285 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.915070908 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.428761579 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.524335711 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.043381295 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.943717256 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.039473512 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.766025911 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.938136286 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.701631975 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.651911334 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.814042698 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.906942952 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.42711611 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.869868172 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.017294247 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.531177162 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.134371782 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.875779053 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.858131513 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.910688702 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.890038528 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.08927231 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.872986851 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.983342096 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.559133082 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.946985387 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.578501695 seconds)
  done (took 101.439983246 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.850648194 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.84325666 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.84633804 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.843401144 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.854447612 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.843847461 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.844318572 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.845840995 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.845095518 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.844676759 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.845389079 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.853465115 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.845532726 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.853600713 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.845116971 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.845265199 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.842756958 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.853275644 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.845953224 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.845196078 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.844199871 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.845087221 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.841519653 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.844318262 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.844853309 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.84506931 seconds)
  done (took 49.786504672 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.841215689 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.012117858 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.086753444 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.866215107 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.841336432 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.845174408 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.862988339 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.849061618 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.845665347 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.843406313 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.944376515 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.848809263 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.858824113 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.085745714 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.862889048 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.843132341 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.842766652 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.842390933 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.020117299 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.858007778 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.862225116 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.84758724 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.862913258 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.858539042 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.844260148 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.84399759 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.846917726 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.342097216 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.852394594 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.945513181 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.886917608 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.867239753 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.29294382 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.096498299 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.899203828 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.852267244 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.84377935 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.949428253 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.849548053 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.844167902 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.861484906 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.849544607 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.087408471 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.376296674 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.859060707 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.844396998 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.353438548 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.958951377 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.885897347 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.853967549 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.088105466 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.862492529 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.844527048 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.842734247 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.879140224 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.852033608 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.843812307 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.213271445 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.858047323 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.862191651 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.851519486 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.844111032 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.022016733 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.855616884 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.012918068 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.855226538 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.852822675 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.84531204 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.08837162 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.861928919 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.386038056 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.860777367 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.845111419 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.947772236 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.018760871 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.377155262 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.85814782 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024174962 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.308626275 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.873026791 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.855415518 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.334381239 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.872310693 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.854348526 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.845227508 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.848395069 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.846726716 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.8894719 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.861776606 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.304048458 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.383647622 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.23035481 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.87346475 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.860899535 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.845280135 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.211867764 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.855660087 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.847361599 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.081065303 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.393664188 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.861657475 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.852954932 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.364137074 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.861862545 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.865806944 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.855883089 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.094424302 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.862538176 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.894198075 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.847496799 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.853644037 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.850858712 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.866565517 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.852190712 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.847268133 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.359272591 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.97234575 seconds)
  done (took 229.887392173 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.851355972 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.852982734 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.847418037 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.85028608 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.8464888 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.847609396 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.845855413 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.846302136 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.847816912 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.846681896 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.847505879 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.847264154 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.848330169 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.847259885 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.852580458 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.849706029 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.44974423 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.84872483 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.846719995 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.848003823 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.488120861 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.852402818 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.848354041 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.845885258 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.850106535 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.85086381 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.85511474 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.850629373 seconds)
  done (took 166.789574856 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.847544065 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.96278388 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.873756894 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.877096233 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.857069209 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.850943556 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.947148809 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.867052271 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.855975431 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.849653614 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.851358038 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.908598732 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.859551923 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.947153196 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.87974397 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.956136502 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.954398873 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.857904783 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.851783299 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.851368469 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.877173878 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.856494145 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.909336747 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.971900262 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.871559398 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.962811742 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.872939443 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.850659613 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.850262653 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.965106366 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.872244694 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.91123217 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.878910886 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.869930906 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.971199189 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.968979288 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.956333218 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.955570989 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.857725532 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.851895319 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.852853825 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.849377797 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.962060171 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.873027707 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.852576472 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.963894268 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.873213322 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.85191374 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.85268212 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.850578438 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.863698509 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.87054031 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.918364624 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.981351411 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.88606003 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.874877219 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.947887832 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.974087919 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.852568603 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.949199581 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.856701352 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.9653385 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.872888486 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.851061994 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.853596685 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.854897654 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.881225707 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.960927176 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.956538297 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.861219265 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.949241535 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.887362795 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.863292916 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.852058344 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.853594005 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.963579011 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.968788675 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.88961646 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.894317511 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.886503534 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.861995107 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.851517994 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.852384455 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.8703204 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.857398779 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.96897489 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.972360476 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.860570528 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.854958693 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.853775814 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.856215869 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.875540607 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.977047187 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.88945898 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.956548535 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.919958785 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.926346855 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.868061615 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.866896979 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.859515087 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.916937552 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.870153716 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.864049761 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.143006178 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.912811924 seconds)
  done (took 200.900178412 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.224386682 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.900854084 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.908975104 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.160060154 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.215832074 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.771557723 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.902007182 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.898019889 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.923938299 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.083256649 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.972140511 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.916999194 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.890495785 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.875737582 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.89763708 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.924219896 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.906084604 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.237034173 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.119326254 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.035105141 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.888289026 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.199558816 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.219653217 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.484463817 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.949123957 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.300554036 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.464246369 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.031854635 seconds)
  done (took 61.09016535 seconds)
done (took 811.660533731 seconds)
SAVING RESULT...
DONE!
