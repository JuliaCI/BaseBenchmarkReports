cset: moving following pidspec: 24924
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341743854 seconds)
loading group "string"... done (took 0.53586434 seconds)
loading group "linalg"... done (took 6.727465113 seconds)
loading group "parallel"... done (took 0.156780554 seconds)
loading group "find"... done (took 1.183141665 seconds)
loading group "tuple"... done (took 1.776208662 seconds)
loading group "dates"... done (took 1.207631854 seconds)
loading group "micro"... done (took 0.295931217 seconds)
loading group "io"... done (took 0.902255397 seconds)
loading group "scalar"... done (took 36.793526676 seconds)
loading group "sparse"... done (took 10.92739546 seconds)
loading group "broadcast"... done (took 0.907772056 seconds)
loading group "union"... done (took 11.886149518 seconds)
loading group "simd"... done (took 4.138803152 seconds)
loading group "random"... done (took 8.567551487 seconds)
loading group "problem"... done (took 1.854958088 seconds)
loading group "array"... done (took 19.899628714 seconds)
loading group "misc"... done (took 1.677545861 seconds)
loading group "sort"... done (took 3.104158144 seconds)
loading group "collection"... done (took 16.487370851 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.473329722 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119807615 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112397311 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115777661 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.136708845 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112298646 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120134989 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081552043 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.832233063 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139190642 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116775602 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.405031522 seconds)
done (took 4.933077583 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170739348 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081988394 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081227121 seconds)
  done (took 1.296468392 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06437924 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119259519 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065459042 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066377133 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06705144 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065005934 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065087131 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064822212 seconds)
  done (took 1.647007353 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072053401 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06754213 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067827327 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066619276 seconds)
  done (took 1.408251006 seconds)
done (took 5.727051825 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.754338699 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201229547 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180442733 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.389268234 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128311544 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.163455006 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639472261 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.307952897 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180236351 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079426427 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101078039 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316772099 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104570923 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64365097 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078854549 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088970831 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137626291 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42014354 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.065916513 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081098989 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08791562 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129949419 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085586111 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074487645 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142202525 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067205602 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127313595 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079961923 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065749146 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204522271 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171619765 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655367861 seconds)
  done (took 10.126180703 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094136186 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096103729 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067387543 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122477528 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095442207 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06837869 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070002397 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066394747 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085152069 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126301961 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087266014 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.0995014 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064316612 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067570045 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083499537 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202430665 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078865453 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079808581 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069553629 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07418076 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104048258 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076548341 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076631003 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075904072 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127368553 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178859666 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097472493 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09655128 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065832641 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078934019 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113961527 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12432289 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064570712 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065630163 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122454429 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09351556 seconds)
  done (took 4.52934006 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.892396039 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.13790584 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088565118 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15913015 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066583326 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105088668 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107976151 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064799076 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082372039 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196259175 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.044817775 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.429661774 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113010078 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.085126038 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066579642 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067322867 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0663412 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.342325147 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109760967 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11130223 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082250461 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072654315 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068027639 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34275823 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065783754 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065514577 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067039738 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057238981 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110581696 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066815532 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.963819102 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.113627508 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065680203 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099215654 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162403336 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065242822 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08568706 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131350581 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064144049 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063505866 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144445701 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07212729 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064269118 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080860529 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100782155 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.099996133 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061968464 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.19705508 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160378569 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066120525 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067734235 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082290733 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.6944796 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152573908 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077852596 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067525614 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243304733 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085038803 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06512108 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063783169 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063375974 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174307955 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128146806 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06677436 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065576491 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065624306 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067400871 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348551116 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066238538 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.76723643 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069668614 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076322498 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067683207 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065265975 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072326316 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070766054 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083694827 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065384191 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06692419 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064828206 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065227425 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067028053 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083468846 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187935765 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065744796 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065881708 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064798163 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089217448 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095674418 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068073165 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.063971109 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098538991 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067124673 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066769897 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.099567587 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065670357 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082531459 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067742741 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111783891 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065076657 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088405622 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065842973 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09630101 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06690047 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097384268 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076109758 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.158332569 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.213476894 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063906831 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064044939 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066629917 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067362673 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066173367 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067649461 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078182546 seconds)
  done (took 19.707442308 seconds)
done (took 36.386839931 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271408073 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073186702 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073947712 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073507551 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073708852 seconds)
  done (took 1.788232514 seconds)
done (took 2.989232837 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118302366 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097280782 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063627139 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094330059 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063335243 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098619526 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097887632 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08044134 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097765435 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063337948 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095154094 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063475665 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063088179 seconds)
  done (took 2.317706315 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081324257 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083333589 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068845959 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081802411 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06293766 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081663607 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079469686 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087022341 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079580323 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070732176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063348222 seconds)
  done (took 2.036838412 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080097033 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082698857 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068911243 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08004102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06240017 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080261867 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079472844 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084034839 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079972895 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072214408 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06287573 seconds)
  done (took 2.02805631 seconds)
done (took 7.572070376 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075850253 seconds)
  done (took 1.263186054 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.57829118 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.061224921 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079973438 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110166611 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180926944 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117589654 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27172642 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084865976 seconds)
  done (took 8.852332699 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086320806 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069645554 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067712365 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066955477 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.080508816 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068176328 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070775892 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069560662 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068811768 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06844378 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069884567 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067281078 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071021679 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069727939 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070124325 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070413997 seconds)
  done (took 2.391695257 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090830333 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089581553 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072004468 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073478319 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070605088 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070834168 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073143255 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071883551 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070023741 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070761107 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073656315 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072005759 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070525519 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063749696 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072853419 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07425823 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06955575 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072790949 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073825889 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073721873 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073057592 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063001028 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069997425 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072842521 seconds)
  done (took 3.041061819 seconds)
done (took 16.742829778 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109612816 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070507461 seconds)
  done (took 1.374849772 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079131974 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081090392 seconds)
  done (took 1.362727597 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079947616 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06527551 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087515669 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076585826 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065125087 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065100381 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085528212 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065214531 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065095241 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065276695 seconds)
  done (took 1.923811263 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067283353 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076432379 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.0691731 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079286103 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072156951 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063225547 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071234355 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066473326 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07578335 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061545073 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069637965 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080343478 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069620555 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082436195 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07114922 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066933577 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069175545 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066213618 seconds)
  done (took 2.482925735 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064802449 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066384755 seconds)
  done (took 1.339460432 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065816306 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062845314 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065421133 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064994114 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062416898 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061694127 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062436047 seconds)
  done (took 1.650123969 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.371503416 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109443919 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.291648956 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069523322 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080665944 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247643779 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064691115 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069877039 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069690799 seconds)
  done (took 2.62168654 seconds)
done (took 13.963471899 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077379926 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084086106 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093331062 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.338026575 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090061284 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.0652754 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11253837 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.1840384 seconds)
done (took 2.260799475 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.204410731 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.558484888 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.365639539 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195950792 seconds)
  done (took 2.331961298 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311803825 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090228899 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.057945422 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065273551 seconds)
  done (took 1.743971765 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065396843 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068042436 seconds)
  done (took 1.347762905 seconds)
done (took 6.844904457 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06527579 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08460965 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065113947 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062994641 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065038279 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062558859 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062633083 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06313094 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062813799 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064758482 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067636317 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06482783 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06480027 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064627006 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06269298 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062930144 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064822862 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062725471 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064645329 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062271209 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062280852 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064727292 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065788343 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06278395 seconds)
  done (took 2.805847871 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081742398 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065204899 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070232743 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06983705 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069042254 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070002439 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07043045 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06502423 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069983881 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066831066 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068525137 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068686242 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067043682 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068926236 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067101393 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068870159 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06997822 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065254356 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067186327 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069345201 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069683664 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065495601 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068512435 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070276365 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068799712 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068728182 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067164357 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065492929 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069718811 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068964203 seconds)
  done (took 3.284582062 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068892342 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062768659 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062806479 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069959102 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062472919 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063923047 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062379393 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063104858 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063742026 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062797325 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064047397 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062646081 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06307912 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063904362 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063818053 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066065135 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077721596 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063166294 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062492243 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063577885 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066305121 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062619676 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062809121 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063055209 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062695909 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062069227 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062912586 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062774395 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063833682 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062471002 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065577455 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066320463 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06279678 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069059176 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065739416 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062360099 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066382043 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06217308 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064682249 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062778784 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062012784 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062074526 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062847795 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069312037 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062828703 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064316688 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062880375 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063842098 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063335255 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065831528 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062460841 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062491511 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06412007 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064304406 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066277297 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062131036 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063223748 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062457094 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063523194 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062637621 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061772429 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062050434 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064529959 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062627964 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07665214 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069085076 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062056633 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063772594 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063403114 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064679526 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063840067 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07555329 seconds)
  done (took 5.860295042 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090489861 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.197466625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064374789 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065059127 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061500344 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064676822 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066535 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063712181 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064471324 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068277603 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06313735 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063870529 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063989524 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075777744 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063117571 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06418238 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06837856 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060857662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062950409 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06646229 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063286929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066372199 seconds)
  done (took 2.821847635 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151901634 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069372339 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103913603 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071440666 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066424421 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071730271 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068680537 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068862185 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06900137 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067355968 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067454196 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069087914 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066105428 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066915905 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067132411 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067237087 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068781921 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066829037 seconds)
  done (took 2.574914917 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075757455 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065165448 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084965568 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065561432 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064873391 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06764892 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069514745 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072686031 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067499423 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065238745 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072894583 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067172245 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067393353 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064842495 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067249567 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064989169 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067264608 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0647804 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072615638 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069318513 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069367237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072431671 seconds)
  done (took 2.751787651 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078614416 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066835589 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081766419 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067789107 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061121973 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063232099 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068804329 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064875841 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068768357 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066542793 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065123587 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06321894 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068332987 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065332629 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068632492 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0648428 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066902433 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065043694 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066506433 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060939281 seconds)
  done (took 2.57719234 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085585248 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067126206 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066390199 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07461589 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066548892 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066505556 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073717347 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066572285 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065977468 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085577303 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066266855 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065815433 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074284256 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07091084 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066264128 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073397983 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073538571 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073252941 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065804184 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065773858 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085490504 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06609208 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073421572 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066076157 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066202914 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065902201 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066242628 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070485529 seconds)
  done (took 3.208227364 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066014157 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064394059 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062396423 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063131682 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062228643 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062534617 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062785264 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062458351 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065009772 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06273622 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065181357 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065235944 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064855781 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064782801 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065017397 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064847751 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065102488 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062649435 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062672047 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062831315 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064471915 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064936518 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064597989 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062225154 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062871123 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064749332 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06254736 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062241863 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064662684 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062622298 seconds)
  done (took 3.15105335 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07434258 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072186763 seconds)
  done (took 1.386011744 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062630418 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079086382 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06186128 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069010157 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068626794 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065640098 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072037664 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068494195 seconds)
  done (took 1.784152586 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080376069 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075716518 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066827815 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078880208 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075659256 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081694923 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130451509 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065829763 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071564057 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063499718 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078913867 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064279367 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071245317 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065446678 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07059102 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071185188 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062976754 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070893075 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067164693 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06359366 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066143767 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073472915 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067344861 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060520873 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066126178 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086383327 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075985089 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06478463 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067606233 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072019989 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07045669 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059242447 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064833001 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0653381 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062845705 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074115617 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079279199 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067990287 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073348308 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065482827 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075140654 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059928456 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069983492 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071058916 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075157974 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065140841 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06546583 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060100536 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062980835 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06709666 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060760638 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065094473 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059849684 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074453273 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068570068 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075237572 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063721353 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066329226 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067867635 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068159287 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071537733 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066767883 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067211271 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064411807 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074510955 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069145428 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07380813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060101352 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059166135 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06269365 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074295016 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08747734 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070876901 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065462261 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065953481 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062582614 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068073424 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065872903 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070459163 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071123388 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064944409 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070042604 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071859552 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065118577 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067440331 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072909619 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063034492 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067558451 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063210751 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081073363 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063908331 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063588859 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063125139 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076198041 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068229224 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064612265 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063202628 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072003457 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059419804 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065178553 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065332447 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065640674 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074606754 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069266576 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068993929 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072737727 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071394034 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064581658 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066805548 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060651412 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064189829 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063438341 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070544246 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058255955 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067061896 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06488636 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064439032 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.195877014 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063641273 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065769409 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072821748 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071510611 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06468696 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062769646 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068112437 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065525464 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068874451 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.072891545 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064287936 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061106787 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06107321 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068630232 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065340289 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069133697 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070201993 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068897261 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060222726 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063465416 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070238529 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074909829 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066317803 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066575071 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071939768 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066776841 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06478164 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072136764 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068554172 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064938939 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070710622 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066474103 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061405033 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068190784 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069116082 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063617464 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068641582 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069021544 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068066188 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066538811 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064224389 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072756772 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066142299 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064842725 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065430776 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06420396 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07561149 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067715995 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060408317 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06288697 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074644791 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063482023 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065156435 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064185109 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067485585 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066927511 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064332062 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064406965 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067110951 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075938583 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069549872 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066006774 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070864485 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076402343 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065256019 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067954618 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064748867 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066241523 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066036484 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073562323 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070337886 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069754079 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067454136 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062097721 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070639492 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072674472 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064289346 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062851594 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064370107 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068960107 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070278835 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069142439 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065389835 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06320194 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065863297 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067920837 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068005879 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064650578 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06435163 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071493572 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064455764 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072256635 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066272828 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075157538 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068890524 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06082287 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068310974 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063524982 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071089674 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061236916 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06366915 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065041444 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066278877 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064314483 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067771265 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059345777 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07206453 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07227582 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065076077 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064149445 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065224895 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071391259 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065993121 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068208404 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067492096 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070033137 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074494083 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063919295 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067253994 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074380225 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.191834647 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06112315 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071925227 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065006213 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065816738 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064960209 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063736844 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069002091 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074624301 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072888329 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059997225 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068463534 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064164472 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065389321 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061387176 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070362549 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068614801 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067296512 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073141716 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066139153 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065747963 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069474209 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065389597 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067023834 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06725782 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068307121 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066820449 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067637512 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065628669 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068427583 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065165456 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063542277 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06769623 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06627288 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066096652 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071454841 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065235919 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065781314 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067743445 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066755752 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066523561 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066125514 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065140534 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068892824 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067216457 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066261368 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067495429 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061773171 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072930488 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065781549 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074010389 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065979804 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062860451 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073243318 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068371108 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071066838 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065618826 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066696316 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066939607 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06500212 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068135032 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072567764 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063806375 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07651415 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073513714 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066286777 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068383106 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065919299 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067563574 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064936889 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066250024 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066371704 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065942161 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064765874 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07000097 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068034446 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065645633 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066998937 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066176947 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065765965 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065957572 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060360111 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064880543 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064673469 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065280839 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075009473 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065634775 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06505895 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063958865 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065957131 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063997422 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062035667 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072935424 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073864278 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065378169 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07220191 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064513894 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066389693 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075651267 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059803201 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063582521 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062912488 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063145525 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072629964 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065841503 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074128304 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065038365 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064405201 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062389936 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065596992 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064010057 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059963157 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062691655 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068183125 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063805563 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063799079 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065014171 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066531246 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064652107 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072905257 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063356199 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064817576 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063806065 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061384476 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063102828 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.194826841 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069202414 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067255384 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063633894 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063436721 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065181245 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067320165 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067669563 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065130076 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067171461 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07478757 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065823384 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068591688 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069246229 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0604205 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068520739 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065333938 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065974351 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065241706 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06946246 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06888041 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066483497 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074537003 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065259588 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066672089 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066429308 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064425223 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065392705 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065352695 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065452775 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065429563 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06701228 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07439713 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063650333 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068613414 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06609896 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066058171 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072454358 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066724724 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068477658 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072353388 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065917986 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067778569 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074175722 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070303023 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069855955 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066932772 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06726897 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071814618 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065558693 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071784175 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065736227 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066231687 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067483544 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063407068 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065251831 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065813945 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064533037 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07168856 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067158176 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06466432 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064738821 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063697594 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067161421 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068546634 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07387818 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067914005 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068974446 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060933307 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062380476 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06639383 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06360498 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067033685 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068348342 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071136966 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067967327 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065975427 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064424895 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07444826 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071179598 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069355292 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063804172 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069091022 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066281848 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067793577 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066281005 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065800682 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066559288 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069346478 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066617923 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064466163 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072000105 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068722625 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065972978 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066593165 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066228082 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065492574 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060554942 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065728103 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067084091 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07029754 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067568714 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065446403 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075605761 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063232542 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065594829 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068150656 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064183477 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069107431 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060459426 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066294519 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065750911 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065534972 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060209242 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064349128 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062862673 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066978638 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063772854 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059815915 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073606144 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072459317 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066769757 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063462456 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062864308 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059220687 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.189790218 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065690052 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06749078 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067841847 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075785663 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065167418 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064725308 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06158912 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065715142 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068992697 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069325014 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063348272 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061208505 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065412049 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069031948 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07169501 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06425682 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065605008 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068333546 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067844706 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063744798 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069010377 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062893217 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069367378 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078069371 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066260595 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067162165 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072052897 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073589329 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065784422 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061305538 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066486097 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068966034 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066551762 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066717956 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066527343 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079454222 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068815719 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065708702 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064087037 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068298741 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065528711 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073568601 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065968871 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066159218 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06997184 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067642976 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074271146 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068348921 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072454325 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069824707 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068514387 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064717381 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06674862 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064066028 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064589117 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066981388 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066227261 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070802283 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073823987 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064987816 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075108711 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074397293 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067526888 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062373489 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065017494 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065293484 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060827012 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066370859 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063526204 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063595982 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063532599 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064362459 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066193116 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070620518 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066137031 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066046222 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064827149 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059729237 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067743984 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067839934 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066338433 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062336952 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06537955 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066629374 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069358222 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068598163 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063409469 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067124762 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066761385 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066827668 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060927108 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071941746 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064608145 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067221958 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064623002 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065279387 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065902544 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068455166 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06962476 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066027295 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067801979 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068827975 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067357009 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062740656 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062316391 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07029952 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062784534 seconds)
  done (took 41.915804232 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09905608 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062044875 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06176079 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061192122 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071900094 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061926962 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06116754 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062001244 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061963013 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064473028 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061122095 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06080529 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069451601 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076260682 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072496632 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065489147 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060891645 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061764469 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060799064 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061979023 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06962034 seconds)
  done (took 2.718808874 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072732154 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069607797 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071970117 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074245757 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066067887 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069327451 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070889751 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068865673 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074510693 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06574475 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074428161 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069675148 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074675893 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065740057 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065796214 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069371327 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074513581 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066239091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069190732 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071056666 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069310786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07084772 seconds)
  done (took 2.852995063 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066163427 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064996909 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0675658 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060050991 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064927696 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060494224 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06819438 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062579614 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067882824 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06422868 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064003336 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064458879 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0665385 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060097118 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065443789 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062911478 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106414923 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068326984 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064476674 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065303662 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060309557 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066885961 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060504767 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061057907 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064068465 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068564462 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065682972 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062899364 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064687151 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064037303 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064522386 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062319042 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066263331 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065233596 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063936134 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064227918 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064090588 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064562474 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060194367 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062510231 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065782169 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060948402 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064885421 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065977736 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063130849 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062962961 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06642136 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064504384 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059654923 seconds)
  done (took 4.497208746 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07857862 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10728632 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06653856 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086673064 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078252483 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074186538 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067974385 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08756441 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062423232 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063296596 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079839701 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077708686 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064745044 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069028509 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070918842 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064251092 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065496399 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063602562 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068557596 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063963325 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068358281 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070733956 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078680342 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077690469 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068522149 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063359419 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063686759 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068581412 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076293175 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06839786 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068937553 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069655021 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078529622 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070053511 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063720312 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066585734 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079334082 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064421289 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066898568 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062133448 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066469721 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068405528 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071100707 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080024082 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064910101 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069746417 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064601642 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061711366 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076665969 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066619039 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072044159 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078426321 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068261034 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064682825 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068896963 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078470208 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064174484 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062623697 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067100178 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075914181 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061944951 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067807527 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077989631 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066156755 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070978524 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07752729 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069540723 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067718646 seconds)
  done (took 6.252687338 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073593794 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071011265 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07840699 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078965253 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07042282 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070654078 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070510828 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070814019 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070202769 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07545563 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070661039 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090793873 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066290139 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073261068 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070813436 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071101477 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070675451 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070835784 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070685355 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070837516 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07081702 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077734622 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070768673 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078055467 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096456336 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066726229 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070563829 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070659388 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078546842 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070605087 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077580605 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071029377 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070720426 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07839958 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077697006 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070406002 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064039426 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070370181 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070780973 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070567487 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066159495 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078075604 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07012877 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06599187 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070608301 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071080404 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078235338 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077603334 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073096029 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075372412 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071098332 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078523787 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070653916 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070374682 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078076635 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102832824 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078541289 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077999138 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071277842 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077781492 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077892067 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083912389 seconds)
  done (took 5.928142502 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081815913 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073370322 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074234534 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060541526 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063114276 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068266023 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063254148 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062855643 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072762741 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072876937 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075068416 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068109784 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071692658 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074986168 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068594824 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071550241 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068140552 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068223886 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072906681 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068123723 seconds)
  done (took 2.735964665 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073846895 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081776537 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065956282 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070528455 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067799691 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070333687 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067029411 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067592652 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065829833 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067489365 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074545649 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074329331 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065663691 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070107193 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074628292 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070681543 seconds)
  done (took 2.455310661 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073818742 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070704771 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07924095 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064829713 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062935853 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061658173 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064577339 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060255869 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061229489 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076249061 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064818984 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067079559 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064657383 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063524874 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061684096 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06741989 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061274026 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062116328 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064623887 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076473746 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075304547 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063594633 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065554529 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06494851 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064502372 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069599545 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064265594 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062580817 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062439701 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065369145 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065037798 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068167726 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062457128 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062746372 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063809354 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062226571 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06491854 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064617253 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067148368 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064228513 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062514295 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064227092 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064261801 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06545192 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061410551 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064804487 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060873586 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066673172 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062354979 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064644777 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064258961 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066513569 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064789615 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071209127 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067175754 seconds)
  done (took 4.93223481 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077843247 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068697356 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061315056 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06320413 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067302625 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066650363 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06830333 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065914713 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066456582 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062928605 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066294149 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06712992 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06641734 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068224837 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066500167 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068475239 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061329286 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066507794 seconds)
  done (took 2.539747748 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069676695 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064905758 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071265638 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065489189 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064371859 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067508414 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06139659 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063496824 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06370472 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065174058 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064721666 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067820209 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063372811 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067011651 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064821111 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06474886 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067225651 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063720576 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065054612 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060993798 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066604042 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063272073 seconds)
  done (took 2.769947713 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071157246 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090085203 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136410714 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08173414 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080037388 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077078895 seconds)
  done (took 1.870874754 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088616101 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078006778 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065469295 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086239752 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071746908 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065988754 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065844859 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066104614 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074312292 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074252515 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066003764 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074200607 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074226879 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07364231 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071928501 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071602538 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065927363 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06592618 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06492104 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082652376 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066772914 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074141483 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066547898 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065799798 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066571253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073670606 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07412184 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074361949 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065676435 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073937392 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071355988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065917663 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074652769 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07464957 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068244068 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074326786 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06638605 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081965854 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071871612 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074036156 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067471825 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071772806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074309074 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070301674 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073928992 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066382898 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070678633 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066678261 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066613523 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083895944 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071931231 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073224435 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071964946 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07453624 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074417932 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084037393 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07446369 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073776497 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071930459 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077012475 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073818998 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071381319 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073399449 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074597453 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072003393 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073800986 seconds)
  done (took 6.108235495 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080285684 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084758196 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066938211 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074643976 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073716934 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066286342 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066218124 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066118366 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066639823 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066144643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10550043 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066953705 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074206668 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073928432 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066766287 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066103349 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066139266 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073688794 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066235668 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083837927 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065979784 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073794388 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073606816 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073484608 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074611304 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071515593 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066648846 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066174044 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066413049 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066014691 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070765092 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066364396 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07392996 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065859863 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073425824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066541139 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066221728 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071241893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066229967 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071427259 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073825325 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0822485 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066666965 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065736726 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074758169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066068382 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066100103 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066160087 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065942398 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065683216 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074509259 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074289882 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074302864 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073828298 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06655946 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066523184 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06649209 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066445903 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066514497 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071695912 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074057652 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066248002 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084187443 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06666064 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066800658 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073997432 seconds)
  done (took 6.025134523 seconds)
done (took 127.020192847 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182351914 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167757254 seconds)
  done (took 1.681270787 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.066535766 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094558177 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075642351 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127334995 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065197708 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098585346 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097600733 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076591733 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065173847 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.064874866 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065008876 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066901949 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1295854 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065412894 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065006609 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066919175 seconds)
  done (took 2.634794247 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095968256 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.17120657 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098087585 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064085868 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095324818 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071398683 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06377595 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073549585 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070119148 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064005533 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07204291 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069501493 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06384714 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069290818 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069575117 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071380452 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064021201 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071695117 seconds)
  done (took 2.76574983 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098545317 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089043965 seconds)
  done (took 1.535917155 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153707868 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103272656 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148537893 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330937319 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158161102 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22735915 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125446592 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124274154 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114718063 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120609847 seconds)
  done (took 2.954293833 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096286835 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.146502789 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253158102 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113692215 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07125953 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.089697434 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114992676 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076361343 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076739681 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.075950085 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076108693 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075146926 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094390331 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072352007 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.0728228 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074537916 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097637843 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071494709 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074139554 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072940555 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095686013 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064951815 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073118826 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07132055 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07356011 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073876223 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064669795 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064587943 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072692351 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072263987 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075945873 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088337981 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073451697 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102496026 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.06903761 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104116559 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07496221 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069870115 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072383214 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069712114 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074045995 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074071497 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070774333 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074517697 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064502028 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074794732 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064646838 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065100897 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076830378 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065677654 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07668611 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075698526 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102888077 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065388584 seconds)
  done (took 5.82467795 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.657084781 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101941703 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069060322 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105960375 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094532948 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070978699 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.678942557 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089095007 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171611697 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091040766 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087087519 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069020022 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079127447 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081663902 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107976971 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099681531 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092100455 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069929451 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099299337 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.097361224 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067138856 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092702948 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088483471 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373756744 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065925621 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068772313 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066831676 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068946015 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.10810441 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076514349 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069173109 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.11962226 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08284332 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.11902348 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06592941 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066840468 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067170125 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077985422 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176832158 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130866569 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128958436 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066175871 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066754127 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06738318 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087909002 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065868145 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108142097 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078262726 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116238138 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068823373 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068717575 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066645487 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067565568 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078404861 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076136134 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079051979 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227289128 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066730935 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066668566 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069786607 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176999592 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07733956 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077361503 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090178862 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.127451691 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066629744 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.690106323 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082415927 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066173748 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067707956 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066353248 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067302321 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066420307 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.241887002 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.342098123 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069465423 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069068105 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067683332 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.159445285 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077243144 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067644555 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110499935 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067039302 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068535882 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06882146 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069937295 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.116656214 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079247223 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069825508 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068414606 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068557173 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06768246 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066101686 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.160862897 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079421865 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078272825 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.159370142 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068511252 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110303285 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078669482 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069632371 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078876385 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067368064 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069537986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06907578 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077703786 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094760737 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078709686 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069485023 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067344917 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.096537553 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079569803 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06695627 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077870185 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.394372207 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079061653 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066524436 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080257458 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067485173 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109219078 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069159677 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.174143653 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06794566 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077454101 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067606587 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066233792 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067139446 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.108934292 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069236365 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067390476 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067905435 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068700722 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078214429 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.130996977 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068945517 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.15987022 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.131890596 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068888763 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117287777 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066887177 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114488875 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069263733 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068336221 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066006567 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.70520593 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066665022 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067090614 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068115499 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.135994881 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066634004 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077853925 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075163687 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064869692 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.685992184 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07645325 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.202229494 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07935319 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070371175 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068773073 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067408171 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069960201 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.110107115 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142808708 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069663471 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067304506 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076954436 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.11005218 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066303789 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077380709 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076601642 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077449736 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0675493 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069521052 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079584618 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116696288 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076932537 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.132478846 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.51315298 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06773201 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076333359 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.141105697 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067360924 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083876924 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066745378 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081839301 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110796844 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075588573 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225540966 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.111906478 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.137950493 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079040461 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081426793 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066572592 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067387086 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085054944 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067670875 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069134976 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076783345 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068676515 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068604362 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082596662 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067160122 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171484171 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06648849 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078001875 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066092972 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068741902 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082099738 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067711216 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069133002 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077906767 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069000554 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07588717 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.635861782 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076349667 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066740578 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068641448 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.132635589 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110132075 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066672411 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067051844 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068890987 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.108174569 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.154250019 seconds)
  done (took 27.765774765 seconds)
done (took 46.517119781 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20526234 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147475049 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19844351 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115625992 seconds)
  done (took 2.11703403 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119251241 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099069914 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092997378 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063974359 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099677935 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063752436 seconds)
  done (took 1.92356014 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304754797 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206057217 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178151325 seconds)
  done (took 2.069371525 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194222313 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.183346185 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.387245413 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.248615476 seconds)
  done (took 2.502258109 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141306574 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087731212 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065829149 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081598764 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131148284 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157419631 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098810472 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123177836 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076983267 seconds)
  done (took 2.398082671 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141474212 seconds)
done (took 12.546812658 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.106689127 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.203179315 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.110166595 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.102619402 seconds)
    (5/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108087601 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.197862725 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.159655197 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.17549758 seconds)
    (9/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075660237 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081087706 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081518538 seconds)
    (12/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.15254324 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.080331704 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07628484 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.133289409 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.195439441 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072078685 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177520938 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156563321 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120780967 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093616855 seconds)
    (22/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070715047 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.178461363 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071886512 seconds)
    (25/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.137081284 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.190453123 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095833095 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085714306 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147671104 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128992349 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166869425 seconds)
    (32/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074254732 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062986947 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.188028409 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090150609 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09083422 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070484384 seconds)
    (38/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.100081062 seconds)
    (39/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.144608409 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.160022869 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068221403 seconds)
    (42/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067625954 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086877081 seconds)
    (44/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071894843 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104007523 seconds)
    (46/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.150276282 seconds)
    (47/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071450776 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071060339 seconds)
    (49/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137436424 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.144324954 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089560634 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074946124 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14405134 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086797481 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1345082 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.127313325 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075432391 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.16430716 seconds)
    (59/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.144805923 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.131994228 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085034827 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066166622 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071420458 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114315365 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.160494809 seconds)
    (66/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.159357443 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134366344 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073144323 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064141096 seconds)
    (70/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.152139989 seconds)
    (71/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.060639464 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090326285 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.074524884 seconds)
    (74/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.049523604 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07261311 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070830443 seconds)
    (77/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064361045 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.097658456 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.168162276 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073834115 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075017979 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.064284183 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.04950141 seconds)
    (84/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.28913985 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087441493 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050620362 seconds)
    (87/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.073523749 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066521753 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050713432 seconds)
    (90/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065274059 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094756146 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114089381 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064470876 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100610803 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071779731 seconds)
    (96/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075849691 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.179306472 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069646979 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064696259 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070437617 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077178557 seconds)
    (102/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074070388 seconds)
    (103/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07271737 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079152518 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064511031 seconds)
    (106/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.136787157 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.173513333 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066706859 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07980747 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071966784 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081470914 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11379469 seconds)
    (113/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051797678 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14273988 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170343143 seconds)
    (116/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070857406 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070653052 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071380775 seconds)
    (119/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103070254 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069168156 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.143291673 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.316885456 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064759221 seconds)
    (124/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067140572 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075241395 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.131722742 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072640802 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097624999 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051922529 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089666097 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050107229 seconds)
    (132/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.135443438 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.161718205 seconds)
    (134/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.104815068 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069453787 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070413366 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095414404 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13213534 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072276879 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.134418644 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096618325 seconds)
    (142/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086348657 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070975509 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088793654 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07083778 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077471125 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.074653877 seconds)
    (148/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051267581 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069805344 seconds)
    (150/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065465112 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063821564 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071057849 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050398982 seconds)
    (154/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050338851 seconds)
    (155/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181350051 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132298826 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050395621 seconds)
    (158/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.13182088 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052310853 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138101954 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072070021 seconds)
    (162/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.167690812 seconds)
    (163/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.136425864 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05368212 seconds)
    (165/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051540883 seconds)
    (166/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065905013 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086908751 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163218001 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073721412 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165237198 seconds)
    (171/309) benchmarking ("sort", Float32, false)...
    done (took 0.126092515 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078024267 seconds)
    (173/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072298422 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.169392993 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050183212 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119374803 seconds)
    (177/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065277302 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070107258 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051311109 seconds)
    (180/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051352181 seconds)
    (181/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071258215 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 0.122326491 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.061812301 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063805612 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063637793 seconds)
    (186/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069629187 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06376137 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049562308 seconds)
    (189/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069847609 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069944795 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088982197 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085690675 seconds)
    (193/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065881846 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072217534 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05128676 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.203596029 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053290032 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092111984 seconds)
    (199/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063923481 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052625022 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065027345 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051601911 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095502505 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120845193 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06560596 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064591049 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066366995 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052245676 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071612308 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065498672 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064870089 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050889778 seconds)
    (213/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078749919 seconds)
    (214/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074687274 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127823246 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063171777 seconds)
    (217/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075275053 seconds)
    (218/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050140127 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.159966951 seconds)
    (220/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099799695 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061605929 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175225971 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080612085 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05046293 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066607398 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073478077 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071709485 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137953145 seconds)
    (229/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050819706 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071523069 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167036076 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067448038 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064354351 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069377547 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051954695 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070718408 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06579344 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063290521 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089187026 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086540882 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093795909 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13773585 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051071779 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050197182 seconds)
    (245/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.145297168 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05189022 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085289298 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06771187 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05084325 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050025662 seconds)
    (251/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060912052 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173478004 seconds)
    (253/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07286692 seconds)
    (254/309) benchmarking ("sort", Int8, false)...
    done (took 0.13641617 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06391437 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067058173 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050041468 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049883452 seconds)
    (259/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060734181 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050029234 seconds)
    (261/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051710037 seconds)
    (262/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050185508 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063830044 seconds)
    (264/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065445209 seconds)
    (265/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065339041 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072424591 seconds)
    (267/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077948393 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065186329 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070976969 seconds)
    (270/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050922297 seconds)
    (271/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07689242 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066481346 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052004323 seconds)
    (274/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051050898 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07223124 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.134490213 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.095826202 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065136956 seconds)
    (279/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060301423 seconds)
    (280/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060270895 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050324244 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067832169 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066087291 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130871914 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064060747 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050633483 seconds)
    (287/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070371573 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071911918 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064580077 seconds)
    (290/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060548591 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064552598 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063179604 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06340017 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087567093 seconds)
    (295/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051387484 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066712807 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072008678 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088049501 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05349424 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070126321 seconds)
    (301/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052285915 seconds)
    (302/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.10915451 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086685728 seconds)
    (304/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050379185 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069486707 seconds)
    (306/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067361019 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069712663 seconds)
    (308/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051564876 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06411288 seconds)
  done (took 29.816734377 seconds)
done (took 31.209349376 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083821387 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091618988 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074712423 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091138158 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079206207 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075937594 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071038969 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07665887 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078332375 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080385942 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077172104 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054481171 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072710576 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072730789 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073387548 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089283165 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076932635 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07145839 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071646917 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063699905 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071700998 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064379337 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065868913 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054022412 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07642841 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070102938 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071077016 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072231844 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064417193 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064693766 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067384233 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071883357 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06457193 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076316322 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070906514 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071534522 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073040885 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074785347 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066703262 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06473255 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072779518 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064415668 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071094919 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071918303 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070614815 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070121972 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071623267 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076184618 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089597345 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067106778 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07310328 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074778841 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075231074 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071628753 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068083238 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071286203 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070133121 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089545777 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071963078 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066781433 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072473091 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.0721426 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069788585 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071714933 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071787108 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073465263 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073679625 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070163567 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072957388 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069883579 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064325556 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071713902 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067903221 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064648014 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074939193 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075081934 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06347702 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069744914 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071223521 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070160898 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063902818 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066402681 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065840971 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070039354 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066022213 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053849079 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068140817 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070016796 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063384126 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071825915 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070132072 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070739486 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066016697 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074408568 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063760933 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069383857 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064731271 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064398288 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066150798 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068170207 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064292614 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066576048 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073145113 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065790706 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070016965 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077701775 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064240341 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070718374 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063489792 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063748592 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078580803 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073361745 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064214197 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066421839 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063611641 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071158653 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063774558 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064269261 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064097515 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064075328 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070061015 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064227524 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06569074 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070506908 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07543796 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063520127 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066794293 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065235166 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06337978 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06867585 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063387869 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063398017 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199166937 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062210782 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068181878 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065545674 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071844518 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067398435 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072192379 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066033329 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072972603 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06954314 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070581995 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069735889 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063416471 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05809228 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066667299 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067208618 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066087847 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065389049 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066536475 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065186469 seconds)
done (took 12.252421473 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06580863 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140448318 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097182192 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093758576 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084302032 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065568338 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074694164 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099661397 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066424904 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100735979 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08637317 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08374874 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110409376 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063584687 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064931568 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068462178 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066413631 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080211853 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099026173 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085861689 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107425395 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064381623 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092985335 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088707013 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08584335 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090817374 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066143017 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068736219 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068524457 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098729353 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08543188 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068662375 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06560295 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099406015 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090539526 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081680433 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065692345 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081069254 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065614028 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065039662 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079546375 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097115374 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078469297 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079206056 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069534684 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06857685 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066037211 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081824704 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087373105 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077231933 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085005959 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100993437 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067564376 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064977527 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063445007 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084550786 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064604464 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067872228 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065002888 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067958976 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065170275 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068174102 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079585295 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085190216 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068569737 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079155507 seconds)
  done (took 6.717522978 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082479709 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088884012 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081393488 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082975647 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064387499 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065483463 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065323741 seconds)
  done (took 2.016939559 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066298638 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087349947 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087699661 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088082404 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083003786 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085958512 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075015335 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066014365 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079714224 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066231707 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086496137 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099793381 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06593234 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071801364 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089278727 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065760288 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088484226 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065549292 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068490685 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089094425 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067233601 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.080869912 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068693681 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066032962 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079368743 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065666942 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110721062 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069757344 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066878029 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068877788 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063230774 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104392651 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078730475 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074006531 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065555546 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079185876 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079634644 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06372287 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080814939 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07015475 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078548354 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06632843 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066323462 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063632588 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069378473 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075277417 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066221894 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065963848 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06800469 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084230067 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065748822 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078317774 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06942992 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068059327 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067188376 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069457576 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074650933 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066049696 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084647533 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06703496 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08134526 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081071406 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078690764 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081413077 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067719861 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078575484 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079214353 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067690758 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067146299 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068718671 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.080993818 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063883976 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066599398 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075417976 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067384997 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087881028 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087536676 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066506329 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07448289 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065807221 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06541461 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066243427 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088235606 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067633595 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065385796 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069441932 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068332289 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063640183 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064398879 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068952517 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063386843 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067104227 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067977365 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068255296 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067547677 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081211111 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067484864 seconds)
  done (took 8.627508473 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067317506 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067052666 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069011992 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067146542 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066790699 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066881282 seconds)
  done (took 1.90971424 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09192228 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068932172 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079873728 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071346497 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102850218 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085194989 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085388421 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077421816 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082602069 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077967551 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085126237 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087007271 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090931121 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071579419 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085077981 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070868002 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085244147 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074543512 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076716686 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072011768 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085345643 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071727244 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072012806 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080481657 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074540917 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070985282 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066225386 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077549502 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076665158 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077430752 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071050518 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074215376 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069304402 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077074128 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085102466 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069532539 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070377811 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076125421 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071429682 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074429551 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087051955 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07191796 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07324742 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076063645 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07685372 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.06925634 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07592695 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075040947 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08448403 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07562529 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075294336 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070253511 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07365614 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075548524 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.068960515 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076545454 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075721975 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084807108 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07076312 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.068978614 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067543501 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07374205 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075955594 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074273397 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077378395 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075250448 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.068912348 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070775416 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071357757 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070165011 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075615641 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067705341 seconds)
  done (took 6.974058961 seconds)
done (took 27.720121413 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543826917 seconds)
  done (took 2.019883989 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607624367 seconds)
  done (took 2.106602514 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.356875477 seconds)
  done (took 7.852278822 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.386694019 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.499114535 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.701484162 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.127895881 seconds)
  done (took 3.245116199 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.664887721 seconds)
  done (took 2.170891908 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208207472 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193705797 seconds)
  done (took 1.917246906 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.365522102 seconds)
  done (took 1.862208932 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.090069726 seconds)
  done (took 2.589990422 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256479549 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160213558 seconds)
  done (took 1.920247342 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454556856 seconds)
  done (took 1.957181448 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.81925896 seconds)
  done (took 6.323928711 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204080719 seconds)
  done (took 1.750778815 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237278549 seconds)
  done (took 1.74282492 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.695968254 seconds)
  done (took 3.201985271 seconds)
done (took 42.164447234 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079649537 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080577951 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080454457 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077824911 seconds)
  done (took 1.813713769 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075847575 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072192505 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075533548 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071965837 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07658682 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071596482 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073375981 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076059803 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072137451 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072101412 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072039159 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071841542 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074012141 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073357028 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070733311 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073998034 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075257581 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07187503 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074664404 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071719262 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070167671 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073787672 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07400955 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070959101 seconds)
  done (took 3.2656252 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077330346 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071932826 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073737888 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07100327 seconds)
  done (took 1.80995797 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076888212 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090999413 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087989316 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076808693 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090808449 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085080156 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068503267 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068290953 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072637616 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076513037 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067693685 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09446287 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086540268 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07599553 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078190747 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065338276 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067600417 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085978342 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077090074 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076710747 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06937873 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07702722 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06805341 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087064595 seconds)
  done (took 3.38412307 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077421259 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10283778 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076642454 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086807707 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089179335 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064581345 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073518314 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088409164 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122208109 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064918083 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069191803 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064911573 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071604914 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064561643 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075572116 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104334048 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10776082 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067774937 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094764797 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064735161 seconds)
  done (took 3.153437542 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072222528 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06914516 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065816067 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067802221 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076835392 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072287536 seconds)
  done (took 1.947969541 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067473531 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066553207 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067159465 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066032758 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071677802 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066685624 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065810594 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06626606 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066070704 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066180308 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065923822 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065132147 seconds)
  done (took 2.320317679 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.320832955 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068289287 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068112094 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064947462 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07003271 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065881579 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079161368 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067573477 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090184312 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065913755 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066297712 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06773926 seconds)
  done (took 2.617947976 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203491409 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075400078 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23250098 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13593183 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10993781 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114496253 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102749261 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11195263 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140614474 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100088737 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164942872 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163116553 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105443369 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135165229 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088389341 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097088646 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153154204 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159958593 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102281116 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1636179 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141545081 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123140918 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145429123 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100206623 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104795982 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119704882 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070504852 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079339018 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167401985 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129588704 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143765805 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109649283 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092094576 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173725483 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168387567 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139329284 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132719587 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082750426 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100809147 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131144356 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198210642 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089857106 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159552776 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244463858 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080770462 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139040949 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118416064 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119498533 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10674661 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089405483 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144504823 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181376645 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137308767 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086226687 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111498036 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113637682 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114981061 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102150908 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178761287 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158095394 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126762495 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071103332 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09865575 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15103456 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129973187 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10776685 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125777672 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092802515 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132224432 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152846648 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118125109 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140633809 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127447626 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08772538 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117434786 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138280172 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126296398 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1673246 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122834828 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072096438 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122924895 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102011631 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080745952 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142005495 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075033938 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171918391 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09841946 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104802199 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111531965 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107425181 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107381584 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157956811 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1394047 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243334445 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066049074 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10372709 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120165105 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145914617 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086372573 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108271944 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115839967 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076502518 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138071167 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074434946 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122204762 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075461934 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122843532 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131466001 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074618535 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119664967 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100785845 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099779938 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130678571 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156922337 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088475888 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081607202 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166812977 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122217822 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103800367 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142251684 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153813454 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098404997 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101910565 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147476275 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176410415 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088805386 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16031398 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106142774 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083085421 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086686757 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122262494 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111115171 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12105636 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081257783 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116980182 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165550379 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074349037 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094052508 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131296367 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077677125 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079266325 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101299637 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098525021 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093443806 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098877705 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102718399 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13620816 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120851927 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10224701 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267353919 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098118657 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167532271 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088460364 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100305858 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103905432 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06914412 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135784056 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156773321 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079223535 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162444374 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122288675 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10391046 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11761554 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082940088 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138402328 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077962376 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069893828 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142343559 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109707427 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109451808 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148859412 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104142595 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12630471 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118875643 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132889399 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131325118 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1281245 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104329258 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08764646 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110033581 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123850625 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072275867 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089981475 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07916898 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102609143 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094304854 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082412161 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140421974 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122857358 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098996958 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110346488 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095431154 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145341137 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075819165 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127083271 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117228101 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092203452 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148810601 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149204413 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129041601 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09781076 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142212338 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069300065 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072667599 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08652735 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265599947 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083782673 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083630963 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116155561 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145870699 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127719635 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136962071 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111362708 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119636269 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153404773 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069032941 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114415684 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146311079 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120756237 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103234633 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089354143 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097951735 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141730895 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1080874 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179726956 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112551824 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124998685 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151255924 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098505932 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079568932 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101728069 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133414024 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104102218 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147456765 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09877347 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087104082 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108736683 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073720544 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09860713 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125427562 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11806361 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133562922 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11357764 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130811442 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076387992 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115231245 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119075861 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120811408 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06328754 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117246321 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157451904 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092386082 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116241095 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149848866 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078683684 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122263993 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318596054 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14494405 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084868107 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108688261 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117607626 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127181136 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119665686 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139233809 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108656858 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133973447 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108219034 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08513093 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086591529 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09573134 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105261451 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093936824 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107157 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112847566 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094202201 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130080178 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102327319 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108190659 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115807717 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095697166 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089037525 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095830748 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173297205 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119195083 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169676925 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098346912 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142521658 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16105836 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074215679 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078476621 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077477998 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137598933 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083047257 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129092514 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096843791 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104194202 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122702905 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139815457 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09419618 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068074325 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107450981 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132197186 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111025424 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096728469 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102345138 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159359118 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098790505 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078208597 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111734298 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102999183 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100966767 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166160073 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.203920455 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097250295 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075794319 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080633994 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127946272 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151378823 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07988094 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102169034 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118639823 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109620668 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126774175 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100396508 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098260036 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113054433 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147878147 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127669789 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089376515 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11151553 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127746188 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171368901 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104141718 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094993603 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169279468 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149394493 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15840275 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088287119 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113145941 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11245762 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11014043 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137190913 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082514803 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160764878 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081084127 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134186148 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102980695 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088911987 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127898498 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09768631 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08708792 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146020972 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116272565 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081892676 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076839283 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116190472 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118257804 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104608607 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.0745276 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135491433 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072248363 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129305346 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165243938 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080282734 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102812506 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239066267 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080376406 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108263584 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102103909 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089165412 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097976244 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170767735 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087824902 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148121667 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141117646 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111687576 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136153299 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099469574 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63467056 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078315724 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151123778 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115753133 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171431301 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09663971 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116671654 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108047524 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121924337 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14245088 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103552042 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176986824 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130374472 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11592538 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0790775 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101874353 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101588897 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087508616 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103750147 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111792946 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114428103 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092241226 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114214653 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121490725 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081069806 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094492912 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153907563 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115350908 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142167618 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139065586 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084169386 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11569779 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135311165 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078599942 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119330864 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148567835 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104205403 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096283113 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078783012 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.245543288 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170301373 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073240726 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160991491 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119035581 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10883109 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111828224 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113411684 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131524729 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108099228 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120740618 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092850746 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110293953 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111441158 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081094155 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076631896 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105077529 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111163043 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096643561 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097853312 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097730914 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149307389 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071039808 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095009652 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102539837 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142602212 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171768053 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086885729 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082126182 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116970329 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111162856 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111809626 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119046385 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078476174 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081577548 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080867158 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07662391 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107758564 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110598359 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102922544 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110541694 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16132685 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081761884 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224493218 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093889854 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103781591 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069455444 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077828395 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094460093 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09611148 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106979346 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098972817 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165341119 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092607682 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087992712 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090174247 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071899842 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081229115 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269653819 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110373234 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117897846 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097078161 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062714672 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108331738 seconds)
  done (took 58.227605269 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107869727 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082557675 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096035863 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149075138 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122328617 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211006337 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157130397 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198400571 seconds)
  done (took 2.755581508 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068359963 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093414712 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099312105 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.0817595 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066336595 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067985375 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.2238383 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079817895 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066094871 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087524864 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078688772 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068422857 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.399348851 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065518397 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067260034 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062276174 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067124222 seconds)
  done (took 3.365300362 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.375370733 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.362419994 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371295616 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072887669 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.654672427 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088749147 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.075959576 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.09614614 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070752364 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.279603522 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.698257515 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092305158 seconds)
  done (took 13.869508611 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074665413 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069061264 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082623562 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082733704 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071676326 seconds)
  done (took 2.009924895 seconds)
done (took 102.10779906 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079426206 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.294044403 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052884966 seconds)
  done (took 2.00387433 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082189401 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083379163 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08492268 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081887849 seconds)
  done (took 1.969757828 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07342665 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075872529 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084025998 seconds)
  done (took 1.866314487 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22205075 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138635664 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085937228 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081826694 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077671011 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078052 seconds)
  done (took 1.874088781 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071011151 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074584415 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072485757 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076521191 seconds)
  done (took 1.92639149 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075831929 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053492167 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054694832 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055598393 seconds)
  done (took 1.872820599 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086189786 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078880616 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07785979 seconds)
  done (took 1.876582274 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105623601 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084648814 seconds)
  done (took 1.82372698 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081454909 seconds)
  done (took 1.715153322 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097868612 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113081283 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127000428 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108160505 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134937881 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107547444 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08468983 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085315674 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076352329 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085750674 seconds)
  done (took 2.654663267 seconds)
done (took 21.735496491 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078378455 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366619104 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359970471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090426658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.690371704 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355730626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.025963512 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091537722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119861384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066871352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0832536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667545793 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979196617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322902277 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966236619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.418753671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649490018 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067349148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067572258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067399323 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012489928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066512285 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067114692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067312226 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648435264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369988775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067283076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413511908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067149942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068914162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353977143 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067738466 seconds)
  done (took 16.430120032 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070569831 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118052118 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073353081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083945918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070268075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068916686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07087325 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068496254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124030856 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067408226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084048302 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067542251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071197592 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068076286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085975674 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067707141 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067968189 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0680242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067514111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068248421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085804005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067303205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067818177 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067887002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068241263 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079652461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068114268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067801933 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068062895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069460454 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070561926 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068461959 seconds)
  done (took 4.026699205 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114946458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124467836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074508211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102256961 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112082577 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069755178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142727581 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092017148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126715105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067479822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083854847 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067367129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100676067 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06838502 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086799682 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068022906 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068629533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068082806 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068058645 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068423154 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086685117 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067790865 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067888499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068505321 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067949794 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080857031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068561047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068061837 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068104962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069855117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071303479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068600416 seconds)
  done (took 4.278005868 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071703973 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.0751566 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082463255 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08318843 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069639813 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071444104 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072091111 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068966055 seconds)
  done (took 2.245292858 seconds)
done (took 28.620639679 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07879592 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068296494 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072388828 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080162742 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072281024 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077637876 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067038548 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074517439 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071414264 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072509996 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074090874 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066874607 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070862996 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066563776 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074057659 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067107229 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07849021 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071435753 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079090187 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078573227 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069288712 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072771893 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073478466 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078985033 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078441727 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079014403 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076450925 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07200611 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068743951 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070151817 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076537115 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083311168 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06799349 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07858075 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067050181 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067124998 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071078523 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067143705 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078858632 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075819174 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069234033 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075187272 seconds)
  done (took 4.709866392 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087247055 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090512377 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084384086 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061215467 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067103926 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064411859 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088240834 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059055296 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058983773 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087105585 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055567715 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058932215 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061992149 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053548134 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.05874136 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056570209 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061063041 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05530603 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058705225 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05886053 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057732913 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054117067 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059628882 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064929641 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056322537 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062016402 seconds)
  done (took 3.340262395 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075065962 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083900475 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089048529 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126362715 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102529921 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076438465 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077127624 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09186375 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084679216 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066461561 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070491119 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09318748 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087682628 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073155823 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067623967 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083646886 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081911712 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068326695 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072593517 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090026087 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08333201 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082806547 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091618564 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080326501 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066528992 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068883208 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070182077 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091149375 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071104453 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075207599 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070798515 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070179366 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068967586 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07806761 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07062156 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068567868 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089356796 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076687281 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077329058 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067485192 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070510275 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067860448 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.08905928 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122068012 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066218557 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073105234 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074740081 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07587316 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066934169 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085599278 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078000016 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066376617 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070095144 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066397719 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066816089 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079573226 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068722453 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069112319 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075959745 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069871594 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084882797 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071134694 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081929451 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066680124 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074151669 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066453934 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067653995 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066207395 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091701247 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068955048 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107764084 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068097495 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068114509 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075453999 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074552172 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072825162 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067214807 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08192278 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077078146 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070154922 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075246305 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070105192 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070148065 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087456213 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069416704 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068460445 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067806265 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073239644 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069590028 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068054917 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079424214 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067301846 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070080864 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083303754 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066684363 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068058484 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072843766 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071429093 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066389785 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077973504 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071618554 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067404542 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07614185 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067209241 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069999063 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076893724 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073169807 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066223654 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071520858 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072972707 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067295192 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068593389 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069737582 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068653304 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076351682 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07341665 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071104133 seconds)
  done (took 10.501618983 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159444439 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152125376 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069990982 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143943212 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075525315 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078057995 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145973072 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093818895 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067865116 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068008642 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068533879 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114235287 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104720948 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120944251 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078237977 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066885559 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082633402 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115962511 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147396897 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141791571 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083210999 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076397159 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069626866 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068445069 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074073579 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082027689 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090013328 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076129759 seconds)
  done (took 4.413424781 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080002352 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100608076 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.0738137 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088500862 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090020468 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067511363 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069619093 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069385291 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08014972 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078234971 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067731972 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072837333 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074368719 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073273838 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068403682 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074065832 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074370096 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068510069 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070672397 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072364087 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076947312 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079855351 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071202612 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066632483 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073775444 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066694368 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063499897 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083573047 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067769297 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.08987634 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065331471 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074430267 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081296877 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068098233 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067158411 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067296915 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067038915 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066631936 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068878303 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065890486 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065449325 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057361172 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066303661 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07851994 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073294918 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056220284 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071696517 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072011037 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072182162 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065057967 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.06991233 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069907049 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070362272 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074224783 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072619943 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072381009 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068142217 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065742515 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07467131 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066791151 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064389938 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065587019 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071348458 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065003505 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075084514 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071463447 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065387151 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066616017 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068980341 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072857839 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066811247 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069856123 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064729908 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068650923 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071168392 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068607546 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068225442 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065939726 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066803116 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067071762 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055054479 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066696499 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053355078 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069761115 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065240633 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065494269 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06711254 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071298311 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078815007 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068146356 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072741411 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068104935 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065968441 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069897712 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06026616 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069534219 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082138277 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081463789 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066706553 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065154145 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081279911 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071595342 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065991624 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055859146 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074162283 seconds)
  done (took 9.092939128 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094671898 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08726993 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070056833 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083349398 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090449931 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086018749 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074414097 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076018687 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069104246 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081520348 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073236719 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07627531 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06770472 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076765028 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093856543 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076222384 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069298006 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076084271 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071778291 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100336182 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082517871 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08171117 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074242147 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067681557 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075843219 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079756506 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089550043 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079589354 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077733935 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075172672 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079665511 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089705374 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073506782 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071622647 seconds)
  done (took 4.394140696 seconds)
done (took 38.095603103 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.726674444 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.902066255 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.728379963 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.071506095 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.80926909 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.933852286 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.886438905 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.722081414 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.969453281 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.762306881 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.983382476 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.768640238 seconds)
done (took 64.929471994 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.782229315 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.867065416 seconds)
    (2/2) benchmarking "String"...
    done (took 2.000332184 seconds)
  done (took 5.536309026 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.032748064 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.258386691 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.971215916 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.723496263 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.730340706 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.035156267 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.52919057 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.263238982 seconds)
  done (took 30.179078655 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.897947294 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.923397297 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.387923386 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.422057678 seconds)
  done (took 15.346516745 seconds)
done (took 62.62717195 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.730772773 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.730028595 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.725418878 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.709250389 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.783826376 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.740464043 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.093508488 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.930464407 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.725028597 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.713269569 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.727225026 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.16108673 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.729458602 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.108687724 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.728492477 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.733834688 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.788631075 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.20132638 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.882844289 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.733345418 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.740524809 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.728295917 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.728290776 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.730414706 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.773291742 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.728821387 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.160646461 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.729059505 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.354159601 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.727056843 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.759797805 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.216843642 seconds)
  done (took 203.72294145 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.725375068 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.616483354 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.7138281 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.730974592 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.084269103 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.927653124 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.863030251 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.149994023 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.731646388 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.745882485 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.921634015 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.727722568 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.950255984 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.679459727 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.734167608 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.72557912 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.908737532 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.943293922 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.729019147 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.99917128 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.749320779 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.773453628 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.725211461 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.897400901 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.76551393 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.728821613 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.743604892 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.743777731 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.922693757 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.879096314 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.768460284 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.740627338 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.863070503 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.599895334 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.731454604 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.756666674 seconds)
  done (took 167.667756104 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.251531542 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.727821181 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.728330849 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.728796889 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.742215639 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.727616701 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.727301526 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.903657144 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.85472949 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.188259217 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.071397654 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.780357923 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.590628493 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.729792098 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.795144163 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.742070973 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.730802967 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.744007652 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.753010291 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.730867933 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.729748652 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.854865601 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.742131389 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.252643267 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.735649433 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.728918182 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734476134 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.098470293 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.730759666 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735412743 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.98991639 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.730094034 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.729062219 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.639444178 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.631429375 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.736984029 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.813344657 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.731228893 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73532835 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.729874112 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.950007531 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.731027013 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.730483422 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.732505115 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921327302 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.728758424 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.729309133 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.853623437 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.250925207 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.730496652 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.729797328 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.730819284 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.735480531 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.475906296 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.730010726 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.730681986 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.734117322 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.73032916 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.729985903 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.731763342 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.736952908 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.637559833 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.809026447 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.732626023 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.734589883 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736889134 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.730927833 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.764942483 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.733217309 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.457260841 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.786726007 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.841649168 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.854709845 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.731961869 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798952667 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.825555952 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.730911963 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.729911805 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.730025129 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.729762279 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.812459405 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.732157932 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.865553818 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.738362781 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.732472351 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.780337141 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.79998662 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.731836142 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.638588656 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.734161656 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.730578577 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.065220471 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799635149 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.730955693 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.731026549 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.731038175 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.861986197 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.854718176 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.525209282 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.733439946 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.411763942 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.725979829 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.8661907 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.724259574 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.929114648 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.727310712 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.805106807 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.728027046 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.725686339 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.721619047 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.753141637 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.72450334 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.780476482 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.724380789 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.093091756 seconds)
  done (took 397.51374239 seconds)
done (took 772.878473077 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.392143067 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.359979914 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.470964717 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.384224078 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.359186388 seconds)
  done (took 13.63154909 seconds)
done (took 15.295712908 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.813288347 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.812968849 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.746911334 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.811228686 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.742256897 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.811379517 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.793294329 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.748204919 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.778297981 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.747412194 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.78076285 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.747012031 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.735223911 seconds)
  done (took 24.733596273 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.948145005 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.95640602 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.792147939 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.958458918 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768595935 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.946639783 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.89008462 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.876872835 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.872446631 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.737820038 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.735817045 seconds)
  done (took 22.149715209 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.953973263 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.962173649 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.797230433 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.958135519 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.771877985 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.954740575 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887068705 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.877992572 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.876794799 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.738142042 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.73581101 seconds)
  done (took 22.180330029 seconds)
done (took 70.727829932 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.730730923 seconds)
  done (took 3.397933216 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.754085484 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.891380868 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.736579736 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.73672478 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.731539882 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.732395127 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.73526554 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.731042026 seconds)
  done (took 15.717550843 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.728544669 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.730417629 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.728865914 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.729280519 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.730454687 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.729917349 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.732211835 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.73196891 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.729238448 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.729836522 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.731537453 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.729809965 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.732395118 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.731565607 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.731820944 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.731730014 seconds)
  done (took 29.358182484 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.73299346 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.728819988 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.728750332 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.73076123 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.729974957 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.729612554 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.730981935 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.729996502 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.729816554 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.730292697 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.730828866 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.730003548 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.730091871 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.728609849 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.728591995 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.730441216 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.728672222 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.729882403 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.733534265 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.729171785 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.730139698 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.728920488 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.730947149 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.730317693 seconds)
  done (took 43.192556184 seconds)
done (took 93.331981063 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.433836599 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.177557381 seconds)
  done (took 8.279317306 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.729030764 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.726888767 seconds)
  done (took 5.157823515 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.72602216 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.726885967 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.723129626 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.724480404 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.724714889 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.724591608 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.724946461 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.726487658 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.725525533 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.72464374 seconds)
  done (took 18.913916825 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.724411717 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.725431176 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.721149842 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.724437492 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.723700443 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.721779852 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.724267461 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.724552827 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.723814699 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.720997722 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.72354703 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.721649083 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.72346937 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.722753753 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.723340169 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.720954678 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.720815187 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.721696576 seconds)
  done (took 32.674288116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.724583999 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.723086046 seconds)
  done (took 5.106991375 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.72087331 seconds)
    (2/7) benchmarking "second"...
    done (took 1.720502193 seconds)
    (3/7) benchmarking "month"...
    done (took 1.721882813 seconds)
    (4/7) benchmarking "year"...
    done (took 1.721682245 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.721089286 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.720738664 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.721533099 seconds)
  done (took 13.707969126 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.724063807 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.879787693 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.947470233 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.41462852 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.724842286 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.726956503 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.660671841 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.727829218 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.728254169 seconds)
  done (took 19.19443392 seconds)
done (took 104.701633688 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.546360381 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.721523419 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.097179879 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.772006184 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.77740687 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.016201039 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.734963754 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.944502825 seconds)
done (took 42.269634946 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.751305545 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.194328841 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.23641395 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.408075778 seconds)
  done (took 11.49884541 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.701670027 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.236410927 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.755584602 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.315839137 seconds)
  done (took 19.679216436 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.084361384 seconds)
    (2/2) benchmarking "read"...
    done (took 2.075697409 seconds)
  done (took 5.821155483 seconds)
done (took 45.412084276 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.720243884 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.72134611 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.720003386 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.717306384 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.720068424 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.716880209 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.716348891 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.718839641 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.716798414 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.718659885 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.718316652 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.7199629 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.719466349 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721232741 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716659387 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716205088 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719191966 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.716728655 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.719423503 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717329725 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.715420638 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718074314 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.715198103 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.715325149 seconds)
  done (took 42.891858624 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.720271697 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.716723876 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.719529306 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.717878033 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.714668907 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.717555505 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.718502813 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.714730259 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.716508031 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.716648998 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.715000655 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.714728437 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.716604721 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.715025867 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71683659 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.714974128 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.717008248 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715356939 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718005583 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.715606466 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.718004846 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715948139 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.715531675 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718465402 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.714841595 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.714706783 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.717583493 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.715658814 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.717173665 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.715936101 seconds)
  done (took 53.151747559 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.722406026 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.724664607 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.717815074 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.718130006 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.718584508 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.716918058 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.717202379 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.717327752 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.71682842 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.717065526 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.718881308 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.717512749 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.717363881 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.71726416 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.718038518 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.718813879 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.719178427 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.716989953 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.718205467 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.717295501 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.717667496 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.719390032 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.719734798 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.717661163 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.718320641 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.718735186 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.71710535 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.718408011 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.717124809 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.717531615 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.717835293 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.718037489 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.717523732 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.719158009 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.720267543 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.72082149 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.723244619 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.725787681 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.719427684 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.718934443 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.717459115 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.717239294 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.716769543 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.717031814 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.719770663 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.717027269 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.718075208 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.717025476 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.717705735 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.717511808 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.7188137 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.717855195 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.717951244 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.717601429 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.719059701 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.717817567 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.719148269 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.717625354 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.717428718 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.717246175 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.718265146 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.718183173 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.717946335 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.717910353 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.718495976 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.718404409 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.718512519 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.718803865 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.718522785 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.71862384 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.71791329 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.718618342 seconds)
  done (took 125.381736262 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.717485607 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.717063768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.715808904 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.715971034 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716114669 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.719465909 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.716639403 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718078897 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715093856 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.717747708 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717358788 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.715782766 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71664295 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.718531462 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718316424 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.715685305 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.71835636 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715054277 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.7196473 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.718514935 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.71822662 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.716556692 seconds)
  done (took 39.432909991 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.717855822 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.719122561 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.715161248 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.717558794 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.714940171 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.717901419 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.717457911 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.71979245 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71714032 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.71581178 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715008368 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717766643 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.715332518 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71686082 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.715881499 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.714975822 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71847222 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.715015708 seconds)
  done (took 32.556620794 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.715797074 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.716213694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.717985008 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.715486883 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.715674085 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.719796472 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716751248 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.718735885 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.718011812 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.716758309 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.719935043 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719754827 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.719450308 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716736906 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718880502 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.716729447 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.719214772 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717085255 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718284179 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.716193125 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.717437969 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.719013521 seconds)
  done (took 39.445337919 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.720222582 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.718121172 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.715924514 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.715698288 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.715758777 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.718495272 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.720077155 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.716596455 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.718179138 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.718811118 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716187858 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.719661808 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.716237188 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.716449735 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.716548171 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.715556395 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.71831699 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.719709834 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.720795271 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.717682911 seconds)
  done (took 36.010528926 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.720342809 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718772578 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.71978835 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718922397 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718521956 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.718069048 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71830646 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.718806761 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.720396619 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.719883739 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.719281948 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.719626443 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719906538 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.720183412 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.721637007 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718958899 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.719610588 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.719752817 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.718671111 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719610096 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.72154258 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.719786803 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.71925425 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.719592707 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.720503892 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.721446755 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.720339235 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.720228262 seconds)
  done (took 49.808399186 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719204956 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.71908604 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.718167753 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.717917953 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.716981503 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.717132014 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.717380705 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.717332224 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.720528458 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.717868182 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.720658636 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.719305066 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.720530422 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.718922215 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.720907947 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.719208802 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720231686 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.718092078 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.717745621 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716870115 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.721520249 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720098137 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.719275556 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.717469205 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71744542 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.720220819 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718455776 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.718058855 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.720959274 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.717859242 seconds)
  done (took 53.222733185 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.738793241 seconds)
    (2/2) benchmarking "in"...
    done (took 1.739484524 seconds)
  done (took 5.134848186 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.719649765 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721629851 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.71987944 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.719205091 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.719330077 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.720825107 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.720893717 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718137433 seconds)
  done (took 15.417675323 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.72132857 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.720430155 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.72094691 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.721658716 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.720746152 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.723014482 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730809009 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.721789701 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.725090675 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.72225907 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.727735259 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.730060609 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.728202717 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.72333711 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.72316239 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.724229174 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.724006064 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.724493522 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.722772438 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.722193396 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.722368851 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725139655 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.724849712 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.719715261 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.723984096 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.734430911 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.729196262 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.723264492 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.72453146 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.730493589 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.72178539 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.719174234 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.722968425 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.722785221 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.722314798 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.723384382 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.735424028 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.723487624 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.730972472 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723009832 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.722196136 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.721628294 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.724281283 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.726935677 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.725132703 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.726191438 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.725089891 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.721958985 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.724380346 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.72619948 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.727145558 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.723525248 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.720774113 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.729458026 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.725024286 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.731332547 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.723911481 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.726387003 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.731749411 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.736342618 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.739120928 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.730142254 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7274252 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.726582211 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.73565493 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.743378681 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.731848133 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.721438923 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.721586607 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.723753822 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.734978804 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.738364495 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.732699332 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.724765183 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.725455577 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.725038572 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.726505852 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.724829408 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.73397654 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.72985426 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.725507425 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.726316701 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.734576452 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.742761432 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.725513756 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.726828744 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.726641219 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.727174998 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.726105732 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737933491 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.727040798 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.724917159 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.726195284 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.727846308 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.729210878 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.725687418 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.724442416 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727033114 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.722439062 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.725854199 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727336535 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.72942821 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.735745288 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.727961346 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.728346649 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.737883939 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.727593258 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.726407072 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.737650684 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.726414518 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.729300924 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.730118187 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.737093025 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.723630541 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.729138417 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.733862921 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.726543988 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.729026021 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.726849673 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.727366284 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7354967 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.749378514 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.728346214 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.727819807 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.731320851 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.735554206 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.728682125 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.732544766 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.728569421 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.725390896 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.725334692 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.730130207 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.73042406 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.73243837 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72883748 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.73086019 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.725617456 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.728037089 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.72831765 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.730520431 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.730330727 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.729727144 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.730380055 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.732010556 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.728335271 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.732072087 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.736996821 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.730923411 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.730616256 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.731642337 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.725784879 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.729687853 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.731967083 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.728938449 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.730270862 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72737108 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.728921423 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.729237006 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.728088286 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.729198606 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.73121221 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.731360689 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.735472432 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.729301582 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.735252774 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.729506157 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.726757783 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.728523223 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.729696257 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.729381553 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.72905795 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.728191008 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.73229304 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.736374984 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.732055805 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.732097261 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.73374093 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.730762374 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.730505346 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732012451 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.731440519 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.736333573 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.730171215 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.738227563 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.729752811 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.732124939 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.730975431 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.732463809 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.730736034 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.731145962 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.733689388 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.738870594 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744406621 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.739592946 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.73313334 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.734875461 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.733078026 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.735448492 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.736818044 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.732293958 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.733296959 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.731538028 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.731692273 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.731411364 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.734130095 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.730849169 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.730848523 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.731455616 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.731607868 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.731989817 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.730977911 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.73363698 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.734266113 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.728824323 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.732452025 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.731953523 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.731229589 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.728734083 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.732033968 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.731338043 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.733944729 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.732499189 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.743056162 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.733027689 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.736743119 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.734075124 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.735188774 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.731919783 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.732715702 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.735008667 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.733274265 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740338562 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.732954046 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.734581093 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.740208487 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.733557969 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.73288196 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.737471525 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.732758367 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.730502916 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.73501502 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.739782145 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.735530422 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.736707528 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.734260635 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.73367813 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.734253715 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.741525612 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.730824982 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.734572178 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.733172417 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.737255513 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.730341535 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.736422656 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.736623669 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.736339702 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.737127375 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.735080493 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.734509011 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.737880657 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.737082025 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.734375006 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.734761267 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736475332 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.740247319 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.740640596 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.736706966 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.737167426 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.734447431 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.736546679 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.735777259 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.735547989 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.736080556 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750079375 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.74251378 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.744542941 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.738379606 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.735842675 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.742132675 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.735337507 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.739441401 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.734785535 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.736230699 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.736309402 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.734969992 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.731969716 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.737361876 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.734715499 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.737136852 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.737444588 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.738651251 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.735748261 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.73392333 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.735413136 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.735607446 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.737063501 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.735140388 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.736040681 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.740713471 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.739562123 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.738408952 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.737528895 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.744204755 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.737122149 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.73957114 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.736319574 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.738284792 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.736115098 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.738680783 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.73575007 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.738670798 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.743283975 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.740427647 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.746474514 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.737618342 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747632836 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.737500773 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.739662773 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.745455034 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.735238881 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.736222859 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.73912137 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.737774966 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.747466808 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.737484062 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.737992407 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.742593088 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.739548563 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.738513015 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.73784488 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.739143622 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.73860977 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.738440636 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.746332508 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.737764482 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.740632921 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.739555379 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.735108804 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.738427195 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.739269596 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.73899355 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747121566 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.738640848 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.742545267 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.739472195 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.739988142 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.737939392 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.737849633 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.738318195 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.735483325 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.737968986 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.745659658 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.740893942 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.741936398 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.738325538 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.751720913 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.739087448 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.748104394 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.741486509 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.740253561 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.740291797 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.73924526 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.742581666 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.74029551 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.743838513 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.740131635 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.74099433 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.74229767 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.739445492 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.744383445 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.741384372 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.739993031 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.741185133 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748527396 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.758625849 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.742274617 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743564702 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.737566257 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.741238628 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.743974484 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.740544051 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.739923084 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.742223081 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.74863744 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74578235 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.741720696 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.741943606 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745217423 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.74278072 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.742433448 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.743550117 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.741004034 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.741629028 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.742988012 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.740813814 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.747321956 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.74051034 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.741836967 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.744597087 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.742844401 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.753768886 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.741919593 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.743560025 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.741757533 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.742036573 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.74295704 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.742299054 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.742131882 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.743352944 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.742107191 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.746189827 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.748727129 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.746379923 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.746188969 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.741267477 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.743593293 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.74343818 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.743329254 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741665566 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.742837153 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.742340577 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.743434234 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.742964677 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.745783444 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.742492517 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.742895322 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.744135139 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.743509469 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74613551 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.74776298 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.745144564 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.741108354 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.743536089 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.743241483 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.742126209 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.746068926 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.756000258 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.745449509 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.752273611 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.750363177 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.746724202 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.744555512 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.745910663 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.750500897 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.74302788 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.745208677 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.743752716 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.74714304 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.74475433 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.746999442 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.744797103 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.75377691 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.744339762 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.744790555 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.755298783 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.749646136 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74576394 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.74502106 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.748470316 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.745670514 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.741552156 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.745777702 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.743421701 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.752190286 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.748350943 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744917551 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.747498419 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.744750532 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.745513065 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.747783162 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745283919 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.746109352 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.742274078 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.748026708 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.746386022 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.745526428 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.742291395 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.745794844 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.748053969 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.748124905 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.751021654 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.742801529 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.748383808 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.746917023 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.747326039 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746632599 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745651179 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.743055221 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.742820268 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.746636474 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.747501728 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.748334319 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.750953412 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.746599096 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.747218735 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.746727481 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.746964973 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.749065667 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.753720245 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.751728505 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.743014375 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.747549543 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.747208093 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.751178348 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747141602 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.746328001 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.747645928 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.751236459 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.745526818 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746418149 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.74647613 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.748968984 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.762868855 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.748161096 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.747826638 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.748756961 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.755643063 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.747805567 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.745488257 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.747269068 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.751027079 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.749844155 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.75405046 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.748473847 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.756113738 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.748116441 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.749684915 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.750191169 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.750031832 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.754638476 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.752906858 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.747780701 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.747789851 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.752253429 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.764186902 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.749313723 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.756727011 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774166552 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.75023989 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.750645898 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.748913778 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.749662851 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.749102268 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.752087877 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.7500185 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.748259672 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.749362809 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.749848755 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.749345893 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754753506 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.750996335 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.749192904 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.749559645 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.751264054 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.752710421 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.746565789 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.748995867 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.748941017 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.751380954 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.749941681 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.750349356 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.750511648 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764482493 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.759733363 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.750000195 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.750694886 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.748813151 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.754505073 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.752156406 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757517663 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.756179248 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.750051847 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.750701587 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.751905112 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.750195263 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.74879604 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.75150997 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.75044737 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750443909 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.747881186 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.764586536 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.757349096 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.756673899 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.750934548 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.751808018 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.749661198 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753046434 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751451558 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.751459797 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.754971002 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.752147278 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754390205 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.751092728 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.75182165 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.753713067 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.75690748 seconds)
  done (took 1037.846031794 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.749384445 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749931119 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.748568935 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.748555083 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.748660175 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.748589638 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748798983 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.749804293 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.749348792 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.748454923 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.749763927 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748675105 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.749729238 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.751416943 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74919603 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.749249585 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749171147 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.749126486 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.750139995 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.748967499 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.748943777 seconds)
  done (took 38.42237346 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.752245538 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.748184473 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.751241657 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.753364995 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749643298 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.752148572 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.750446475 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752587465 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.75312175 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748921748 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.751818034 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752448058 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.750343274 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.749152136 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751301706 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752818209 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.753215163 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750625262 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.752354986 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.752404268 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754109702 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.750740877 seconds)
  done (took 40.22155077 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.754026649 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.753849354 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.753763674 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.750152086 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.753616764 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.750612843 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.754701402 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.753578795 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.754017987 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.755048865 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.752708773 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.754319197 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.759156433 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.757491255 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.758525493 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.754140701 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.898723632 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.755110073 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.755463711 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.755173535 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.751115523 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.760780619 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.752000428 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.754781297 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.755628157 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.756416173 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.754466569 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.753831048 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.7555001 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.754664763 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.757649643 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.753756482 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.754295026 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.75759566 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.754951564 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.756063006 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.758488609 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.755906789 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.752903068 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.754712922 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.764869339 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.771055235 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.756735671 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.763308391 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.75566449 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.756438913 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.757872261 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.762616166 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.754050861 seconds)
  done (took 87.87324683 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.755165573 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.75514559 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.753859686 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.756064005 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.75576027 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.755783321 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.756405568 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.755933867 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.753342893 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.753760051 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.756110298 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.75424906 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.753534667 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.756116037 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.756536169 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.755915393 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.753855266 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.754554005 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.754162058 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.754212309 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.755716526 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.756962147 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.758001589 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.755012166 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.7570721 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.754544554 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.754870459 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.757609598 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.755442387 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.755254549 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.75760928 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.75826632 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.759095694 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.755722501 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.755403078 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.757409307 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.757965105 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.755057126 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.757746706 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.755089241 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.757371254 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.757650094 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.758129803 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.759613775 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.756948793 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.75643963 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.756102556 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.755868804 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.75684746 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.760325739 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.759289554 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.756534204 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.759061058 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.756780646 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.760087894 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.75946203 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.756099903 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.757763016 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.760790632 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.757067005 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.75747732 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.760094802 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.757243819 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.76027419 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.759805166 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.758675316 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.758361402 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.760282733 seconds)
  done (took 121.156000471 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.760183418 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.760131935 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761469324 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760844505 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.760597144 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.761064399 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.761157508 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.761033422 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.762152178 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.760852776 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761393069 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.759483306 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.760343754 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.760265392 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.760006426 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.760935215 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.760225124 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.76088875 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.759850848 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759610071 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.760459294 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.760564061 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.760353227 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.760415434 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.760860707 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.760760472 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.76124077 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.760817766 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760218601 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.761556188 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.760812104 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.761347469 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.7601877 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.760984284 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.761474959 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.76125567 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.760654452 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763200194 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.760198276 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.760845428 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.761431672 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.761266885 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.761842808 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.761449153 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.761013701 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.761485537 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.761934062 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.762608672 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.761811801 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.761499551 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.762451455 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.762688984 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761807665 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.762454143 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761494039 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.761818966 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761936315 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762872057 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76266382 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.762556396 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762690691 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.762174676 seconds)
  done (took 110.892939769 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763890523 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.762414103 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.760326144 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.760316033 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.762915739 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.759459938 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.762744415 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.763324473 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.764659326 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.763400181 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762737639 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760960554 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761011589 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764276104 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.761043934 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761316696 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761087739 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76090558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762823803 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.761036273 seconds)
  done (took 36.939274542 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.760222911 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.764063226 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.760443937 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.761149061 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.763691314 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.762388999 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.764057455 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7640379 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761862965 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763443323 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.764410322 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.76428585 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76169673 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.762366734 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.764484979 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.762746363 seconds)
  done (took 29.904501795 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.761519608 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.763713322 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.764916727 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.764811534 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.761383121 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.76255735 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.764769401 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.761659471 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.762211688 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.764341298 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.76476374 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.764885011 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.764794049 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.765373285 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.76253815 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.765645635 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.762998403 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.7639848 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.765053952 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.766829237 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.764192946 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.763376905 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.765966273 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.765362372 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.763135468 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.764142604 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.763558856 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.764055022 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.764214653 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.766469007 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.763701178 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.765167918 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.764161325 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.764727162 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.767051997 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.764560523 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.767325166 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.765340351 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.768289035 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.765688087 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.765551103 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.763365957 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.767000244 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.766379801 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.764262502 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.766517411 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.763772587 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.763999898 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.764302292 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.764597175 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.767800281 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.767134871 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.766131817 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.766953799 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.766425452 seconds)
  done (took 98.765387653 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767393514 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.767316956 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.764920071 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.767190552 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.767251872 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.765939564 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.767290646 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.765934497 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765243952 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.767769356 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.767035521 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.767714582 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765740047 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.768515116 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.766666171 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767354435 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.765839098 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.766086711 seconds)
  done (took 33.505312574 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766991349 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766007536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.768320856 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765892766 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.766687935 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.768535136 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76640953 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.768433146 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76833404 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.767338215 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767195293 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.768813046 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768912942 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.769421173 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.766972946 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766436933 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.77030922 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769311348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.76697958 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767169716 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.769821481 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768783376 seconds)
  done (took 40.597740685 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.768639383 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.76898668 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.786662981 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.808401903 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.796790452 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.768959082 seconds)
  done (took 12.403282077 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768281766 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770140291 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.767407299 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770385143 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769492923 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767675676 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767229521 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767294458 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768795275 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768051402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767229718 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769773353 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7706729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767945664 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770329277 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770964349 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767781746 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768149279 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769453176 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770019224 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767340723 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770465898 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767854434 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768127803 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768161184 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769003841 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770775974 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76949977 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767647649 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772060594 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770893928 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768658985 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772039489 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769132185 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772232165 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771063771 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769440789 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771843055 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771774647 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769496106 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.772097561 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771911956 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772783677 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770032014 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771851963 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769303048 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770216865 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769602787 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771023853 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772679126 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771274685 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770847549 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77328748 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771925362 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771934793 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772102937 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770157061 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771011617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772661296 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770867085 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7704527 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772302148 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770150413 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771239415 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772105847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769979723 seconds)
  done (took 118.536039935 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770383113 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.77053819 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77094087 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77154848 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770497861 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770429741 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770888948 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771007798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771775624 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770903883 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77392267 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771530351 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770372933 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772430572 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770872922 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770589748 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771574417 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770723871 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771168118 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774994711 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771627127 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771981874 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771324024 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771834683 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772862146 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774157058 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771184983 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771924996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771422852 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771460179 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772210183 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771272018 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771862267 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.771910311 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772093172 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771459202 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772581154 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772478645 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772214994 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77522821 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772460328 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775186234 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772425569 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772615865 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77309227 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772088744 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772653046 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772754848 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772093528 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772828695 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772925733 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77415601 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773803817 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773590338 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77288393 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772478546 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773581469 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77275343 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773760288 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775815102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772484096 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773029593 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775415602 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773025666 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773887186 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773635489 seconds)
  done (took 118.686669447 seconds)
done (took 2419.859188008 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.851222369 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.785689233 seconds)
  done (took 15.348366514 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.945048861 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.894505279 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.781231837 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.779257204 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.781207583 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.80113447 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.798273774 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.781213254 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.780501452 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.782062863 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.781507301 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.968140677 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.784499354 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.781364952 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.781232903 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.875390351 seconds)
  done (took 50.978805057 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.784607088 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.785118746 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.795856077 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.78737897 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.784723674 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.804237259 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.818694588 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.78875566 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.84545319 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.808428078 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.909802549 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.796262709 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.784883005 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.845310179 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.797872781 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.799492619 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.886002462 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.86157692 seconds)
  done (took 34.402141059 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.864003991 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.789613239 seconds)
  done (took 10.378647849 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.797120989 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.811189569 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.79352499 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.786800682 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.809954749 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.821000678 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.804855829 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.821444374 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.819409144 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.799327749 seconds)
  done (took 69.785191326 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.790204157 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.787877549 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.78642477 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.784087692 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.778484525 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.782376465 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.786096223 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.78461087 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.482191577 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.82315779 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.793507295 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.790779945 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.785625928 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.7868897 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.782879373 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.809430779 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.945792733 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.782911544 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.783986644 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.790966846 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.787939 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.846887016 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.799947784 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.787111762 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.816262752 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.480576206 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.794966535 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.792815801 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.906153653 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.784178064 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.7863168 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.78798595 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.78889326 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.173649819 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.078559005 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.787340958 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.793972865 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.794416794 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.783320303 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.897752205 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.787738491 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.791593474 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.731900655 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.065306372 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.889261007 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.829984174 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.14315403 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.791641838 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.788051334 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.817312855 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.789979244 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.788433122 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.801550934 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.304171406 seconds)
  done (took 128.151729104 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.789868255 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.270085056 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.937773625 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.783350684 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075027698 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021481833 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.784872137 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.832752339 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.797504114 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.03548421 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962551582 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903577246 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.785213481 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.783292462 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.782711833 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.781362917 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.93189479 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.856437292 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.786041329 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.788562495 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819323554 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050384313 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.911177628 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.922497184 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.807702659 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.010570206 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.912276506 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.903168753 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.788772526 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.783003235 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852006504 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.790688015 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.785006308 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.784133196 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.949557598 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.890541912 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881353186 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.785407652 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828611407 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.784592669 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.821631533 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004907409 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.893685974 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.923541952 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.034529812 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.01372532 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.786453375 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.783912521 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.788751064 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.979292395 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000222533 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.039383801 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.916555713 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.788242911 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.125198212 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.785857479 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.84927996 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.036730062 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018642795 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.898111177 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826704493 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.787645268 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.784895638 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.1009206 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.788808121 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.892182022 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.160792733 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.78945597 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.894293961 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.900694243 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.020723041 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.026412879 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.817888804 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.809071656 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.825015383 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.071511407 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.859858395 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038089476 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.792250212 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.787893256 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877772562 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.789955265 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.960047266 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.10545689 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052435046 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828696698 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.789963267 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.785928739 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.035378948 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.037666433 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.061134646 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.032670991 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.955184704 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.797547638 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.787550998 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.785399083 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.821470722 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.922691701 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.790544674 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.147569859 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032751004 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.568773789 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.818460561 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.104255151 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926564223 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.790205375 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.787819367 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.787125363 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.994627493 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.83147096 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.790813329 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787043126 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.034573653 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.73074757 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.910888224 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.492618164 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.854703184 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.793188064 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053430873 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.793664397 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035984571 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.797378733 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101872914 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.392979817 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.832504949 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.984816351 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.033696619 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.79035024 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.053483276 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.102854234 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.914668542 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.03656085 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.534261534 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.791189681 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08237261 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807059358 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.806972049 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.958442837 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.79683312 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945290336 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.800314681 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.098295718 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816128246 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96127681 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.04478839 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.066461574 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.836315874 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842782005 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.83818379 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.925251601 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793187501 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.925597693 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.974090551 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.934667002 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.789321531 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.365725898 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.790486675 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.938521773 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.089523098 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816968602 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.862879797 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.792532658 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.795610339 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886103541 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819029338 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.408785318 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.79027908 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.962504024 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.751234074 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.244859853 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.790439886 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.100331354 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.002755044 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.793366924 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.791237199 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.597208754 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.790548447 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.941290757 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.950450308 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.486869307 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.792669614 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008427783 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79543731 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.925170008 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.793733653 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.792528784 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.141704619 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.871655978 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.796012239 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.803416046 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.793672591 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.791210065 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.022559265 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.821592907 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.517718864 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.931634773 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043257652 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.104522154 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.055608764 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.842695915 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.795725685 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.056318606 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.825580407 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.861769175 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.793954031 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.817329286 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037466424 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794393474 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021954162 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.081140658 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.970428352 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844011448 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.795072494 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876707778 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.792430636 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.935357219 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891633244 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.795826416 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.793865935 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.911573635 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.921680207 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987963238 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.794383752 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.800741427 seconds)
  done (took 937.227286053 seconds)
done (took 1247.981983956 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.79225719 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.797480315 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.78002395 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.798135195 seconds)
  done (took 28.901187492 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.803888901 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.800404313 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.802236765 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.803252433 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.804884725 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.801345019 seconds)
  done (took 12.550694081 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.822843059 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.796346757 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79828265 seconds)
  done (took 21.153625067 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.870602644 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.215106984 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.913921308 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.247318636 seconds)
  done (took 9.982320768 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.803399863 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.803105673 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.80355779 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.804723767 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.804682668 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.805646923 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.804831441 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.805628321 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.805804383 seconds)
  done (took 17.978446819 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.975932406 seconds)
done (took 96.273895997 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.815473861 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.682333904 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.583984785 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.452545608 seconds)
    (5/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.834061491 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.993643541 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.904536216 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.996321716 seconds)
    (9/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.916273614 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.928037967 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.047119456 seconds)
    (12/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.891681683 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.941786202 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.840941746 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.084604947 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.784540977 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.985933384 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.139124153 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.890921591 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.234633663 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.229918279 seconds)
    (22/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.883834927 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.200868646 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.905129839 seconds)
    (25/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.797909271 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.152926709 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.394901722 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.814953197 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.339250675 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.823745498 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.982041323 seconds)
    (32/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.772205919 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.977220937 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.783455021 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.427393505 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.803248156 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.961138903 seconds)
    (38/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.715746606 seconds)
    (39/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.991658714 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.804450964 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.867107576 seconds)
    (42/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.861299061 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.7819259 seconds)
    (44/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.768337435 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.281780987 seconds)
    (46/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.937134376 seconds)
    (47/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.78560558 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.009930132 seconds)
    (49/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.965185092 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.320569215 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.060640992 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.807493605 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.799205237 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.675854448 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.15101529 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.075828938 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.798602139 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.329621139 seconds)
    (59/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.007613763 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.795402334 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.816177478 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.853278536 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.822593055 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.893650028 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.086602669 seconds)
    (66/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.164238995 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.784513967 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.885584312 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.459421173 seconds)
    (70/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.384210978 seconds)
    (71/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.129219903 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.59227365 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.048430643 seconds)
    (74/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.876366904 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.855806692 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.826683369 seconds)
    (77/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.804453467 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.970109031 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.803072682 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.861185538 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.800934131 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.544744627 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.967393372 seconds)
    (84/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.974393003 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.708246267 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.43027087 seconds)
    (87/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.931410216 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.252375274 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.476665911 seconds)
    (90/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.80388682 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.892398465 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.881162715 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.123305711 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.804117765 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.895341964 seconds)
    (96/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.803929557 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.811216268 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.839778441 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.48509897 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.040851602 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.890744531 seconds)
    (102/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.928708419 seconds)
    (103/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.810996302 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.473829736 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.110217661 seconds)
    (106/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.912523912 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.092919768 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.911640664 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.38929889 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.002605548 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.634730597 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.738541633 seconds)
    (113/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.32649268 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.809384586 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.80869647 seconds)
    (116/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.912223331 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.205211051 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.830113305 seconds)
    (119/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.788246839 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.137863416 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.059094041 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.879898671 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.101330224 seconds)
    (124/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.846233599 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.916688576 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.25070137 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.829757943 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.139055389 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.793132888 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.066816676 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.176788311 seconds)
    (132/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.865121158 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.174383657 seconds)
    (134/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.975552921 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.029663613 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.067130336 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.804728596 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.243533729 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.831736771 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.90875436 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.857304975 seconds)
    (142/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.886642711 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.829863324 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.497659351 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.923444544 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.312100623 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.195959009 seconds)
    (148/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.933733155 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.90489293 seconds)
    (150/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.906873175 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.023971748 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.834039716 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.102569499 seconds)
    (154/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.995241285 seconds)
    (155/309) benchmarking ("sort", BigInt, false)...
    done (took 6.810426041 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.807633996 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.113075345 seconds)
    (158/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.073231843 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.793752511 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 3.023246278 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.828905115 seconds)
    (162/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.79140688 seconds)
    (163/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.158628058 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.793317822 seconds)
    (165/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.651763481 seconds)
    (166/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.18899692 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.064089418 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.809470716 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.656011466 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.883610497 seconds)
    (171/309) benchmarking ("sort", Float32, false)...
    done (took 5.570390102 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.382375434 seconds)
    (173/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.83159474 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.790855057 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.634602358 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.796567428 seconds)
    (177/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.92702054 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.143527739 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.793785068 seconds)
    (180/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.688041531 seconds)
    (181/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.834169462 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 5.63222851 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.2420858 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.237338913 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.140488219 seconds)
    (186/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.895252617 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.051709163 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.91128853 seconds)
    (189/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.838628888 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.832088935 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.192162423 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.737231732 seconds)
    (193/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.17734994 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.856140615 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.201318898 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.118948025 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.927401784 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.948555528 seconds)
    (199/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.930529666 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.103774236 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.112855928 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.37564274 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.61571689 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.975646898 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.182850673 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.028075068 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.919967919 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.204542975 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.840039551 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.808645266 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.002315464 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.690850078 seconds)
    (213/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.931807881 seconds)
    (214/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.809803125 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.927148369 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.864968651 seconds)
    (217/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.893650396 seconds)
    (218/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.04197894 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.124010077 seconds)
    (220/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.961182633 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.073428298 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.816060794 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.634690904 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.967829608 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.369916559 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.612461468 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.024629371 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.809797228 seconds)
    (229/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.895574563 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.837793632 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.809151457 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.811057089 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.350117532 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.899651335 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.790114773 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.838524049 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.81055935 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.854634896 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.855877404 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.819312753 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.805390311 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.829446467 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.989003174 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.080718959 seconds)
    (245/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.010175981 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.41340497 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.75186302 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.886605358 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.795948538 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.056892333 seconds)
    (251/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.028553542 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.81963641 seconds)
    (253/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.921227807 seconds)
    (254/309) benchmarking ("sort", Int8, false)...
    done (took 4.807723684 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.150956378 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.880323189 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.002169289 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.897094907 seconds)
    (259/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.104455901 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.113639358 seconds)
    (261/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.406538521 seconds)
    (262/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.111883579 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.915725538 seconds)
    (264/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.395621047 seconds)
    (265/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.998965407 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.836876023 seconds)
    (267/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.327304918 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.907920517 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.838048462 seconds)
    (270/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.967866284 seconds)
    (271/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.500210201 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.81861187 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.887687124 seconds)
    (274/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.078027998 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.203390618 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.819842829 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.945847289 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.815428245 seconds)
    (279/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.005230764 seconds)
    (280/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.319706393 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.191263234 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.799627203 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.825022737 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.917729956 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.213289042 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.999210285 seconds)
    (287/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.844453792 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.904802939 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.187395311 seconds)
    (290/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.324975037 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.078997629 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.892941829 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.921879498 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.062132234 seconds)
    (295/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.953246076 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.958656113 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.000322203 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.452964777 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.800537879 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.863188653 seconds)
    (301/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.146923126 seconds)
    (302/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.106485187 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.571935471 seconds)
    (304/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.510885147 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.825366766 seconds)
    (306/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.808978542 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 4.400916947 seconds)
    (308/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.97084877 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.944612683 seconds)
  done (took 1005.756075424 seconds)
done (took 1007.507377475 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.842682787 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.836736183 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.819534789 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.840679734 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.932490973 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.848643986 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.830107595 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.821787905 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.867584392 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.869496448 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.818885304 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.846920459 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.821984633 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.820353138 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.818535522 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.83448637 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.13085464 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.851276355 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.837754655 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.829475954 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.837360554 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.819498195 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.869890667 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.848009963 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.823837811 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.822933271 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.824433644 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.841261315 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.932698585 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.824378378 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.822527836 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.832178695 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.129455648 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.849076803 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.815141278 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.841445869 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.831979199 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.82970352 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.824634755 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.853189622 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.273909887 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.82969192 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.822622349 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.822071214 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.822461386 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.826060547 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.823005676 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.827088402 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.835388671 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.835357573 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.272176103 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.845690302 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.825499773 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.82366122 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.833765153 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.822273744 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.825358583 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838822278 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.841854768 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.838381505 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.123782154 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.856538548 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.823414468 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.839098654 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.83080065 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.309039974 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.824742683 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.82764868 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.276377971 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.833754164 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.308007795 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.838609749 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.823781275 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.838164004 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.854961547 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.132590058 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.846970818 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.822176279 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.831053627 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.822411551 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.832935648 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.836589242 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.828128469 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.824511592 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.837796539 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.852754757 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.83418834 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.825304732 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.832994734 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.844077224 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.831345185 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.835346191 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.827728091 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.81910576 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.833282835 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.828046312 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.828905128 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.828136795 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.829913764 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.835354964 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.275400891 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.849450619 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.821282717 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.821814849 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.824870698 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.840078561 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.276456666 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.833677917 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.847817828 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.87299899 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.826784013 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.126862162 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.857928253 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841916858 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.834207116 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.828737578 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.820342311 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.126682373 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.305554481 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.848319184 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.826981125 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.824238641 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842468338 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.827272221 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.822259525 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.135318124 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.856598997 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.839887846 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.947526439 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.836292138 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.858225994 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.825030271 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.829045515 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.863985834 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842468296 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.858923871 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.829725612 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842391663 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.843051561 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.823222988 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.838056073 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.836060259 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.828535023 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.832918784 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.821255931 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.85583182 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841040791 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.84049249 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.848949506 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.948682347 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.825542165 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.128543171 seconds)
done (took 287.049993974 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.897144717 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.816350265 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.930806007 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.823823685 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.908455508 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.910520886 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.820632201 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.820164821 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.820874817 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.204229237 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.821180813 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.819852271 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.820800242 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.819554056 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.905081466 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.82159998 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.820453223 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.16469606 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.824128793 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.897783394 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.816124528 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.819921049 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.820974987 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.203891556 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.818206741 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.819139773 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.889043689 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.8145112 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.161008979 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.811587466 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.807718671 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.159361418 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.898737164 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.826995488 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.818710965 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.815748465 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.896001286 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.811010828 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.889425501 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.88922954 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.905899308 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.847326721 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.801597804 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.799146895 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.805436795 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.804550784 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.798554096 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.830672974 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.792973109 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.798641246 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.143838605 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.807944027 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.796706274 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.796388266 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.796876273 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.831181141 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.79485928 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.797362715 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.894549982 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.79807309 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.8613618 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.179520409 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.175377847 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.796521807 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.789208855 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.791661644 seconds)
  done (took 180.44986082 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.861509421 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.87100725 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.862189693 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.797199316 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.843073205 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.864984442 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.797128405 seconds)
  done (took 14.623506839 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.797440529 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.790971077 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.841507639 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.840946696 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.790942801 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.941134341 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.791070384 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.801726447 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.787027363 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.842650053 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.793103191 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.789558735 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.795749149 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.789713069 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.836819482 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.798636843 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.902758472 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.789572988 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.788456837 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.945260808 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.784274333 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.793815769 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.840965662 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.799287335 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.788329507 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.792351142 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.372939544 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.786987638 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.783927095 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.786388376 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.783569742 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.825337253 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.786292733 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.781567191 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.782881432 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901907957 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.784911762 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.782286472 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.786841939 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.783775485 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.786970815 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.784448877 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.782746659 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.781638891 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.783311469 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.808210444 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.78720315 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.783038563 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.78268333 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.783932989 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.833417182 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.783746504 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.783105027 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.780915789 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.839467901 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.79032081 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.783937164 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.782917363 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.783563935 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.779302104 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.938994827 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.829585567 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.781903254 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.831955968 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.780905352 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.782255192 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.780755713 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.781424441 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.837831302 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.781771499 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.83024203 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.778474487 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.939806509 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.805893919 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.784121283 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.784333725 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.78380542 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.781746906 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.774123723 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.78693835 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.77695765 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.781436889 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.788625423 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.776772273 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.776955725 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.886736118 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.888872037 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.777262766 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.793569861 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.787381447 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.776169589 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.8327401 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.779387 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.778329512 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.830753894 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.895078384 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.835503471 seconds)
  done (took 197.456745161 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.784125985 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.79079547 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.779177752 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.795286632 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.779183799 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.777925112 seconds)
  done (took 12.418531852 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.780715815 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.779326046 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.778174298 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.778742356 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.778218095 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.779882694 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.778426075 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.780013389 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.78222075 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.777683157 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.778600713 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.780046597 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.77777641 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.776890305 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.777839612 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.777154062 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.780474128 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.774167285 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.776489344 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.777048734 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.930042932 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.213532909 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.777376217 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.778512903 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.780689034 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.776422361 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.784431067 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.776784322 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.776567949 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.785236327 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.781278606 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.775989503 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.778158506 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.782333476 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.780577995 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.778939193 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.781701892 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.778130849 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.774271184 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.777861644 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.778328893 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.777796793 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.776746568 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.779209471 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.780419272 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.782104894 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.7826915 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.78603048 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.778734653 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.778815657 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.779001326 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.777978471 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.777890456 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.779554998 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.783550256 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.783358859 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.782876639 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.778078961 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.777934663 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.779221843 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.78077045 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.77810925 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.778636302 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.782050564 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.777037583 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.777816635 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.781447803 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.781330999 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.777949443 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.777771989 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.778796724 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.77518385 seconds)
  done (took 131.403099623 seconds)
done (took 538.1231421 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.955071983 seconds)
  done (took 8.666707692 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.900021849 seconds)
  done (took 8.758769232 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.332449941 seconds)
  done (took 10.099948724 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.83695326 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.859507537 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.83804315 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.824747403 seconds)
  done (took 29.137578184 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.126590089 seconds)
  done (took 8.890591647 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.839903684 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.821419394 seconds)
  done (took 15.493197703 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.89745992 seconds)
  done (took 8.659184541 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.896262697 seconds)
  done (took 8.660261235 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.843602947 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.825678516 seconds)
  done (took 15.444846494 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.807074416 seconds)
  done (took 8.567135392 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.505607218 seconds)
  done (took 11.28323514 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.83560981 seconds)
  done (took 8.617468805 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.895525418 seconds)
  done (took 8.660974205 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.060857499 seconds)
  done (took 9.82590379 seconds)
done (took 162.478018662 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.828122969 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.825427772 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.828525055 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.820576776 seconds)
  done (took 29.066039869 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.874708856 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.876982434 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.863218606 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.868561251 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.861489903 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.8585447 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.850978553 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.850152695 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.870054006 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.861109265 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.860184846 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.861203807 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.858904424 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.850603635 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.860163848 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.86008647 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.869660171 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.858666783 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.852385526 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.859576268 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.824738928 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.867877577 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.859770314 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.825802001 seconds)
  done (took 46.365167058 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.018776371 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.892954363 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.975320317 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.875021261 seconds)
  done (took 9.517370009 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.871736598 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.873460312 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.886257942 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.925136541 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.955979724 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.881896604 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.846819641 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.841239391 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.826669768 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.87299602 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.950335117 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.887302754 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.954489091 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.817902895 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.005427521 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.819869525 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.816927915 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.86938394 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.920953344 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.933316071 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.820102932 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.867897509 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.870896509 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.885747464 seconds)
  done (took 46.95941558 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.814550384 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.825504451 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.820320047 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.814947508 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.813796262 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.813865803 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.822088467 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.813766931 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.833451608 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.814508512 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.812284534 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.813071475 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.815384959 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.811905727 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.810702719 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.823774351 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.825108963 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.814442895 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.813399718 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.816064742 seconds)
  done (took 38.092956808 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.804480902 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.657259743 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.153705301 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.059115688 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.801961102 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.805458625 seconds)
  done (took 31.025843975 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.82280108 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.874954489 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.818336517 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.867776687 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.949830708 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.819416885 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.809748654 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.879378737 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.923249312 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.886963183 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.831569627 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.838313576 seconds)
  done (took 24.064952333 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.805925401 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.807073527 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.805828658 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.823384435 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.821806746 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.819827752 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.818050127 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.803758101 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.824521642 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.832308953 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.81930144 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.822232868 seconds)
  done (took 43.551210467 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893261814 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.848310524 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.825559392 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.490448263 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.183856035 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.017119874 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.457025443 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13811783 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.809910535 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078691702 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.873155497 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933536038 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08388414 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399526752 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865892989 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.289933432 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126979463 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037905658 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858808552 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517279841 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903419575 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.086568989 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.610472795 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.897870765 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050660034 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.971458718 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.099930532 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.839135928 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977349869 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877329382 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850364744 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.839036921 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112919292 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218295354 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944523168 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849524874 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.453136695 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.556420871 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.832686517 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.676157417 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.584982749 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.970593858 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851776967 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84085918 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775970994 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.055023462 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223727586 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.846110583 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.551755899 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.841013221 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852662519 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937281104 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.844487094 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.657101919 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752805378 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.843429718 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.838618242 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847412995 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414766942 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.966560076 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.102680206 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.821943969 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.934079135 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.544000606 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232684096 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.992645688 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.846153549 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846672324 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777234093 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.616021328 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900542556 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192406783 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.862842666 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492168072 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136018659 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.954392624 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786703944 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11343536 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.454571574 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.820005047 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069798627 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841850381 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778245047 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.787830591 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.776970327 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104082074 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881003959 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.585984927 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887337091 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.1745019 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.853810271 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861764075 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866246579 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067337069 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.729668353 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842158248 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.646511136 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030353807 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864043056 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174756761 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77439536 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.843746318 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096578778 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.054301852 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.982250573 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.336827304 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996938222 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480349636 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.894993437 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.049147092 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.888490932 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.104574378 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893706414 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97903522 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89231193 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.836605877 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141905235 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482212132 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.979306737 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.862966652 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.964555011 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.154262657 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868014823 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918458098 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.846973669 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.837007992 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.616994236 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390943158 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.837094508 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.838283862 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.984552379 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.888791071 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.83750212 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786431742 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.465234159 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.871866961 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.851512699 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.060821827 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.469024016 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154063287 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772183099 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167169655 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893422167 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.060190971 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.484395406 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.91704016 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098661118 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.979198743 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.013113737 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891335146 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857321612 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936219708 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860396819 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.041928265 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136045978 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.842017308 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.842766529 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.635658071 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879299849 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838253657 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.843853217 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.589347701 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108759351 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.866530178 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.845253416 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.729368608 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.852740256 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904563347 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844402493 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.849835083 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.379348301 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.553246166 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.848367289 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.429481081 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064282162 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849855613 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.606379416 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958758823 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.922382531 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109364981 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90038861 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.774819423 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.552361471 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.534817024 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84095092 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776275861 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.840957154 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850997904 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852492607 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.038816791 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119014073 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887063401 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.542584136 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.886888976 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852594617 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.847276282 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843173276 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.352508228 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.982390413 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.095702499 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.893302585 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98638892 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.856112895 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775875133 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.846420973 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84686255 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842582061 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.843176745 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875887333 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.54592026 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223479694 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104240256 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.452219347 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857344053 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.591684493 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.905223636 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.844379952 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.681069906 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.077069117 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.888055089 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859942307 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.857401318 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.641976212 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.546739635 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.418487925 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153823411 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148240777 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280572204 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.123296305 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.879159685 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183957768 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782083318 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.404968231 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907322231 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188129877 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792622989 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931647926 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.495860564 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197822016 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862774454 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076778336 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228771429 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.737270993 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875025839 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05999939 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883276814 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.064532149 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816344338 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.371261846 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990105476 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.567576977 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062438041 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18554357 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.682283369 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.866096702 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.847985586 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.523596177 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934887276 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.559251575 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.022340458 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.118883351 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.815019325 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347315677 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.855228733 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.075460768 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199943858 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.074641438 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.976697119 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785215463 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.860902869 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.861663026 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.851189948 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.84639435 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.72089181 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.105641426 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861658057 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784761695 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.035909657 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145485674 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.755738138 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.855668055 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851167051 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144615063 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.465288018 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026877094 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.018175153 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.374597923 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858131685 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.785222795 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785432553 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.544740127 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.85678115 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.825492322 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056889448 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.960507269 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.763347284 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.998690035 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.107672951 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106919333 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.866767234 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118719803 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128024633 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.549326539 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878050469 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.952567974 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.546386119 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.967273883 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851932843 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087788133 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.60693215 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078652637 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.864879796 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.807404081 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.851909815 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067887826 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.852945136 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.761856665 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093628427 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.574551562 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.943381418 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164146353 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93119772 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.755695499 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.906515492 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.947368328 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866583911 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93496936 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866367631 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.867041205 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.867185356 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902540329 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.749308175 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.984816039 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.870986137 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950818013 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.006975704 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.382558007 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.862092464 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127567912 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209644893 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182089708 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916652842 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.857585869 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865504886 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79186331 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006514926 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.086735436 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132026602 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.98888557 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.974685429 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883476601 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.533963307 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.143997597 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10395176 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13397905 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.753437967 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433648195 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.904423346 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.859339512 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869890592 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.070788702 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068305875 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161040207 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00276761 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.007724122 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224852541 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13272485 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.858854172 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860097998 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451927012 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.96825422 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.544794717 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.908327966 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.828760208 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14596263 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871407871 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247618499 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.884587804 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.017572987 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.635337175 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.640737802 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155819361 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.850212909 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.926198048 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131893702 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.241451737 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176418499 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930177018 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874048253 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.96822973 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010401281 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.74975006 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.86399003 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863543563 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911773362 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.572735556 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.872416068 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136735723 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17424808 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.86028442 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.761882598 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886187494 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.874001324 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086672324 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125209697 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116834563 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873818216 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.869217285 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.682631651 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133993583 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921772633 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798303631 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.868396841 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961611755 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112235738 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887040286 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.316980829 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.575435301 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134270691 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.865635233 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887945825 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.094196618 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.22439299 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180273154 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.39804134 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070095134 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453055127 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.494204742 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170540212 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.870612485 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.07896165 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172987929 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.868296311 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.006587479 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908332895 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.125152494 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177004708 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.888474696 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555326952 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.84112369 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.207540936 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42690574 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806206813 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877473798 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.927590452 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.867739541 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998155603 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879390255 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.797985178 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092991527 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.633759726 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.142452301 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.873925664 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.860435996 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.59681371 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.231357886 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903576187 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006880936 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867061352 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.542511655 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.213968984 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117632131 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.018961744 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.872463851 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.865568846 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86141449 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.852238634 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.054775099 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.059488025 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12672328 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.038930447 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.903019037 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857474728 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.069896014 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065804332 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.723011368 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994991525 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010436045 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89962059 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.757922586 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.355623895 seconds)
  done (took 1667.603545192 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.883860964 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.878965905 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.86641496 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.855220189 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.872692767 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93993657 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.919406943 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.9138136 seconds)
  done (took 56.922608619 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.851245951 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.067020451 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.858265337 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.850155953 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.857455447 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.850514149 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.022692042 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.857160437 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.853785385 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.855090842 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.844143285 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.843585594 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.164241291 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.870428255 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.84512709 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.830448097 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.853299014 seconds)
  done (took 73.967190791 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.844195656 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.079433683 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.882727665 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.860290006 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.838329605 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.853990387 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.642436466 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.869206526 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.84719518 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.966070782 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.477095514 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.868215682 seconds)
  done (took 86.813088961 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.853761304 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.85145825 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.852720922 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.851712182 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.851932372 seconds)
  done (took 11.046895353 seconds)
done (took 2166.78823438 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.097687873 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.062509275 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.081666364 seconds)
  done (took 5.927264119 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.994980168 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.041201968 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.160855147 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.183571599 seconds)
  done (took 10.165840952 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.132875243 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.21650518 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.050390382 seconds)
  done (took 8.181972944 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.25274245 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.85267968 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.959526451 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.845426296 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.846274086 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.845847349 seconds)
  done (took 22.320294389 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.848649106 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.85286005 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.849374455 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.85191154 seconds)
  done (took 9.184186372 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.830628677 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.556417333 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.831797702 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.845368843 seconds)
  done (took 20.847542709 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.596970147 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.608013384 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.593094539 seconds)
  done (took 9.580663219 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.517830442 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.776244402 seconds)
  done (took 9.076473369 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.096318071 seconds)
  done (took 3.879228273 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.981595618 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.11232444 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.324482854 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.352553818 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.408934459 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.749900088 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.16552263 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.101317222 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.243414249 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.296767997 seconds)
  done (took 24.519582204 seconds)
done (took 138.627445228 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.224732504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.084139931 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.047268933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.223995943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.104855963 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.047615196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.272832572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.20888678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.690067852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.687695089 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.182594906 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.080656523 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.002556757 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.080533801 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.003917424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.210522992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.069724911 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.240307457 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.91341177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.077598939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.275396278 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.81242737 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.027648336 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.820075141 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.068758421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.998714576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.396361201 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.212395191 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.065720746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.404424024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.000071426 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.227316785 seconds)
  done (took 170.548340082 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.756258077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.849261679 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.849209536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.855369892 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.296867634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.847210162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.845638766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.857710818 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.037150543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.041137576 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.857345015 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.342055854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.857651348 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.834399595 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.850091248 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.846706185 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.203197028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.860800889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.858905325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.857184616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.857354605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.249795616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.851758903 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.284769525 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.188846699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.849728036 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.824801523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.853653421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.830652323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.840203612 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.843022777 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.823923254 seconds)
  done (took 207.689794149 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.823772067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.828543952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.831047869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.825468875 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.837014033 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.836402686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.825822688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.82434526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.609352876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.601114061 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.835997991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.832101032 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.8386671 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.824651832 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.829537042 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.824268341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.834655684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.835158141 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.833449573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.835261778 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.840025907 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.654522667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.841576038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.643290937 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.824409532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.824256428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.813328707 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.821278997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.823495032 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.823501634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.821068009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.812352523 seconds)
  done (took 219.494935677 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.007769136 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.817933978 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.819268632 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.756330139 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.818996161 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.818519632 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.815015097 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.00768226 seconds)
  done (took 18.625638585 seconds)
done (took 618.153751083 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.245857433 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.095768996 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.994547503 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.843034131 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.062467578 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.877225447 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.838460283 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.900680897 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.00860727 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.913366647 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.478777716 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.86027134 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.566537076 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.864535191 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.967326777 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.89460741 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.376657043 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.468724621 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.021761406 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.907275674 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.00770227 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.799663971 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.915145981 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.070893313 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.594233074 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.853777163 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.992240982 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.383099776 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.850381126 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.003259788 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.527857564 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.20050479 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.851526304 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.837395314 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.890682396 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.874412266 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.166523183 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.850036352 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.963178715 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.603317801 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.888712116 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.897970338 seconds)
  done (took 101.960996417 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.812244083 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.809580952 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.808467689 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.809899679 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.811120545 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.809556945 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.809194665 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.808572637 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.808929299 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.809134035 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.80846056 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.810682006 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.80901573 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.810956932 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.808129956 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.809162982 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.810684848 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.81315345 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.809008926 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.808955589 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.810955057 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.809630891 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.811266643 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.809471027 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.811340476 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.810034548 seconds)
  done (took 48.825175757 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.821945306 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.964557453 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.046392877 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.841636559 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.821825577 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.826675111 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.840849382 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.827308742 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.82450638 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.825139958 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.914919229 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.829768072 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.841790302 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.046510219 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.838874423 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.823218063 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.823205744 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.823355897 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.973710181 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.839782556 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.843023659 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.829173367 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.842149838 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.837908291 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.824881126 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.824161819 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.828114566 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.267979163 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.833596216 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.916567697 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.868182668 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.844805982 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.219408099 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.054971715 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.877524686 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.82987052 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.824050807 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92045357 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.830309703 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.82475433 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.842535423 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.831535064 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.047370169 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.317826015 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.838594358 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.824864421 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.26845959 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.927068083 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.866680952 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.836347371 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.052245172 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.841429406 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.82633121 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.825091131 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.862034727 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.836310608 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.827023009 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.133913593 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.836892734 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.843285249 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.830947846 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.825640464 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.98004444 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.833019454 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.970295314 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.833995367 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.833562859 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.826146778 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.047663532 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.84218833 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.31985678 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.840048738 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.825679943 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.916644092 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.975333545 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.294126223 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.839197286 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.983549997 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.235733057 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.851263411 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.835108272 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.251274437 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.854525995 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.834627676 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.828532413 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.828567545 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.826928475 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.871197246 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.843306438 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.260627611 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.326928134 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.146247102 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.854235909 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.842916537 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.827856508 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.135491174 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.835837276 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.82698534 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.042472827 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.339824329 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.841567314 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.835237911 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.3063966 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.842403685 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.846252366 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.837691011 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.052047876 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.843754681 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.871538263 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.828372408 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.834518226 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.830394759 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.846912379 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.835216694 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.828185707 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.294307567 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.936379739 seconds)
  done (took 226.41106655 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.824186439 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.823183401 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.8217442 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.836495721 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.822309401 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.827659121 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.822654976 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.824348335 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.828173424 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.823214111 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.822270453 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.824934511 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.82516622 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.830952129 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.299866081 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.830711811 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.436516654 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.828336051 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.824114264 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.84160667 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.502990098 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.831585672 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.824544662 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.847695515 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.82949633 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.826957764 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.825865201 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.857924043 seconds)
  done (took 166.728539112 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.831204836 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.012236166 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.846803779 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.86702071 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.840038972 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.828752173 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.855741619 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.851724987 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.838991008 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.828823254 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.828721209 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.89205287 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.842184449 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.967515598 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.862831847 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.865023873 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.93877 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.839154194 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.829259538 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.829295676 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.860037062 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.828864407 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.892198261 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.959593932 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.848684744 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.949022457 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.837338402 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.833399647 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.831647988 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.950878066 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.848134753 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.892794964 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.860669908 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.850827499 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.955032116 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.951080413 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.941909181 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.863363327 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.837453368 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.830692654 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.830263201 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.821804048 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.951088199 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.850349504 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.83380816 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.939327539 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.85085225 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.834754624 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.841490787 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.830984979 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.846710844 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.851115203 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.900368219 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.964754696 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.867374238 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.858874064 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.85925015 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.120499386 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.84375708 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.934127619 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.828033624 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.949805298 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.853000848 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.821849249 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.832866899 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.839174874 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.862115082 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.864739707 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.942401102 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.841467891 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.935392267 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.868893352 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.83964506 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.832415992 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.836126081 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.949807619 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.953804297 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.869916515 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.871602504 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.865691075 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.830726617 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.834545458 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.823718874 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.851283091 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.838770501 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.952950126 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.954453476 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.842983894 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.836518467 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.836331699 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.836194207 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.860601809 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.961507371 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.86985871 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.934075572 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.903013717 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.909240476 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.847671825 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.846999459 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.839464929 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.899136833 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.848910012 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.846358353 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.169371893 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.908006797 seconds)
  done (took 198.86026516 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.930202507 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.293734427 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.88935354 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.891694393 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.124710875 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.263449225 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.603946731 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.882994637 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.886458924 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.911443332 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.048301586 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.943562026 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.896229881 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.871361673 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.284231813 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.873292545 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.884553493 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.906461334 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.890623137 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.413880665 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.177135475 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.012026043 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.880577025 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.985921458 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.866199212 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.145970349 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.368936955 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.257134903 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.919082855 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.233665657 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.212386301 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.566459509 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.107345018 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.126986663 seconds)
  done (took 73.325229155 seconds)
done (took 817.860216336 seconds)
SAVING RESULT...
DONE!
